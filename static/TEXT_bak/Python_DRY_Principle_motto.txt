Python DRY Principle motto
user
There is some kind of Python motto about making something once and reusing it many time. do you know the motto?
ChatGPT
Yes, the motto you're referring to is encapsulated in the DRY principle, which stands for "Don't Repeat Yourself." The idea is to reduce repetition of code patterns or logic by creating reusable components or functions. This principle is central to writing clean, maintainable, and efficient code. Here’s a more detailed explanation:

**DRY Principle (Don't Repeat Yourself):**
- **Definition:** A principle aimed at reducing the repetition of software patterns, replacing them with abstractions or reusable code.
- **Purpose:** To minimize redundancy, make code easier to maintain, and enhance readability.
- **Implementation:** Achieved by creating functions, classes, or modules that encapsulate common logic, ensuring that any change needs to be made in only one place.

In Python, adhering to the DRY principle might involve:
- Writing reusable functions and classes.
- Using libraries and frameworks effectively.
- Refactoring code to eliminate redundancy.

Here’s a simple example to illustrate the DRY principle in Python:

### Non-DRY Code
```python
# Calculating the area of two rectangles separately
width1 = 5
height1 = 10
area1 = width1 * height1
print(f"Area of rectangle 1: {area1}")

width2 = 3
height2 = 7
area2 = width2 * height2
print(f"Area of rectangle 2: {area2}")
```

### DRY Code
```python
# Function to calculate the area of a rectangle
def calculate_area(width, height):
    return width * height

# Using the function to calculate the area of two rectangles
width1 = 5
height1 = 10
area1 = calculate_area(width1, height1)
print(f"Area of rectangle 1: {area1}")

width2 = 3
height2 = 7
area2 = calculate_area(width2, height2)
print(f"Area of rectangle 2: {area2}")
```

In the DRY version, the logic for calculating the area of a rectangle is defined in a single function, which is then reused for different inputs. This makes the code more maintainable and reduces the risk of errors.

