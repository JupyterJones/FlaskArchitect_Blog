Flask Application Image Gallery
user
SCAN_DATA_FILE = 'local_scan_data.json'
IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png']
STATIC_IMAGE_DIR = 'static/local_images'
if not os.path.exists(STATIC_IMAGE_DIR):
    os.makedirs(STATIC_IMAGE_DIR)
    
STATIC_GALLERY_DATA_FILE = 'local_static_gallery_data.json'

def save_static_gallery_data(data):
    with open(STATIC_GALLERY_DATA_FILE, 'w') as f:
        json.dump(data, f)

def load_static_gallery_data():
    if os.path.exists(STATIC_GALLERY_DATA_FILE):
        with open(STATIC_GALLERY_DATA_FILE, 'r') as f:
            return json.load(f)
    return None

def scan_directories():
    image_dirs = []
    for root, dirs, files in os.walk('/home/jack/Desktop/FLASKBLOG'):  # You can specify a specific directory to start scanning
        image_files = [f for f in files if os.path.splitext(f)[1].lower() in IMAGE_EXTENSIONS]
        if len(image_files) >= 2:
            image_dirs.append({
                'path': root,
                'images': image_files
            })
    return image_dirs


def save_scan_data(data):
    with open(SCAN_DATA_FILE, 'w') as f:
        json.dump(data, f)


def load_scan_data():
    if os.path.exists(SCAN_DATA_FILE):
        with open(SCAN_DATA_FILE, 'r') as f:
            return json.load(f)
    return None


def select_random_images(image_dirs):
    gallery_data = []
    for dir_data in image_dirs:
        images = dir_data['images']
        if len(images) >= 2:
            sample_images = images #random.sample(images, 3)
            gallery_data.append({
                'directory': dir_data['path'],
                'images': [os.path.join(dir_data['path'], img) for img in sample_images]
            })
    return gallery_data


def copy_images_to_static(gallery_data):
    if not os.path.exists(STATIC_IMAGE_DIR):
        os.makedirs(STATIC_IMAGE_DIR)

    static_image_paths = []
    for item in gallery_data:
        static_images = []
        for img_path in item['images']:
            img_name = os.path.basename(img_path)
            dest_path = os.path.join(STATIC_IMAGE_DIR, img_name)
            shutil.copy(img_path, dest_path)
            static_images.append(dest_path)
        static_image_paths.append({
            'directory': item['directory'],
            'images': static_images
        })
    return static_image_paths


@app.route('/gallery')
def gallery():
    scan_data = load_scan_data()
    if not scan_data:
        logit('Scanning directories...')
        scan_data = scan_directories()
        save_scan_data(scan_data)
        gallery_data = select_random_images(scan_data)
        static_gallery_data = copy_images_to_static(gallery_data)
    else:
        static_gallery_data = load_static_gallery_data()
        if not static_gallery_data:
            gallery_data = select_random_images(scan_data)
            static_gallery_data = copy_images_to_static(gallery_data)
            save_static_gallery_data(static_gallery_data)
    return render_template('gallery.html', gallery_data=static_gallery_data)
--------------------- i am trying to build an images gallery of the images in /home/jack/Desktop/FLASKBLOG
ChatGPT
Sure, Jack! Let's improve and finalize your Flask application to create an image gallery from the specified directory. I will provide the complete script with logging as per your preference.

Here's the complete code for your Flask application:

```python
import os
import json
import shutil
import random
import logging
from flask import Flask, render_template

app = Flask(__name__)

# Configuration
SCAN_DATA_FILE = 'local_scan_data.json'
IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png']
STATIC_IMAGE_DIR = 'static/local_images'
STATIC_GALLERY_DATA_FILE = 'local_static_gallery_data.json'

# Setup logging
logging.basicConfig(level=logging.INFO)

def logit(message):
    logging.info(message)

# Ensure static image directory exists
if not os.path.exists(STATIC_IMAGE_DIR):
    os.makedirs(STATIC_IMAGE_DIR)

def save_static_gallery_data(data):
    with open(STATIC_GALLERY_DATA_FILE, 'w') as f:
        json.dump(data, f)

def load_static_gallery_data():
    if os.path.exists(STATIC_GALLERY_DATA_FILE):
        with open(STATIC_GALLERY_DATA_FILE, 'r') as f:
            return json.load(f)
    return None

def scan_directories():
    image_dirs = []
    for root, dirs, files in os.walk('/home/jack/Desktop/FLASKBLOG'):
        image_files = [f for f in files if os.path.splitext(f)[1].lower() in IMAGE_EXTENSIONS]
        if len(image_files) >= 2:
            image_dirs.append({
                'path': root,
                'images': image_files
            })
    return image_dirs

def save_scan_data(data):
    with open(SCAN_DATA_FILE, 'w') as f:
        json.dump(data, f)

def load_scan_data():
    if os.path.exists(SCAN_DATA_FILE):
        with open(SCAN_DATA_FILE, 'r') as f:
            return json.load(f)
    return None

def select_random_images(image_dirs):
    gallery_data = []
    for dir_data in image_dirs:
        images = dir_data['images']
        if len(images) >= 2:
            sample_images = random.sample(images, 2)
            gallery_data.append({
                'directory': dir_data['path'],
                'images': [os.path.join(dir_data['path'], img) for img in sample_images]
            })
    return gallery_data

def copy_images_to_static(gallery_data):
    if not os.path.exists(STATIC_IMAGE_DIR):
        os.makedirs(STATIC_IMAGE_DIR)

    static_image_paths = []
    for item in gallery_data:
        static_images = []
        for img_path in item['images']:
            img_name = os.path.basename(img_path)
            dest_path = os.path.join(STATIC_IMAGE_DIR, img_name)
            shutil.copy(img_path, dest_path)
            static_images.append(dest_path)
        static_image_paths.append({
            'directory': item['directory'],
            'images': static_images
        })
    return static_image_paths

@app.route('/gallery')
def gallery():
    scan_data = load_scan_data()
    if not scan_data:
        logit('Scanning directories...')
        scan_data = scan_directories()
        save_scan_data(scan_data)
        gallery_data = select_random_images(scan_data)
        static_gallery_data = copy_images_to_static(gallery_data)
        save_static_gallery_data(static_gallery_data)
    else:
        static_gallery_data = load_static_gallery_data()
        if not static_gallery_data:
            gallery_data = select_random_images(scan_data)
            static_gallery_data = copy_images_to_static(gallery_data)
            save_static_gallery_data(static_gallery_data)
    return render_template('gallery.html', gallery_data=static_gallery_data)

if __name__ == '__main__':
    app.run(debug=True)
```

Ensure you have a `gallery.html` template in your `templates` directory to render the images. Here's a simple example of what it could look like:

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Gallery</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/dark.css') }}">
</head>
<body>
    <h1>Image Gallery</h1>
    <div class="gallery">
        {% for item in gallery_data %}
            <div class="directory">
                <h2>Directory: {{ item.directory }}</h2>
                <div class="images">
                    {% for img in item.images %}
                        <img src="{{ url_for('static', filename=img.replace('static/', '')) }}" alt="Image">
                    {% endfor %}
                </div>
            </div>
        {% endfor %}
    </div>
</body>
</html>
```

This script will scan the specified directory, select random images, and display them in a gallery. The images will be copied to a static directory to be served by Flask.
user
it is not finding images ?
ChatGPT
Let's troubleshoot the issue step by step. First, we need to ensure that your Flask application is correctly scanning the directories and identifying images. We'll add some additional logging to understand where the problem might be occurring. Here's an enhanced version of the script with more detailed logging:

```python
import os
import json
import shutil
import random
import logging
from flask import Flask, render_template

app = Flask(__name__)

# Configuration
SCAN_DATA_FILE = 'local_scan_data.json'
IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png']
STATIC_IMAGE_DIR = 'static/local_images'
STATIC_GALLERY_DATA_FILE = 'local_static_gallery_data.json'

# Setup logging
logging.basicConfig(level=logging.INFO)

def logit(message):
    logging.info(message)

# Ensure static image directory exists
if not os.path.exists(STATIC_IMAGE_DIR):
    os.makedirs(STATIC_IMAGE_DIR)

def save_static_gallery_data(data):
    with open(STATIC_GALLERY_DATA_FILE, 'w') as f:
        json.dump(data, f)

def load_static_gallery_data():
    if os.path.exists(STATIC_GALLERY_DATA_FILE):
        with open(STATIC_GALLERY_DATA_FILE, 'r') as f:
            return json.load(f)
    return None

def scan_directories():
    image_dirs = []
    for root, dirs, files in os.walk('/home/jack/Desktop/FLASKBLOG'):
        logit(f'Scanning directory: {root}')
        image_files = [f for f in files if os.path.splitext(f)[1].lower() in IMAGE_EXTENSIONS]
        logit(f'Found images: {image_files}')
        if len(image_files) >= 2:
            image_dirs.append({
                'path': root,
                'images': image_files
            })
    logit(f'Total directories with images: {len(image_dirs)}')
    return image_dirs

def save_scan_data(data):
    with open(SCAN_DATA_FILE, 'w') as f:
        json.dump(data, f)

def load_scan_data():
    if os.path.exists(SCAN_DATA_FILE):
        with open(SCAN_DATA_FILE, 'r') as f:
            return json.load(f)
    return None

def select_random_images(image_dirs):
    gallery_data = []
    for dir_data in image_dirs:
        images = dir_data['images']
        if len(images) >= 2:
            sample_images = random.sample(images, 2)
            gallery_data.append({
                'directory': dir_data['path'],
                'images': [os.path.join(dir_data['path'], img) for img in sample_images]
            })
    return gallery_data

def copy_images_to_static(gallery_data):
    if not os.path.exists(STATIC_IMAGE_DIR):
        os.makedirs(STATIC_IMAGE_DIR)

    static_image_paths = []
    for item in gallery_data:
        static_images = []
        for img_path in item['images']:
            img_name = os.path.basename(img_path)
            dest_path = os.path.join(STATIC_IMAGE_DIR, img_name)
            shutil.copy(img_path, dest_path)
            static_images.append(dest_path)
        static_image_paths.append({
            'directory': item['directory'],
            'images': static_images
        })
    return static_image_paths

@app.route('/gallery')
def gallery():
    scan_data = load_scan_data()
    if not scan_data:
        logit('Scanning directories...')
        scan_data = scan_directories()
        save_scan_data(scan_data)
        gallery_data = select_random_images(scan_data)
        static_gallery_data = copy_images_to_static(gallery_data)
        save_static_gallery_data(static_gallery_data)
    else:
        static_gallery_data = load_static_gallery_data()
        if not static_gallery_data:
            gallery_data = select_random_images(scan_data)
            static_gallery_data = copy_images_to_static(gallery_data)
            save_static_gallery_data(static_gallery_data)
    return render_template('gallery.html', gallery_data=static_gallery_data)

if __name__ == '__main__':
    app.run(debug=True)
```

Run your Flask application and check the log output in your terminal. This should provide insight into whether the directories are being scanned correctly and if the image files are being identified. Look for the log messages to see the directories and images found.

Here are the steps to ensure everything is correct:

1. **Verify Directory Structure**: Ensure that `/home/jack/Desktop/FLASKBLOG` contains subdirectories with at least two image files each.
2. **Check Logging Output**: Run the application and check the terminal for log messages indicating the directories and image files being found.
3. **File Permissions**: Ensure that your Flask application has read permissions for the directories and files in `/home/jack/Desktop/FLASKBLOG`.

If you see log messages indicating directories and images found, but the images are still not displaying, check the following:

- Ensure the `gallery.html` template is correctly referencing the static image paths.
- Make sure the static directory (`static/local_images`) contains the copied images.

Feel free to share the log output if you encounter issues, and I can help further debug the problem.

