# -*- coding: utf-8 -*-
"""
Created on Fri Apr 30 16:01:22 2016

# Create a trace
trace = go.bar(x,y)

data0 = [trace]

# Plot and embed in ipython notebook!
plotly.offline.iplot(data3, filename='basic-scatter')

!ls 04-30-16__covid19_deaths_US.csv



print(ALL[13])

TOTAL=0
DATA = []
L=len(ALL)
cnt=0
for i in range(0,len(ALL)):
    L=int(len(ALL[i]))
    if ALL[i][6] == 'Alabama':
        cnt=cnt+1
        #if cnt==1:print((ALL[i]))
        #if cnt==1:print(ALL[i][5],(ALL[i][6],float(ALL[i][8]),float(ALL[i][9]),int(ALL[i][-2]),int(ALL[i][-1])))
        
        Daily= "'0', '0'"+str(ALL[i]).split("', '0', '0'",1)[-1]
        Daily=Daily.replace('\'','')
        Daily=Daily.replace(']','')
        Daily=Daily.replace(' ','')
        daily = map(int,Daily.split(","))
        daily =(list(daily))
        inc= int(ALL[i][-1])-int(ALL[i][-2])
        #print(i,ALL[i][5],ALL[i][6],ALL[i][-2],ALL[i][-1],inc)
        TOTAL=TOTAL+int(ALL[i][-1])
        DATA.append([ALL[i][5],ALL[i][6],float(ALL[i][8]),float(ALL[i][9]),daily,int(ALL[i][-2]),int(ALL[i][-1]),inc])
print(cnt,TOTAL)        



print(daily[-1])

print(DATA[209][4])

print (len(DATA))
INC=0
for i in range(0,len(DATA)-1):
    city = DATA[i][0]
    state = DATA[i][1]
    latitude = DATA[i][2]
    longitude = DATA[i][3]
    data = DATA[i][4]
    yesterday = DATA[i][5]
    today = DATA[i][6]
    increase = DATA[i][7]
    if increase>40:
        INC=INC+1
        #print(data)
        print("\n",INC,city,state,yesterday,today,"  New Deaths:",increase)
        if increase>50:
            print(i,"   One Week Record: ",data[-7],data[-6],data[-5],data[-4],data[-3],data[-2],data[-1],"\n   One week increase",(data[-1]-data[-7]))
print("\n",INC,"Locations with increase of over 40 deaths.")

print (len(DATA))
INC=0
for i in range(0,len(DATA)):
    if len(DATA[i])==8:
        INC=INC+1
        city = DATA[i][0]
        state = DATA[i][1]
        latitude = DATA[i][2]
        longitude = DATA[i][3]
        data = DATA[i][4]
        yesterday = DATA[i][5]
        today = DATA[i][6]
        Len=len(DATA[i])
        print(i,INC,Len,city,state,yesterday,today,increase)


import warnings
warnings.filterwarnings("ignore")
import matplotlib.pyplot as plt
from matplotlib.collections import PatchCollection
from matplotlib.patches import Polygon
import numpy as np
from PIL import Image,ImageFont,ImageDraw,ImageFilter,ImageChops
from random import randint
from mpl_toolkits.basemap import Basemap
fig = plt.figure(num=None, figsize=(12, 8) ) 
m = Basemap(width=6000000,height=4500000,resolution='c',projection='aea',lat_1=35.,lat_2=45,lon_0=-100,lat_0=40)
m.drawcoastlines(linewidth=0.5)
m.fillcontinents(color='tan',lake_color='lightblue')
# draw parallels and meridians.
m.drawparallels(np.arange(-90.,91.,15.),labels=[True,True,False,False],dashes=[2,2])
m.drawmeridians(np.arange(-180.,181.,15.),labels=[False,False,False,True],dashes=[2,2])
m.drawmapboundary(fill_color='lightblue')
m.drawcountries(linewidth=2, linestyle='solid', color='k' ) 
m.drawstates(linewidth=0.5, linestyle='solid', color='k')
m.drawrivers(linewidth=0.5, linestyle='solid', color='blue')
cities =[]
LAT=[]
LONG=[]
LATd=[]
LONGd=[]
STATES=[]
ALL=[]
cases=[]
deaths =[]
yesterday=0
today=0
longitude = ""
cnt=0
CNT=0
Dcnt=0
LASTFILE="04-30-10__covid19_deaths_US.csv"
DataIn = open(LASTFILE).readlines()
for line in DataIn:
    line=line.replace('"','')
    #if cnt==0:print (line)
    cnt=cnt+1
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    #if cnt<10 and line[5] !="":print (line[6])
    if "US" == line[7]:# and line[6] == "New York":
        #if CNT==7:print(line)
        #if CNT==8:print(line)    
        #if CNT<5 and line[5] !="":print line
        CNT=CNT+1
        ALL.append(line)
        LAT.append(line[5])
        LONG.append(line[6])
        L=len(line)
        deaths.append(line[L-1])
        #print(L)
        #print(line[L-1],line[L-2])
        if int(line[L-2])+50<int(line[L-1]):
            #print ("if ",int(line[L-2]),'+10',int(line[L-1]))
            #print (text,int(line[L-2]),int(line[L-1]))
            if len(line[8])>3:            
                text=line
                STATES.append(text)
                yesterday=yesterday+int(line[-2])
                today= today+int(line[-1])
                Dcnt=Dcnt+1
                #print(line[8],line[9])
                cities.append([line[5],line[6],line[8],line[9],line[L-1],int(line[L-1])-int(line[L-2])])
                LATd.append(line[8])
                LONGd.append(line[9])
                
                
LTd = np.array(LATd,dtype=np.float)
LGd = np.array(LONGd,dtype=np.float)
Str = np.array(cities,dtype=np.str)

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.01)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

Sd=1
Sized=[]
for xd in deaths:
    Sd=0+(float(xd)*.07)
    Sized.append(int(Sd))
    #print(int(S))
sd = np.array(Sized)
#print(Sized)
plt.title("Finding-Hot-Spots.ipynb - https://github.com/JupyterJones/COVID-19-Jupyter-Notebooks")
#plt.text(max(LG-1.2),max(LT), search, color='white', fontsize=24)
#x, y = m(lons, lats)  # transform coordinates
x, y = m(LGd, LTd)
#xx,yy = m(LG, LT)
plt.xlabel('Longitude',color="white", fontsize=24)
plt.ylabel('Latitute',color="white", fontsize=24)

for i in (range(0,len(cities))):
    C=cities[i][0]
    S=cities[i][1]
    t=float(cities[i][2])
    l=float(cities[i][3])
    d=cities[i][4]
    inc=cities[i][5]
    print(C,S,l,t,d,inc)
    plt.annotate(C, m(l,t),color='black',fontsize=10,zorder=15)   
    
m.scatter(x, y, s=sd, color='r', zorder=10,  alpha=0.6)
filename = "BaseMap/april30_Hotspots__.png"
plt.savefig(filename, dpi=120, facecolor='salmon', edgecolor='b',
        orientation='portrait', papertype=None, format=None,
        transparent=False, bbox_inches="tight", pad_inches=0.2,
        frameon=None, metadata=None)


LS=[]
LISTS="""0,0,0,0,1,1,1,2,2,3,4,6,9,9,11,17,19,20,0,0,0,0,0,0,0
0,0,0,0,1,1,1,2,2,3,4,6,9,9,11,17,19,20,0,0,0,0,0,0,0
0,0,0,0,1,1,1,2,2,3,4,6,9,9,11,17,19,20,0,0,0,0,0,0,0
0,0,0,0,1,1,1,2,2,3,4,6,9,9,11,17,19,20,0,0,0,0,0,0,0
0,0,0,0,1,1,1,2,2,3,4,6,9,9,11,17,19,20,0,0,0,0,0,0,0"""
LISTS=LISTS.split("\n")
for line in LISTS:
    line=line.replace('\'','')
    line=line.lstrip("'")
    lline=line.rstrip("'")
    LS.append([lline])


print(LS)


LS=[]
LISTS=[[0,0,0,0,1,1,1,2,2,3,4,6,9,9,11,17,19,20,0,0,0,0,0,0,0],[1,1,1,2,2,3,4,6,9,9,11,17,19,20,0,0,0,0,0,0,0,0,0,0,0],[4,6,9,9,11,17,19,20,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3],
[11,17,19,20,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,6,9,9],[19,20,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,6,9,9,11,17]]

res=[sum(x) for x in zip(*LISTS)]
print(res)

[0,   0,  0,  0,  1,  1,  1,  2, 2, 3,  4,  6,  9,  9, 11, 17, 19, 20,0,0, 0, 0, 0, 0, 0],
[1,   1,  1,  2,  2,  3,  4,  6, 9, 9, 11, 17, 19, 20,  0,  0,  0,  0,0,0, 0, 0, 0, 0, 0],
[4,   6,  9,  9, 11, 17, 19, 20, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,0,1, 1, 1, 2, 2, 3],
[11, 17, 19, 20,  0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  1,  1,  1,2,2, 3, 4, 6, 9, 9],
[19, 20,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,  0,  1,  1,  1,  2,  2,3,4, 6, 9, 9,11,17]

 35, 44, 29, 31, 14, 21, 24, 28, 11,12, 15,23, 28, 30, 12, 19, 22, 23,5,7,10,14,17,22,29

integers = [1, 2, 3]


strings = [str(integer) for integer in integers]

a_string = "".join(strings)

an_integer = int(a_string)


print(an_integer)

# Using graph_objects
import plotly.graph_objects as go
import pandas as pd
df = pd.read_csv('05-01-13__covid19_deaths_US.csv')

fig = go.Figure([go.Scatter(x=df['lat'], y=df['long_'])])
fig.show()



https://en.wikipedia.org/wiki/List_of_United_States_counties_and_county_equivalents
states the USA and territories has 3,243 counties

# Use data from the resource above
import requests as req
import time
# Create an empty list to store the URL
CountyStats=[]
# Get a string based on current time to 'time' identify your saved file
DATE = time.strftime("%m-%d-%H_")
URL ="https://www2.census.gov/programs-surveys/popest/datasets/2010-2019/counties/totals/co-est2019-alldata.csv"
resp = req.get(URL)
content = resp.text

#create a date oriented filename and print it
filename=str(DATE)+"_"+URL[-22:]
print(filename)
#print(content)
# Open a file using the new filename and write the content of the 'gitfile' to it.
# Update one time daily
TEMP = open(filename,"w")
TEMP.write(content)
CountyStats.append(content)
TEMP.close()

LASTFILE="05-02-08__co-est2019-alldata.csv"
DataIn = open(LASTFILE).readlines()
cnt=0
for lineZ in DataIn:
    cnt=cnt+1
    line=lineZ.split(",")
    if cnt<8:
        if cnt==1:print(line)
        if cnt==2:print("----------------------------------------------------------------")
        #print(line)
        print("----------------------------------------------------------------")
        print(line[1],line[2])

count=0
cnt=0
dec=0
State = "Alabama"
with open("05-02-08__co-est2019-alldata.csv") as txt_file:
    for line in txt_file:
        count=count+1
        if count==1:print(line)
        line = line.split(",")
        if line[5]==State:
            cnt=cnt+1
            print(line[3],line[4],line[5],line[6],line[18],line[28])
            if int(line[28])<0:dec=dec+1
        pass
print("\nlines in File: ",count)
print(State," has ", cnt," counties.")
print("In 2019 ",dec," counties decreased in population.")

FFMPEG -framerate 3 -i %05dbinary.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-binary-images.mp4
for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done    
    
gmic -input 0011.jpg -v 0 -texturize_canvas 39.31,7,,0.1 o Experiment/test004.jpg    
    
    
    

gmic -input $1 -v 0 -texturize_canvas 39.31,7,,0.1 o Texurized$1 

 
 2427  Textureize file9xxjpg
 2428  Texturize file9xxjpg
 2429  Texturize file9xx.jpg
 2430  display file9xx.jpg
 2431  mogrify -formate jpg *.jpg
 2432  mogrify -format jpg *.jpg
 2433  ls
 2434  display file3xx.jpg
 2435  display file3XX.jpg
 2436  Texturize file9XX.jpg
 2437  Functions
 2438  Function
 2439  Functions
 2440  exiv2
 2441  sudo apt install exiv2
 2442  ls *.jpg
 2443  exiv2 resultout.jpg
 2444  exiv2 file3.jpg
 2445  NOTE -i "exiv2 file3.jpg
 2446  File name       : file3.jpg
 2447  File size       : 42801 Bytes
 2448  MIME type       : image/jpeg
 2449  Image size      : 731 x 512
 2450  file3.jpg: No Exif data found in the file
 2451  "
 2452  Functions
 2453  videoarchive
 2454  mogrify -format jpg *.png 
 2455  videoarchive
 2456  NOTE -s mogrify
 2457  Functions
 2458  find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv "%s" %05d.jpg\n", /bin/bash, a++ }' | bash
 2459  ls *.JPG | sort | awk 'BEGIN{ a=0 }{ printf "mv %s %05d.jpg\n", $0, a++ }' | bash
 2460* ls *.jpg | sort | awk 'BEGIN{ a=0 }{ printf "mv %s %05d.jpg\n", $0, a++ }' | bash
 2461  nano name-jpg-sequential
 2462  chmod +x name-jpg-sequential
 2463  mv name-jpg-sequential /usr/local/bin/
 2464  which name-jpg-sequential
 2465  FFMPEG -framerate 2 -i %05d.png -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080-binaries.mp4
 2466  FFMPEG -framerate 2 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080-binaries.mp4
 2467  history
---------------
 2416  libreoffice --convert-to "pdf" README.txt
 2417  sub ~/.bashrc
 2418  source ~/.bashrc
 2419  sub ~/.bashrc
 2420  source ~/.bashrc
 2421  sub ~/.bashrc
 2422  source ~/.bashrc
 2423  ls
 2424  cd vintage%20postcards
 2425  Functions
 2426  ls
 2427  Textureize file9xxjpg
 2428  Texturize file9xxjpg
 2429  Texturize file9xx.jpg
 2430  display file9xx.jpg
 2431  mogrify -formate jpg *.jpg
 2432  mogrify -format jpg *.jpg
 2433  ls
 2434  display file3xx.jpg
 2435  display file3XX.jpg
 2436  Texturize file9XX.jpg
 2437  Functions
 2438  Function
 2439  Functions
 2440  exiv2
 2441  sudo apt install exiv2
 2442  ls *.jpg
 2443  exiv2 resultout.jpg
 2444  exiv2 file3.jpg
 2445  NOTE -i "exiv2 file3.jpg
 2446  File name       : file3.jpg
 2447  File size       : 42801 Bytes
 2448  MIME type       : image/jpeg
 2449  Image size      : 731 x 512
 2450  file3.jpg: No Exif data found in the file
 2451  "
 2452  Functions
 2453  videoarchive
 2454  mogrify -format jpg *.png 
 2455  videoarchive
 2456  NOTE -s mogrify
 2457  mogrify -format png *.jpg
 2458  cd ..
 2459  mogrify -format jpg *.jpg
 2460  Functions
 2461  mogrify -resize 1080x-1 -quality 90 -unsharp 0.25x0.08+8.3+0.045 *.jpg
 2462  GMIC -s binary
 2463  GMIC -s binar
 2464  NOTE -s binar
 2465  NOTE -s bi
 2466  NOTE -s thres
 2467  GMIC -s thres
 2468  lsb
 2469  ls -rant /usr/local/bin
 2470  Functions
 2471  history |grep thres
 2472  cd ..
 2473  for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
 2474  GMIC -i "for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
binary Binarize binarize "
 2475  GMIC -i "for j in *.jpg; do convert -threshold 50% "\$j" binary_"\$j"; done
binary Binarize binarize "
 2476  GMIC  -d 15
 2477  Functions
 2478  FFMPEG -framerate 3 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080x792-pixels-binary-images.mp4
 2479  Functions
 2480  rename 's/\d+/sprintf("%05d", $&)/e' *.jpg
 2481  ls
 2482  history | rename
 2483  history | grep rename
 2484  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.jpg
 2485  ls
 2486  FFMPEG -framerate 3 -i %05dbinary.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080x792-pixels-binary-images.mp4
 2346  display image in jupyter
 2347  "
 2348  LINK -i "https://stackoverflow.com/questions/123198/how-to-copy-files"
 2349  LINK -i "
 2350  hashtags 
 2351  •
 2352  •
 2353  #dancechallenge #music #dancevideo
 2354  "
 2355  LINK -i "
 2356  hashtags #dancechallenge #music #dancevideo
 2357  #hallamachayere #girlsdance #dance #practicetime #hotgirl #easydance #viral #dancechallenge #trendingreels #oldsongs #swag #swagdance #firegirls #fire #feedpost #post #viralsong #postvideo #instafashion #Video #trending https://www.instagram.com/tv/CiZENrFoqRC/?utm_source=ig_web_copy_link "
 2358  history |grep rename
 2359  NOTE -s rename
 2360  rename -h
 2361  cd ..
 2362  cd junk
 2363  ls
 2364  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2365  ls
 2366  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2367  ls
 2368  ls -v | cat -n | while read n f; do mv -n "$f" "$n.png"; done 
 2369  ls
 2370  GMIC -s for
 2371  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.jpg
 2372  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.png
 2373  ls
 2374  mogrify -format jpg *.png && mogrify -resize 720x420! *.jpg
 2375  ls
 2376  rm *.png
 2377  ls
 2378  display 38.jpg
 2379  "find . -name '*.jpg' \
 2380  | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %04d.jpg\n", $0, a++ }' \
 2381  | bash
 2382  "
 2383  find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2384  ls
 2385  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2386  name files in sequence"
 2387  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf \"mv \"%s\" %05d.jpg\n\", $0, a++ }' | bash
 2388  name files in sequence"
 2389  be
 2390  sub ~/.bash
 2391  sub ~/.bashrc
 2392  sub ~/.bashrc
 2393  videoarchive
 2394  Functions
 2395  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive.mp4
 2396  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2397  FFMPEG -framerate 2 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2398  ls
 2399  cd 2760-images-publich-archive
 2400  cd 2760-images-publish-archive
 2401  ls
 2402  nano README.md
 2403  ffprobe 2760-images-publish-archive.mp4
 2404  pandoc README.md -o README.pdf
 2405  sudo apt install pandoc
 2406  pandoc README.md -o README.pdf
 2407  sudo apt install install pdflatex
 2408  apt search pdflatex
 2409  sudo apt-get install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra
 2410  pandoc README.md -o README.pdf
 2411  pandoc README.md -o README.txt
 2412  pandoc README.md -o README.pdf
 2413  pandoc README.txt -o README.pdf
 2414  libreoffice --convert-to "pdf" README.txt
 2415  ls
 2416  libreoffice --convert-to "pdf" README.txt
--------------------------
 2247  Functions
 2248  nano /usr/local/bin/Functions
 2249  Functions
 2250  echo $(pwd)
 2251  echo pwd
 2252  echo $(pwd)+"/"
 2253  echo $(pwd)/
 2254  GMIC -r .
 2255  mogrify -format jpg *.jpg
 2256  mogrify -format png *.jpg
 2257  mogrify -resize 720x420! *.png
 2258  Functions
 2259  videoarchive
 2260  ls
 2261  thunar
 2262  GMIC -r .
 2263  cd ..
 2264  mogrify -format png *.jpg
 2265  Function
 2266  Functions
 2267  sub ~/.bashrc
 2268  source ~/.bashrc
 2269  ls
 2270  ls archive
 2271  rm -r archive
 2272  Functions
 2273  videoarchivep
 2274  sudo apt install rename
 2275  cd ..
 2276  du archive
 2277  rm -r archive
 2278  videoarchivep
 2279  ffmpeg -i %05d.png -c:v prores -profile:v 3 -t 10 output.mov
 2280  FFMPEG -i %05d.png -c:v prores -profile:v 3 -t 10 output.mov
 2281  sub
 2282  Functions
 2283  FFMPEG -framerate 3 -i %05d.png -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-images.mp4
 2284  ffmpeg -i %05d.png -c:v libx264 -crf 10 -preset ultraslow archive-output.mp4
 2285  FFMPEG -i %05d.png -c:v libx264 -crf 10 -preset ultraslow archive-output.mp4
 2286  fmpeg -i %05d.png -c:v libx264 -crf 10 -preset ultraslow archive-output.mp4
 2287  FFMPEG -i %05d.png -c:v libx265 -x265-params lossless=1 output.mp4
 2288  NOTE -i "FFMPEG -i %05d.png -c:v libx265 -x265-params lossless=1 output.mp4"
 2289  ''for j in *.jpg
 2290  do 
 2291  for j in *.jpg; do    convert -brightness-contrast 10x5 "$j" altered_"$j"; done""
 2292  for j in *.jpg; do    convert -brightness-contrast 8x6 "$j" altered_"$j"; done
 2293  for j in *.jpg; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2294  cd ../old_photo
 2295  for j in *.jpg; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2296  cd ../ManRay
 2297  for j in *.jpg; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2298  for j in *.png; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2299  GMIC -s resize
 2300  NOTE -s resize
 2301  cd ../NewStuff
 2302  'mogrify -format jpg *.jpg && mogrify -resize 720x620! *.JPG
 2303  mogrify -format jpg *.jpg && mogrify -resize 720x620! *.JPG
 2304  find . -iname '*.jpg' -exec mogrify -gravity Center -crop 720x480+0+0 +repage {} \;
 2305  mogrify -format jpg *.JPG
 2306  thunar
 2307  mogrify -format jpg *.JPG
 2308  mogrify -format jpg *.jpg
 2309  GMIC -i "
 2310  convert -brightness-contrast 10x5 input.jpg output.jpg
 2311  10 brightness x 5 contrast
 2312  "
 2313  pw -s instagram
 2314  history |grep for
 2315  for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
 2316  mkdir binary
 2317  mv binary*.jpg binary
 2318  cd ..
 2319  cd blackandwhitedrawings
 2320  for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
 2321  thunar
 2322  ls
 2323  cd binary
 2324  ls
 2325  history | grep resize
 2326  ls
 2327  mogrify -format jpg *.jpg ; mogrify -resize 720x420! *.jpg
 2328  thunar
 2329  locate LICENSE.txt
 2330  locate LICENSE.txt | grep gimp
 2331  locate LICENSE.txt | grep font
 2332  thunar
 2333  cp /home/jack/miniconda3/envs/py31/share/qt/3rd_party_licenses/qtquickcontrols/src/extras/Styles/Flat/fonts/LICENSE.txt ~/.fonts/
 2334  conda activate cloned_base
 2335  which python
 2336  conda install -c conda-forge ncurses
 2337  ls *.py
 2338  code .
 2339  ls *.py
 2340  NOTE -i "
 2341  image crop size gimp 16:10.72
 2342  "
 2343  NOTE -i "
 2344  from IPython.display import Image
 2345  Image(filename='test.png') 
 2346  display image in jupyter
 2347  "
 2348  LINK -i "https://stackoverflow.com/questions/123198/how-to-copy-files"
 2349  LINK -i "
 2350  hashtags 
 2351  •
 2352  •
 2353  #dancechallenge #music #dancevideo
 2354  "
 2355  LINK -i "
 2356  hashtags #dancechallenge #music #dancevideo
 2357  #hallamachayere #girlsdance #dance #practicetime #hotgirl #easydance #viral #dancechallenge #trendingreels #oldsongs #swag #swagdance #firegirls #fire #feedpost #post #viralsong #postvideo #instafashion #Video #trending https://www.instagram.com/tv/CiZENrFoqRC/?utm_source=ig_web_copy_link "
 2358  history |grep rename
 2359  NOTE -s rename
 2360  rename -h
 2361  cd ..
 2362  cd junk
 2363  ls
 2364  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2365  ls
 2366  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2367  ls
 2368  ls -v | cat -n | while read n f; do mv -n "$f" "$n.png"; done 
 2369  ls
 2370  GMIC -s for
 2371  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.jpg
 2372  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.png
 2373  ls
 2374  mogrify -format jpg *.png && mogrify -resize 720x420! *.jpg
 2375  ls
 2376  rm *.png
 2377  ls
 2378  display 38.jpg
 2379  "find . -name '*.jpg' \
 2380  | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %04d.jpg\n", $0, a++ }' \
 2381  | bash
 2382  "
 2383  find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2384  ls
 2385  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2386  name files in sequence"
 2387  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf \"mv \"%s\" %05d.jpg\n\", $0, a++ }' | bash
 2388  name files in sequence"
 2389  be
 2390  sub ~/.bash
 2391  sub ~/.bashrc
 2392  sub ~/.bashrc
 2393  videoarchive
 2394  Functions
 2395  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive.mp4
 2396  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2397  FFMPEG -framerate 2 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2398  ls
 2399  cd 2760-images-publich-archive
 2400  cd 2760-images-publish-archive
 2401  ls
 2402  nano README.md
 2403  ffprobe 2760-images-publish-archive.mp4
 2404  pandoc README.md -o README.pdf
 2405  sudo apt install pandoc
 2406  pandoc README.md -o README.pdf
 2407  sudo apt install install pdflatex
 2408  apt search pdflatex
 2409  sudo apt-get install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra
 2410  pandoc README.md -o README.pdf
 2411  pandoc README.md -o README.txt
 2412  pandoc README.md -o README.pdf
 2413  pandoc README.txt -o README.pdf
 2414  libreoffice --convert-to "pdf" README.txt
 2415  ls
 2416  libreoffice --convert-to "pdf" README.txt
 2417  sub ~/.bashrc
 2418  source ~/.bashrc
 2419  sub ~/.bashrc
 2420  source ~/.bashrc
 2421  sub ~/.bashrc
 2422  source ~/.bashrc
 2423  ls
 2424  cd vintage%20postcards
 2425  Functions
 2426  ls
 2427  Textureize file9xxjpg
 2428  Texturize file9xxjpg
 2429  Texturize file9xx.jpg
 2430  display file9xx.jpg
 2431  mogrify -formate jpg *.jpg
 2432  mogrify -format jpg *.jpg
 2433  ls
 2434  display file3xx.jpg
 2435  display file3XX.jpg
 2436  Texturize file9XX.jpg
 2437  Functions
 2438  Function
 2439  Functions
 2440  exiv2
 2441  sudo apt install exiv2
 2442  ls *.jpg
 2443  exiv2 resultout.jpg
 2444  exiv2 file3.jpg
 2445  NOTE -i "exiv2 file3.jpg
 2446  File name       : file3.jpg
 2447  File size       : 42801 Bytes
 2448  MIME type       : image/jpeg
 2449  Image size      : 731 x 512
 2450  file3.jpg: No Exif data found in the file
 2451  "
 2452  Functions
 2453  videoarchive
 2454  mogrify -format jpg *.png 
 2455  videoarchive
 2456  NOTE -s mogrify
 2457  mogrify -format png *.jpg
 2458  cd ..
 2459  mogrify -format jpg *.jpg
 2460  Functions
 2461  mogrify -resize 1080x-1 -quality 90 -unsharp 0.25x0.08+8.3+0.045 *.jpg
 2462  history | grep thres
 2463  for j in *.jpg; do convert -threshold 50% "$j" binary"$j"; done
 2464  history



%%writefile VID2img.py
import cv2
from random import randint
from PIL import Image
import time
import random
#num = randint(0,len(MP4S))

def vid2img(count,videofile,outputpath):
    vidcap = cv2.VideoCapture(videofile)
    # get total number of frames
    totalFrames = vidcap.get(cv2.CAP_PROP_FRAME_COUNT)
    randomFrameNumber=random.randint(0, totalFrames)
    # set frame position
    vidcap.set(cv2.CAP_PROP_POS_FRAMES,randomFrameNumber)
    success, image = vidcap.read()
    print(image)
    if success:
        print(".",end="|")
        cv2.imwrite("junk/archived-images.png", image)
    IM = Image.open("junk/archived-images.png")
    im = IM.resize((720,480))
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filename = outputpath+"/Sunday"+str(count)+"_"+timestr+"_.png"
    im.save(filename)
    nim = Image.open(filename)
    if count==1:print(filename)
    return nim


!rm __pycache__/*.*

from VID2img import *
from random import randint
from VIDEOZ import videoz
num = randint(0,len(videoz())-1)
print(num)
filename = videoz()[num]
count = num
outputpath = "Experiment"
im = vid2img(count,filename,outputpath)
print(im.size,count)
im #1 orig #2 processed #3 twitterbot #4 processed #5 processed



import glob
import os.path
FILES = []
dir = '.'
files = glob.glob(os.path.join(dir, '*.ipynb'))
for file in files:
    print (file)
    FILES.append(file)

!ls -d */

word = "binariz"
WORDin(word)

LOCATIONS=["texture/","tmpseg/","instagram/","output/","polarized/","posterize/","publish/","image_resources/","binary_images/"]

for word in LOCATIONS:
    WORDin(word)
    
 
 

wordlist=["texture/",
"tmpseg/",
"instagram/",
"output/",
"polarized/",
"posterize/",
"publish/",
"image_resources/",
"binary_images/",
"mask",
"palette"]
for Word in wordlist:
    print(Word, end=" - ")

word ="paste"
WORDin(word)

import glob
import os.path
FILES = []
dir = '.'
files = glob.glob(os.path.join(dir, '*.ipynb'))
for file in files:
    print (file)
    FILES.append(file)

def insert(data):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    c.execute("INSERT into PROJECT values (?)", (data,))
    for row in c.execute("SELECT ROWID,* FROM PROJECT ORDER BY ROWID DESC LIMIT 1"):
        print ("\nPOST VERIFIED:\n",row[0],row[1])
    conn.commit()
    conn.close()
    return
# this works data = "this is a test"
# insert(data)
ALL =[]
# string to search in a directory of files

def WORDin(word):
    for filename in FILES:
        with open(filename, 'r') as fp:
            # read all lines in a list
            lines = fp.readlines()
            for line in lines:
                # check if string present on a current line
                if line.find(word) != -1:
                    if len(line)<100:
                        #print('The term '+word+' exists in '+filename+' .\nLineNumber:', lines.index(line),line.replace("\\n",""))
                        data ='The term '+word+' exists in '+filename+' .\nLineNumber:', lines.index(line),line.replace("\\n","")
                        ALL.append(data)
                        #convert the data to a string
                        dataout = str(data).replace("\\n",'')
                        insert(dataout)
#word = 'mask'
#word = "palette"

WORDin(word)
for line in ALL:
    print(line)


print(ALL)

# string to search in file
word = 'import'
filename = "./Twitter-cloud-image-generator-master.ipynb"
with open(filename, 'r') as fp:
    # read all lines in a list
    lines = fp.readlines()
    for line in lines:
        # check if string present on a current line
        if line.find(word) != -1:
            if len(line)<100:
                results = "The term "+word+" exists in "+filename+' Line Number:', lines.index(line),line
                print (results)

%%writefile KEYwords.py
import sys
import sqlite3
def create(database):
    import sqlite3
    conn = sqlite3.connect(database)
    conn.text_factory = str
    c = conn.cursor()
    c.execute("CREATE VIRTUAL TABLE PROJECT using FTS4 (input)")
    conn.commit()
    text = "Database Created"
    return text

def insert(data):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    c.execute("INSERT into PROJECT values (?)", (data,))
    for row in c.execute("SELECT ROWID,* FROM PROJECT ORDER BY ROWID DESC LIMIT 1"):
        print ("\nPOST VERIFIED:\n",row[0],row[1])
    conn.commit()
    conn.close()
    return data

def search(data):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()#for row in c.execute("SELECT ROWID,* FROM PROJECT WHERE input MATCH ?",(data,)):
    #    print ("\nINFO Found Here:",row[0],row[1])
    for row in c.execute("SELECT ROWID,* FROM PROJECT"):
        if data in row[1]:    
            print ("\nINFO Found Here:\n",row[0],row[1])
    #conn.commit()
    #conn.close()
def delete(rowid):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    c.execute("DELETE FROM PROJECT WHERE rowid = ?", (rowid,))
    conn.commit()
    conn.close()
    text = "ROWID "+rowid+" Deleted"
    return text

def main():
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    for row in c.execute("SELECT rowid, * FROM PROJECT"):
        print (row[0],": ",row[1])

def prtmain(filename):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()    
    fn = open(filename, "w")
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    for row in c.execute("SELECT rowid, * FROM PROJECT"):
        TEXT = "id:"+str(row[0])+"\n"+str(row[1])
        TEXT = str(TEXT)
        TEXT = TEXT.replace('\\n','\n')
        TEXT = "".join(TEXT)
        fn.write(TEXT+'\n----\n')
    fn.close()
def HELP():
    TXT = """
    -I insert / -D delete / -R read / -H help
    examples:
    Notice the entry is in parenthese.
    -I  to insert "STUFF to be inserted"
    LINK -I "STUFF to be inserted"
    -D to delete where rowid is 3
    LINK -D 3
    Notice the period after -R . 
    -R . read all
    To search for the term "current project"
    LINK -S 3
    -S "current project"
    LINK -R .
    -H help on options
    LINK -H .
    """
    print (TXT)

!ls *.db

from KEYwords import *
database="keywords.db"
create(database)

from KEYwords import *
data = "first entry test"
insert(data)

filename = "Searchable.txt"
prtmain(filename)

data = "strftime(\"binary_images/"
search(data)

from KEYwords import *
main()

for data in ALL:
    data = str(data).replace("\\n",'')
    print(data)
    
    insert(data,)

insert("test data")

from PIL import Image
 
def convertImage(imag):
    img = Image.open(imag)
    img = img.convert("RGBA")
    datas = img.getdata()
    newData = []
    for item in datas:
        if item[0] == 0 and item[1] == 0 and item[2] == 0:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)
 
    img.putdata(newData)
    img.save("junk/New2.png", "PNG")
    print("Successful")
    return img
 
convertImage()

filename = time.strftime("toplayer/"+str(cnt)+"%Y%m%d%H%M%S.jpg")
    

!mkdir toplayer

fromPIL import Image
import time
def convertImage(imag):
    img = Image.open(imag)
    img = img.convert("RGBA")
    datas = img.getdata()
    newData = []
    for item in datas:
        if item[0] == 0 and item[1] == 0 and item[2] == 0:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)
 
    img.putdata(newData)
    filename = time.strftime("toplayer/"+str(cnt)+"%Y%m%d%H%M%S.png")
    img.save(filename, "PNG")

import os
import time
def convertImage(imag):
    img = Image.open(imag)
    img = img.convert("RGBA")
    datas = img.getdata()
    newData = []
    for item in datas:
        if item[0] == 0 and item[1] == 0 and item[2] == 0:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)
 
    img.putdata(newData)
    filename = time.strftime("toplayer/newfolder"+str(cnt)+"%Y%m%d%H%M%S.png")
    img.save(filename, "PNG")
cnt = 0
for Imag in os.listdir("test/NewFolder/"):
    cnt =cnt +1
    imag= "test/NewFolder/"+Imag
    convertImage(imag)



from randtext import randTXT
STR = randTXT()
print (STR)

from VID2img import *
from random import randint
from VIDEOZ import videoz
num = randint(0,len(videoz())-1)
print(num,len(videoz()))
filename = videoz()[num]
count = num
outputpath = "Experiment"
im = vid2img(count,filename,outputpath)
print(im.size,count)
im #1 orig #2 processed #3 twitterbot #4 processed #5 processed *6 binary

Arguments:

    _smoothness,_sharpening,_threshold>=0,_thickness>=0,_color>=0,quantization>0

Description:
Apply cartoon effect on selected images.
Default values:

smoothness=3, sharpening=150, threshold=20, thickness=0.25, color=1.5 and quantization=8.
Example of use:
$ gmic image.jpg cartoon 3,50,10,0.25,3,16

FFMPEG -framerate 3 -i %05dbinary.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-binary-images.mp4
for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done    
    
gmic -input 0011.jpg -v 0 -texturize_canvas 39.31,7,,0.1 o Experiment/test004.jpg    
    
    
    

gmic -input $1 -v 0 -texturize_canvas 39.31,7,,0.1 o Texurized$1 

file = "/home/jack/file.png"

!gmic -input Experiment/trans-hardsketchbw1000-0_000001.png colorspace=rgb spatial_tolerance=5 color_tolerance=5 \
-o Experiment/bw-colorspaceall55.jpg

!gmic -input /home/jack/file.png colorspace=rgba spatial_tolerance=3 color_tolerance=3 \
format_options=rgba -o Experiment/colorspaceall33.png

!gmic -input /home/jack/file.png colorspace=rgb spatial_tolerance=5 color_tolerance=5 -0 Experimental/colorspaceall55.png

!gmic /home/jack/file.png colorspace=all , spatial_tolerance=5 and color_tolerance=5 -0 Experimental/colorspaceall55.png

#amplitude=1000 , sampling=3 , opacity=0.1 , edge_threshold=20 and is_fast=0
!gmic /home/jack/file.png +hardsketchbw 100,70,0.1,10 display_rgba 1 -o Experiment/trans-hardsketchbw100.png

#amplitude=1000 , sampling=3 , opacity=0.1 , edge_threshold=20 and is_fast=0
!gmic /home/jack/file.png +hardsketchbw 200,70,0.1,10 median[-1] 2 +local \
reverse blur[-1] 3 blend[-2,-1] overlay endlocal -o Experiment/hardsketchbw.png

!ls Experiment

# smoothness=3, sharpening=150, threshold=20, thickness=0.25, color=1.5 and quantization=8
#                             smoothness=3, 150, 20, 0.25, 1.5, 8
!gmic -input Experiment/image.jpg cartoon 2,150,10,0.25,3,16 -o 2-150-10-15-3-16file.png
!gmic -input Experiment/image.jpg cartoon 3,150,30,0.1,1.5,4 -o default-file-q4.png

from PIL import Image
im = Image.open("default-file-q4.png")
im

from PIL import Image
im = Image.open(file)
im

TEXT=""" 
 2427  Textureize file9xxjpg
 2428  Texturize file9xxjpg
 2429  Texturize file9xx.jpg
 2430  display file9xx.jpg
 2431  mogrify -formate jpg *.jpg
 2432  mogrify -format jpg *.jpg
 2433  ls
 2434  display file3xx.jpg
 2435  display file3XX.jpg
 2436  Texturize file9XX.jpg
 2437  Functions
 2438  Function
 2439  Functions
 2440  exiv2
 2441  sudo apt install exiv2
 2442  ls *.jpg
 2443  exiv2 resultout.jpg
 2444  exiv2 file3.jpg
 2445  NOTE -i "exiv2 file3.jpg
 2446  File name       : file3.jpg
 2447  File size       : 42801 Bytes
 2448  MIME type       : image/jpeg
 2449  Image size      : 731 x 512
 2450  file3.jpg: No Exif data found in the file
 2451  "
 2452  Functions
 2453  videoarchive
 2454  mogrify -format jpg *.png 
 2455  videoarchive
 2456  NOTE -s mogrify
 2457  Functions
 2458  find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv "%s" %05d.jpg\n", /bin/bash, a++ }' | bash
 2459  ls *.JPG | sort | awk 'BEGIN{ a=0 }{ printf "mv %s %05d.jpg\n", $0, a++ }' | bash
 2460* ls *.jpg | sort | awk 'BEGIN{ a=0 }{ printf "mv %s %05d.jpg\n", $0, a++ }' | bash
 2461  nano name-jpg-sequential
 2462  chmod +x name-jpg-sequential
 2463  mv name-jpg-sequential /usr/local/bin/
 2464  which name-jpg-sequential
 2465  FFMPEG -framerate 2 -i %05d.png -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080-binaries.mp4
 2466  FFMPEG -framerate 2 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080-binaries.mp4
 2467  history
---------------
 2416  libreoffice --convert-to "pdf" README.txt
 2417  sub ~/.bashrc
 2418  source ~/.bashrc
 2419  sub ~/.bashrc
 2420  source ~/.bashrc
 2421  sub ~/.bashrc
 2422  source ~/.bashrc
 2423  ls
 2424  cd vintage%20postcards
 2425  Functions
 2426  ls
 2427  Textureize file9xxjpg
 2428  Texturize file9xxjpg
 2429  Texturize file9xx.jpg
 2430  display file9xx.jpg
 2431  mogrify -formate jpg *.jpg
 2432  mogrify -format jpg *.jpg
 2433  ls
 2434  display file3xx.jpg
 2435  display file3XX.jpg
 2436  Texturize file9XX.jpg
 2437  Functions
 2438  Function
 2439  Functions
 2440  exiv2
 2441  sudo apt install exiv2
 2442  ls *.jpg
 2443  exiv2 resultout.jpg
 2444  exiv2 file3.jpg
 2445  NOTE -i "exiv2 file3.jpg
 2446  File name       : file3.jpg
 2447  File size       : 42801 Bytes
 2448  MIME type       : image/jpeg
 2449  Image size      : 731 x 512
 2450  file3.jpg: No Exif data found in the file
 2451  "
 2452  Functions
 2453  videoarchive
 2454  mogrify -format jpg *.png 
 2455  videoarchive
 2456  NOTE -s mogrify
 2457  mogrify -format png *.jpg
 2458  cd ..
 2459  mogrify -format jpg *.jpg
 2460  Functions
 2461  mogrify -resize 1080x-1 -quality 90 -unsharp 0.25x0.08+8.3+0.045 *.jpg
 2462  GMIC -s binary
 2463  GMIC -s binar
 2464  NOTE -s binar
 2465  NOTE -s bi
 2466  NOTE -s thres
 2467  GMIC -s thres
 2468  lsb
 2469  ls -rant /usr/local/bin
 2470  Functions
 2471  history |grep thres
 2472  cd ..
 2473  for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
 2474  GMIC -i "for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
binary Binarize binarize "
 2475  GMIC -i "for j in *.jpg; do convert -threshold 50% "\$j" binary_"\$j"; done
binary Binarize binarize "
 2476  GMIC  -d 15
 2477  Functions
 2478  FFMPEG -framerate 3 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080x792-pixels-binary-images.mp4
 2479  Functions
 2480  rename 's/\d+/sprintf("%05d", $&)/e' *.jpg
 2481  ls
 2482  history | rename
 2483  history | grep rename
 2484  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.jpg
 2485  ls
 2486  FFMPEG -framerate 3 -i %05dbinary.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-1080x792-pixels-binary-images.mp4
 2346  display image in jupyter
 2347  "
 2348  LINK -i "https://stackoverflow.com/questions/123198/how-to-copy-files"
 2349  LINK -i "
 2350  hashtags 
 2351  •
 2352  •
 2353  #dancechallenge #music #dancevideo
 2354  "
 2355  LINK -i "
 2356  hashtags #dancechallenge #music #dancevideo
 2357  #hallamachayere #girlsdance #dance #practicetime #hotgirl #easydance #viral #dancechallenge #trendingreels #oldsongs #swag #swagdance #firegirls #fire #feedpost #post #viralsong #postvideo #instafashion #Video #trending https://www.instagram.com/tv/CiZENrFoqRC/?utm_source=ig_web_copy_link "
 2358  history |grep rename
 2359  NOTE -s rename
 2360  rename -h
 2361  cd ..
 2362  cd junk
 2363  ls
 2364  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2365  ls
 2366  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2367  ls
 2368  ls -v | cat -n | while read n f; do mv -n "$f" "$n.png"; done 
 2369  ls
 2370  GMIC -s for
 2371  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.jpg
 2372  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.png
 2373  ls
 2374  mogrify -format jpg *.png && mogrify -resize 720x420! *.jpg
 2375  ls
 2376  rm *.png
 2377  ls
 2378  display 38.jpg
 2379  "find . -name '*.jpg' \
 2380  | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %04d.jpg\n", $0, a++ }' \
 2381  | bash
 2382  "
 2383  find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2384  ls
 2385  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2386  name files in sequence"
 2387  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf \"mv \"%s\" %05d.jpg\n\", $0, a++ }' | bash
 2388  name files in sequence"
 2389  be
 2390  sub ~/.bash
 2391  sub ~/.bashrc
 2392  sub ~/.bashrc
 2393  videoarchive
 2394  Functions
 2395  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive.mp4
 2396  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2397  FFMPEG -framerate 2 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2398  ls
 2399  cd 2760-images-publich-archive
 2400  cd 2760-images-publish-archive
 2401  ls
 2402  nano README.md
 2403  ffprobe 2760-images-publish-archive.mp4
 2404  pandoc README.md -o README.pdf
 2405  sudo apt install pandoc
 2406  pandoc README.md -o README.pdf
 2407  sudo apt install install pdflatex
 2408  apt search pdflatex
 2409  sudo apt-get install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra
 2410  pandoc README.md -o README.pdf
 2411  pandoc README.md -o README.txt
 2412  pandoc README.md -o README.pdf
 2413  pandoc README.txt -o README.pdf
 2414  libreoffice --convert-to "pdf" README.txt
 2415  ls
 2416  libreoffice --convert-to "pdf" README.txt
--------------------------
 2247  Functions
 2248  nano /usr/local/bin/Functions
 2249  Functions
 2250  echo $(pwd)
 2251  echo pwd
 2252  echo $(pwd)+"/"
 2253  echo $(pwd)/
 2254  GMIC -r .
 2255  mogrify -format jpg *.jpg
 2256  mogrify -format png *.jpg
 2257  mogrify -resize 720x420! *.png
 2258  Functions
 2259  videoarchive
 2260  ls
 2261  thunar
 2262  GMIC -r .
 2263  cd ..
 2264  mogrify -format png *.jpg
 2265  Function
 2266  Functions
 2267  sub ~/.bashrc
 2268  source ~/.bashrc
 2269  ls
 2270  ls archive
 2271  rm -r archive
 2272  Functions
 2273  videoarchivep
 2274  sudo apt install rename
 2275  cd ..
 2276  du archive
 2277  rm -r archive
 2278  videoarchivep
 2279  ffmpeg -i %05d.png -c:v prores -profile:v 3 -t 10 output.mov
 2280  FFMPEG -i %05d.png -c:v prores -profile:v 3 -t 10 output.mov
 2281  sub
 2282  Functions
 2283  FFMPEG -framerate 3 -i %05d.png -c:v libx265 -r 20 -pix_fmt yuv420p -y archived-images.mp4
 2284  ffmpeg -i %05d.png -c:v libx264 -crf 10 -preset ultraslow archive-output.mp4
 2285  FFMPEG -i %05d.png -c:v libx264 -crf 10 -preset ultraslow archive-output.mp4
 2286  fmpeg -i %05d.png -c:v libx264 -crf 10 -preset ultraslow archive-output.mp4
 2287  FFMPEG -i %05d.png -c:v libx265 -x265-params lossless=1 output.mp4
 2288  NOTE -i "FFMPEG -i %05d.png -c:v libx265 -x265-params lossless=1 output.mp4"
 2289  ''for j in *.jpg
 2290  do 
 2291  for j in *.jpg; do    convert -brightness-contrast 10x5 "$j" altered_"$j"; done""
 2292  for j in *.jpg; do    convert -brightness-contrast 8x6 "$j" altered_"$j"; done
 2293  for j in *.jpg; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2294  cd ../old_photo
 2295  for j in *.jpg; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2296  cd ../ManRay
 2297  for j in *.jpg; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2298  for j in *.png; do    convert -brightness-contrast 1x9 "$j" altered_"$j"; done
 2299  GMIC -s resize
 2300  NOTE -s resize
 2301  cd ../NewStuff
 2302  'mogrify -format jpg *.jpg && mogrify -resize 720x620! *.JPG
 2303  mogrify -format jpg *.jpg && mogrify -resize 720x620! *.JPG
 2304  find . -iname '*.jpg' -exec mogrify -gravity Center -crop 720x480+0+0 +repage {} \;
 2305  mogrify -format jpg *.JPG
 2306  thunar
 2307  mogrify -format jpg *.JPG
 2308  mogrify -format jpg *.jpg
 2309  GMIC -i "
 2310  convert -brightness-contrast 10x5 input.jpg output.jpg
 2311  10 brightness x 5 contrast
 2312  "
 2313  pw -s instagram
 2314  history |grep for
 2315  for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
 2316  mkdir binary
 2317  mv binary*.jpg binary
 2318  cd ..
 2319  cd blackandwhitedrawings
 2320  for j in *.jpg; do convert -threshold 50% "$j" binary_"$j"; done
 2321  thunar
 2322  ls
 2323  cd binary
 2324  ls
 2325  history | grep resize
 2326  ls
 2327  mogrify -format jpg *.jpg ; mogrify -resize 720x420! *.jpg
 2328  thunar
 2329  locate LICENSE.txt
 2330  locate LICENSE.txt | grep gimp
 2331  locate LICENSE.txt | grep font
 2332  thunar
 2333  cp /home/jack/miniconda3/envs/py31/share/qt/3rd_party_licenses/qtquickcontrols/src/extras/Styles/Flat/fonts/LICENSE.txt ~/.fonts/
 2334  conda activate cloned_base
 2335  which python
 2336  conda install -c conda-forge ncurses
 2337  ls *.py
 2338  code .
 2339  ls *.py
 2340  NOTE -i "
 2341  image crop size gimp 16:10.72
 2342  "
 2343  NOTE -i "
 2344  from IPython.display import Image
 2345  Image(filename='test.png') 
 2346  display image in jupyter
 2347  "
 2348  LINK -i "https://stackoverflow.com/questions/123198/how-to-copy-files"
 2349  LINK -i "
 2350  hashtags 
 2351  •
 2352  •
 2353  #dancechallenge #music #dancevideo
 2354  "
 2355  LINK -i "
 2356  hashtags #dancechallenge #music #dancevideo
 2357  #hallamachayere #girlsdance #dance #practicetime #hotgirl #easydance #viral #dancechallenge #trendingreels #oldsongs #swag #swagdance #firegirls #fire #feedpost #post #viralsong #postvideo #instafashion #Video #trending https://www.instagram.com/tv/CiZENrFoqRC/?utm_source=ig_web_copy_link "
 2358  history |grep rename
 2359  NOTE -s rename
 2360  rename -h
 2361  cd ..
 2362  cd junk
 2363  ls
 2364  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2365  ls
 2366  rename -n 's/\d+/sprintf "%05d", ++$a/e' *.png
 2367  ls
 2368  ls -v | cat -n | while read n f; do mv -n "$f" "$n.png"; done 
 2369  ls
 2370  GMIC -s for
 2371  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.jpg
 2372  mogrify -format jpg *.jpg && mogrify -resize 720x420! *.png
 2373  ls
 2374  mogrify -format jpg *.png && mogrify -resize 720x420! *.jpg
 2375  ls
 2376  rm *.png
 2377  ls
 2378  display 38.jpg
 2379  "find . -name '*.jpg' \
 2380  | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %04d.jpg\n", $0, a++ }' \
 2381  | bash
 2382  "
 2383  find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2384  ls
 2385  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf "mv \"%s\" %05d.jpg\n", $0, a++ }' | bash
 2386  name files in sequence"
 2387  GMIC -i "find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf \"mv \"%s\" %05d.jpg\n\", $0, a++ }' | bash
 2388  name files in sequence"
 2389  be
 2390  sub ~/.bash
 2391  sub ~/.bashrc
 2392  sub ~/.bashrc
 2393  videoarchive
 2394  Functions
 2395  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive.mp4
 2396  FFMPEG -framerate 5 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2397  FFMPEG -framerate 2 -i %05d.jpg -c:v libx265 -r 20 -pix_fmt yuv420p -y 2760-images-publish-archive2.mp4
 2398  ls
 2399  cd 2760-images-publich-archive
 2400  cd 2760-images-publish-archive
 2401  ls
 2402  nano README.md
 2403  ffprobe 2760-images-publish-archive.mp4
 2404  pandoc README.md -o README.pdf
 2405  sudo apt install pandoc
 2406  pandoc README.md -o README.pdf
 2407  sudo apt install install pdflatex
 2408  apt search pdflatex
 2409  sudo apt-get install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra
 2410  pandoc README.md -o README.pdf
 2411  pandoc README.md -o README.txt
 2412  pandoc README.md -o README.pdf
 2413  pandoc README.txt -o README.pdf
 2414  libreoffice --convert-to "pdf" README.txt
 2415  ls
 2416  libreoffice --convert-to "pdf" README.txt
 2417  sub ~/.bashrc
 2418  source ~/.bashrc
 2419  sub ~/.bashrc
 2420  source ~/.bashrc
 2421  sub ~/.bashrc
 2422  source ~/.bashrc
 2423  ls
 2424  cd vintage%20postcards
 2425  Functions
 2426  ls
 2427  Textureize file9xxjpg
 2428  Texturize file9xxjpg
 2429  Texturize file9xx.jpg
 2430  display file9xx.jpg
 2431  mogrify -formate jpg *.jpg
 2432  mogrify -format jpg *.jpg
 2433  ls
 2434  display file3xx.jpg
 2435  display file3XX.jpg
 2436  Texturize file9XX.jpg
 2437  Functions
 2438  Function
 2439  Functions
 2440  exiv2
 2441  sudo apt install exiv2
 2442  ls *.jpg
 2443  exiv2 resultout.jpg
 2444  exiv2 file3.jpg
 2445  NOTE -i "exiv2 file3.jpg
 2446  File name       : file3.jpg
 2447  File size       : 42801 Bytes
 2448  MIME type       : image/jpeg
 2449  Image size      : 731 x 512
 2450  file3.jpg: No Exif data found in the file
 2451  "
 2452  Functions
 2453  videoarchive
 2454  mogrify -format jpg *.png 
 2455  videoarchive
 2456  NOTE -s mogrify
 2457  mogrify -format png *.jpg
 2458  cd ..
 2459  mogrify -format jpg *.jpg
 2460  Functions
 2461  mogrify -resize 1080x-1 -quality 90 -unsharp 0.25x0.08+8.3+0.045 *.jpg
 2462  history | grep thres
 2463  for j in *.jpg; do convert -threshold 50% "$j" binary"$j"; done
 2464  history
"""
unique_line = set()
for line in TEXT.split("\n"):
    unique_line.add(line[7:])
    #print (line[7:])
    for history in unique_line:
        if len(history)>3:
            print(history)

%%writefile VID2img.py
import cv2
from random import randint
from PIL import Image
import time
import random
#num = randint(0,len(MP4S))

def vid2img(count,videofile,outputpath):
    vidcap = cv2.VideoCapture(videofile)
    # get total number of frames
    totalFrames = vidcap.get(cv2.CAP_PROP_FRAME_COUNT)
    randomFrameNumber=random.randint(0, totalFrames)
    # set frame position
    vidcap.set(cv2.CAP_PROP_POS_FRAMES,randomFrameNumber)
    success, image = vidcap.read()
    print(image)
    if success:
        print(".",end="|")
        cv2.imwrite("junk/archived-images.png", image)
    IM = Image.open("junk/archived-images.png")
    im = IM.resize((720,480))
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filename = outputpath+"/Frame"+str(randomFrameNumber)+"-"+str(count)+"_"+timestr+"_.png"
    im.save(filename)
    nim = Image.open(filename)
    if count==1:print(filename)
    return nim


!rm __pycache__/*.*

from VID2img import *
from random import randint
from VIDEOZ import videoz
num = randint(0,len(videoz())-1)
print(num,len(videoz()))



import glob
import os.path
FILES = []
dir = '.'
files = glob.glob(os.path.join(dir, '*.ipynb'))
for file in files:
    print (file)
    FILES.append(file)

!ls -d */

word = "binariz"
WORDin(word)

LOCATIONS=["texture/","tmpseg/","instagram/","output/","polarized/","posterize/","publish/","image_resources/","binary_images/"]

for word in LOCATIONS:
    WORDin(word)
    
 
 

wordlist=["texture/",
"tmpseg/",
"instagram/",
"output/",
"polarized/",
"posterize/",
"publish/",
"image_resources/",
"binary_images/",
"mask",
"palette"]
for Word in wordlist:
    print(Word, end=" - ")

word ="paste"
WORDin(word)

import glob
import os.path
FILES = []
dir = '.'
files = glob.glob(os.path.join(dir, '*.ipynb'))
for file in files:
    print (file)
    FILES.append(file)

def insert(data):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    c.execute("INSERT into PROJECT values (?)", (data,))
    for row in c.execute("SELECT ROWID,* FROM PROJECT ORDER BY ROWID DESC LIMIT 1"):
        print ("\nPOST VERIFIED:\n",row[0],row[1])
    conn.commit()
    conn.close()
    return
# this works data = "this is a test"
# insert(data)
ALL =[]
# string to search in a directory of files

def WORDin(word):
    for filename in FILES:
        with open(filename, 'r') as fp:
            # read all lines in a list
            lines = fp.readlines()
            for line in lines:
                # check if string present on a current line
                if line.find(word) != -1:
                    if len(line)<100:
                        #print('The term '+word+' exists in '+filename+' .\nLineNumber:', lines.index(line),line.replace("\\n",""))
                        data ='The term '+word+' exists in '+filename+' .\nLineNumber:', lines.index(line),line.replace("\\n","")
                        ALL.append(data)
                        #convert the data to a string
                        dataout = str(data).replace("\\n",'')
                        insert(dataout)
#word = 'mask'
#word = "palette"

WORDin(word)
for line in ALL:
    print(line)


print(ALL)

# string to search in file
word = 'import'
filename = "./Twitter-cloud-image-generator-master.ipynb"
with open(filename, 'r') as fp:
    # read all lines in a list
    lines = fp.readlines()
    for line in lines:
        # check if string present on a current line
        if line.find(word) != -1:
            if len(line)<100:
                results = "The term "+word+" exists in "+filename+' Line Number:', lines.index(line),line
                print (results)

%%writefile KEYwords.py
import sys
import sqlite3
def create(database):
    import sqlite3
    conn = sqlite3.connect(database)
    conn.text_factory = str
    c = conn.cursor()
    c.execute("CREATE VIRTUAL TABLE PROJECT using FTS4 (input)")
    conn.commit()
    text = "Database Created"
    return text

def insert(data):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    c.execute("INSERT into PROJECT values (?)", (data,))
    for row in c.execute("SELECT ROWID,* FROM PROJECT ORDER BY ROWID DESC LIMIT 1"):
        print ("\nPOST VERIFIED:\n",row[0],row[1])
    conn.commit()
    conn.close()
    return data

def search(data):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()#for row in c.execute("SELECT ROWID,* FROM PROJECT WHERE input MATCH ?",(data,)):
    #    print ("\nINFO Found Here:",row[0],row[1])
    for row in c.execute("SELECT ROWID,* FROM PROJECT"):
        if data in row[1]:    
            print ("\nINFO Found Here:\n",row[0],row[1])
    #conn.commit()
    #conn.close()
def delete(rowid):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    c.execute("DELETE FROM PROJECT WHERE rowid = ?", (rowid,))
    conn.commit()
    conn.close()
    text = "ROWID "+rowid+" Deleted"
    return text

def main():
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    for row in c.execute("SELECT rowid, * FROM PROJECT"):
        print (row[0],": ",row[1])

def prtmain(filename):
    import sqlite3
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()    
    fn = open(filename, "w")
    conn = sqlite3.connect("keywords.db")
    conn.text_factory = str
    c = conn.cursor()
    for row in c.execute("SELECT rowid, * FROM PROJECT"):
        TEXT = "id:"+str(row[0])+"\n"+str(row[1])
        TEXT = str(TEXT)
        TEXT = TEXT.replace('\\n','\n')
        TEXT = "".join(TEXT)
        fn.write(TEXT+'\n----\n')
    fn.close()
def HELP():
    TXT = """
    -I insert / -D delete / -R read / -H help
    examples:
    Notice the entry is in parenthese.
    -I  to insert "STUFF to be inserted"
    LINK -I "STUFF to be inserted"
    -D to delete where rowid is 3
    LINK -D 3
    Notice the period after -R . 
    -R . read all
    To search for the term "current project"
    LINK -S 3
    -S "current project"
    LINK -R .
    -H help on options
    LINK -H .
    """
    print (TXT)

!ls *.db

from KEYwords import *
database="keywords.db"
create(database)

from KEYwords import *
data = "first entry test"
insert(data)

filename = "Searchable.txt"
prtmain(filename)

data = "strftime(\"binary_images/"
search(data)

from KEYwords import *
main()

for data in ALL:
    data = str(data).replace("\\n",'')
    print(data)
    
    insert(data,)

insert("test data")

from PIL import Image
 
def convertImage(imag):
    img = Image.open(imag)
    img = img.convert("RGBA")
    datas = img.getdata()
    newData = []
    for item in datas:
        if item[0] == 0 and item[1] == 0 and item[2] == 0:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)
 
    img.putdata(newData)
    img.save("junk/New2.png", "PNG")
    print("Successful")
    return img
 
convertImage()

filename = time.strftime("toplayer/"+str(cnt)+"%Y%m%d%H%M%S.jpg")
    

!mkdir toplayer

fromPIL import Image
import time
def convertImage(imag):
    img = Image.open(imag)
    img = img.convert("RGBA")
    datas = img.getdata()
    newData = []
    for item in datas:
        if item[0] == 0 and item[1] == 0 and item[2] == 0:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)
 
    img.putdata(newData)
    filename = time.strftime("toplayer/"+str(cnt)+"%Y%m%d%H%M%S.png")
    img.save(filename, "PNG")

import os
import time
def convertImage(imag):
    img = Image.open(imag)
    img = img.convert("RGBA")
    datas = img.getdata()
    newData = []
    for item in datas:
        if item[0] == 0 and item[1] == 0 and item[2] == 0:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)
 
    img.putdata(newData)
    filename = time.strftime("toplayer/newfolder"+str(cnt)+"%Y%m%d%H%M%S.png")
    img.save(filename, "PNG")
cnt = 0
for Imag in os.listdir("test/NewFolder/"):
    cnt =cnt +1
    imag= "test/NewFolder/"+Imag
    convertImage(imag)



from IPython.display import HTML

HTML(filename="/home/jack/miniconda3/envs/cloned_base/lib/R/doc/html/packages.html")

%%writefile outlineblack.py
"""
USE:
filename1 = '/home/jack/Desktop/Imagedata/0-original-images/07082orig.jpg' 
outfile_png = '/home/jack/Desktop/dockercommands/images/useresult.png'
outlineJ(filename1,outfile_jpg)
outlineP(filename1,outfile_png)

"""
from PIL import Image
import numpy as np
import cv2
import imageio
from FileNameP import FilenameByTime
from pathlib import Path as change_ext
#p = change_ext('mysequence.jpg')
#p.rename(p.with_suffix('.png'))

def auto_canny(image, sigma=0.33):
    # compute the median of the single channel pixel intensities
    v = np.median(image)
    # apply automatic Canny edge detection using the computed median
    lower = int(max(0, (1.0 - sigma) * v))
    upper = int(min(255, (1.0 + sigma) * v))
    edged = cv2.Canny(image, lower, upper)
    # return the edged image
    return edged

#image = cv2.imread('mahotastest/orig-color.png')
def change_extension(orig_file,new_extension):
    p = change_ext(orig_file)
    new_name = p.rename(p.with_suffix(new_extension))
    return new_name
    
def outlineJ(filename1,outfile_jpg):
    image = cv2.imread(filename1)
    edged = auto_canny(image, sigma=0.33)
    inverted = cv2.bitwise_not(edged)
    cv2.imwrite("img/mahotastest/temp2.png", inverted)
    cv2.imwrite(FilenameByTime("img/mahotastest/"), inverted)
    # Open Front Image
    #frontimage = Image.open('mahotastest/inverted-bitwise-note3_6.png').convert("1")
    frontimage = Image.open('img/mahotastest/temp2.png').convert("1")
    frontImage = frontimage.convert("RGBA")
    datas = frontImage.getdata()
    newData = []
    for item in datas:
        if item[0] == 255 and item[1] == 255 and item[2] == 255:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)

    frontImage.putdata(newData)
    # Open Background Image
    background = Image.open(filename1)
    # Calculate width to be at the center
    width = (frontimage.width - frontimage.width) // 2
    # Calculate height to be at the center
    height = (frontimage.height - frontimage.height) // 2
    # Paste the frontImage at (width, height)
    background.paste(frontImage, (width, height), frontImage)
    # Save this image
    background.save(outfile, format="jpg")
    savefile = FilenameByTime("img/mahotastest/")
    background.save(savefile, format="jpg")
    #background = background.convert("RGB")
    return background
def outlineP(filename1,outfile_png):
    image = cv2.imread(filename1)
    edged = auto_canny(image, sigma=0.33)
    inverted = cv2.bitwise_not(edged)
    cv2.imwrite("img/mahotastest/temp2.png", inverted)
    cv2.imwrite(FilenameByTime("img/mahotastest/"), inverted)
    # Open Front Image
    #frontimage = Image.open('mahotastest/inverted-bitwise-note3_6.png').convert("1")
    frontimage = Image.open('img/mahotastest/temp2.png').convert("1")
    frontImage = frontimage.convert("RGBA")
    datas = frontImage.getdata()
    newData = []
    for item in datas:
        if item[0] == 255 and item[1] == 255 and item[2] == 255:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)

    frontImage.putdata(newData)
    # Open Background Image
    background = Image.open(filename1)
    # Calculate width to be at the center
    width = (frontimage.width - frontimage.width) // 2
    # Calculate height to be at the center
    height = (frontimage.height - frontimage.height) // 2
    # Paste the frontImage at (width, height)
    background.paste(frontImage, (width, height), frontImage)
    # Save this image
    background.save(outfile_png, format="png")
    savefile = FilenameByTime("img/mahotastest/")
    background.save(savefile, format="png")
    #background = background.convert("RGB")
    return background

!locate twitteR

from outlineblack import *
filename1 = 'img/everything/2022-10-26-07-36_seed_1311.png' 
outfile_png = 'img/handpicked/2022-10-26-07-36_seed_1311-ol.png'
#outlineJ(filename1,outfile_jpg)
outlineP(filename1,outfile_png)


!pwd

!ls img/everything 

!ls img/handpicked

http://zevross.com/blog/2017/06/19/tips-and-tricks-for-working-with-images-and-figures-in-r-markdown-documents/

!devtools::install_github("ropensci/plotly")

%%writefile Test.r
# Function definition
# To check n is divisible by 5 or not
divisbleBy5 <- function(n){
  if(n %% 5 == 0)
  {
    return("number is divisible by 5")
  }
  else 
  {
    return("number is not divisible by 5")
  }
}
   
# Function call
divisbleBy5(100)
divisbleBy5(4)
divisbleBy5(20.0)




!ls -d */

!ls home/www/images

from IPython.display import HTML

HTML(filename="/home/jack/miniconda3/envs/cloned_base/lib/R/doc/html/packages.html")

%%writefile outlineblack.py
"""
USE:
filename1 = '/home/jack/Desktop/Imagedata/0-original-images/07082orig.jpg' 
outfile_png = '/home/jack/Desktop/dockercommands/images/useresult.png'
outlineJ(filename1,outfile_jpg)
outlineP(filename1,outfile_png)

"""
from PIL import Image
import numpy as np
import cv2
import imageio
from FileNameP import FilenameByTime
from pathlib import Path as change_ext
#p = change_ext('mysequence.jpg')
#p.rename(p.with_suffix('.png'))

def auto_canny(image, sigma=0.33):
    # compute the median of the single channel pixel intensities
    v = np.median(image)
    # apply automatic Canny edge detection using the computed median
    lower = int(max(0, (1.0 - sigma) * v))
    upper = int(min(255, (1.0 + sigma) * v))
    edged = cv2.Canny(image, lower, upper)
    # return the edged image
    return edged

#image = cv2.imread('mahotastest/orig-color.png')
def change_extension(orig_file,new_extension):
    p = change_ext(orig_file)
    new_name = p.rename(p.with_suffix(new_extension))
    return new_name
    
def outlineJ(filename1,outfile_jpg):
    image = cv2.imread(filename1)
    edged = auto_canny(image, sigma=0.33)
    inverted = cv2.bitwise_not(edged)
    cv2.imwrite("img/mahotastest/temp2.png", inverted)
    cv2.imwrite(FilenameByTime("img/mahotastest/"), inverted)
    # Open Front Image
    #frontimage = Image.open('mahotastest/inverted-bitwise-note3_6.png').convert("1")
    frontimage = Image.open('img/mahotastest/temp2.png').convert("1")
    frontImage = frontimage.convert("RGBA")
    datas = frontImage.getdata()
    newData = []
    for item in datas:
        if item[0] == 255 and item[1] == 255 and item[2] == 255:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)

    frontImage.putdata(newData)
    # Open Background Image
    background = Image.open(filename1)
    # Calculate width to be at the center
    width = (frontimage.width - frontimage.width) // 2
    # Calculate height to be at the center
    height = (frontimage.height - frontimage.height) // 2
    # Paste the frontImage at (width, height)
    background.paste(frontImage, (width, height), frontImage)
    # Save this image
    background.save(outfile, format="jpg")
    savefile = FilenameByTime("img/mahotastest/")
    background.save(savefile, format="jpg")
    #background = background.convert("RGB")
    return background
def outlineP(filename1,outfile_png):
    image = cv2.imread(filename1)
    edged = auto_canny(image, sigma=0.33)
    inverted = cv2.bitwise_not(edged)
    cv2.imwrite("img/mahotastest/temp2.png", inverted)
    cv2.imwrite(FilenameByTime("img/mahotastest/"), inverted)
    # Open Front Image
    #frontimage = Image.open('mahotastest/inverted-bitwise-note3_6.png').convert("1")
    frontimage = Image.open('img/mahotastest/temp2.png').convert("1")
    frontImage = frontimage.convert("RGBA")
    datas = frontImage.getdata()
    newData = []
    for item in datas:
        if item[0] == 255 and item[1] == 255 and item[2] == 255:
            newData.append((255, 255, 255, 0))
        else:
            newData.append(item)

    frontImage.putdata(newData)
    # Open Background Image
    background = Image.open(filename1)
    # Calculate width to be at the center
    width = (frontimage.width - frontimage.width) // 2
    # Calculate height to be at the center
    height = (frontimage.height - frontimage.height) // 2
    # Paste the frontImage at (width, height)
    background.paste(frontImage, (width, height), frontImage)
    # Save this image
    background.save(outfile_png, format="png")
    savefile = FilenameByTime("img/mahotastest/")
    background.save(savefile, format="png")
    #background = background.convert("RGB")
    return background

!locate twitteR

from outlineblack import *
filename1 = 'img/everything/2022-10-26-07-36_seed_1311.png' 
outfile_png = 'img/handpicked/2022-10-26-07-36_seed_1311-ol.png'
#outlineJ(filename1,outfile_jpg)
outlineP(filename1,outfile_png)


!pwd

!ls img/everything 

!ls img/handpicked

http://zevross.com/blog/2017/06/19/tips-and-tricks-for-working-with-images-and-figures-in-r-markdown-documents/

!devtools::install_github("ropensci/plotly")

%%writefile Test.r
# Function definition
# To check n is divisible by 5 or not
divisbleBy5 <- function(n){
  if(n %% 5 == 0)
  {
    return("number is divisible by 5")
  }
  else 
  {
    return("number is not divisible by 5")
  }
}
   
# Function call
divisbleBy5(100)
divisbleBy5(4)
divisbleBy5(20.0)




import os
os.chdir("/home/jack/Desktop/dockercommands")

#!/home/jack/miniconda3/envs/cloned_base/bin/python
import cv2
import numpy as np
import time
import random
import twython
from twython import Twython
import time
import shutil
import os
from random import randint
from PIL import Image, ImageFont, ImageDraw, ImageFilter
from skimage import io
from randtext import randTXT
STR = randTXT()
#print (STR)
import cv2
from PIL import Image
import time
import random
randomframes = []
images=[]
count = 0
def vid2img(filename, count):
    vidcap = cv2.VideoCapture(filename)
    # get total number of frames
    totalFrames = vidcap.get(cv2.CAP_PROP_FRAME_COUNT)

    randomFrameNumber=random.randint(0, totalFrames)
    randomframes.append(randomFrameNumber)
    # set frame position
    vidcap.set(cv2.CAP_PROP_POS_FRAMES,randomFrameNumber)
    success, image = vidcap.read()
    if success:
        print(".",end="|")
        cv2.imwrite("junk/archived-images.jpg", image)
    IM = Image.open("junk/archived-images.jpg")
    im = IM.resize((720,480))
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filename = "onevid/"+str(count)+".jpg"
    images.append(filename)
    im.save(filename)
    nim = Image.open(filename)
    print(filename)
    return nim
#/home/jack/Desktop/dockercommands/complete-videos/24sept-output-slow-3per-sec-jpgs.mp4
#filename ="/home/jack/Desktop/dockercommands/complete-videos/24sept-output-slow-3per-sec-jpgs.mp4"
#filename ="/media/jack/HDD500/LinuxtoyboxVideos/test001.mp4"
#filename ="/media/jack/HDD500/LinuxtoyboxVideos/Man_Ray_Style_Art_Video_Bot_Generated_Images_Us.mp4"
for count in range(0,3):
    vid2img(filename, count)
    
print(randomframes)    

def creatmased(count):
    dim = (720, 480)
    
    img1 = cv2.imread("onevid/0.jpg")
    im1 = cv2.resize(img1, dim, interpolation = cv2.INTER_AREA)

    img2 = cv2.imread(images[1])
    im2 = cv2.resize(img2, dim, interpolation = cv2.INTER_AREA)
    # read saliency mask as grayscale and resize to same size as img1
    
    mask = io.imread("onevid/1.jpg")
    #conn = cv2.imread(images[2])
    #cv2.imwrite("onevid/3.jpg", conn)
    mask = io.imread(images[2])
    mask = cv2.imread("onevid/2.jpg")
    mask = cv2.cvtColor(mask, cv2.COLOR_BGR2GRAY)
    mask = cv2.resize(mask, dim, interpolation = cv2.INTER_AREA)

    # add img1 and img2
    img12 = cv2.add(img1, img2)

    # get mean of mask and shift mean to mid-gray
    # desirable for hard light compositing
    # add bias as needed
    mean = np.mean(mask)
    bias = -32
    shift = 128 - mean + bias
    mask = cv2.add(mask, shift)
    mask = cv2.merge([mask,mask,mask])

    # threshold mask at mid gray and convert to 3 channels
    # (needed to use as src < 0.5 "if" condition in hard light)
    thresh = cv2.threshold(mask, 128, 255, cv2.THRESH_BINARY)[1]

    # do hard light composite of img12 and mask
    # see CSS specs at https://www.w3.org/TR/compositing-1/#blendinghardlight
    img12f = img12.astype(np.uint8)/255
    maskf =  mask.astype(np.uint8)/255
    threshf =  thresh.astype(np.uint8)/255
    threshf_inv = 1 - threshf
    low = 2.0 * img12f * maskf
    high = 1 - 2.0 * (1-img12f) * (1-maskf)
    result = ( 255 * (low * threshf_inv + high * threshf) ).clip(0, 255).astype(np.uint8)
    timestr = time.strftime("%Y%m%d-%H%M%S")
    file = "onevid/"+timestr+"_"+str(count)+".png"
    cv2.imwrite(file, result)
    cv2.imwrite("onevid/temp.png", img1)
    text = "NFT TwitterBot Project"
    
    # Create font
    font = ImageFont.truetype('/snap/gnome-3-38-2004/99/usr/share/fonts/\
    truetype/dejavu/DejaVuSans-Bold.ttf', 18)
    # Create piece of canvas to draw text on and blur
    imgsize = Image.open("onevid/temp.png")
    imgsize=imgsize.resize((720,480), Image.NEAREST)
    bg= imgsize
    ##overlay ="/home/jack/Desktop/dockercommands/toplayer/3020220925140724.png"
    #mask=Image.open(overlay)#.convert('RGBA')
    #imgsize.paste(mask, (0,0), mask=mask)  
    #overlay ="/home/jack/Desktop/dockercommands/toplayer/14320220925140747.png"
    #overlay ="/home/jack/Desktop/dockercommands/toplayer/23620220925140804.png"
    #mask=Image.open(overlay).convert('RGBA')
    #imgsize.paste(mask, (0,0), mask=mask)      
    #STR = randTXT()
    Hash = ["#AIart #Tensorflow #twitme #100DaysOfCode\n",
            "#styletransfer #PythonGraphics #PIL\n",
            "#NFTartist #NFTProject #NEARnft #nearNFTs\n",
            "#NFT #NFTs #NFTCommunity #NFTdrop #nftart\n",
            "#CreativeCoding #AI #genart","#p5js #Generative\n",
            "#codefor30days #Python #100DaysOfCode\n",
            "#Python #100DaysOfCode #PythonBots #twitme\n"]
    hashnum = randint(0,len(Hash)-1)
    hashs =Hash[hashnum] 
    # add the hash to STR generated with randTXT()

    # Open background image and work out centre
    x = 720//2
    y = 480//2

    # The text we want to add
    #text = "NFT TwitterBot Project"
    text = hashs
    
    
    
    x = imgsize.width//2
    y = imgsize.height//2
    blurred = Image.new('RGBA', imgsize.size)
    draw = ImageDraw.Draw(blurred)
    """
    draw.text(xy=(x,y+230), text=text, fill='white', font=font, anchor='mm')
    draw.text(xy=(x,y+231), text=text, fill='white', font=font, anchor='mm')
    draw.text(xy=(x,y+232), text=text, fill='white', font=font, anchor='mm')
    draw.text(xy=(x,y+230), text=text, fill='white', font=font, anchor='mm')
    draw.text(xy=(x,y+231), text=text, fill='white', font=font, anchor='mm')
    draw.text(xy=(x,y+232), text=text, fill='white', font=font, anchor='mm')
    blurred = blurred.filter(ImageFilter.BoxBlur(2))
    # Paste soft text onto background
    imgsize.paste(blurred,blurred)
    # Draw on sharp text
    draw = ImageDraw.Draw(imgsize)
    draw.text(xy=(x,y+231), text=text, fill='black', font=font, anchor='mm') 
    """
    CH = randint(0,1)
    if CH == 0:COLor = ["white","black"]
    elif CH == 1:COLor = ["black","white"]  
    draw.text(xy=(x+20,y+230), text=text, fill=COLor[0], font=font, anchor='mm')
    draw.text(xy=(x+21,y+231), text=text, fill=COLor[0], font=font, anchor='mm')
    draw.text(xy=(x+22,y+229), text=text, fill=COLor[0], font=font, anchor='mm')
    draw.text(xy=(x+20,y+228), text=text, fill=COLor[0], font=font, anchor='mm')
    blurred = blurred.filter(ImageFilter.BoxBlur(2))
    # Paste soft text onto background
    bg.paste(blurred,blurred)
    # Draw on sharp text
    draw = ImageDraw.Draw(bg)
    draw.text(xy=(x+20,y+230), text=text, fill=COLor[1], font=font, anchor='mm')

    
    
    
    #postage = ["perferations.png","perferations+.png","usa-perferations.png","usar-perferations.png","usal-perferations.png"]
    #Num = randint( 0, len(postage)-1)
    #BOARDER = postage[Num]
    frames =["wood-blur-frame.png","frames.png","lined-frame.png","black-blur-frame.png", "white-blur-frame.png","beige-blur-frame.png","frame-lite.png"]
    Num = randint( 0, len(frames)-1)
    BOARDER = frames[Num]

    
    #overlay ="/home/jack/Desktop/dockercommands/toplayer/4020220925140726.png"
    #mask=Image.open(overlay).convert('RGBA')
    #imgsize.paste(mask, (0,0), mask=mask)  
    
    
    
    mask=Image.open(BOARDER).convert('RGBA') 
    imgsize.paste(mask, (0,0), mask=mask)
    # save results
    timestr = time.strftime("%Y%m%d-%H%M%S")
    file = "onevid/"+timestr+"_"+str(count+1)+".png"
    
    imgsize.save(file)
    imgsize.save("onevid/temp.png")
    #im = Image.open(filename)
    #im
    STR = randTXT()
    STR = hashs+STR
    STR= STR[:240]
    print(STR)
    return (STR)
#for count in range(0,1500):
count = 1
creatmased(count)
print(count,end=".")

from OutlineImage import outlineP
filename1 = "onevid/temp.png" 
outfile_png = "onevid/temp.png" 
outlineP(filename1,outfile_png)


CONSUMER_KEY = 'APIkey()[0]'
CONSUMER_SECRET = 'APIkey()[1]'
ACCESS_KEY = 'APIkey()[2]'
ACCESS_SECRET = 'APIkey()[3]'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
PATH = "onevid/temp.png"
#PATH = "Screenshot_2022-09-29_23-06-02.png"
photo = open(PATH,'rb')

Hash = ["#AIart #Tensorflow #twitme #100DaysOfCode\n",     
        "#styletransfer #PythonGraphics #PIL\n",
        "#NFTartist #NFTProject #NEARnft #nearNFTs\n",
        "#NFT #NFTs #NFTCommunity #NFTdrop #nftart\n",
        "#CreativeCoding #AI #genart","#p5js #Generative\n",
        "#codefor30days #Python #100DaysOfCode\n",
        "#Python #100DaysOfCode #PythonBots #twitme\n"]
hashnum = randint(0,len(Hash)-1)
hashs =Hash[hashnum] 
STR = randTXT()
STR = hashs+STR
STR= STR[:240]
print("STR: ",STR)
#response = twitter.upload_media(media=photo)
#twitter.update_status(status=STR, media_ids=[response['media_id']])

from PIL import Image
File = "onevid/temp.png"
viewim = Image.open(File)
viewim





import vispy
back = ['pyqt4', 'pyqt5', 'pyside','jupyter_rfb','pyglet', 'glfw', 'sdl2', 'wx', 'egl', 'osmesa', 'ipynb_webgl', '_test']
vispy.use('pyqt5')

import sys

from vispy import app, gloo
from vispy.visuals import CubeVisual, transforms


class Canvas(app.Canvas):
    def __init__(self):
        app.Canvas.__init__(self, 'Cube', keys='interactive',
                            size=(400, 400))

        self.cube = CubeVisual((1.0, 0.5, 0.25), color='red', edge_color="k")
        self.theta = 0
        self.phi = 0

        # Create a TransformSystem that will tell the visual how to draw
        self.cube_transform = transforms.MatrixTransform()
        self.cube.transform = self.cube_transform

        self.timer = app.Timer('auto', connect=self.on_timer, start=True)

    def on_resize(self, event):
        # Set canvas viewport and reconfigure visual transforms to match.
        vp = (0, 0, self.physical_size[0], self.physical_size[1])
        self.context.set_viewport(*vp)
        self.cube.transforms.configure(canvas=self, viewport=vp)

    def on_draw(self, event):
        gloo.set_viewport(0, 0, *self.physical_size)
        gloo.clear('white', depth=True)

        self.cube.draw()

    def on_timer(self, event):
        self.theta += .5
        self.phi += .5
        self.cube_transform.reset()
        self.cube_transform.rotate(self.theta, (0, 0, 1))
        self.cube_transform.rotate(self.phi, (0, 1, 0))
        self.cube_transform.scale((100, 100, 0.001))
        self.cube_transform.translate((200, 200))
        self.update()


win = Canvas()
win.show()
win

from fractions import gcd

from math import gcd

# %load /home/jack/miniconda3/envs/cloned_base/lib/python3.9/fractions.py
# Originally contributed by Sjoerd Mullender.
# Significantly modified by Jeffrey Yasskin <jyasskin at gmail.com>.

"""Fraction, infinite-precision, real numbers."""

from decimal import Decimal
import math
import numbers
import operator
import re
import sys

__all__ = ['Fraction']


# Constants related to the hash implementation;  hash(x) is based
# on the reduction of x modulo the prime _PyHASH_MODULUS.
_PyHASH_MODULUS = sys.hash_info.modulus
# Value to be used for rationals that reduce to infinity modulo
# _PyHASH_MODULUS.
_PyHASH_INF = sys.hash_info.inf

_RATIONAL_FORMAT = re.compile(r"""
    \A\s*                      # optional whitespace at the start, then
    (?P<sign>[-+]?)            # an optional sign, then
    (?=\d|\.\d)                # lookahead for digit or .digit
    (?P<num>\d*)               # numerator (possibly empty)
    (?:                        # followed by
       (?:/(?P<denom>\d+))?    # an optional denominator
    |                          # or
       (?:\.(?P<decimal>\d*))? # an optional fractional part
       (?:E(?P<exp>[-+]?\d+))? # and optional exponent
    )
    \s*\Z                      # and optional whitespace to finish
""", re.VERBOSE | re.IGNORECASE)


class Fraction(numbers.Rational):
    """This class implements rational numbers.

    In the two-argument form of the constructor, Fraction(8, 6) will
    produce a rational number equivalent to 4/3. Both arguments must
    be Rational. The numerator defaults to 0 and the denominator
    defaults to 1 so that Fraction(3) == 3 and Fraction() == 0.

    Fractions can also be constructed from:

      - numeric strings similar to those accepted by the
        float constructor (for example, '-2.3' or '1e10')

      - strings of the form '123/456'

      - float and Decimal instances

      - other Rational instances (including integers)

    """

    __slots__ = ('_numerator', '_denominator')

    # We're immutable, so use __new__ not __init__
    def __new__(cls, numerator=0, denominator=None, *, _normalize=True):
        """Constructs a Rational.

        Takes a string like '3/2' or '1.5', another Rational instance, a
        numerator/denominator pair, or a float.

        Examples
        --------

        >>> Fraction(10, -8)
        Fraction(-5, 4)
        >>> Fraction(Fraction(1, 7), 5)
        Fraction(1, 35)
        >>> Fraction(Fraction(1, 7), Fraction(2, 3))
        Fraction(3, 14)
        >>> Fraction('314')
        Fraction(314, 1)
        >>> Fraction('-35/4')
        Fraction(-35, 4)
        >>> Fraction('3.1415') # conversion from numeric string
        Fraction(6283, 2000)
        >>> Fraction('-47e-2') # string may include a decimal exponent
        Fraction(-47, 100)
        >>> Fraction(1.47)  # direct construction from float (exact conversion)
        Fraction(6620291452234629, 4503599627370496)
        >>> Fraction(2.25)
        Fraction(9, 4)
        >>> Fraction(Decimal('1.47'))
        Fraction(147, 100)

        """
        self = super(Fraction, cls).__new__(cls)

        if denominator is None:
            if type(numerator) is int:
                self._numerator = numerator
                self._denominator = 1
                return self

            elif isinstance(numerator, numbers.Rational):
                self._numerator = numerator.numerator
                self._denominator = numerator.denominator
                return self

            elif isinstance(numerator, (float, Decimal)):
                # Exact conversion
                self._numerator, self._denominator = numerator.as_integer_ratio()
                return self

            elif isinstance(numerator, str):
                # Handle construction from strings.
                m = _RATIONAL_FORMAT.match(numerator)
                if m is None:
                    raise ValueError('Invalid literal for Fraction: %r' %
                                     numerator)
                numerator = int(m.group('num') or '0')
                denom = m.group('denom')
                if denom:
                    denominator = int(denom)
                else:
                    denominator = 1
                    decimal = m.group('decimal')
                    if decimal:
                        scale = 10**len(decimal)
                        numerator = numerator * scale + int(decimal)
                        denominator *= scale
                    exp = m.group('exp')
                    if exp:
                        exp = int(exp)
                        if exp >= 0:
                            numerator *= 10**exp
                        else:
                            denominator *= 10**-exp
                if m.group('sign') == '-':
                    numerator = -numerator

            else:
                raise TypeError("argument should be a string "
                                "or a Rational instance")

        elif type(numerator) is int is type(denominator):
            pass # *very* normal case

        elif (isinstance(numerator, numbers.Rational) and
            isinstance(denominator, numbers.Rational)):
            numerator, denominator = (
                numerator.numerator * denominator.denominator,
                denominator.numerator * numerator.denominator
                )
        else:
            raise TypeError("both arguments should be "
                            "Rational instances")

        if denominator == 0:
            raise ZeroDivisionError('Fraction(%s, 0)' % numerator)
        if _normalize:
            g = math.gcd(numerator, denominator)
            if denominator < 0:
                g = -g
            numerator //= g
            denominator //= g
        self._numerator = numerator
        self._denominator = denominator
        return self

    @classmethod
    def from_float(cls, f):
        """Converts a finite float to a rational number, exactly.

        Beware that Fraction.from_float(0.3) != Fraction(3, 10).

        """
        if isinstance(f, numbers.Integral):
            return cls(f)
        elif not isinstance(f, float):
            raise TypeError("%s.from_float() only takes floats, not %r (%s)" %
                            (cls.__name__, f, type(f).__name__))
        return cls(*f.as_integer_ratio())

    @classmethod
    def from_decimal(cls, dec):
        """Converts a finite Decimal instance to a rational number, exactly."""
        from decimal import Decimal
        if isinstance(dec, numbers.Integral):
            dec = Decimal(int(dec))
        elif not isinstance(dec, Decimal):
            raise TypeError(
                "%s.from_decimal() only takes Decimals, not %r (%s)" %
                (cls.__name__, dec, type(dec).__name__))
        return cls(*dec.as_integer_ratio())

    def as_integer_ratio(self):
        """Return the integer ratio as a tuple.

        Return a tuple of two integers, whose ratio is equal to the
        Fraction and with a positive denominator.
        """
        return (self._numerator, self._denominator)

    def limit_denominator(self, max_denominator=1000000):
        """Closest Fraction to self with denominator at most max_denominator.

        >>> Fraction('3.141592653589793').limit_denominator(10)
        Fraction(22, 7)
        >>> Fraction('3.141592653589793').limit_denominator(100)
        Fraction(311, 99)
        >>> Fraction(4321, 8765).limit_denominator(10000)
        Fraction(4321, 8765)

        """
        # Algorithm notes: For any real number x, define a *best upper
        # approximation* to x to be a rational number p/q such that:
        #
        #   (1) p/q >= x, and
        #   (2) if p/q > r/s >= x then s > q, for any rational r/s.
        #
        # Define *best lower approximation* similarly.  Then it can be
        # proved that a rational number is a best upper or lower
        # approximation to x if, and only if, it is a convergent or
        # semiconvergent of the (unique shortest) continued fraction
        # associated to x.
        #
        # To find a best rational approximation with denominator <= M,
        # we find the best upper and lower approximations with
        # denominator <= M and take whichever of these is closer to x.
        # In the event of a tie, the bound with smaller denominator is
        # chosen.  If both denominators are equal (which can happen
        # only when max_denominator == 1 and self is midway between
        # two integers) the lower bound---i.e., the floor of self, is
        # taken.

        if max_denominator < 1:
            raise ValueError("max_denominator should be at least 1")
        if self._denominator <= max_denominator:
            return Fraction(self)

        p0, q0, p1, q1 = 0, 1, 1, 0
        n, d = self._numerator, self._denominator
        while True:
            a = n//d
            q2 = q0+a*q1
            if q2 > max_denominator:
                break
            p0, q0, p1, q1 = p1, q1, p0+a*p1, q2
            n, d = d, n-a*d

        k = (max_denominator-q0)//q1
        bound1 = Fraction(p0+k*p1, q0+k*q1)
        bound2 = Fraction(p1, q1)
        if abs(bound2 - self) <= abs(bound1-self):
            return bound2
        else:
            return bound1

    @property
    def numerator(a):
        return a._numerator

    @property
    def denominator(a):
        return a._denominator

    def __repr__(self):
        """repr(self)"""
        return '%s(%s, %s)' % (self.__class__.__name__,
                               self._numerator, self._denominator)

    def __str__(self):
        """str(self)"""
        if self._denominator == 1:
            return str(self._numerator)
        else:
            return '%s/%s' % (self._numerator, self._denominator)

    def _operator_fallbacks(monomorphic_operator, fallback_operator):
        """Generates forward and reverse operators given a purely-rational
        operator and a function from the operator module.

        Use this like:
        __op__, __rop__ = _operator_fallbacks(just_rational_op, operator.op)

        In general, we want to implement the arithmetic operations so
        that mixed-mode operations either call an implementation whose
        author knew about the types of both arguments, or convert both
        to the nearest built in type and do the operation there. In
        Fraction, that means that we define __add__ and __radd__ as:

            def __add__(self, other):
                # Both types have numerators/denominator attributes,
                # so do the operation directly
                if isinstance(other, (int, Fraction)):
                    return Fraction(self.numerator * other.denominator +
                                    other.numerator * self.denominator,
                                    self.denominator * other.denominator)
                # float and complex don't have those operations, but we
                # know about those types, so special case them.
                elif isinstance(other, float):
                    return float(self) + other
                elif isinstance(other, complex):
                    return complex(self) + other
                # Let the other type take over.
                return NotImplemented

            def __radd__(self, other):
                # radd handles more types than add because there's
                # nothing left to fall back to.
                if isinstance(other, numbers.Rational):
                    return Fraction(self.numerator * other.denominator +
                                    other.numerator * self.denominator,
                                    self.denominator * other.denominator)
                elif isinstance(other, Real):
                    return float(other) + float(self)
                elif isinstance(other, Complex):
                    return complex(other) + complex(self)
                return NotImplemented


        There are 5 different cases for a mixed-type addition on
        Fraction. I'll refer to all of the above code that doesn't
        refer to Fraction, float, or complex as "boilerplate". 'r'
        will be an instance of Fraction, which is a subtype of
        Rational (r : Fraction <: Rational), and b : B <:
        Complex. The first three involve 'r + b':

            1. If B <: Fraction, int, float, or complex, we handle
               that specially, and all is well.
            2. If Fraction falls back to the boilerplate code, and it
               were to return a value from __add__, we'd miss the
               possibility that B defines a more intelligent __radd__,
               so the boilerplate should return NotImplemented from
               __add__. In particular, we don't handle Rational
               here, even though we could get an exact answer, in case
               the other type wants to do something special.
            3. If B <: Fraction, Python tries B.__radd__ before
               Fraction.__add__. This is ok, because it was
               implemented with knowledge of Fraction, so it can
               handle those instances before delegating to Real or
               Complex.

        The next two situations describe 'b + r'. We assume that b
        didn't know about Fraction in its implementation, and that it
        uses similar boilerplate code:

            4. If B <: Rational, then __radd_ converts both to the
               builtin rational type (hey look, that's us) and
               proceeds.
            5. Otherwise, __radd__ tries to find the nearest common
               base ABC, and fall back to its builtin type. Since this
               class doesn't subclass a concrete type, there's no
               implementation to fall back to, so we need to try as
               hard as possible to return an actual value, or the user
               will get a TypeError.

        """
        def forward(a, b):
            if isinstance(b, (int, Fraction)):
                return monomorphic_operator(a, b)
            elif isinstance(b, float):
                return fallback_operator(float(a), b)
            elif isinstance(b, complex):
                return fallback_operator(complex(a), b)
            else:
                return NotImplemented
        forward.__name__ = '__' + fallback_operator.__name__ + '__'
        forward.__doc__ = monomorphic_operator.__doc__

        def reverse(b, a):
            if isinstance(a, numbers.Rational):
                # Includes ints.
                return monomorphic_operator(a, b)
            elif isinstance(a, numbers.Real):
                return fallback_operator(float(a), float(b))
            elif isinstance(a, numbers.Complex):
                return fallback_operator(complex(a), complex(b))
            else:
                return NotImplemented
        reverse.__name__ = '__r' + fallback_operator.__name__ + '__'
        reverse.__doc__ = monomorphic_operator.__doc__

        return forward, reverse

    def _add(a, b):
        """a + b"""
        da, db = a.denominator, b.denominator
        return Fraction(a.numerator * db + b.numerator * da,
                        da * db)

    __add__, __radd__ = _operator_fallbacks(_add, operator.add)

    def _sub(a, b):
        """a - b"""
        da, db = a.denominator, b.denominator
        return Fraction(a.numerator * db - b.numerator * da,
                        da * db)

    __sub__, __rsub__ = _operator_fallbacks(_sub, operator.sub)

    def _mul(a, b):
        """a * b"""
        return Fraction(a.numerator * b.numerator, a.denominator * b.denominator)

    __mul__, __rmul__ = _operator_fallbacks(_mul, operator.mul)

    def _div(a, b):
        """a / b"""
        return Fraction(a.numerator * b.denominator,
                        a.denominator * b.numerator)

    __truediv__, __rtruediv__ = _operator_fallbacks(_div, operator.truediv)

    def _floordiv(a, b):
        """a // b"""
        return (a.numerator * b.denominator) // (a.denominator * b.numerator)

    __floordiv__, __rfloordiv__ = _operator_fallbacks(_floordiv, operator.floordiv)

    def _divmod(a, b):
        """(a // b, a % b)"""
        da, db = a.denominator, b.denominator
        div, n_mod = divmod(a.numerator * db, da * b.numerator)
        return div, Fraction(n_mod, da * db)

    __divmod__, __rdivmod__ = _operator_fallbacks(_divmod, divmod)

    def _mod(a, b):
        """a % b"""
        da, db = a.denominator, b.denominator
        return Fraction((a.numerator * db) % (b.numerator * da), da * db)

    __mod__, __rmod__ = _operator_fallbacks(_mod, operator.mod)

    def __pow__(a, b):
        """a ** b

        If b is not an integer, the result will be a float or complex
        since roots are generally irrational. If b is an integer, the
        result will be rational.

        """
        if isinstance(b, numbers.Rational):
            if b.denominator == 1:
                power = b.numerator
                if power >= 0:
                    return Fraction(a._numerator ** power,
                                    a._denominator ** power,
                                    _normalize=False)
                elif a._numerator >= 0:
                    return Fraction(a._denominator ** -power,
                                    a._numerator ** -power,
                                    _normalize=False)
                else:
                    return Fraction((-a._denominator) ** -power,
                                    (-a._numerator) ** -power,
                                    _normalize=False)
            else:
                # A fractional power will generally produce an
                # irrational number.
                return float(a) ** float(b)
        else:
            return float(a) ** b

    def __rpow__(b, a):
        """a ** b"""
        if b._denominator == 1 and b._numerator >= 0:
            # If a is an int, keep it that way if possible.
            return a ** b._numerator

        if isinstance(a, numbers.Rational):
            return Fraction(a.numerator, a.denominator) ** b

        if b._denominator == 1:
            return a ** b._numerator

        return a ** float(b)

    def __pos__(a):
        """+a: Coerces a subclass instance to Fraction"""
        return Fraction(a._numerator, a._denominator, _normalize=False)

    def __neg__(a):
        """-a"""
        return Fraction(-a._numerator, a._denominator, _normalize=False)

    def __abs__(a):
        """abs(a)"""
        return Fraction(abs(a._numerator), a._denominator, _normalize=False)

    def __trunc__(a):
        """trunc(a)"""
        if a._numerator < 0:
            return -(-a._numerator // a._denominator)
        else:
            return a._numerator // a._denominator

    def __floor__(a):
        """math.floor(a)"""
        return a.numerator // a.denominator

    def __ceil__(a):
        """math.ceil(a)"""
        # The negations cleverly convince floordiv to return the ceiling.
        return -(-a.numerator // a.denominator)

    def __round__(self, ndigits=None):
        """round(self, ndigits)

        Rounds half toward even.
        """
        if ndigits is None:
            floor, remainder = divmod(self.numerator, self.denominator)
            if remainder * 2 < self.denominator:
                return floor
            elif remainder * 2 > self.denominator:
                return floor + 1
            # Deal with the half case:
            elif floor % 2 == 0:
                return floor
            else:
                return floor + 1
        shift = 10**abs(ndigits)
        # See _operator_fallbacks.forward to check that the results of
        # these operations will always be Fraction and therefore have
        # round().
        if ndigits > 0:
            return Fraction(round(self * shift), shift)
        else:
            return Fraction(round(self / shift) * shift)

    def __hash__(self):
        """hash(self)"""

        # To make sure that the hash of a Fraction agrees with the hash
        # of a numerically equal integer, float or Decimal instance, we
        # follow the rules for numeric hashes outlined in the
        # documentation.  (See library docs, 'Built-in Types').

        try:
            dinv = pow(self._denominator, -1, _PyHASH_MODULUS)
        except ValueError:
            # ValueError means there is no modular inverse.
            hash_ = _PyHASH_INF
        else:
            # The general algorithm now specifies that the absolute value of
            # the hash is
            #    (|N| * dinv) % P
            # where N is self._numerator and P is _PyHASH_MODULUS.  That's
            # optimized here in two ways:  first, for a non-negative int i,
            # hash(i) == i % P, but the int hash implementation doesn't need
            # to divide, and is faster than doing % P explicitly.  So we do
            #    hash(|N| * dinv)
            # instead.  Second, N is unbounded, so its product with dinv may
            # be arbitrarily expensive to compute.  The final answer is the
            # same if we use the bounded |N| % P instead, which can again
            # be done with an int hash() call.  If 0 <= i < P, hash(i) == i,
            # so this nested hash() call wastes a bit of time making a
            # redundant copy when |N| < P, but can save an arbitrarily large
            # amount of computation for large |N|.
            hash_ = hash(hash(abs(self._numerator)) * dinv)
        result = hash_ if self._numerator >= 0 else -hash_
        return -2 if result == -1 else result

    def __eq__(a, b):
        """a == b"""
        if type(b) is int:
            return a._numerator == b and a._denominator == 1
        if isinstance(b, numbers.Rational):
            return (a._numerator == b.numerator and
                    a._denominator == b.denominator)
        if isinstance(b, numbers.Complex) and b.imag == 0:
            b = b.real
        if isinstance(b, float):
            if math.isnan(b) or math.isinf(b):
                # comparisons with an infinity or nan should behave in
                # the same way for any finite a, so treat a as zero.
                return 0.0 == b
            else:
                return a == a.from_float(b)
        else:
            # Since a doesn't know how to compare with b, let's give b
            # a chance to compare itself with a.
            return NotImplemented

    def _richcmp(self, other, op):
        """Helper for comparison operators, for internal use only.

        Implement comparison between a Rational instance `self`, and
        either another Rational instance or a float `other`.  If
        `other` is not a Rational instance or a float, return
        NotImplemented. `op` should be one of the six standard
        comparison operators.

        """
        # convert other to a Rational instance where reasonable.
        if isinstance(other, numbers.Rational):
            return op(self._numerator * other.denominator,
                      self._denominator * other.numerator)
        if isinstance(other, float):
            if math.isnan(other) or math.isinf(other):
                return op(0.0, other)
            else:
                return op(self, self.from_float(other))
        else:
            return NotImplemented

    def __lt__(a, b):
        """a < b"""
        return a._richcmp(b, operator.lt)

    def __gt__(a, b):
        """a > b"""
        return a._richcmp(b, operator.gt)

    def __le__(a, b):
        """a <= b"""
        return a._richcmp(b, operator.le)

    def __ge__(a, b):
        """a >= b"""
        return a._richcmp(b, operator.ge)

    def __bool__(a):
        """a != 0"""
        # bpo-39274: Use bool() because (a._numerator != 0) can return an
        # object which is not a bool.
        return bool(a._numerator)

    # support for pickling, copy, and deepcopy

    def __reduce__(self):
        return (self.__class__, (str(self),))

    def __copy__(self):
        if type(self) == Fraction:
            return self     # I'm immutable; therefore I am my own clone
        return self.__class__(self._numerator, self._denominator)

    def __deepcopy__(self, memo):
        if type(self) == Fraction:
            return self     # My components are also immutable
        return self.__class__(self._numerator, self._denominator)


win.timer.stop()

win.timer.start()

%%writefile  ~/miniconda3/envs/cloned_base/lib/python3.9/site-packages/vispy/geometry/torusknot.py
from __future__ import division

import numpy as np
#Python 3.9 changed from: from fractions import gdc
from math import gcd


class TorusKnot(object):
    """Representation of a torus knot or link.

    A torus knot is one that can be drawn on the surface of a
    torus. It is parameterised by two integers p and q as below; in
    fact this returns a single knot (a single curve) only if p and q
    are coprime, otherwise it describes multiple linked curves.

    Parameters
    ----------
    p : int
        The number of times the knot winds around the outside of the
        torus. Defaults to 2.
    q : int
        The number of times the knot passes through the hole in the
        centre of the torus. Defaults to 3.
    num_points : int
        The number of points in the returned piecewise linear
        curve. If there are multiple curves (i.e. a torus link), this
        is the number of points in *each* curve.  Defaults to 100.
    major_radius : float
        Distance from the center of the torus tube to the center of the torus.
        Defaults to 10.
    minor_radius : float
        The radius of the torus tube. Defaults to 5.

    """

    def __init__(self, p=3, q=2, num_points=100, major_radius=10.,
                 minor_radius=5.):
        self._p = p
        self._q = q
        self._num_points = num_points
        self._major_radius = major_radius
        self._minor_radius = minor_radius

        self._calculate_vertices()

    def _calculate_vertices(self):
        angles = np.linspace(0, 2*np.pi, self._num_points)

        num_components = self.num_components

        divisions = (np.max([self._q, self._p]) *
                     np.min([self._q, self._p]) / self.num_components)
        starting_angles = np.linspace(
            0, 2*np.pi, divisions + 1)[
            :num_components]
        q = self._q / num_components
        p = self._p / num_components

        components = []
        for starting_angle in starting_angles:
            vertices = np.zeros((self._num_points, 3))
            local_angles = angles + starting_angle
            radii = (self._minor_radius * np.cos(q * angles) +
                     self._major_radius)
            vertices[:, 0] = radii * np.cos(p * local_angles)
            vertices[:, 1] = radii * np.sin(p * local_angles)
            vertices[:, 2] = (self._minor_radius * -1 *
                              np.sin(q * angles))
            components.append(vertices)

        self._components = components

    @property
    def first_component(self):
        '''The vertices of the first component line of the torus knot or link.
        '''
        return self._components[0]

    @property
    def components(self):
        '''A list of the vertices in each line of the torus knot or link.
        Even if p and q are coprime, this is a list with just one
        entry.
        '''
        return self._components

    @property
    def num_components(self):
        '''The number of component lines in the torus link. This is equal
        to the greatest common divisor of p and q.
        '''
        return gcd(self._p, self._q)

    @property
    def q(self):
        '''The q parameter of the torus knot or link.'''
        return self._q

    @q.setter
    def q(self, q):
        self._q = q
        self._calculate_vertices()

    @property
    def p(self):
        '''The p parameter of the torus knot or link.'''
        return self._p

    @p.setter
    def p(self, p):
        self._p = p
        self._calculate_vertices()

    @property
    def minor_radius(self):
        '''The minor radius of the torus.'''
        return self._minor_radius

    @minor_radius.setter
    def minor_radius(self, r):
        self._minor_radius = r
        self._calculate_vertices()

    @property
    def major_radius(self):
        '''The major radius of the torus.'''
        return self._major_radius

    @major_radius.setter
    def major_radius(self, r):
        self._major_radius = r
        self._calculate_vertices()

    @property
    def num_points(self):
        '''The number of points in the vertices returned for each knot/link
        component'''
        return self._num_points

    @num_points.setter
    def num_points(self, r):
        self._num_points = r
        self._calculate_vertices()




import vispy
back = ['pyqt4', 'pyqt5', 'pyside','jupyter_rfb','pyglet', 'glfw', 'sdl2', 'wx', 'egl', 'osmesa', 'ipynb_webgl', '_test']
vispy.use('pyqt5')

import legacycontour
from legacycontour import _cntr as cntr

import sys

from vispy import app, gloo
from vispy.visuals import CubeVisual, transforms


class Canvas(app.Canvas):
    def __init__(self):
        app.Canvas.__init__(self, 'Cube', keys='interactive',
                            size=(400, 400))

        self.cube = CubeVisual((1.0, 0.5, 0.25), color='red', edge_color="k")
        self.theta = 0
        self.phi = 0

        # Create a TransformSystem that will tell the visual how to draw
        self.cube_transform = transforms.MatrixTransform()
        self.cube.transform = self.cube_transform

        self.timer = app.Timer('auto', connect=self.on_timer, start=True)

    def on_resize(self, event):
        # Set canvas viewport and reconfigure visual transforms to match.
        vp = (0, 0, self.physical_size[0], self.physical_size[1])
        self.context.set_viewport(*vp)
        self.cube.transforms.configure(canvas=self, viewport=vp)

    def on_draw(self, event):
        gloo.set_viewport(0, 0, *self.physical_size)
        gloo.clear('white', depth=True)

        self.cube.draw()

    def on_timer(self, event):
        self.theta += .5
        self.phi += .5
        self.cube_transform.reset()
        self.cube_transform.rotate(self.theta, (0, 0, 1))
        self.cube_transform.rotate(self.phi, (0, 1, 0))
        self.cube_transform.scale((100, 100, 0.001))
        self.cube_transform.translate((200, 200))
        self.update()


win = Canvas()
win.show()
win

from fractions import gcd

from math import gcd

# %load ~/miniconda3/envs/cloned_base/lib/python3.9/site-packages/vispy/app/canvas.py
# Copyright (c) Vispy Development Team. All Rights Reserved.
# Distributed under the (new) BSD License. See LICENSE.txt for more info.

from __future__ import division, print_function

import sys
import numpy as np
from time import sleep

from ..util.event import EmitterGroup, Event, WarningEmitter
from ..util.ptime import time
from ..util.dpi import get_dpi
from ..util import config as util_config
from ..ext.six import string_types
from . import Application, use_app
from ..gloo.context import (GLContext, set_current_canvas, forget_canvas)
from ..gloo import FrameBuffer, RenderBuffer


# todo: add functions for asking about current mouse/keyboard state
# todo: add hover enter/exit events
# todo: add focus events


class Canvas(object):
    """Representation of a GUI element with an OpenGL context

    Parameters
    ----------
    title : str
        The widget title
    size : (width, height)
        The size of the window.
    position : (x, y)
        The position of the window in screen coordinates.
    show : bool
        Whether to show the widget immediately. Default False.
    autoswap : bool
        Whether to swap the buffers automatically after a draw event.
        Default True. If True, the ``swap_buffers`` Canvas method will
        be called last (by default) by the ``canvas.draw`` event handler.
    app : Application | str
        Give vispy Application instance to use as a backend.
        (vispy.app is used by default.) If str, then an application
        using the chosen backend (e.g., 'pyglet') will be created.
        Note the canvas application can be accessed at ``canvas.app``.
    create_native : bool
        Whether to create the widget immediately. Default True.
    vsync : bool
        Enable vertical synchronization.
    resizable : bool
        Allow the window to be resized.
    decorate : bool
        Decorate the window. Default True.
    fullscreen : bool | int
        If False, windowed mode is used (default). If True, the default
        monitor is used. If int, the given monitor number is used.
    config : dict
        A dict with OpenGL configuration options, which is combined
        with the default configuration options and used to initialize
        the context. See ``canvas.context.config`` for possible
        options.
    shared : Canvas | GLContext | None
        An existing canvas or context to share OpenGL objects with.
    keys : str | dict | None
        Default key mapping to use. If 'interactive', escape and F11 will
        close the canvas and toggle full-screen mode, respectively.
        If dict, maps keys to functions. If dict values are strings,
        they are assumed to be ``Canvas`` methods, otherwise they should
        be callable.
    parent : widget-object
        The parent widget if this makes sense for the used backend.
    dpi : float | None
        Resolution in dots-per-inch to use for the canvas. If dpi is None,
        then the value will be determined by querying the global config first,
        and then the operating system.
    always_on_top : bool
        If True, try to create the window in always-on-top mode.
    px_scale : int > 0
        A scale factor to apply between logical and physical pixels in addition
        to the actual scale factor determined by the backend. This option
        allows the scale factor to be adjusted for testing.

    Notes
    -----
    The `Canvas` receives the following events:

        * initialize
        * resize
        * draw
        * mouse_press
        * mouse_release
        * mouse_double_click
        * mouse_move
        * mouse_wheel
        * key_press
        * key_release
        * stylus
        * touch
        * close

    The ordering of the mouse_double_click, mouse_press, and mouse_release
    events are not guaranteed to be consistent between backends. Only certain
    backends natively support double-clicking (currently Qt and WX); on other
    backends, they are detected manually with a fixed time delay.
    This can cause problems with accessibility, as increasing the OS detection
    time or using a dedicated double-click button will not be respected.
    """

    def __init__(self, title='VisPy canvas', size=(800, 600), position=None,
                 show=False, autoswap=True, app=None, create_native=True,
                 vsync=False, resizable=True, decorate=True, fullscreen=False,
                 config=None, shared=None, keys=None, parent=None, dpi=None,
                 always_on_top=False, px_scale=1):

        size = tuple(int(s) * px_scale for s in size)
        if len(size) != 2:
            raise ValueError('size must be a 2-element list')
        title = str(title)
        if not isinstance(fullscreen, (bool, int)):
            raise TypeError('fullscreen must be bool or int')

        # Initialize some values
        self._autoswap = autoswap
        self._title = title
        self._frame_count = 0
        self._fps = 0
        self._basetime = time()
        self._fps_callback = None
        self._backend = None
        self._closed = False
        self._fps_window = 0.
        self._px_scale = int(px_scale)

        if dpi is None:
            dpi = util_config['dpi']
        if dpi is None:
            dpi = get_dpi(raise_error=False)
        self.dpi = dpi

        # Create events
        self.events = EmitterGroup(source=self,
                                   initialize=Event,
                                   resize=ResizeEvent,
                                   draw=DrawEvent,
                                   mouse_press=MouseEvent,
                                   mouse_release=MouseEvent,
                                   mouse_double_click=MouseEvent,
                                   mouse_move=MouseEvent,
                                   mouse_wheel=MouseEvent,
                                   key_press=KeyEvent,
                                   key_release=KeyEvent,
                                   stylus=Event,
                                   touch=Event,
                                   close=Event)

        # Deprecated paint emitter
        emitter = WarningEmitter('Canvas.events.paint and Canvas.on_paint are '
                                 'deprecated; use Canvas.events.draw and '
                                 'Canvas.on_draw instead.',
                                 source=self, type='draw',
                                 event_class=DrawEvent)
        self.events.add(paint=emitter)
        self.events.draw.connect(self.events.paint)

        # Get app instance
        if app is None:
            self._app = use_app(call_reuse=False)
        elif isinstance(app, Application):
            self._app = app
        elif isinstance(app, string_types):
            self._app = Application(app)
        else:
            raise ValueError('Invalid value for app %r' % app)

        # Check shared and context
        if shared is None:
            pass
        elif isinstance(shared, Canvas):
            shared = shared.context.shared
        elif isinstance(shared, GLContext):
            shared = shared.shared
        else:
            raise TypeError('shared must be a Canvas, not %s' % type(shared))
        config = config or {}
        if not isinstance(config, dict):
            raise TypeError('config must be a dict, not %s' % type(config))

        # Create new context
        self._context = GLContext(config, shared)

        # Deal with special keys
        self._set_keys(keys)

        # store arguments that get set on Canvas init
        kwargs = dict(title=title, size=size, position=position, show=show,
                      vsync=vsync, resizable=resizable, decorate=decorate,
                      fullscreen=fullscreen, context=self._context,
                      parent=parent, always_on_top=always_on_top)
        self._backend_kwargs = kwargs

        # Create widget now (always do this *last*, after all err checks)
        if create_native:
            self.create_native()

            # Now we're ready to become current
            self.set_current()

        if '--vispy-fps' in sys.argv:
            self.measure_fps()

    def create_native(self):
        """ Create the native widget if not already done so. If the widget
        is already created, this function does nothing.
        """
        if self._backend is not None:
            return
        # Make sure that the app is active
        assert self._app.native
        # Instantiate the backend with the right class
        self._app.backend_module.CanvasBackend(self, **self._backend_kwargs)
        # self._backend = set by BaseCanvasBackend
        self._backend_kwargs = None  # Clean up

        # Connect to draw event (append to the end)
        # Process GLIR commands at each paint event
        self.events.draw.connect(self.context.flush_commands, position='last')
        if self._autoswap:
            self.events.draw.connect((self, 'swap_buffers'),
                                     ref=True, position='last')

    def _set_keys(self, keys):
        if keys is not None:
            if isinstance(keys, string_types):
                if keys != 'interactive':
                    raise ValueError('keys, if string, must be "interactive", '
                                     'not %s' % (keys,))

                def toggle_fs():
                    self.fullscreen = not self.fullscreen
                keys = dict(escape='close', F11=toggle_fs)
        else:
            keys = {}
        if not isinstance(keys, dict):
            raise TypeError('keys must be a dict, str, or None')
        if len(keys) > 0:
            # ensure all are callable
            for key, val in keys.items():
                if isinstance(val, string_types):
                    new_val = getattr(self, val, None)
                    if new_val is None:
                        raise ValueError('value %s is not an attribute of '
                                         'Canvas' % val)
                    val = new_val
                if not hasattr(val, '__call__'):
                    raise TypeError('Entry for key %s is not callable' % key)
                # convert to lower-case representation
                keys.pop(key)
                keys[key.lower()] = val
            self._keys_check = keys

            def keys_check(event):
                if event.key is not None:
                    use_name = event.key.name.lower()
                    if use_name in self._keys_check:
                        self._keys_check[use_name]()
            self.events.key_press.connect(keys_check, ref=True)

    @property
    def context(self):
        """ The OpenGL context of the native widget

        It gives access to OpenGL functions to call on this canvas object,
        and to the shared context namespace.
        """
        return self._context

    @property
    def app(self):
        """ The vispy Application instance on which this Canvas is based.
        """
        return self._app

    @property
    def native(self):
        """ The native widget object on which this Canvas is based.
        """
        return self._backend._vispy_get_native_canvas()

    @property
    def dpi(self):
        """ The physical resolution of the canvas in dots per inch.
        """
        return self._dpi

    @dpi.setter
    def dpi(self, dpi):
        self._dpi = float(dpi)
        self.update()

    def connect(self, fun):
        """ Connect a function to an event

        The name of the function
        should be on_X, with X the name of the event (e.g. 'on_draw').

        This method is typically used as a decorator on a function
        definition for an event handler.

        Parameters
        ----------
        fun : callable
            The function.
        """
        # Get and check name
        name = fun.__name__
        if not name.startswith('on_'):
            raise ValueError('When connecting a function based on its name, '
                             'the name should start with "on_"')
        eventname = name[3:]
        # Get emitter
        try:
            emitter = self.events[eventname]
        except KeyError:
            raise ValueError(
                'Event "%s" not available on this canvas.' %
                eventname)
        # Connect
        emitter.connect(fun)

    # ---------------------------------------------------------------- size ---
    @property
    def size(self):
        """ The size of canvas/window """
        size = self._backend._vispy_get_size()
        return (size[0] // self._px_scale, size[1] // self._px_scale)

    @size.setter
    def size(self, size):
        return self._backend._vispy_set_size(size[0] * self._px_scale,
                                             size[1] * self._px_scale)

    @property
    def physical_size(self):
        """ The physical size of the canvas/window, which may differ from the
        size property on backends that expose HiDPI """
        return self._backend._vispy_get_physical_size()

    @property
    def pixel_scale(self):
        """ The ratio between the number of logical pixels, or 'points', and
        the physical pixels on the device. In most cases this will be 1.0,
        but on certain backends this will be greater than 1. This should be
        used as a scaling factor when writing your own visualisations
        with gloo (make a copy and multiply all your logical pixel values
        by it). When writing Visuals or SceneGraph visualisations, this value
        is exposed as `TransformSystem.px_scale`."""
        return self.physical_size[0] // self.size[0]

    @property
    def fullscreen(self):
        return self._backend._vispy_get_fullscreen()

    @fullscreen.setter
    def fullscreen(self, fullscreen):
        return self._backend._vispy_set_fullscreen(fullscreen)

    # ------------------------------------------------------------ position ---
    @property
    def position(self):
        """ The position of canvas/window relative to screen """
        return self._backend._vispy_get_position()

    @position.setter
    def position(self, position):
        assert len(position) == 2
        return self._backend._vispy_set_position(position[0], position[1])

    # --------------------------------------------------------------- title ---
    @property
    def title(self):
        """ The title of canvas/window """
        return self._title

    @title.setter
    def title(self, title):
        self._title = title
        self._backend._vispy_set_title(title)

    # ----------------------------------------------------------------- fps ---
    @property
    def fps(self):
        """The fps of canvas/window, as the rate that events.draw is emitted
        """
        return self._fps

    def set_current(self, event=None):
        """Make this the active GL canvas

        Parameters
        ----------
        event : None
            Not used.
        """
        self._backend._vispy_set_current()
        set_current_canvas(self)

    def swap_buffers(self, event=None):
        """Swap GL buffers such that the offscreen buffer becomes visible

        Parameters
        ----------
        event : None
            Not used.
        """
        self._backend._vispy_swap_buffers()

    def show(self, visible=True, run=False):
        """Show or hide the canvas

        Parameters
        ----------
        visible : bool
            Make the canvas visible.
        run : bool
            Run the backend event loop.
        """
        self._backend._vispy_set_visible(visible)
        if run:
            self.app.run()

    def update(self, event=None):
        """Inform the backend that the Canvas needs to be redrawn

        Parameters
        ----------
        event : None
            Not used.
        """
        if self._backend is not None:
            self._backend._vispy_update()

    def close(self):
        """Close the canvas

        Notes
        -----
        This will usually destroy the GL context. For Qt, the context
        (and widget) will be destroyed only if the widget is top-level.
        To avoid having the widget destroyed (more like standard Qt
        behavior), consider making the widget a sub-widget.
        """
        if self._backend is not None and not self._closed:
            self._closed = True
            self.events.close()
            self._backend._vispy_close()
        forget_canvas(self)

    def _update_fps(self, event):
        """Update the fps after every window"""
        self._frame_count += 1
        diff = time() - self._basetime
        if (diff > self._fps_window):
            self._fps = self._frame_count / diff
            self._basetime = time()
            self._frame_count = 0
            self._fps_callback(self.fps)

    def measure_fps(self, window=1, callback='%1.1f FPS'):
        """Measure the current FPS

        Sets the update window, connects the draw event to update_fps
        and sets the callback function.

        Parameters
        ----------
        window : float
            The time-window (in seconds) to calculate FPS. Default 1.0.
        callback : function | str
            The function to call with the float FPS value, or the string
            to be formatted with the fps value and then printed. The
            default is ``'%1.1f FPS'``. If callback evaluates to False, the
            FPS measurement is stopped.
        """
        # Connect update_fps function to draw
        self.events.draw.disconnect(self._update_fps)
        if callback:
            if isinstance(callback, string_types):
                callback_str = callback  # because callback gets overwritten

                def callback(x):
                    print(callback_str % x)

            self._fps_window = window
            self.events.draw.connect(self._update_fps)
            self._fps_callback = callback
        else:
            self._fps_callback = None

    # ---------------------------------------------------------------- misc ---
    def __repr__(self):
        return ('<%s (%s) at %s>'
                % (self.__class__.__name__,
                   self.app.backend_name, hex(id(self))))

    def __enter__(self):
        self.show()
        self._backend._vispy_warmup()
        return self

    def __exit__(self, type, value, traceback):
        # ensure all GL calls are complete
        if not self._closed:
            self._backend._vispy_set_current()
            self.context.finish()
            self.close()
        sleep(0.1)  # ensure window is really closed/destroyed

    def render(self):
        """ Render the canvas to an offscreen buffer and return the image
        array.

        Returns
        -------
        image : array
            Numpy array of type ubyte and shape (h, w, 4). Index [0, 0] is the 
            upper-left corner of the rendered region.
        
        """
        self.set_current()
        size = self.physical_size
        fbo = FrameBuffer(color=RenderBuffer(size[::-1]),
                          depth=RenderBuffer(size[::-1]))

        try:
            fbo.activate()
            self.events.draw()
            return fbo.read()
        finally:
            fbo.deactivate()


# Event subclasses specific to the Canvas
class MouseEvent(Event):
    """Mouse event class

    Note that each event object has an attribute for each of the input
    arguments listed below, as well as a "time" attribute with the event's
    precision start time.

    Parameters
    ----------
    type : str
       String indicating the event type (e.g. mouse_press, key_release)
    pos : (int, int)
        The position of the mouse (in screen coordinates).
    button : int | None
        The button that generated this event (can be None).
        Left=1, right=2, middle=3. During a mouse drag, this
        will return the button that started the drag (same thing as
        ``event.press_event.button``).
    buttons : [int, ...]
        The list of buttons depressed during this event.
    modifiers : tuple of Key instances
        Tuple that specifies which modifier keys were pressed down at the
        time of the event (shift, control, alt, meta).
    delta : (float, float)
        The amount of scrolling in horizontal and vertical direction. One
        "tick" corresponds to a delta of 1.0.
    press_event : MouseEvent
        The press event that was generated at the start of the current drag,
        if any.
    last_event : MouseEvent
        The MouseEvent immediately preceding the current event. During drag
        operations, all generated events retain their last_event properties,
        allowing the entire drag to be reconstructed.
    native : object (optional)
       The native GUI event object
    **kwargs : keyword arguments
        All extra keyword arguments become attributes of the event object.
    """

    def __init__(self, type, pos=None, button=None, buttons=None,
                 modifiers=None, delta=None, last_event=None, press_event=None,
                 **kwargs):
        Event.__init__(self, type, **kwargs)
        self._pos = np.array([0, 0]) if (pos is None) else np.array(pos)
        self._button = int(button) if (button is not None) else None
        self._buttons = [] if (buttons is None) else buttons
        self._modifiers = tuple(modifiers or ())
        self._delta = np.zeros(2) if (delta is None) else np.array(delta)
        self._last_event = last_event
        self._press_event = press_event
        self._time = time()

    @property
    def pos(self):
        return self._pos

    @property
    def button(self):
        return self._button

    @property
    def buttons(self):
        return self._buttons

    @property
    def modifiers(self):
        return self._modifiers

    @property
    def delta(self):
        return self._delta

    @property
    def press_event(self):
        return self._press_event

    @property
    def last_event(self):
        return self._last_event

    @property
    def time(self):
        return self._time

    def _forget_last_event(self):
        # Needed to break otherwise endless last-event chains
        self._last_event = None

    @property
    def is_dragging(self):
        """ Indicates whether this event is part of a mouse drag operation.
        """
        return self.press_event is not None

    def drag_events(self):
        """ Return a list of all mouse events in the current drag operation.

        Returns None if there is no current drag operation.
        """
        if not self.is_dragging:
            return None

        event = self
        events = []
        while True:
            # mouse_press events can only be the start of a trail
            if event is None or event.type == 'mouse_press':
                break
            events.append(event)
            event = event.last_event

        return events[::-1]

    def trail(self):
        """ Return an (N, 2) array of mouse coordinates for every event in the
        current mouse drag operation.

        Returns None if there is no current drag operation.
        """
        events = self.drag_events()
        if events is None:
            return None

        trail = np.empty((len(events), 2), dtype=int)
        for i, ev in enumerate(events):
            trail[i] = ev.pos

        return trail


class KeyEvent(Event):
    """Key event class

    Note that each event object has an attribute for each of the input
    arguments listed below.

    Parameters
    ----------
    type : str
       String indicating the event type (e.g. mouse_press, key_release)
    key : vispy.keys.Key instance
        The Key object for this event. Can be compared to string names.
    text : str
        The text representation of the key (can be an empty string).
    modifiers : tuple of Key instances
        Tuple that specifies which modifier keys were pressed down at the
        time of the event (shift, control, alt, meta).
    native : object (optional)
       The native GUI event object
    **kwargs : keyword arguments
        All extra keyword arguments become attributes of the event object.
    """

    def __init__(self, type, key=None, text='', modifiers=None, **kwargs):
        Event.__init__(self, type, **kwargs)
        self._key = key
        self._text = text
        self._modifiers = tuple(modifiers or ())

    @property
    def key(self):
        return self._key

    @property
    def text(self):
        return self._text

    @property
    def modifiers(self):
        return self._modifiers


class ResizeEvent(Event):
    """Resize event class

    Note that each event object has an attribute for each of the input
    arguments listed below.

    Parameters
    ----------
    type : str
       String indicating the event type (e.g. mouse_press, key_release)
    size : (int, int)
        The new size of the Canvas, in points (logical pixels).
    physical_size : (int, int)
        The new physical size of the Canvas, in pixels.
    native : object (optional)
       The native GUI event object
    **kwargs : extra keyword arguments
        All extra keyword arguments become attributes of the event object.
    """

    def __init__(self, type, size=None, physical_size=None, **kwargs):
        Event.__init__(self, type, **kwargs)
        self._size = tuple(size)
        if physical_size is None:
            self._physical_size = self._size
        else:
            self._physical_size = tuple(physical_size)

    @property
    def size(self):
        return self._size

    @property
    def physical_size(self):
        return self._physical_size


class DrawEvent(Event):
    """Draw event class

    This type of event is sent to Canvas.events.draw when a redraw
    is required.

    Note that each event object has an attribute for each of the input
    arguments listed below.

    Parameters
    ----------
    type : str
       String indicating the event type (e.g. mouse_press, key_release)
    region : (int, int, int, int) or None
        The region of the canvas which needs to be redrawn (x, y, w, h).
        If None, the entire canvas must be redrawn.
    native : object (optional)
       The native GUI event object
    **kwargs : extra keyword arguments
        All extra keyword arguments become attributes of the event object.
    """

    def __init__(self, type, region=None, **kwargs):
        Event.__init__(self, type, **kwargs)
        self._region = region

    @property
    def region(self):
        return self._region


# %load /home/jack/miniconda3/envs/cloned_base/lib/python3.9/fractions.py
# Originally contributed by Sjoerd Mullender.
# Significantly modified by Jeffrey Yasskin <jyasskin at gmail.com>.

"""Fraction, infinite-precision, real numbers."""

from decimal import Decimal
import math
import numbers
import operator
import re
import sys

__all__ = ['Fraction']


# Constants related to the hash implementation;  hash(x) is based
# on the reduction of x modulo the prime _PyHASH_MODULUS.
_PyHASH_MODULUS = sys.hash_info.modulus
# Value to be used for rationals that reduce to infinity modulo
# _PyHASH_MODULUS.
_PyHASH_INF = sys.hash_info.inf

_RATIONAL_FORMAT = re.compile(r"""
    \A\s*                      # optional whitespace at the start, then
    (?P<sign>[-+]?)            # an optional sign, then
    (?=\d|\.\d)                # lookahead for digit or .digit
    (?P<num>\d*)               # numerator (possibly empty)
    (?:                        # followed by
       (?:/(?P<denom>\d+))?    # an optional denominator
    |                          # or
       (?:\.(?P<decimal>\d*))? # an optional fractional part
       (?:E(?P<exp>[-+]?\d+))? # and optional exponent
    )
    \s*\Z                      # and optional whitespace to finish
""", re.VERBOSE | re.IGNORECASE)


class Fraction(numbers.Rational):
    """This class implements rational numbers.

    In the two-argument form of the constructor, Fraction(8, 6) will
    produce a rational number equivalent to 4/3. Both arguments must
    be Rational. The numerator defaults to 0 and the denominator
    defaults to 1 so that Fraction(3) == 3 and Fraction() == 0.

    Fractions can also be constructed from:

      - numeric strings similar to those accepted by the
        float constructor (for example, '-2.3' or '1e10')

      - strings of the form '123/456'

      - float and Decimal instances

      - other Rational instances (including integers)

    """

    __slots__ = ('_numerator', '_denominator')

    # We're immutable, so use __new__ not __init__
    def __new__(cls, numerator=0, denominator=None, *, _normalize=True):
        """Constructs a Rational.

        Takes a string like '3/2' or '1.5', another Rational instance, a
        numerator/denominator pair, or a float.

        Examples
        --------

        >>> Fraction(10, -8)
        Fraction(-5, 4)
        >>> Fraction(Fraction(1, 7), 5)
        Fraction(1, 35)
        >>> Fraction(Fraction(1, 7), Fraction(2, 3))
        Fraction(3, 14)
        >>> Fraction('314')
        Fraction(314, 1)
        >>> Fraction('-35/4')
        Fraction(-35, 4)
        >>> Fraction('3.1415') # conversion from numeric string
        Fraction(6283, 2000)
        >>> Fraction('-47e-2') # string may include a decimal exponent
        Fraction(-47, 100)
        >>> Fraction(1.47)  # direct construction from float (exact conversion)
        Fraction(6620291452234629, 4503599627370496)
        >>> Fraction(2.25)
        Fraction(9, 4)
        >>> Fraction(Decimal('1.47'))
        Fraction(147, 100)

        """
        self = super(Fraction, cls).__new__(cls)

        if denominator is None:
            if type(numerator) is int:
                self._numerator = numerator
                self._denominator = 1
                return self

            elif isinstance(numerator, numbers.Rational):
                self._numerator = numerator.numerator
                self._denominator = numerator.denominator
                return self

            elif isinstance(numerator, (float, Decimal)):
                # Exact conversion
                self._numerator, self._denominator = numerator.as_integer_ratio()
                return self

            elif isinstance(numerator, str):
                # Handle construction from strings.
                m = _RATIONAL_FORMAT.match(numerator)
                if m is None:
                    raise ValueError('Invalid literal for Fraction: %r' %
                                     numerator)
                numerator = int(m.group('num') or '0')
                denom = m.group('denom')
                if denom:
                    denominator = int(denom)
                else:
                    denominator = 1
                    decimal = m.group('decimal')
                    if decimal:
                        scale = 10**len(decimal)
                        numerator = numerator * scale + int(decimal)
                        denominator *= scale
                    exp = m.group('exp')
                    if exp:
                        exp = int(exp)
                        if exp >= 0:
                            numerator *= 10**exp
                        else:
                            denominator *= 10**-exp
                if m.group('sign') == '-':
                    numerator = -numerator

            else:
                raise TypeError("argument should be a string "
                                "or a Rational instance")

        elif type(numerator) is int is type(denominator):
            pass # *very* normal case

        elif (isinstance(numerator, numbers.Rational) and
            isinstance(denominator, numbers.Rational)):
            numerator, denominator = (
                numerator.numerator * denominator.denominator,
                denominator.numerator * numerator.denominator
                )
        else:
            raise TypeError("both arguments should be "
                            "Rational instances")

        if denominator == 0:
            raise ZeroDivisionError('Fraction(%s, 0)' % numerator)
        if _normalize:
            g = math.gcd(numerator, denominator)
            if denominator < 0:
                g = -g
            numerator //= g
            denominator //= g
        self._numerator = numerator
        self._denominator = denominator
        return self

    @classmethod
    def from_float(cls, f):
        """Converts a finite float to a rational number, exactly.

        Beware that Fraction.from_float(0.3) != Fraction(3, 10).

        """
        if isinstance(f, numbers.Integral):
            return cls(f)
        elif not isinstance(f, float):
            raise TypeError("%s.from_float() only takes floats, not %r (%s)" %
                            (cls.__name__, f, type(f).__name__))
        return cls(*f.as_integer_ratio())

    @classmethod
    def from_decimal(cls, dec):
        """Converts a finite Decimal instance to a rational number, exactly."""
        from decimal import Decimal
        if isinstance(dec, numbers.Integral):
            dec = Decimal(int(dec))
        elif not isinstance(dec, Decimal):
            raise TypeError(
                "%s.from_decimal() only takes Decimals, not %r (%s)" %
                (cls.__name__, dec, type(dec).__name__))
        return cls(*dec.as_integer_ratio())

    def as_integer_ratio(self):
        """Return the integer ratio as a tuple.

        Return a tuple of two integers, whose ratio is equal to the
        Fraction and with a positive denominator.
        """
        return (self._numerator, self._denominator)

    def limit_denominator(self, max_denominator=1000000):
        """Closest Fraction to self with denominator at most max_denominator.

        >>> Fraction('3.141592653589793').limit_denominator(10)
        Fraction(22, 7)
        >>> Fraction('3.141592653589793').limit_denominator(100)
        Fraction(311, 99)
        >>> Fraction(4321, 8765).limit_denominator(10000)
        Fraction(4321, 8765)

        """
        # Algorithm notes: For any real number x, define a *best upper
        # approximation* to x to be a rational number p/q such that:
        #
        #   (1) p/q >= x, and
        #   (2) if p/q > r/s >= x then s > q, for any rational r/s.
        #
        # Define *best lower approximation* similarly.  Then it can be
        # proved that a rational number is a best upper or lower
        # approximation to x if, and only if, it is a convergent or
        # semiconvergent of the (unique shortest) continued fraction
        # associated to x.
        #
        # To find a best rational approximation with denominator <= M,
        # we find the best upper and lower approximations with
        # denominator <= M and take whichever of these is closer to x.
        # In the event of a tie, the bound with smaller denominator is
        # chosen.  If both denominators are equal (which can happen
        # only when max_denominator == 1 and self is midway between
        # two integers) the lower bound---i.e., the floor of self, is
        # taken.

        if max_denominator < 1:
            raise ValueError("max_denominator should be at least 1")
        if self._denominator <= max_denominator:
            return Fraction(self)

        p0, q0, p1, q1 = 0, 1, 1, 0
        n, d = self._numerator, self._denominator
        while True:
            a = n//d
            q2 = q0+a*q1
            if q2 > max_denominator:
                break
            p0, q0, p1, q1 = p1, q1, p0+a*p1, q2
            n, d = d, n-a*d

        k = (max_denominator-q0)//q1
        bound1 = Fraction(p0+k*p1, q0+k*q1)
        bound2 = Fraction(p1, q1)
        if abs(bound2 - self) <= abs(bound1-self):
            return bound2
        else:
            return bound1

    @property
    def numerator(a):
        return a._numerator

    @property
    def denominator(a):
        return a._denominator

    def __repr__(self):
        """repr(self)"""
        return '%s(%s, %s)' % (self.__class__.__name__,
                               self._numerator, self._denominator)

    def __str__(self):
        """str(self)"""
        if self._denominator == 1:
            return str(self._numerator)
        else:
            return '%s/%s' % (self._numerator, self._denominator)

    def _operator_fallbacks(monomorphic_operator, fallback_operator):
        """Generates forward and reverse operators given a purely-rational
        operator and a function from the operator module.

        Use this like:
        __op__, __rop__ = _operator_fallbacks(just_rational_op, operator.op)

        In general, we want to implement the arithmetic operations so
        that mixed-mode operations either call an implementation whose
        author knew about the types of both arguments, or convert both
        to the nearest built in type and do the operation there. In
        Fraction, that means that we define __add__ and __radd__ as:

            def __add__(self, other):
                # Both types have numerators/denominator attributes,
                # so do the operation directly
                if isinstance(other, (int, Fraction)):
                    return Fraction(self.numerator * other.denominator +
                                    other.numerator * self.denominator,
                                    self.denominator * other.denominator)
                # float and complex don't have those operations, but we
                # know about those types, so special case them.
                elif isinstance(other, float):
                    return float(self) + other
                elif isinstance(other, complex):
                    return complex(self) + other
                # Let the other type take over.
                return NotImplemented

            def __radd__(self, other):
                # radd handles more types than add because there's
                # nothing left to fall back to.
                if isinstance(other, numbers.Rational):
                    return Fraction(self.numerator * other.denominator +
                                    other.numerator * self.denominator,
                                    self.denominator * other.denominator)
                elif isinstance(other, Real):
                    return float(other) + float(self)
                elif isinstance(other, Complex):
                    return complex(other) + complex(self)
                return NotImplemented


        There are 5 different cases for a mixed-type addition on
        Fraction. I'll refer to all of the above code that doesn't
        refer to Fraction, float, or complex as "boilerplate". 'r'
        will be an instance of Fraction, which is a subtype of
        Rational (r : Fraction <: Rational), and b : B <:
        Complex. The first three involve 'r + b':

            1. If B <: Fraction, int, float, or complex, we handle
               that specially, and all is well.
            2. If Fraction falls back to the boilerplate code, and it
               were to return a value from __add__, we'd miss the
               possibility that B defines a more intelligent __radd__,
               so the boilerplate should return NotImplemented from
               __add__. In particular, we don't handle Rational
               here, even though we could get an exact answer, in case
               the other type wants to do something special.
            3. If B <: Fraction, Python tries B.__radd__ before
               Fraction.__add__. This is ok, because it was
               implemented with knowledge of Fraction, so it can
               handle those instances before delegating to Real or
               Complex.

        The next two situations describe 'b + r'. We assume that b
        didn't know about Fraction in its implementation, and that it
        uses similar boilerplate code:

            4. If B <: Rational, then __radd_ converts both to the
               builtin rational type (hey look, that's us) and
               proceeds.
            5. Otherwise, __radd__ tries to find the nearest common
               base ABC, and fall back to its builtin type. Since this
               class doesn't subclass a concrete type, there's no
               implementation to fall back to, so we need to try as
               hard as possible to return an actual value, or the user
               will get a TypeError.

        """
        def forward(a, b):
            if isinstance(b, (int, Fraction)):
                return monomorphic_operator(a, b)
            elif isinstance(b, float):
                return fallback_operator(float(a), b)
            elif isinstance(b, complex):
                return fallback_operator(complex(a), b)
            else:
                return NotImplemented
        forward.__name__ = '__' + fallback_operator.__name__ + '__'
        forward.__doc__ = monomorphic_operator.__doc__

        def reverse(b, a):
            if isinstance(a, numbers.Rational):
                # Includes ints.
                return monomorphic_operator(a, b)
            elif isinstance(a, numbers.Real):
                return fallback_operator(float(a), float(b))
            elif isinstance(a, numbers.Complex):
                return fallback_operator(complex(a), complex(b))
            else:
                return NotImplemented
        reverse.__name__ = '__r' + fallback_operator.__name__ + '__'
        reverse.__doc__ = monomorphic_operator.__doc__

        return forward, reverse

    def _add(a, b):
        """a + b"""
        da, db = a.denominator, b.denominator
        return Fraction(a.numerator * db + b.numerator * da,
                        da * db)

    __add__, __radd__ = _operator_fallbacks(_add, operator.add)

    def _sub(a, b):
        """a - b"""
        da, db = a.denominator, b.denominator
        return Fraction(a.numerator * db - b.numerator * da,
                        da * db)

    __sub__, __rsub__ = _operator_fallbacks(_sub, operator.sub)

    def _mul(a, b):
        """a * b"""
        return Fraction(a.numerator * b.numerator, a.denominator * b.denominator)

    __mul__, __rmul__ = _operator_fallbacks(_mul, operator.mul)

    def _div(a, b):
        """a / b"""
        return Fraction(a.numerator * b.denominator,
                        a.denominator * b.numerator)

    __truediv__, __rtruediv__ = _operator_fallbacks(_div, operator.truediv)

    def _floordiv(a, b):
        """a // b"""
        return (a.numerator * b.denominator) // (a.denominator * b.numerator)

    __floordiv__, __rfloordiv__ = _operator_fallbacks(_floordiv, operator.floordiv)

    def _divmod(a, b):
        """(a // b, a % b)"""
        da, db = a.denominator, b.denominator
        div, n_mod = divmod(a.numerator * db, da * b.numerator)
        return div, Fraction(n_mod, da * db)

    __divmod__, __rdivmod__ = _operator_fallbacks(_divmod, divmod)

    def _mod(a, b):
        """a % b"""
        da, db = a.denominator, b.denominator
        return Fraction((a.numerator * db) % (b.numerator * da), da * db)

    __mod__, __rmod__ = _operator_fallbacks(_mod, operator.mod)

    def __pow__(a, b):
        """a ** b

        If b is not an integer, the result will be a float or complex
        since roots are generally irrational. If b is an integer, the
        result will be rational.

        """
        if isinstance(b, numbers.Rational):
            if b.denominator == 1:
                power = b.numerator
                if power >= 0:
                    return Fraction(a._numerator ** power,
                                    a._denominator ** power,
                                    _normalize=False)
                elif a._numerator >= 0:
                    return Fraction(a._denominator ** -power,
                                    a._numerator ** -power,
                                    _normalize=False)
                else:
                    return Fraction((-a._denominator) ** -power,
                                    (-a._numerator) ** -power,
                                    _normalize=False)
            else:
                # A fractional power will generally produce an
                # irrational number.
                return float(a) ** float(b)
        else:
            return float(a) ** b

    def __rpow__(b, a):
        """a ** b"""
        if b._denominator == 1 and b._numerator >= 0:
            # If a is an int, keep it that way if possible.
            return a ** b._numerator

        if isinstance(a, numbers.Rational):
            return Fraction(a.numerator, a.denominator) ** b

        if b._denominator == 1:
            return a ** b._numerator

        return a ** float(b)

    def __pos__(a):
        """+a: Coerces a subclass instance to Fraction"""
        return Fraction(a._numerator, a._denominator, _normalize=False)

    def __neg__(a):
        """-a"""
        return Fraction(-a._numerator, a._denominator, _normalize=False)

    def __abs__(a):
        """abs(a)"""
        return Fraction(abs(a._numerator), a._denominator, _normalize=False)

    def __trunc__(a):
        """trunc(a)"""
        if a._numerator < 0:
            return -(-a._numerator // a._denominator)
        else:
            return a._numerator // a._denominator

    def __floor__(a):
        """math.floor(a)"""
        return a.numerator // a.denominator

    def __ceil__(a):
        """math.ceil(a)"""
        # The negations cleverly convince floordiv to return the ceiling.
        return -(-a.numerator // a.denominator)

    def __round__(self, ndigits=None):
        """round(self, ndigits)

        Rounds half toward even.
        """
        if ndigits is None:
            floor, remainder = divmod(self.numerator, self.denominator)
            if remainder * 2 < self.denominator:
                return floor
            elif remainder * 2 > self.denominator:
                return floor + 1
            # Deal with the half case:
            elif floor % 2 == 0:
                return floor
            else:
                return floor + 1
        shift = 10**abs(ndigits)
        # See _operator_fallbacks.forward to check that the results of
        # these operations will always be Fraction and therefore have
        # round().
        if ndigits > 0:
            return Fraction(round(self * shift), shift)
        else:
            return Fraction(round(self / shift) * shift)

    def __hash__(self):
        """hash(self)"""

        # To make sure that the hash of a Fraction agrees with the hash
        # of a numerically equal integer, float or Decimal instance, we
        # follow the rules for numeric hashes outlined in the
        # documentation.  (See library docs, 'Built-in Types').

        try:
            dinv = pow(self._denominator, -1, _PyHASH_MODULUS)
        except ValueError:
            # ValueError means there is no modular inverse.
            hash_ = _PyHASH_INF
        else:
            # The general algorithm now specifies that the absolute value of
            # the hash is
            #    (|N| * dinv) % P
            # where N is self._numerator and P is _PyHASH_MODULUS.  That's
            # optimized here in two ways:  first, for a non-negative int i,
            # hash(i) == i % P, but the int hash implementation doesn't need
            # to divide, and is faster than doing % P explicitly.  So we do
            #    hash(|N| * dinv)
            # instead.  Second, N is unbounded, so its product with dinv may
            # be arbitrarily expensive to compute.  The final answer is the
            # same if we use the bounded |N| % P instead, which can again
            # be done with an int hash() call.  If 0 <= i < P, hash(i) == i,
            # so this nested hash() call wastes a bit of time making a
            # redundant copy when |N| < P, but can save an arbitrarily large
            # amount of computation for large |N|.
            hash_ = hash(hash(abs(self._numerator)) * dinv)
        result = hash_ if self._numerator >= 0 else -hash_
        return -2 if result == -1 else result

    def __eq__(a, b):
        """a == b"""
        if type(b) is int:
            return a._numerator == b and a._denominator == 1
        if isinstance(b, numbers.Rational):
            return (a._numerator == b.numerator and
                    a._denominator == b.denominator)
        if isinstance(b, numbers.Complex) and b.imag == 0:
            b = b.real
        if isinstance(b, float):
            if math.isnan(b) or math.isinf(b):
                # comparisons with an infinity or nan should behave in
                # the same way for any finite a, so treat a as zero.
                return 0.0 == b
            else:
                return a == a.from_float(b)
        else:
            # Since a doesn't know how to compare with b, let's give b
            # a chance to compare itself with a.
            return NotImplemented

    def _richcmp(self, other, op):
        """Helper for comparison operators, for internal use only.

        Implement comparison between a Rational instance `self`, and
        either another Rational instance or a float `other`.  If
        `other` is not a Rational instance or a float, return
        NotImplemented. `op` should be one of the six standard
        comparison operators.

        """
        # convert other to a Rational instance where reasonable.
        if isinstance(other, numbers.Rational):
            return op(self._numerator * other.denominator,
                      self._denominator * other.numerator)
        if isinstance(other, float):
            if math.isnan(other) or math.isinf(other):
                return op(0.0, other)
            else:
                return op(self, self.from_float(other))
        else:
            return NotImplemented

    def __lt__(a, b):
        """a < b"""
        return a._richcmp(b, operator.lt)

    def __gt__(a, b):
        """a > b"""
        return a._richcmp(b, operator.gt)

    def __le__(a, b):
        """a <= b"""
        return a._richcmp(b, operator.le)

    def __ge__(a, b):
        """a >= b"""
        return a._richcmp(b, operator.ge)

    def __bool__(a):
        """a != 0"""
        # bpo-39274: Use bool() because (a._numerator != 0) can return an
        # object which is not a bool.
        return bool(a._numerator)

    # support for pickling, copy, and deepcopy

    def __reduce__(self):
        return (self.__class__, (str(self),))

    def __copy__(self):
        if type(self) == Fraction:
            return self     # I'm immutable; therefore I am my own clone
        return self.__class__(self._numerator, self._denominator)

    def __deepcopy__(self, memo):
        if type(self) == Fraction:
            return self     # My components are also immutable
        return self.__class__(self._numerator, self._denominator)


win.timer.stop()

win.timer.start()

%%writefile  ~/miniconda3/envs/cloned_base/lib/python3.9/site-packages/vispy/geometry/torusknot.py
from __future__ import division

import numpy as np
#Python 3.9 changed from: from fractions import gdc
from math import gcd


class TorusKnot(object):
    """Representation of a torus knot or link.

    A torus knot is one that can be drawn on the surface of a
    torus. It is parameterised by two integers p and q as below; in
    fact this returns a single knot (a single curve) only if p and q
    are coprime, otherwise it describes multiple linked curves.

    Parameters
    ----------
    p : int
        The number of times the knot winds around the outside of the
        torus. Defaults to 2.
    q : int
        The number of times the knot passes through the hole in the
        centre of the torus. Defaults to 3.
    num_points : int
        The number of points in the returned piecewise linear
        curve. If there are multiple curves (i.e. a torus link), this
        is the number of points in *each* curve.  Defaults to 100.
    major_radius : float
        Distance from the center of the torus tube to the center of the torus.
        Defaults to 10.
    minor_radius : float
        The radius of the torus tube. Defaults to 5.

    """

    def __init__(self, p=3, q=2, num_points=100, major_radius=10.,
                 minor_radius=5.):
        self._p = p
        self._q = q
        self._num_points = num_points
        self._major_radius = major_radius
        self._minor_radius = minor_radius

        self._calculate_vertices()

    def _calculate_vertices(self):
        angles = np.linspace(0, 2*np.pi, self._num_points)

        num_components = self.num_components

        divisions = (np.max([self._q, self._p]) *
                     np.min([self._q, self._p]) / self.num_components)
        starting_angles = np.linspace(
            0, 2*np.pi, divisions + 1)[
            :num_components]
        q = self._q / num_components
        p = self._p / num_components

        components = []
        for starting_angle in starting_angles:
            vertices = np.zeros((self._num_points, 3))
            local_angles = angles + starting_angle
            radii = (self._minor_radius * np.cos(q * angles) +
                     self._major_radius)
            vertices[:, 0] = radii * np.cos(p * local_angles)
            vertices[:, 1] = radii * np.sin(p * local_angles)
            vertices[:, 2] = (self._minor_radius * -1 *
                              np.sin(q * angles))
            components.append(vertices)

        self._components = components

    @property
    def first_component(self):
        '''The vertices of the first component line of the torus knot or link.
        '''
        return self._components[0]

    @property
    def components(self):
        '''A list of the vertices in each line of the torus knot or link.
        Even if p and q are coprime, this is a list with just one
        entry.
        '''
        return self._components

    @property
    def num_components(self):
        '''The number of component lines in the torus link. This is equal
        to the greatest common divisor of p and q.
        '''
        return gcd(self._p, self._q)

    @property
    def q(self):
        '''The q parameter of the torus knot or link.'''
        return self._q

    @q.setter
    def q(self, q):
        self._q = q
        self._calculate_vertices()

    @property
    def p(self):
        '''The p parameter of the torus knot or link.'''
        return self._p

    @p.setter
    def p(self, p):
        self._p = p
        self._calculate_vertices()

    @property
    def minor_radius(self):
        '''The minor radius of the torus.'''
        return self._minor_radius

    @minor_radius.setter
    def minor_radius(self, r):
        self._minor_radius = r
        self._calculate_vertices()

    @property
    def major_radius(self):
        '''The major radius of the torus.'''
        return self._major_radius

    @major_radius.setter
    def major_radius(self, r):
        self._major_radius = r
        self._calculate_vertices()

    @property
    def num_points(self):
        '''The number of points in the vertices returned for each knot/link
        component'''
        return self._num_points

    @num_points.setter
    def num_points(self, r):
        self._num_points = r
        self._calculate_vertices()




import math

import numpy as np

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a5", landscape=True)
vsk.scale("1cm")

# high level of detail
vsk.detail("0.1mm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

# rough level of detail
vsk.translate(7, 0)
vsk.detail("5mm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

# hardly usable level of detail
vsk.translate(7, 0)
vsk.detail("2cm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

vsk.display()
vsk.save("detail.svg")



import random
import struct
import urllib
from itertools import islice
from struct import unpack

from shapely.geometry import MultiLineString

import vsketch


# unpacking functions are from https://github.com/googlecreativelab/quickdraw-dataset/blob/master/examples/binary_file_parser.py
def unpack_drawing(file_handle):
    (key_id,) = unpack("Q", file_handle.read(8))
    (country_code,) = unpack("2s", file_handle.read(2))
    (recognized,) = unpack("b", file_handle.read(1))
    (timestamp,) = unpack("I", file_handle.read(4))
    (n_strokes,) = unpack("H", file_handle.read(2))
    image = []
    for i in range(n_strokes):
        (n_points,) = unpack("H", file_handle.read(2))
        fmt = str(n_points) + "B"
        x = unpack(fmt, file_handle.read(n_points))
        y = unpack(fmt, file_handle.read(n_points))
        image.append((x, y))

    return {
        "key_id": key_id,
        "country_code": country_code,
        "recognized": recognized,
        "timestamp": timestamp,
        "image": image,
    }


def unpack_drawings(filename):
    with open(filename, "rb") as f:
        while True:
            try:
                yield unpack_drawing(f)
            except struct.error:
                break


def quickdraw_to_linestring(qd_image):
    """Returns a Shapely MultiLineString for the provided quickdraw image.
    This MultiLineString can be passed to vsketch
    """
    linestrings = []
    for i in range(0, len(qd_image["image"])):
        line = zip(qd_image["image"][i][0], qd_image["image"][i][1])
        linestrings.append(tuple(line))
    return MultiLineString(linestrings)


# Set the quickdraw set
QUICKDRAW_SET_NAME = "dog"

quickdraw_filepath, _ = urllib.request.urlretrieve(
    f"https://storage.googleapis.com/quickdraw_dataset/full/binary/{QUICKDRAW_SET_NAME}.bin",
    f"{QUICKDRAW_SET_NAME}.bin",
)

print(quickdraw_filepath)

drawing_set = unpack_drawings(quickdraw_filepath)
drawing_subset = list(islice(drawing_set, 10000))

vsk = vsketch.Vsketch()
vsk.size("125x125mm")
vsk.penWidth("0.5mm")

# Set the dimensions of the grid
grid_size = 5

vsk.scale(1 / grid_size)
samples = random.sample(drawing_subset, grid_size ** 2)
for i in range(grid_size ** 2):
    drawing = quickdraw_to_linestring(samples[i])
    vsk.geometry(drawing)
    vsk.translate(vsk.width, 0)
    if (i + 1) % grid_size == 0:
        vsk.translate(-grid_size * vsk.width, vsk.height)

vsk.display(fig_size=(12, 12))
vsk.save(f"quick_dog_1{QUICKDRAW_SET_NAME}.svg")

import random
import struct
import urllib
from itertools import islice
from struct import unpack

from shapely.geometry import MultiLineString

import vsketch


# unpacking functions are from https://github.com/googlecreativelab/quickdraw-dataset/blob/master/examples/binary_file_parser.py
def unpack_drawing(file_handle):
    (key_id,) = unpack("Q", file_handle.read(8))
    (country_code,) = unpack("2s", file_handle.read(2))
    (recognized,) = unpack("b", file_handle.read(1))
    (timestamp,) = unpack("I", file_handle.read(4))
    (n_strokes,) = unpack("H", file_handle.read(2))
    image = []
    for i in range(n_strokes):
        (n_points,) = unpack("H", file_handle.read(2))
        fmt = str(n_points) + "B"
        x = unpack(fmt, file_handle.read(n_points))
        y = unpack(fmt, file_handle.read(n_points))
        image.append((x, y))

    return {
        "key_id": key_id,
        "country_code": country_code,
        "recognized": recognized,
        "timestamp": timestamp,
        "image": image,
    }


def unpack_drawings(filename):
    with open(filename, "rb") as f:
        while True:
            try:
                yield unpack_drawing(f)
            except struct.error:
                break


def quickdraw_to_linestring(qd_image):
    """Returns a Shapely MultiLineString for the provided quickdraw image.
    This MultiLineString can be passed to vsketch
    """
    linestrings = []
    for i in range(0, len(qd_image["image"])):
        line = zip(qd_image["image"][i][0], qd_image["image"][i][1])
        linestrings.append(tuple(line))
    return MultiLineString(linestrings)


# Set the quickdraw set
QUICKDRAW_SET_NAME = "crab"

quickdraw_filepath, _ = urllib.request.urlretrieve(
    f"https://storage.googleapis.com/quickdraw_dataset/full/binary/{QUICKDRAW_SET_NAME}.bin",
    f"{QUICKDRAW_SET_NAME}.bin",
)

print(quickdraw_filepath)

drawing_set = unpack_drawings(quickdraw_filepath)
drawing_subset = list(islice(drawing_set, 10000))

vsk = vsketch.Vsketch()
vsk.size("125x125mm")
vsk.penWidth("0.5mm")

# Set the dimensions of the grid
grid_size = 5

vsk.scale(1 / grid_size)
samples = random.sample(drawing_subset, grid_size ** 2)
for i in range(grid_size ** 2):
    drawing = quickdraw_to_linestring(samples[i])
    vsk.geometry(drawing)
    vsk.translate(vsk.width, 0)
    if (i + 1) % grid_size == 0:
        vsk.translate(-grid_size * vsk.width, vsk.height)

vsk.display(fig_size=(12, 12))
vsk.save(f"quick_draw0_{QUICKDRAW_SET_NAME}.svg")

Items=["aircraft carrier","airplane","alarm clock","ambulance","angel","animal migration","ant","anvil","apple","arm","asparagus","axe","backpack","banana","bandage","barn","baseball","baseball bat","basket","basketball","bat","bathtub","beach","bear","beard","bed","bee","belt","bench","bicycle","binoculars","bird","birthday cake","blackberry","blueberry","book","boomerang","bottlecap","bowtie","bracelet","brain","bread","bridge","broccoli","broom","bucket","bulldozer","bus","bush","butterfly","cactus","cake","calculator","calendar","camel","camera","camouflage","campfire","candle","cannon","canoe","car","carrot","castle","cat","ceiling fan","cello","cell phone","chair","chandelier","church","circle","clarinet","clock","cloud","coffee cup","compass","computer","cookie","cooler","couch","cow","crab","crayon","crocodile","crown","cruise ship","cup","diamond","dishwasher","diving board","dog","dolphin","donut","door","dragon","dresser","drill","drums","duck","dumbbell","ear","elbow","elephant","envelope","eraser","eye","eyeglasses","face","fan","feather","fence","finger","fire hydrant","fireplace","firetruck","fish","flamingo","flashlight","flip flops","floor lamp","flower","flying saucer","foot","fork","frog","frying pan","garden","garden hose","giraffe","goatee","golf club","grapes","grass","guitar","hamburger","hammer","hand","harp","hat","headphones","hedgehog","helicopter","helmet","hexagon","hockey puck","hockey stick","horse","hospital","hot air balloon","hot dog","hot tub","hourglass","house","house plant","hurricane","ice cream","jacket","jail","kangaroo","key","keyboard","knee","knife","ladder","lantern","laptop","leaf","leg","light bulb","lighter","lighthouse","lightning","line","lion","lipstick","lobster","lollipop","mailbox","map","marker","matches","megaphone","mermaid","microphone","microwave","monkey","moon","mosquito","motorbike","mountain","mouse","moustache","mouth","mug","mushroom","nail","necklace","nose","ocean","octagon","octopus","onion","oven","owl","paintbrush","paint can","palm tree","panda","pants","paper clip","parachute","parrot","passport","peanut","pear","peas","pencil","penguin","piano","pickup truck","picture frame","pig","pillow","pineapple","pizza","pliers","police car","pond","pool","popsicle","postcard","potato","power outlet","purse","rabbit","raccoon","radio","rain","rainbow","rake","remote control","rhinoceros","rifle","river","roller coaster","rollerskates","sailboat","sandwich","saw","saxophone","school bus","scissors","scorpion","screwdriver","sea turtle","see saw","shark","sheep","shoe","shorts","shovel","sink","skateboard","skull","skyscraper","sleeping bag","smiley face","snail","snake","snorkel","snowflake","snowman","soccer ball","sock","speedboat","spider","spoon","spreadsheet","square","squiggle","squirrel","stairs","star","steak","stereo","stethoscope","stitches","stop sign","stove","strawberry","streetlight","string bean","submarine","suitcase","sun","swan","sweater","swing set","sword","syringe","table","teapot","teddy-bear","telephone","television","tennis racquet","tent","The Eiffel Tower","The Great Wall of China","The Mona Lisa","tiger","toaster","toe","toilet","tooth","toothbrush","toothpaste","tornado","tractor","traffic light","train","tree","triangle","trombone","truck","trumpet","t-shirt","umbrella","underwear","van","vase","violin","washing machine","watermelon","waterslide","whale","wheel","windmill","wine bottle","wine glass","wristwatch","yoga","zebra"]

print(Items[5])

from random import randint
def PickOne(List):
    Num = len(List)
    num = randint(0,Num-1)
    return Items[num]


List = Items
PickOne(List)

import random
import struct
import urllib
from itertools import islice
from struct import unpack

from shapely.geometry import MultiLineString

import vsketch

List = Items
# unpacking functions are from https://github.com/googlecreativelab/quickdraw-dataset/blob/master/examples/binary_file_parser.py
def unpack_drawing(file_handle):
    (key_id,) = unpack("Q", file_handle.read(8))
    (country_code,) = unpack("2s", file_handle.read(2))
    (recognized,) = unpack("b", file_handle.read(1))
    (timestamp,) = unpack("I", file_handle.read(4))
    (n_strokes,) = unpack("H", file_handle.read(2))
    image = []
    for i in range(n_strokes):
        (n_points,) = unpack("H", file_handle.read(2))
        fmt = str(n_points) + "B"
        x = unpack(fmt, file_handle.read(n_points))
        y = unpack(fmt, file_handle.read(n_points))
        image.append((x, y))

    return {
        "key_id": key_id,
        "country_code": country_code,
        "recognized": recognized,
        "timestamp": timestamp,
        "image": image,
    }


def unpack_drawings(filename):
    with open(filename, "rb") as f:
        while True:
            try:
                yield unpack_drawing(f)
            except struct.error:
                break


def quickdraw_to_linestring(qd_image):
    """Returns a Shapely MultiLineString for the provided quickdraw image.
    This MultiLineString can be passed to vsketch
    """
    linestrings = []
    for i in range(0, len(qd_image["image"])):
        line = zip(qd_image["image"][i][0], qd_image["image"][i][1])
        linestrings.append(tuple(line))
    return MultiLineString(linestrings)


# Set the quickdraw set
QUICKDRAW_SET_NAME = PickOne(List)

quickdraw_filepath, _ = urllib.request.urlretrieve(
    f"https://storage.googleapis.com/quickdraw_dataset/full/binary/{QUICKDRAW_SET_NAME}.bin",
    f"{QUICKDRAW_SET_NAME}.bin",
)

print(quickdraw_filepath)

drawing_set = unpack_drawings(quickdraw_filepath)
drawing_subset = list(islice(drawing_set, 10000))

vsk = vsketch.Vsketch()
vsk.size("125x125mm")
vsk.penWidth("0.5mm")

# Set the dimensions of the grid
grid_size = 5

vsk.scale(1 / grid_size)
samples = random.sample(drawing_subset, grid_size ** 2)
for i in range(grid_size ** 2):
    drawing = quickdraw_to_linestring(samples[i])
    vsk.geometry(drawing)
    vsk.translate(vsk.width, 0)
    if (i + 1) % grid_size == 0:
        vsk.translate(-grid_size * vsk.width, vsk.height)

vsk.display(fig_size=(12, 12))
vsk.save(f"quick_draw0_{QUICKDRAW_SET_NAME}.svg")



import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4")
vsk.scale("1cm")

NUM = 200
FREQ = 0.003
SPEED = 0.06

for i in range(NUM):
    t = i * FREQ
    v = i * SPEED
    vsk.bezier(
        vsk.noise(t, 0) * 10 + v,
        vsk.noise(t, 1000) * 10 + v,
        vsk.noise(t, 2000) * 10 + v,
        vsk.noise(t, 3000) * 10 + v,
        vsk.noise(t, 4000) * 10 + v,
        vsk.noise(t, 5000) * 10 + v,
        vsk.noise(t, 6000) * 10 + v,
        vsk.noise(t, 7000) * 10 + v,
    )

vsk.display()



import vsketch

class MySketch(vsketch.SketchClass):
    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("a4", landscape=False)

    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")


if __name__ == "__main__":
    MySketch().display()

class MySketch(vsketch.SketchClass):
    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("a4", landscape=False)

    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")



import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=True)
vsk.line(0, 0, 100, 202)
vsk.rect(100, 100, 500, 180)
vsk.circle(2, 2, radius=300)
vsk.triangle(0, 0, 1, 1, 0, 1)

vsk.display()

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=False)
for i in range(0,150,15):
    #vsk.line(0, 0, 100, 202)
    vsk.rect(-150+i, 60+i, 10+i*3, 250+i)
    vsk.circle(200, -200, radius=150+i)
    #vsk.triangle(i, 10+i, 100, 100, 500, 200)
vsk.save("my_file.svg")
vsk.display()

!vsk run examples/quick_draw

!ls 

!ls ../schotter	

!vsk run 

import vsketch

class MySketch(vsketch.SketchClass):
    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("a4", landscape=False)

    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")


if __name__ == "__main__":
    MySketch().display()

class MySketch(vsketch.SketchClass):
    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("a4", landscape=False)

    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")



import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=True)
vsk.line(0, 0, 100, 202)
vsk.rect(100, 100, 500, 180)
vsk.circle(2, 2, radius=300)
vsk.triangle(0, 0, 1, 1, 0, 1)

vsk.display()

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=False)
for i in range(0,150,15):
    #vsk.line(0, 0, 100, 202)
    vsk.rect(-150+i, 60+i, 10+i*3, 250+i)
    vsk.circle(200, -200, radius=150+i)
    #vsk.triangle(i, 10+i, 100, 100, 500, 200)
vsk.save("my_file.svg")
vsk.display()

!vsk run ../quick_draw

import vsketch


class SchotterSketch(vsketch.SketchClass):
    columns = vsketch.Param(12)
    rows = vsketch.Param(22)
    fuzziness = vsketch.Param(1.0)

    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("a4", landscape=False)
        vsk.scale("cm")

        for j in range(self.rows):
            with vsk.pushMatrix():
                for i in range(self.columns):
                    with vsk.pushMatrix():
                        vsk.rotate(self.fuzziness * 0.03 * vsk.random(-j, j))
                        vsk.translate(
                            self.fuzziness * 0.01 * vsk.randomGaussian() * j,
                            self.fuzziness * 0.01 * vsk.randomGaussian() * j,
                        )
                        vsk.rect(0, 0, 1, 1)
                    vsk.translate(1, 0)
            vsk.translate(0, 1)
            vsk.save("squares.svg") 
    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")
        

SchotterSketch.display()


from shapely.affinity import translate
from shapely.geometry import Polygon

import vsketch


class StrokeJoinSketch(vsketch.SketchClass):
    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("a4", landscape=False)
        vsk.scale("cm")

        p = translate(
            Polygon(
                [(-3, -1), (1.5, -2), (1.4, 2), (0, 1.5), (-1, 2.3)],
                holes=[[(-0.5, -0.5), (0.5, -0.5), (0.5, 0.5), (-0.5, 0.5)]],
            ),
            2.5,
            14,
        )

        # round join style (default)
        vsk.strokeWeight(10)
        vsk.square(0, 0, 4)
        vsk.triangle(0, 6, 2, 10, 4, 7)
        vsk.geometry(p)

        vsk.translate(7, 0)

        # bevel join style
        vsk.strokeJoin("bevel")
        vsk.square(0, 0, 4)
        vsk.triangle(0, 6, 2, 10, 4, 7)
        vsk.geometry(p)

        vsk.translate(7, 0)

        # mitre join style
        vsk.strokeJoin("mitre")
        vsk.square(0, 0, 4)
        vsk.triangle(0, 6, 2, 10, 4, 7)
        vsk.geometry(p)

    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")


if __name__ == "__main__":
    StrokeJoinSketch.display()

import numpy as np

import vsketch
from vsketch import Vsketch


class EasingSketch(vsketch.SketchClass):
    mode = vsketch.Param("linear", choices=vsketch.EASING_FUNCTIONS.keys())
    low_deadzone = vsketch.Param(0.0, 0.0, 100.0, step=5)
    high_deadzone = vsketch.Param(0.0, 0.0, 100.0, step=5)
    param = vsketch.Param(10.0, step=1.0, decimals=1)

    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("20x20cm", landscape=False, center=False)
        vsk.scale("cm")

        vsk.translate(2.5, 2.5)
        vsk.scale(15)
        input_coord = np.linspace(0.0, 1.0, num=1000)
        output_coord = Vsketch.easing(
            input_coord,
            mode=self.mode,
            low_dead=self.low_deadzone / 100.0,
            high_dead=self.high_deadzone / 100.0,
            param=self.param,
        )
        vsk.stroke(2)
        vsk.polygon(input_coord, 1.0 - output_coord)
        vsk.point(0.0, 1.0)
        vsk.point(1.0, 0.0)
        if self.low_deadzone > 0.0:
            vsk.point(self.low_deadzone / 100.0, 1.0)
        if self.high_deadzone > 0.0:
            vsk.point(1.0 - self.high_deadzone / 100.0, 0.0)
        vsk.vpype("penwidth --layer 2 .6mm")

        # Draw axes
        vsk.stroke(3)
        vsk.polygon([0, 0, 1, 1], [1.05, 1.07, 1.07, 1.05])
        vsk.polygon([-0.05, -0.07, -0.07, -0.05], [0, 0, 1, 1])
        vsk.vpype("color --layer 3 black")

        # Draw grid
        vsk.stroke(1)
        for coord in np.linspace(0, 1, num=11):
            vsk.line(coord, 0, coord, 1)
            vsk.line(0, coord, 1, coord)
        vsk.vpype("color --layer 1 #eee")

        # Draw text
        vsk.stroke(3)
        vsk.textMode("label")
        vsk.text("0", 0, 1.1, align="center")
        vsk.text("1", 1, 1.1, align="center")
        vsk.text("input", 0.5, 1.1, align="center")
        vsk.text("0", -0.1, 1, align="center")
        vsk.text("1", -0.1, 0, align="center")

        # vsk.text() doesn't support vertical text in label mode
        with vsk.pushMatrix():
            vsk.translate(-0.1, 0.5)
            vsk.rotate(-90, degrees=True)
            vsk.text("output", align="center", mode="transform", size=0.03)

        vsk.stroke(5)
        vsk.text(self.mode, 0.5, -0.07, align="center", size="30pt")
        vsk.vpype(f"color -l5 black")

    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")


if __name__ == "__main__":
    EasingSketch.display()

import numpy as np

import vsketch


class NoiseBezierSketch(vsketch.SketchClass):
    N = vsketch.Param(200, 0)
    freq = vsketch.Param(0.003, decimals=3)
    drift = vsketch.Param(0.06, decimals=2)

    def draw(self, vsk: vsketch.Vsketch) -> None:
        vsk.size("a4", landscape=False)
        vsk.scale("cm")

        t = np.arange(self.N) * self.freq
        perlin = vsk.noise(t, np.arange(8) * 1000)

        for i in range(self.N):
            v = i * self.drift
            vsk.bezier(
                perlin[i, 0] * 15 + v,
                perlin[i, 1] * 15 + v,
                perlin[i, 2] * 15 + v,
                perlin[i, 3] * 15 + v,
                perlin[i, 4] * 15 + v,
                perlin[i, 5] * 15 + v,
                perlin[i, 6] * 15 + v,
                perlin[i, 7] * 15 + v,
            )
        vsk.display(fig_size=(12, 12))
    def finalize(self, vsk: vsketch.Vsketch) -> None:
        vsk.vpype("linemerge linesimplify reloop linesort")


NoiseBezierSketch.display()





import math

import numpy as np

import vsketch

N = 100
RANDOM_PHASE = False


def get_primes(n):
    numbers = set(range(n, 1, -1))
    primes = []
    while numbers:
        p = numbers.pop()
        primes.append(p)
        numbers.difference_update(set(range(p * 2, n + 1, p)))
    return primes


vsk = vsketch.Vsketch()
vsk.size("10in", "10in")
vsk.scale("3mm")

for i, prime in enumerate(get_primes(N)):
    vsk.circle(0, 0, 2 * (i + 1))

    if RANDOM_PHASE:
        phase = np.random.random() * 2 * math.pi
    else:
        phase = -math.pi / 2

    for angle in np.linspace(0, 2 * math.pi, prime, endpoint=False):
        vsk.line(
            (i + 1) * math.cos(angle + phase),
            (i + 1) * math.sin(angle + phase),
            (i + 2) * math.cos(angle + phase),
            (i + 2) * math.sin(angle + phase),
        )

vsk.circle(0, 0, 2 * (i + 2))
vsk.vpype("linemerge linesort")


vsk.display()
vsk.save("prime_circles.svg")



import math

import numpy as np

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=True)
vsk.scale("1cm")

NUM_LINE = 200
Y_OFFSET = 18 / NUM_LINE
X_FREQ = 0.25
Y_FREQ = 4

x_coords = np.linspace(0, 25, 1000)

for i in range(NUM_LINE):
    y_coords = (
        np.array([vsk.noise(x * X_FREQ, i / NUM_LINE * Y_FREQ) for x in x_coords])
        + Y_OFFSET * i
    )
    vsk.polygon(x_coords, y_coords)

vsk.display()
vsk.save("random_lines.svg")


NUM_LINES = 200
POINT_PER_LINE = 100
RDIR_RANGE = math.pi / 6

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=True)
vsk.scale("1cm")
vsk.rotate(-90, degrees=True)


noise_coord = np.linspace(0, 1, POINT_PER_LINE)

dirs = np.linspace(0, 2 * math.pi, NUM_LINES)

for dir in dirs:

    rdir = vsk.map(
        np.array([vsk.noise(x, dir) for x in noise_coord]),
        0,
        1,
        dir - RDIR_RANGE,
        dir + RDIR_RANGE,
    )
    roffset = vsk.map(
        np.array([vsk.noise(x, dir, 100) for x in noise_coord]), 0, 1, 0.05, 0.12
    )

    xoffset = roffset * np.cos(rdir)
    yoffset = roffset * np.sin(rdir)

    vsk.polygon(np.cumsum(xoffset), np.cumsum(yoffset))

vsk.display()
vsk.save("random_flower.svg")



import numpy as np
from shapely.affinity import translate
from shapely.geometry import Point
from shapely.ops import unary_union

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4")
vsk.scale("4mm")

for i in range(5):
    for j in range(7):
        shape = unary_union(
            [
                Point(*np.random.random(2) * 5).buffer(np.random.random())
                for _ in range(15)
            ]
        )
        vsk.geometry(translate(shape, i * 8, j * 8))

vsk.display(fig_size=(12, 12))
vsk.save("shapely.svg")

for i in range(5):
    for j in range(7):
        shape = unary_union(
            [
                Point(*np.random.random(2) * 5).buffer(np.random.random())
                for _ in range(15)
            ]
        )
        vsk.geometry(translate(shape, i * 8, j * 8))

vsk.display(fig_size=(12, 12))
vsk.save("shapely2.svg")



from shapely.affinity import translate
from shapely.geometry import Polygon

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=True)
vsk.scale("1cm")
vsk.penWidth("0.5mm")

p = translate(
    Polygon(
        [(-3, -1), (1.5, -2), (1.4, 2), (0, 1.5), (-1, 2.3)],
        holes=[[(-0.5, -0.5), (0.5, -0.5), (0.5, 0.5), (-0.5, 0.5)]],
    ),
    2.5,
    14,
)

# the default is no fill and stroke to layer 1
vsk.square(0, 0, 4)
vsk.circle(2, 8, 4)
vsk.geometry(p)

vsk.translate(7, 0)

# add some fill to layer 2
vsk.fill(2)
vsk.penWidth("1mm", 2)
vsk.square(0, 0, 4)
vsk.circle(2, 8, 4)
vsk.geometry(p)

vsk.translate(7, 0)

# with thick strock
vsk.fill(2)
vsk.penWidth("1mm", 2)
vsk.strokeWeight(4)
vsk.square(0, 0, 4)
vsk.circle(2, 8, 4)
vsk.geometry(p)

vsk.translate(7, 0)

# remove stroke and set fill to layer 3 with a thicker pen
vsk.fill(3)
vsk.penWidth("2mm", 3)
vsk.noStroke()
vsk.square(0, 0, 4)
vsk.circle(2, 8, 4)
vsk.geometry(p)


vsk.display(fig_size=(12, 8))
vsk.save("stroke_fill.svg")



import numpy as np

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a4", landscape=True)
vsk.scale("2cm")

# build a star
angles = np.linspace(0, 2 * np.pi, 5, endpoint=False)
idx = [0, 2, 4, 1, 3, 0]
x = np.cos(angles[idx] - np.pi / 2)
y = np.sin(angles[idx] - np.pi / 2)

with vsk.pushMatrix():
    for i in range(5):
        with vsk.pushMatrix():
            vsk.scale(0.8 ** i)
            vsk.polygon(x, y)

        vsk.translate(2, 0)

vsk.translate(0, 4)

for i in range(5):
    with vsk.pushMatrix():
        vsk.rotate(i * 4, degrees=True)
        vsk.polygon(x, y)

    vsk.translate(2, 0)

vsk.display()
vsk.save("transforms.svg")



import ipywidgets as widgets

widgets.IntSlider(
    value=7,
    min=0,
    max=10,
    step=1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='d'
)

widgets.FloatSlider(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='.1f',
)

widgets.FloatSlider(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='vertical',
    readout=True,
    readout_format='.1f',
)

widgets.FloatLogSlider(
    value=10,
    base=10,
    min=-10, # max exponent of base
    max=10, # min exponent of base
    step=0.2, # exponent step
    description='Log Slider'
)

widgets.IntRangeSlider(
    value=[5, 7],
    min=0,
    max=10,
    step=1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='d',
)

widgets.FloatRangeSlider(
    value=[5, 7.5],
    min=0,
    max=10.0,
    step=0.1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='.1f',
)

widgets.IntProgress(
    value=7,
    min=0,
    max=10,
    step=1,
    description='Loading:',
    bar_style='', # 'success', 'info', 'warning', 'danger' or ''
    orientation='horizontal'
)

widgets.FloatProgress(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Loading:',
    bar_style='info',
    orientation='horizontal'
)

widgets.BoundedIntText(
    value=7,
    min=0,
    max=10,
    step=1,
    description='Text:',
    disabled=False
)

widgets.BoundedFloatText(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Text:',
    disabled=False
)

widgets.IntText(
    value=7,
    description='Any:',
    disabled=False
)

widgets.FloatText(
    value=7.5,
    description='Any:',
    disabled=False
)

widgets.ToggleButton(
    value=False,
    description='Click me',
    disabled=False,
    button_style='', # 'success', 'info', 'warning', 'danger' or ''
    tooltip='Description',
    icon='check'
)

widgets.Checkbox(
    value=False,
    description='Check me',
    disabled=False
)

widgets.Valid(
    value=False,
    description='Valid!',
)

widgets.Dropdown(
    options=['1', '2', '3'],
    value='2',
    description='Number:',
    disabled=False,
)

widgets.Dropdown(
    options=[('One', 1), ('Two', 2), ('Three', 3)],
    value=2,
    description='Number:',
)

widgets.RadioButtons(
    options=['pepperoni', 'pineapple', 'anchovies'],
#     value='pineapple',
    description='Pizza topping:',
    disabled=False
)

widgets.Select(
    options=['Linux', 'Windows', 'OSX'],
    value='OSX',
    # rows=10,
    description='OS:',
    disabled=False
)

widgets.SelectionSlider(
    options=['scrambled', 'sunny side up', 'poached', 'over easy'],
    value='sunny side up',
    description='I like my eggs ...',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True
)

import datetime
dates = [datetime.date(2015,i,1) for i in range(1,13)]
options = [(i.strftime('%b'), i) for i in dates]
widgets.SelectionRangeSlider(
    options=options,
    index=(0,11),
    description='Months (2015)',
    disabled=False
)

widgets.ToggleButtons(
    options=['Slow', 'Regular', 'Fast'],
    description='Speed:',
    disabled=False,
    button_style='', # 'success', 'info', 'warning', 'danger' or ''
    tooltips=['Description of slow', 'Description of regular', 'Description of fast'],
#     icons=['check'] * 3
)

widgets.SelectMultiple(
    options=['Apples', 'Oranges', 'Pears'],
    value=['Oranges'],
    #rows=10,
    description='Fruits',
    disabled=False
)

widgets.Text(
    value='Hello World',
    placeholder='Type something',
    description='String:',
    disabled=False   
)

widgets.Textarea(
    value='Hello World',
    placeholder='Type something',
    description='String:',
    disabled=False
)

widgets.HBox([widgets.Label(value="The $m$ in $E=mc^2$:"), widgets.FloatSlider()])

widgets.HTML(
    value="Hello <b>World</b>",
    placeholder='Some HTML',
    description='Some HTML',
)

widgets.HTMLMath(
    value=r"Some math and <i>HTML</i>: \(x^2\) and $$\frac{x+1}{x-1}$$",
    placeholder='Some HTML',
    description='Some HTML',
)

file = open("testimage.png", "rb")
image = file.read()
widgets.Image(
    value=image,
    format='png',
    width=300,
    height=400,
)

widgets.Button(
    description='Click me',
    disabled=False,
    button_style='', # 'success', 'info', 'warning', 'danger' or ''
    tooltip='Click me',
    icon='check'
)

play = widgets.Play(
#     interval=10,
    value=50,
    min=0,
    max=100,
    step=1,
    description="Press play",
    disabled=False
)
slider = widgets.IntSlider()
widgets.jslink((play, 'value'), (slider, 'value'))
widgets.HBox([play, slider])

widgets.DatePicker(
    description='Pick a Date',
    disabled=False
)

widgets.ColorPicker(
    concise=False,
    description='Pick a color',
    value='blue',
    disabled=False
)

widgets.FileUpload(
    accept='',  # Accepted file extension e.g. '.txt', '.pdf', 'image/*', 'image/*,.pdf'
    multiple=False  # True to accept multiple files upload else False
)

widgets.Controller(
    index=0,
)

items = [widgets.Label(str(i)) for i in range(4)]
widgets.Box(items)

items = [widgets.Label(str(i)) for i in range(4)]
widgets.HBox(items)

items = [widgets.Label(str(i)) for i in range(4)]
left_box = widgets.VBox([items[0], items[1]])
right_box = widgets.VBox([items[2], items[3]])
widgets.HBox([left_box, right_box])

accordion = widgets.Accordion(children=[widgets.IntSlider(), widgets.Text()])
accordion.set_title(0, 'Slider')
accordion.set_title(1, 'Text')
accordion

tab_contents = ['P0', 'P1', 'P2', 'P3', 'P4']
children = [widgets.Text(description=name) for name in tab_contents]
tab = widgets.Tab()
tab.children = children
for i in range(len(children)):
    tab.set_title(i, str(i))
tab

tab.selected_index = 3

accordion.selected_index = None

tab_nest = widgets.Tab()
tab_nest.children = [accordion, accordion]
tab_nest.set_title(0, 'An accordion')
tab_nest.set_title(1, 'Copy of the accordion')
tab_nest

import ipywidgets as widgets

widgets.IntSlider(
    value=7,
    min=0,
    max=10,
    step=1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='d'
)

widgets.FloatSlider(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='.1f',
)

widgets.FloatSlider(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='vertical',
    readout=True,
    readout_format='.1f',
)

widgets.FloatLogSlider(
    value=10,
    base=10,
    min=-10, # max exponent of base
    max=10, # min exponent of base
    step=0.2, # exponent step
    description='Log Slider'
)

widgets.IntRangeSlider(
    value=[5, 7],
    min=0,
    max=10,
    step=1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='d',
)

widgets.FloatRangeSlider(
    value=[5, 7.5],
    min=0,
    max=10.0,
    step=0.1,
    description='Test:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='.1f',
)

widgets.IntProgress(
    value=7,
    min=0,
    max=10,
    step=1,
    description='Loading:',
    bar_style='', # 'success', 'info', 'warning', 'danger' or ''
    orientation='horizontal'
)

widgets.FloatProgress(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Loading:',
    bar_style='info',
    orientation='horizontal'
)

widgets.BoundedIntText(
    value=7,
    min=0,
    max=10,
    step=1,
    description='Text:',
    disabled=False
)

widgets.BoundedFloatText(
    value=7.5,
    min=0,
    max=10.0,
    step=0.1,
    description='Text:',
    disabled=False
)

widgets.IntText(
    value=7,
    description='Any:',
    disabled=False
)

widgets.FloatText(
    value=7.5,
    description='Any:',
    disabled=False
)

widgets.ToggleButton(
    value=False,
    description='Click me',
    disabled=False,
    button_style='', # 'success', 'info', 'warning', 'danger' or ''
    tooltip='Description',
    icon='check'
)

widgets.Checkbox(
    value=False,
    description='Check me',
    disabled=False
)

widgets.Valid(
    value=False,
    description='Valid!',
)

widgets.Dropdown(
    options=['1', '2', '3'],
    value='2',
    description='Number:',
    disabled=False,
)

widgets.Dropdown(
    options=[('One', 1), ('Two', 2), ('Three', 3)],
    value=2,
    description='Number:',
)

widgets.RadioButtons(
    options=['pepperoni', 'pineapple', 'anchovies'],
#     value='pineapple',
    description='Pizza topping:',
    disabled=False
)

widgets.Select(
    options=['Linux', 'Windows', 'OSX'],
    value='OSX',
    # rows=10,
    description='OS:',
    disabled=False
)

widgets.SelectionSlider(
    options=['scrambled', 'sunny side up', 'poached', 'over easy'],
    value='sunny side up',
    description='I like my eggs ...',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True
)

import datetime
dates = [datetime.date(2015,i,1) for i in range(1,13)]
options = [(i.strftime('%b'), i) for i in dates]
widgets.SelectionRangeSlider(
    options=options,
    index=(0,11),
    description='Months (2015)',
    disabled=False
)

widgets.ToggleButtons(
    options=['Slow', 'Regular', 'Fast'],
    description='Speed:',
    disabled=False,
    button_style='', # 'success', 'info', 'warning', 'danger' or ''
    tooltips=['Description of slow', 'Description of regular', 'Description of fast'],
#     icons=['check'] * 3
)

widgets.SelectMultiple(
    options=['Apples', 'Oranges', 'Pears'],
    value=['Oranges'],
    #rows=10,
    description='Fruits',
    disabled=False
)

widgets.Text(
    value='Hello World',
    placeholder='Type something',
    description='String:',
    disabled=False   
)

widgets.Textarea(
    value='Hello World',
    placeholder='Type something',
    description='String:',
    disabled=False
)

widgets.HBox([widgets.Label(value="The $m$ in $E=mc^2$:"), widgets.FloatSlider()])

widgets.HTML(
    value="Hello <b>World</b>",
    placeholder='Some HTML',
    description='Some HTML',
)

widgets.HTMLMath(
    value=r"Some math and <i>HTML</i>: \(x^2\) and $$\frac{x+1}{x-1}$$",
    placeholder='Some HTML',
    description='Some HTML',
)

file = open("testimage.png", "rb")
image = file.read()
widgets.Image(
    value=image,
    format='png',
    width=300,
    height=400,
)

widgets.Button(
    description='Click me',
    disabled=False,
    button_style='', # 'success', 'info', 'warning', 'danger' or ''
    tooltip='Click me',
    icon='check'
)

play = widgets.Play(
#     interval=10,
    value=50,
    min=0,
    max=100,
    step=1,
    description="Press play",
    disabled=False
)
slider = widgets.IntSlider()
widgets.jslink((play, 'value'), (slider, 'value'))
widgets.HBox([play, slider])

widgets.DatePicker(
    description='Pick a Date',
    disabled=False
)

widgets.ColorPicker(
    concise=False,
    description='Pick a color',
    value='blue',
    disabled=False
)

widgets.FileUpload(
    accept='',  # Accepted file extension e.g. '.txt', '.pdf', 'image/*', 'image/*,.pdf'
    multiple=False  # True to accept multiple files upload else False
)

widgets.Controller(
    index=0,
)

items = [widgets.Label(str(i)) for i in range(4)]
widgets.Box(items)

items = [widgets.Label(str(i)) for i in range(4)]
widgets.HBox(items)

items = [widgets.Label(str(i)) for i in range(4)]
left_box = widgets.VBox([items[0], items[1]])
right_box = widgets.VBox([items[2], items[3]])
widgets.HBox([left_box, right_box])

accordion = widgets.Accordion(children=[widgets.IntSlider(), widgets.Text()])
accordion.set_title(0, 'Slider')
accordion.set_title(1, 'Text')
accordion

tab_contents = ['P0', 'P1', 'P2', 'P3', 'P4']
children = [widgets.Text(description=name) for name in tab_contents]
tab = widgets.Tab()
tab.children = children
for i in range(len(children)):
    tab.set_title(i, str(i))
tab

tab.selected_index = 3

accordion.selected_index = None

tab_nest = widgets.Tab()
tab_nest.children = [accordion, accordion]
tab_nest.set_title(0, 'An accordion')
tab_nest.set_title(1, 'Copy of the accordion')
tab_nest

# import wikipedia doing a wikipedia.search
# searches for wiki pages concerning the topic
from time import sleep
import wikipedia
# opens a text input and prints
# Research : topic entered
topic = raw_input("Research : ")
rows = wikipedia.search(topic)
for row in rows:
    row = str(row)
    #row = row.replace("(disambiguation)","")
    print row


# Wiki Search -Summary of search results print to text
# AND to a database
import sqlite3
from time import sleep
from shutil import copyfile
import wikipedia
#backup your current datafile incase of a problem
dbname = 'WIKIData.db'
conn = sqlite3.connect(dbname) 
copyfile('WIKIData.db','WIKIData.db-bak')
topic = raw_input("Research : ")
fname = topic.replace(" ", "")+".txt"
fname = "Wiki_"+fname

conn.text_factory = str
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS wiki
USING FTS3(row, para);
''')
f =open(fname, "w")
f.close()

rows = wikipedia.search(topic)
for row in rows:
    row = row.encode('utf-8').strip()
    row = str(row)
    para = wikipedia.summary(row)
    para =  para.encode('utf-8').strip() 
    para = '\n\n'.join((row, para))
    enter = open(fname, "a")
    c.execute("INSERT INTO wiki VALUES (?,?)", (row, para))
    conn.commit()
    enter.write(para)
    enter.close()
    print para
enter.close()

import sqlite3
import sys
conn = sqlite3.connect('WIKIData.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, row, para FROM wiki WHERE para MATCH ?', (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],"\n",(row)[2],"\n"
    if count > req:
        conn.close()
        sys.exit()

import sqlite3
import sys
conn = sqlite3.connect('WIKIData.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
#search = raw_input("Search : ")
for row in c.execute('SELECT rowid, row FROM wiki'):    
    count=count+1
    print (row)[0],"-",(row)[1]
    if count > req:
        conn.close()
        sys.exit()

import codecs
with codecs.open(filename,'r',encoding='utf8') as f:
    text = f.read()
# process Unicode text
with codecs.open(filename,'w',encoding='utf8') as f:
    f.write(text)

readOUT = open("ALLtextClean.txt","w")
readOUT.close()
readIn = open("ALLtext.txt","r")
readOUT = open("ALLtextClean.txt","a")
lines = readIn.readlines()
for line in lines:
    line=line.decode('utf-8','ignore').encode("utf-8")
    readOUT.write(line)
    



iconv -c -t UTF-8 < ALLtext.txt > exp001.txt

import Txmanip
help(Txmanip)

# %load /home/jack/anaconda2/lib/python2.7/site-packages/Txmanip/Txsearch
# Ask to enter string to search
# this will search all *.txt files in the current directory
# input window will ask "Search Phrase" 
"""
import Txsearch
Txsearch.txsearch()
"""
import os
import timeit
def txsearch():
    Sstring = raw_input("Search Phrase")
    for fname in os.listdir('./'):
       # Apply file type filter   
       if fname.endswith(".txt"):
            # Open file for reading
            fo = open(fname)
            # Read the first line from the file
            line = fo.readline()
            # Initialize counter for line number
            line_no = 1
            # Loop until EOF
            while line != '' :
                    index = line.find(Sstring)
                    if ( index != -1) :
                        # Set some parameters no lines longer than 240 characters 
                        # or less than search phrase +30 characters 
                        if len(line)< 240 and len(line)> len(Sstring)+20 :
                            #print(fname, "[", line_no, ",", index, "] ", line)
                            #print fname,line[1:-8],"  "
                            print fname,line_no,line
                    # Read next line
                    line = fo.readline()  
                    # Increment line counter
                    line_no += 1
            # Close the files
            fo.close()
            
txsearch()

from Txmanip import Txsearch
Txsearch.txsearch

from Txmanip import RemoveBlank
RemoveBlank.removeblank("ALLtext.txt", "ALLtextnb.txt")

!grep -axv '.*' ALLtextnbCleaner.txt

import re
nonascii = bytearray(range(0x80, 0x100))
with open('ALLtextnbClean.txt','rb') as infile, open('ALLtextnbCleaner.txt','wb') as outfile:
    for line in infile: # b'\n'-separated lines (Linux, OSX, Windows)
        line = re.sub(r'[^\x00-\x7f]',r'', line)
        outfile.write(line.translate(None, nonascii))

nonascii = bytearray(range(0x80, 0x100))
with open('ALLtext.txt','rb') as infile, open('ALLtextClean.txt','wb') as outfile:
    for line in infile: # b'\n'-separated lines (Linux, OSX, Windows)
        re.sub(r'[^\x00-\x7f]',r'', your-non-ascii-string)
        outfile.write(line.translate(None, nonascii))

l = []
filenames = '*.txt'
for root,dir,filenames in os.walk('.'):
    l.extend([ os.path.join(root, f) for f in filenames ])
print l

l = []
for root,dir,filenames in os.walk(unicode('.')):
    l.extend([ os.path.join(root, f) for f in filenames ])
print l

readOUT = open("ALLtextClean.txt","w")
readOUT.close()
import io
with io.open('ALLtext.txt','r',encoding='utf8') as f:
    text = f.read()
    text = text.strip()
# process Unicode text
with io.open('ALLtextClean.txt','a',encoding='utf8') as f:
    f.write(text)

%reset -f 

#!/usr/bin/env python
nonascii = bytearray(range(0x80, 0x100))
with open('d.txt','rb') as infile, open('d_parsed.txt','wb') as outfile:
    for line in infile: # b'\n'-separated lines (Linux, OSX, Windows)
        outfile.write(line.translate(None, nonascii))

readOUT = open("ALLtextClean.txt","w")
readOUT.close()
import io
with io.open('ALLtextnbCleaner.txt','r',encoding='utf8') as f:
    text = f.read()
    #text = text.encode('ISO-8859-1').strip()
    #text = text.decode("utf-16")
# process Unicode text
with io.open('ALLtextClean.txt','a',encoding='utf8') as f:
    f.write(text)

line=line.decode('utf-8','ignore').encode("utf-8")

# import wikipedia doing a wikipedia.search
# searches for wiki pages concerning the topic
from time import sleep
import wikipedia
# opens a text input and prints
# Research : topic entered
#topic = raw_input("Research : ")
rows = wikipedia.search("java")
for row in rows:
    rown = str(row)
    lisT = wikipedia.search(rown)
    bt = rown,lisT
    
    print bt

.encode('ascii', 'ignore')
.encode("utf-8")

.encode('utf-8').strip()

%reset -f

# import wikipedia doing a wikipedia.search
# searches for wiki pages concerning the topic
from time import sleep
import wikipedia
from ast import literal_eval
# opens a text input and prints
# Research : topic entered
#topic = raw_input("Research : ")
f = open("super.txt", "a")
rows = wikipedia.search("Java virtual machine")
for row in rows:
    nrows = wikipedia.search(row)
    for nrow in nrows:
            nrow = nrow.encode('utf-8').strip()
            Sum = wikipedia.summary(nrow)
            Sum = Sum.encode('utf-8').strip() 
            f.write(Sum)   
    

del rows
del nrow
del Sum

f = open("super.txt", "w")
f.close()

%reset -f

# import wikipedia doing a wikipedia.search
# searches for wiki pages concerning the topic
from time import sleep
import wikipedia
from ast import literal_eval
# opens a text input and prints
# Research : topic entered
#topic = raw_input("Research : ")
f = open("super.txt", "a")
rows = wikipedia.search("micro processor")
for row in rows:
    sleep(1)
    nrows = wikipedia.search(row)
    for nrow in nrows:
        
        nrow = nrow.encode('utf-8').strip()
        f.write(nrow)
    

import wikipedia

try:
     rows = wikipedia.search("topic")
except wikipedia.exceptions.DisambiguationError as e:
     rows = e.options
for row in rows:
    row = str(row)
    print row


# Wiki Search -Summary of search results print to text
# AND to a database
import sqlite3
from time import sleep
from shutil import copyfile
#backup your current datafile incase of a problem
copyfile('WIKIData.db','WIKIData.db-bak')
topic = raw_input("Research : ")
fname = topic.replace(" ", "")+".txt"
fname = "Wiki_"+fname
dbname = 'WIKIData.db'
conn = sqlite3.connect(dbname) 
conn.text_factory = str
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS wiki
USING FTS3(row, para);
''')
f =open(fname, "w")
f.close()
import wikipedia

try:
     rows = wikipedia.search(topic)
except wikipedia.exceptions.DisambiguationError as e:
     if e.options >""
        rows = e.options

    
     for row in rows:
        row = str(row)

        sleep(.2)
        para = wikipedia.summary(row)
        para = '\n\n'.join((row, para)).encode('utf-8').strip()
        enter = open(fname, "a")
        #c.execute("INSERT INTO wiki VALUES (?,?)", (row, para))
        conn.commit()
        enter.write(para)
        enter.close()
        print para
enter.close()

# Wiki Search -Summary of search results print to text
# AND to a database
import sqlite3
from time import sleep
from shutil import copyfile
#backup your current datafile incase of a problem
copyfile('WIKIData.db','WIKIData.db-bak')
topic = raw_input("Research : ")
fname = topic.replace(" ", "")+".txt"
fname = "Wiki_"+fname
dbname = 'WIKIData.db'
conn = sqlite3.connect(dbname) 
conn.text_factory = str
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS wiki
USING FTS3(row, para);
''')
f =open(fname, "w")
f.close()
import wikipedia
rows = wikipedia.search(topic)
for row in rows:
    row = str(row)
    sleep(.2)
    para = wikipedia.summary(row)
    para = '\n\n'.join((row, para)).encode('utf-8').strip()
    enter = open(fname, "a")
    #c.execute("INSERT INTO wiki VALUES (?,?)", (row, para))
    conn.commit()
    enter.write(para)
    enter.close()
    print para
enter.close()

# Wiki Search -Summary of search results print to text
# AND to a database
import sqlite3
from time import sleep
from shutil import copyfile
import wikipedia
#rows = wikipedia.search('war')
#for row in rows:
#        row = str(row)
#        sleep(.2)
#        print row
    
try:
    rows = wikipedia.search('war')
except wikipedia.exceptions.DisambiguationError as e:
    print rows
    rows = wikipedia.summary(row)
    for row in rows:
        row = str(row)
        #print row
        sleep(.2)        
        ns= e.options
        #rows = wikipedia.search(ns)   
            
        para = wikipedia.summary(row)
        para = '\n\n'.join((row, para)).encode('utf-8').strip()
        #print para


import re
import wikipedia
try:
            mercury = wikipedia.summary("Mercury")
except wikipedia.exceptions.DisambiguationError as e:
      for text in e.options:
            if (wikipedia.exceptions.DisambiguationError):
                pass
            else:
                print text
            

for line in f:
    if re.match(">",line):
        pass
    else:
        line = line.rstrip("\n")
        string = string + line

#Or

for line in f:
    if not re.match(">",line):
        line = line.rstrip("\n")
        string = string + line

from time import sleep
import re
import wikipedia
try:
        mercury = wikipedia.summary("Mercury")
except wikipedia.exceptions.DisambiguationError as e:
        #lineS = e.options
        lineS = str(e.options)
        for lines in lineS:
            sleep(1)
            print lines

from time import sleep
import re
import wikipedia
try:
        mercury = wikipedia.summary("Mercury")
except wikipedia.exceptions.DisambiguationError as e:
        #lineS = e.options
        lineS = str(e.options)
        for lines in lineS.strip():
            lines=lines.replace("u'","");lines=lines.replace("', ","\n")
            lines=lines.replace("[","");lines=lines.replace("]","")
            lines=lines.replace('u"','');lines=lines.replace('"','')
            if re.match('(disambiguation)',lines):
                pass
            else:
                sleep(1)
                print lines


try:
        mercury = wikipedia.summary("Mercury")
except wikipedia.exceptions.DisambiguationError as e:
        lines = str(e.options)
        lines=lines.replace("u'","");lines=lines.replace("', ","\n")
        lines=lines.replace("[","");lines=lines.replace("]","")
        lines=lines.replace('u"','');lines=lines.replace('"','')
        with open("textwik.txt", "w")as f:
                f.write(lines) 
f.close()
bad_words = ['(disambiguation)', 'All pages']
with open('textwik.txt') as oldfile, open('usewik.txt', 'w') as newfile:
    for line in oldfile:
        if not any(bad_word in line for bad_word in bad_words):
            newfile.write(line)

import wikipedia
mercury = wikipedia.search("Sun")
e = wikipedia.exceptions.DisambiguationError

#mercury2 = wikipedia.summary(ns) 
print ns


import wikipedia

res = wikipedia.search('war')
#wikipedia.exceptions.DisambiguationError as e:
    
rows = wikipedia.summary(res)
for row in rows:
    print row,

import sqlite3
import sys
conn = sqlite3.connect('wikipedia.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, text FROM wiki WHERE text MATCH ?', (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],"\n"
    if count > req:
        conn.close()
        sys.exit()

import sqlite3
import sys
conn = sqlite3.connect('wikipedia.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
#SELECT Title FROM Book WHERE Desc LIKE '%cat%";
#for row in c.execute('SELECT rowid, text FROM wiki WHERE text MATCH ?', (search,)):
#for row in c.execute("SELECT rowid, text FROM wiki WHERE text LIKE '%memory%';");
#for row in c.execute("SELECT rowid, text FROM wiki WHERE text LIKE '%memory%';")
#for row in c.execute("SELECT rowid, text FROM wiki WHERE text LIKE '%?%'", (search,)):
for row in c.execute("SELECT rowid, text FROM wiki WHERE text LIKE '%war%'", (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],"\n"
    if count > req:
        conn.close()
        sys.exit()

%%writefile wikilist.txt
World Population
Political leaders
Christian
knights Templar
Elon Musk
Bowing
Turner Broadcasting
New World Order (conspiracy theory)
New world order (politics)
Federal Reserve
illuminati
Nuclear Bomb
Weapon of mass destruction
biological warfare
Vietnam War
World War One
Space craft
Iran war
World War Two
World bank
Monroe Doctrine
Putin
KKK
Democracy
US Republican party
US Democratic Party
Socrates
Plato
Sigmund Freud
Mental Breakdown
Post Tramatic Stress
Communism
Communist party
Fascism
Chinese Politics
Fidel Castro
Economy
Economics
Slavery
American Civil War

%%writefile wikilist2.txt
Data mining
Competitive intelligence
National security
Harvard University
Python (programming language)
Object-oriented programming
Functional programming
Logic programming
Turing machine
DNA nanotechnology
Data Science: An Introduction
Data Science: An Introduction/Definitions of Data
    

import wikipedia
import time
f= open("wikilist2.txt", "r")
lines = f.read().splitlines()
for line in lines:
    text = wikipedia.summary(line)
    text = text.replace(". ",".\n")
    text = text.encode("ascii", "ignore")
    Tfile = open("tempfile2.txt","a")
    Tfile.write(text)
    Tfile.close()    
    time.sleep(10)
    print line

import wikipedia
import time
f= open("wikilist2.txt", "r")
lines = f.read().splitlines()
for line in lines:
    text = wikipedia.summary(line)
    text = text.replace(". ",".\n")
    text = text.encode("ascii", "ignore")
    Tfile = open("tempfile2.txt","a")
    Tfile.write(text)
    Tfile.close()    
    time.sleep(10)
    print line

import wikipedia
text = wikipedia.summary("American Civil War")
text = text.replace(". ",".\n\n")
print text

import wikipedia
text = wikipedia.summary(line)
text = text.replace(". ",".\n")
text = text.encode("ascii", "ignore")
Tfile = open("tempfile.txt","a")
Tfile.write(text)
Tfile.close()

import sqlite3
import feedparser
import time
import sqlite3
import wikipedia
Dbase = 'wikipedia.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS wiki
USING FTS3(text);
''')
reaD = open("tempfile2.txt","r")
lines = reaD.readlines()
for line in lines:
    if len(line) > 30:
        conn = sqlite3.connect(Dbase)
        #conn.text_factory = str
        c = conn.cursor()
        c.execute("INSERT INTO wiki  VALUES (?)", (line,))
        conn.commit()
        conn.close()
conn = sqlite3.connect(Dbase)
#conn.text_factory = str
c = conn.cursor()# Never
count=0
for row in c.execute('SELECT * FROM wiki ORDER BY rowid DESC'):
    row=str(row)
    row = row.decode("ascii", "ignore")
    count=count+1
    row =row.replace("(u'","");row =row.replace("', u","Keyword : ")
    row =row.replace("\n","");row =row.replace("')","'")
    row =row.replace("\nKeyword","Keyword")
    print"Number :",count,"\n",row ,"\n"



import sqlite3
import sys
conn = sqlite3.connect('wikipedia.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, text FROM wiki WHERE text MATCH ?', (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],"\n"
    if count > req:
        conn.close()
        sys.exit()

import sqlite3
import feedparser
import time
import sqlite3
import wikipedia
Dbase = 'wikipedia.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS wiki
USING FTS3(text);
''')

keyword = "Heaven"
text = wikipedia.summary(keyword)
text = text.encode("ascii", "ignore")
text = text.replace(". ",".\n")

Tfile = open("tempfile.txt","w")
Tfile.write(text)
Tfile.close()

reaD = open("tempfile.txt","r")
lines = reaD.readlines()
for line in lines:
    if len(line) > 30:
        conn = sqlite3.connect(Dbase)
        #conn.text_factory = str
        c = conn.cursor()
        c.execute("INSERT INTO wiki  VALUES (?)", (line,))
        conn.commit()
        conn.close()
        
        
conn = sqlite3.connect(Dbase)
#conn.text_factory = str
c = conn.cursor()# Never
count=0
for row in c.execute('SELECT * FROM wiki ORDER BY rowid DESC'):
    row=str(row)
    row = row.decode("ascii", "ignore")
    count=count+1
    row =row.replace("(u'","");row =row.replace("', u","Keyword : ")
    row =row.replace("\n","");row =row.replace("')","'")
    row =row.replace("\nKeyword","Keyword")
    print"Number :",count,"\n",row ,"\n"



import sqlite3
import feedparser
import time
import sqlite3
import wikipedia
Dbase = 'wikipedia.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS wiki
USING FTS3(text, key);
''')

keyword = "Heaven"
text = wikipedia.summary("Heaven")
text = text.encode("ascii", "ignore")
text = text.replace(". ",". \n")

Tfile = open("tempfile.txt","w")
Tfile.write(text)
Tfile.close()

reaD = open("tempfile.txt","r")
lines = reaD.readlines()
for line in lines:
    if len(line) > 30:
        conn = sqlite3.connect(Dbase)
        c = conn.cursor()
        c.execute("INSERT INTO wiki  VALUES (?, ?)", (line, keyword))
        conn.commit()
        conn.close()
        
        
conn = sqlite3.connect(Dbase)
c = conn.cursor()# Never
count=0
for row in c.execute('SELECT * FROM wiki ORDER BY rowid DESC'):
    row=str(row)
    row = row.decode("ascii", "ignore")
    count=count+1
    row =row.replace("(u'","");row =row.replace("', u","Keyword : ")
    row =row.replace("\n","");row =row.replace("')","'")
    row =row.replace(". \n",".")
    print"Number :",count,"\n",row ,"\n"



# %load tempfile.txt
Heaven, the heavens, seven heavens, pure lands, Tian, Jannah, Valhalla, or The Summerland, is a common religious, cosmological, or transcendent place where beings such as gods, angels, jinn, saints, or venerated ancestors are said to originate, be enthroned, or live. 
According to the beliefs of some religions, heavenly beings can descend to earth or incarnate, and earthly beings can ascend to Heaven in the afterlife, or in exceptional cases enter Heaven alive.
Heaven is often described as a "higher place", the holiest place, a Paradise, in contrast to Hell or the Underworld or the "low places", and universally or conditionally accessible by earthly beings according to various standards of divinity, goodness, piety, faith, or other virtues or right beliefs or simply the will of God. 
Some believe in the possibility of a Heaven on Earth in a World to Come.
Another belief is in an axis mundi or world tree which connects the heavens, the terrestrial world, and the underworld. 
In Indian religions, Heaven is considered as Svarga loka, and the soul is again subjected to rebirth in different living forms according to its karma. 
This cycle can be broken after a soul achieves Moksha or Nirvana. 
Any place of existence, either of humans, souls or deities, outside the tangible world (Heaven, Hell, or other) is referred to as otherworld.

import sqlite3
import time
#account = "TEDTalks.txt"
account = "symmetrymag.txt"
#account = "elonmusk.txt"
#account = "realDonaldTrump.txt"
user = account[:-4]
lines = open(account,"r")
line = lines.readline()
for line in lines:
    conn = sqlite3.connect('collection.db')
    conn.text_factory = str
    c = conn.cursor()
    c.execute("INSERT INTO tweets VALUES (?,?)", (line, user)) 
    conn.commit()
    conn.close()        
    
    #print line         

import wikipedia
text = wikipedia.summary("Machine Learning")
print text

p.agent_info = u' '.join((agent_contact, agent_telno)).encode('utf-8').strip()

print wikipedia.summary("Bohol")

# -*- coding: utf-8 -*-
import pdb
text = wikipedia.summary("Manila, Philippines")
text0 = wikipedia.summary("Philippines")
text1 = wikipedia.summary("Palawan, Philippines")
text2 = wikipedia.summary("China Sea")

text = text.encode("ascii", "ignore")
text0 = text0.encode("ascii", "ignore")
text1 = text1.encode("ascii", "ignore")
text2 = text2.encode("ascii", "ignore")
join1 = "".join((text, text0))
join2 = "\n".join((text1, text2))
en= "\n".join((join1, join2))
print en

!ls Wiki_*

# Get number of words in a file
fname = raw_input("Enter file name: ")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print "Number of words: ",num_words

fname = raw_input("Enter file name: ")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print "Number of words: ",num_words

fname = raw_input("Enter file name: ")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print "Number of words: ",num_words

import sqlite3
import sys
dbname = 'WIKIData.db'
conn = sqlite3.connect(dbname) 
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, row, para FROM wiki WHERE wiki MATCH ?', (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],(row)[2]
    if count > req:
        conn.close()
        sys.exit()
        
        row, para

from time import sleep
topic = raw_input("Research : ")
fname = topic.replace(" ", "")+".txt"
fname = "Wiki_"+fname
f =open(fname, "w")
f.close()
import wikipedia
rows = wikipedia.search(topic)
for row in rows:
    sleep(1)
    para = wikipedia.summary(row)
    para = '\n\n'.join((row, para)).encode('utf-8').strip()
    enter = open(fname, "a")
    enter.write(para)
    enter.close()
    print para
enter.close()

import pdb
from time import sleep
f =open("trumpstuff.txt", "w")
f.close()
import wikipedia
rows = wikipedia.search("Donald Trump")
with open("trumpstuff.txt", "a") as enter:
    for row in rows:
        sleep(1)
        para = wikipedia.summary(row)
        artical = (row,"\n"+para)
        artical = str(artical).encode("ascii", "ignore") 
        enter.write(artical)
        print row
        
enter.close()

from time import sleep
topic = "Donald Trump"
fname = topic.replace(" ", "")+".txt"
print fname

import wikipedia
wikipedia.search("Philippines")



import wikipedia
wikipedia.search("New York")

import wikipedia
#wikipedia.summary("Facebook", sentences=1)
wikipedia.search("Facebook")

\xe9

import wikipedia
wikipedia.search("Art Nouveau")
# Facebook est un service de réseautage social en lig

import wikipedia
help(wikipedia)

your_string = str(the_bytes, 'utf-8') # actually uses `conn.text_factory`, not `str`

conn.text_factory = lambda x: str(x, 'latin1')

    'iso-8859-1'
    'utf-16'
    'utf-32'
    'latin1'
conn.text_factory = bytes

import sqlite3
import base64
conn = sqlite3.connect('snippet.db') 
c = conn.cursor()
conn.text_factory = str
file = """
%%writefile SatInfo.py
from itertools import izip, islice
from time import sleep
def satinfo():
    search_string = raw_input("Load : ")
    with open('visual.txt', 'r') as infile, open('visual.tmp', 'w') as outfile:
        for line in infile:
            if search_string in line:
                outfile.writelines([line, next(infile), next(infile)])

    from time import sleep
    with open('visual.tmp', 'r') as f:
        while True:
                name = f.readline()
                one = f.readline()
                two = f.readline()
                sleep(1)
                return name, one, two    
                         
def prntlist():            
    from time import sleep
    with open('visual.txt', 'r') as f:
        while True:
            next_n_lines = list(islice(f, 3))
            if not next_n_lines:
                break
            sleep(.5)
            print next_n_lines[0],
        
def reuse():
    from time import sleep
    with open('visual.tmp', 'r') as f:
        while True:
                name = f.readline()
                one = f.readline()
                two = f.readline()
                sleep(1)
                #print name, one, two    
                f.close()
                return name, one, two  
            
            
"""
keywords = "store, retrieve images, from SQLite Database"
encodedlistvalue=base64.b64encode(file)
c.execute("INSERT INTO snippet VALUES (?,?,?)", (encodedlistvalue, file, keywords))
conn.commit()
conn.close()

from textblob import TextBlob
import random
import sys
import io
filename ="ALLWIKI.txt"
with io.open(filename, "r", encoding="utf-8") as my_file:
    essays = my_file.read() 
# stdin's read() method just reads in all of standard input as a string;
# use the decode method to convert to ascii (textblob prefers ascii)
#text = sys.stdin.read().decode('ascii', errors="replace")
blob = TextBlob(essays)

short_sentences = list()
for sentence in blob.sentences:
    if len(sentence.words) <= 10:
        short_sentences.append(sentence.replace("\n", " "))

for item in random.sample(short_sentences, 30):
	print item

# %load SearchFilename.py
'''
Search a filename for a phrase and how many following lines to display
USAGE:
import SearchFilename
filename = "hek.txt"
length = 4
SearchFilename.searchfilename(filename, length)
'''
def searchfilename(filename, length):
    f = open(filename, "r")
    searchlines = f.readlines()
    f.close()
    search = str(raw_input("Search Phrase : "))
    for i, line in enumerate(searchlines):
        if search in line: 
            for l in searchlines[i:i+length]: print l,
            print
            
USAGE:
import SearchFilename
filename = "Automate-the-Boring-Stuff.txt"
# length = how many lines after
length = 4
SearchFilename.searchfilename(filename, length) 

import SearchFilename
filename = "astralGOOD.txt"
length = 4
SearchFilename.searchfilename(filename, length)

from shutil import copyfile
copyfile("pdf.txt", "IPythonInteractiveComputing.txt")

Tfile = open("pdf.txt","w")
Tfile.close()

from time import sleep
import textract
#lines = textract.process("/home/jack/Desktop/Books/Web-Scraping-With-Python.pdf")
#lines = textract.process("/home/jack/Desktop/Books/Automate-the-Boring-Stuff-with-Python.pdf")
#lines = textract.process("/home/jack/Desktop/Books/Python_Cookbook_3rd_Edition.pdf")
#lines = textract.process("/home/jack/Desktop/Books/Effective_Python.pdf")
#lines = textract.process("/home/jack/Desktop/Books/IPythonInteractiveComputingandVisualizationCookbook.pdf")
lines = textract.process("BookOfEnoch.pdf")
for line in lines.split("."):
    #line = line.replace(".",".\n")
    line = line.replace("	"," ")
    Tfile = open("BookOfEnochGood2.txt","a")
   
    Tfile.write(line)
    #print line
    Tfile.close()


import sqlite3        
import feedparser
import time
import sqlite3
Dbase = 'pdfs.db'
conn = sqlite3.connect(Dbase)
conn.text_factory = str
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS pdfs
USING FTS3(text, title);
''')

title = "TwitterDataAnalytics"
#text = wikipedia.summary("Heaven")
#text = text.encode("ascii", "ignore")
#text = text.replace(". ",". \n")

reaD = open("pdf.txt","r")
lines = reaD.readlines()
for line in lines:
    line = line.decode("utf8")
    conn = sqlite3.connect(Dbase)
    c = conn.cursor()
    c.execute("INSERT INTO pdfs  VALUES (?, ?)", (line, title))
    conn.commit()
    conn.close()

import sqlite3        
import feedparser
import time
import sqlite3
Dbase = 'BookOfEnochpdf.db'
conn = sqlite3.connect(Dbase)
conn.text_factory = str
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS pdfs
USING FTS3(text, title);
''')

title = "BookOfEnochpdf"
#text = wikipedia.summary("Heaven")
#text = text.encode("ascii", "ignore")
#text = text.replace(". ",". \n")

reaD = open("BookOfEnochpdf.txt","r")
lines = reaD.readlines()
for line in lines:
    line = line.decode("utf8")
    conn = sqlite3.connect(Dbase)
    c = conn.cursor()
    c.execute("INSERT INTO pdfs  VALUES (?, ?)", (line, title))
    conn.commit()
    conn.close()

import sqlite3
import sys
conn = sqlite3.connect('pdfs.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, text FROM pdfs WHERE text MATCH ?', (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],
    if count > req:
        conn.close()
        sys.exit()

import sqlite3
import sys
conn = sqlite3.connect('pdfs.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
id1 = raw_input("Starting ID : ")
id2 = raw_input("How Many Rows : ")

#for row in c.execute('Select rowid, * from pdfs LIMIT ?,?', (id1, id2)):
#for row in c.execute('Select rowid, * from pdfs LIMIT ?,?', (id1, id2)):
for row in c.execute('SELECT rowid, * from pdfs LIMIT ? OFFSET ?',  (id2, id1)):
    count=count+1
    print (row)[0],"-",(row)[1],
    if count > req:
        conn.close()
        sys.exit()

from time import sleep

import textract
lines = textract.process("/home/jack/Desktop/Books/1b1b23ac635d29c6.pdf")

for line in lines.split():
    line = line.replace(".",".\n")
    sleep(.1)
    print line,



# Open A PDF and Save as TEXT file
# keywords read pdf as text , save pdf as text
# pdf2txt , textract
from time import sleep
import textract

lines = textract.process("Edition.pdf")
for line in lines.split("."):
    #line = line.replace(".",".\n")
    line = line.replace("	"," ")
    Tfile = open("pdf.txt","a")
   
    Tfile.write(line)
    #print line
    Tfile.close()


 
I have about a dozen PDF books in my database. Easy to use reference for Python. Also a Linux Bible, module info, Docker, FFmpeg, bash, etc

# Notice title = "Edition" this allows the 
# pdf title to be used in a search if required
import time
import sqlite3
Dbase = 'pdfs.db'
conn = sqlite3.connect(Dbase)
conn.text_factory = str
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS pdfs
USING FTS3(text, title);
''')

title = "Edition"
reaD = open("pdf.txt","r")
lines = reaD.readlines()
for line in lines:
    line = line.decode("utf8")
    conn = sqlite3.connect(Dbase)
    c = conn.cursor()
    c.execute("INSERT INTO pdfs  VALUES (?, ?)", (line, title))
    conn.commit()
    conn.close()

import sqlite3
import feedparser
import time
import sqlite3
Dbase = 'pdfs.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS pdfs
USING FTS3(text, title);
''')

title = "Edition"

reaD = open("pdf.txt","r")
lines = reaD.readlines()
for line in lines:
    conn = sqlite3.connect(Dbase)
    c = conn.cursor()
    c.execute("INSERT INTO wiki  VALUES (?, ?)", (line, title))
    conn.commit()
    conn.close()

import sqlite3
import feedparser
import time
import sqlite3
Dbase = 'pdfs.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS pdfs
USING FTS3(text, title);
''')

title = "Web Scraping with Python"
#text = wikipedia.summary("Heaven")
#text = text.encode("ascii", "ignore")
#text = text.replace(". ",". \n")

reaD = open("tempfile.txt","r")
lines = reaD.readlines()
for line in lines:
    if len(line) > 30:
        conn = sqlite3.connect(Dbase)
        c = conn.cursor()
        c.execute("INSERT INTO wiki  VALUES (?, ?)", (line, title))
        conn.commit()
        conn.close()

import sqlite3
import sys
conn = sqlite3.connect('snippet.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT * FROM snippet WHERE snippet MATCH ?', (search,)):    
    count=count+1
    print (row)[1]," -- KEYWORDS",(row)[2],"\n"
    if count > req:
        conn.close()
        sys.exit()

from time import sleep
import sqlite3
conn = sqlite3
hist = open("/home/jack/.bash_history")
for line in hist.readlines():
    sleep(.5)
    print line

import sqlite3
from IPython.core.display import Image 
def get_image(cursor, image_id):
    cursor.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(image_id,))
    ablob, ext, afile = cursor.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename
Dbase = 'ImageB.db'
conn = sqlite3.connect(Dbase)
cur = conn.cursor()
ImageID = raw_input("Image ID number : ")
filename = get_image(cur, ImageID)
cur.close()
conn.close()
print filename
Image(filename=filename)


import sqlite3
import feedparser
from time import sleep
import sqlite3
import io
import sys  
reload(sys)  
sys.setdefaultencoding('utf8')
Dbase = 'history2.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE IF NOT EXISTS history 
USING FTS3(hist);
"""
         )
histsave= io.open("my_utf8_file.txt", "w", encoding="utf-8")
histsave.close()

hist = open("/home/jack/.bash_history", "r")
for line in hist.readlines():
        #line = line.encode('utf-8').strip()
        #line = line.decode('utf-8')
        #line = line.replace(" u'","")
        #line = line.decode('utf-8').strip() 
        #f= open("bashhis.txt", "a")
        import io
        with io.open("my_utf8_file.txt", "a", encoding="utf-8") as out_file:
            out_file.write(line)


job_titles = [line.decode('utf-8').strip() for line in title_file.readlines()]

from time import sleep
import sqlite3
conn = sqlite3.connect('historyFTS4.db')
c = conn.cursor()
conn.text_factory = str
c.execute("""
CREATE VIRTUAL TABLE history 
USING FTS4(text);
""")
fileO = open("/home/jack/.bash_history")
lists = fileO.readlines()
for list in lists:
    #list = list.encode("ascii", "ignore")
    list = list.decode('utf-8').strip() 
    c = conn.cursor()
    c.execute('insert into history values (?)', (list,))
    
conn.commit()
conn.close()

from time import sleep
import sqlite3
conn = sqlite3.connect('historyFTS4.db')
c = conn.cursor()
conn.text_factory = str
c.execute("""
CREATE VIRTUAL TABLE history 
USING FTS4(text);
""")
conn.commit()
conn.close()

fileO = open("/home/jack/.bash_history")
lists = fileO.readlines()
for list in lists:
    #list = list.encode("ascii", "ignore")
    list = list.decode('utf-8').strip() 
    conn = sqlite3.connect('historyFTS4.db')
    c = conn.cursor()
    c.execute('insert into history values (?)', (list,))
    conn.commit()
    conn.close()

!sqlite3 history2.db "pragma integrity_check;"

import sqlite3
import feedparser
from time import sleep
import sqlite3
Dbase = 'history2.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE IF NOT EXISTS history 
USING FTS3(hist);
"""
)

f= open("bashhis.txt", "w")
close.f()

hist = open("/home/jack/.bash_history")
for line in hist.readlines():
        #f= open("bashhis.txt", "a")
        
        with open("bashhis.txt", 'a') as out_file:
        out_file.write(line)
        conn = sqlite3.connect(Dbase)
        c = conn.cursor()
        #line = line.encode('ascii')
        c.execute("INSERT INTO history VALUES (?)", (line,))
        conn.commit()
        conn.close()
conn = sqlite3.connect(Dbase)
c = conn.cursor()# Never
command = raw_input("Command : ")
for row in c.execute('SELECT rowid, hist FROM history WHERE hist MATCH ?', (command,)):   
    row=str(row)
    count=count+1
    print row[0],row[2]

import sqlite3
Dbase = 'history2.db'
conn = sqlite3.connect(Dbase)
c = conn.cursor()# Never

command = raw_input("Command : ")
for row in c.execute('SELECT rowid, text FROM history WHERE text MATCH ?', (command,)):   
    row=str(row)

    count=count+1
    print row[0],row[2]

import sqlite3
import sys
from time import sleep
conn = sqlite3.connect('historyFTS4.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, text FROM history WHERE text MATCH ?', (search,)):    
    count=count+1
    sleep(1)
    print (row)[0],"-",(row)[1],"\n"



import sqlite3
import sys
from time import sleep
conn = sqlite3.connect('history.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, text FROM history WHERE text MATCH ?', (search,)):    
    count=count+1
    sleep(1)
    print (row)[0],"-",(row)[1],"\n"



line = line.encode('ascii')
line = line.decode('utf-8').strip() 
 

import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def get_picture_list(rel_path):
    abs_path = os.path.join(os.getcwd(),rel_path)
    print 'abs_path =', abs_path
    dir_files = os.listdir(abs_path)
    #print dir_files
    return dir_files

picture_list = get_picture_list('snippets')
print picture_list
import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def create_or_open_db(db_file):
    db_is_new = not os.path.exists(db_file)
    conn = sqlite3.connect(db_file)
    if db_is_new:
        print 'Creating schema'
        sql = '''create table if not exists PICTURES(
        ID INTEGER PRIMARY KEY AUTOINCREMENT,
        PICTURE BLOB,
        TYPE TEXT,
        FILE_NAME TEXT);'''
        conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    else:
        print 'Schema exists\n'
    return conn

def insert_picture(picture_file):
    with open(picture_file, 'rb') as input_file:
        conn = sqlite3.connect(dbname)
        c = conn.cursor()
        ablob = input_file.read()
        base=os.path.basename(picture_file)
        afile, ext = os.path.splitext(base)
        sql = '''INSERT INTO PICTURES
        (PICTURE, TYPE, FILE_NAME)
        VALUES(?, ?, ?);'''
        c.execute(sql,[sqlite3.Binary(ablob), ext, afile]) 
        conn.commit()

def loadimages(dbname, path):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    #conn.execute("DELETE FROM PICTURES")
    for fn in picture_list:
        picture_file = path+"/"+fn
        insert_picture(picture_file)

    for r in c.execute("SELECT rowid, FILE_NAME FROM PICTURES"):
        print r[0],r[1]
   
    conn.commit()


def get_image(picture_id):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    c.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(picture_id,))
    #sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 19"
    param = {'id': picture_id}
    #c.execute(sql, param)
    ablob, ext, afile = c.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename


dbname = "ImageB.db"
db_file = create_or_open_db(dbname)
path = "snippets/"
loadimages(dbname, path)
filename = get_image(16)
print filename
Image(filename=filename)


import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def get_picture_list(rel_path):
    abs_path = os.path.join(os.getcwd(),rel_path)
    print 'abs_path =', abs_path
    dir_files = os.listdir(abs_path)
    #print dir_files
    return dir_files

picture_list = get_picture_list('snippet')
print picture_list
import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def create_or_open_db(db_file):
    db_is_new = not os.path.exists(db_file)
    conn = sqlite3.connect(db_file)
    if db_is_new:
        print 'Creating schema'
        sql = '''create table if not exists PICTURES(
        ID INTEGER PRIMARY KEY AUTOINCREMENT,
        PICTURE BLOB,
        TYPE TEXT,
        FILE_NAME TEXT);'''
        conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    else:
        print 'Schema exists\n'
    return conn

def insert_picture(picture_file):
    with open(picture_file, 'rb') as input_file:
        conn = sqlite3.connect(dbname)
        c = conn.cursor()
        ablob = input_file.read()
        base=os.path.basename(picture_file)
        afile, ext = os.path.splitext(base)
        sql = '''INSERT INTO PICTURES
        (PICTURE, TYPE, FILE_NAME)
        VALUES(?, ?, ?);'''
        c.execute(sql,[sqlite3.Binary(ablob), ext, afile]) 
        conn.commit()

def loadimages(dbname, path):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    #conn.execute("DELETE FROM PICTURES")
    for fn in picture_list:
        picture_file = path+"/"+fn
        insert_picture(picture_file)

    for r in c.execute("SELECT rowid, FILE_NAME FROM PICTURES"):
        print r[0],r[1]
   
    conn.commit()


def get_image(picture_id):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    c.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(picture_id,))
    #sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 19"
    param = {'id': picture_id}
    #c.execute(sql, param)
    ablob, ext, afile = c.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename


dbname = "ImageF.db"
db_file = create_or_open_db(dbname)
path = "snippet/"
loadimages(dbname, path)
filename = get_image(16)
print filename
Image(filename=filename)

%%writefile Image2Data.py
import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def get_picture_list(rel_path):
    abs_path = os.path.join(os.getcwd(),rel_path)
    print 'abs_path =', abs_path
    dir_files = os.listdir(abs_path)
    return dir_files

def create_or_open_db(dbname):
    db_is_new = not os.path.exists(db_file)
    conn = sqlite3.connect(db_file)
    if db_is_new:
        print 'Creating schema'
        sql = '''create table if not exists PICTURES(
        ID INTEGER PRIMARY KEY AUTOINCREMENT,
        PICTURE BLOB,
        TYPE TEXT,
        FILE_NAME TEXT);'''
        conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    else:
        print 'Schema exists\n'
        conn.commit()
        conn.close()
    return conn

def insert_picture(dbname, picture_file):
    with open(picture_file, 'rb') as input_file:
        conn = sqlite3.connect(dbname)
        c = conn.cursor()
        ablob = input_file.read()
        base=os.path.basename(picture_file)
        afile, ext = os.path.splitext(base)
        sql = '''INSERT INTO PICTURES
        (PICTURE, TYPE, FILE_NAME)
        VALUES(?, ?, ?);'''
        c.execute(sql,[sqlite3.Binary(ablob), ext, afile]) 
        conn.commit()

def loadimages(dbname, path):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    #conn.execute("DELETE FROM PICTURES")
    for fn in picture_list:
        picture_file = path+"/"+fn
        insert_picture(picture_file)

    for r in c.execute("SELECT rowid, FILE_NAME FROM PICTURES"):
        print r[0],r[1]
   
    conn.commit()
    conn.close()

def image_id(dbname):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    rows = c.execute("SELECT rowid, TYPE, FILE_NAME FROM PICTURES")
    for row in rows:
        print row[0],row[2]+row[1]    
    return
    
def get_image(dbname,picture_id):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    c.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(picture_id,))
    #sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 19"
    param = {'id': picture_id}
    #c.execute(sql, param)
    ablob, ext, afile = c.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename


!rm Image2Data.pyc

import Image2Data
picture_list = Image2Data.get_picture_list('snippet')
print picture_list

import Image2Data
dbname = "ImageD.db"
Image2Data.create_or_open_db(dbname)

import Image2Data
dbname = "ImageD.db"
picture_file = "01.jpg"
Image2Data.insert_picture(dbname, picture_file)

import Image2Data
dbname = "ImageF.db"
path = "snippet"
loadimages(dbname, path)

import Image2Data
dbname = "ImageD.db"
Image2Data.image_id(dbname)

def image_id(dbname):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    rows = c.execute("SELECT rowid, TYPE, FILE_NAME FROM PICTURES")
    for row in rows:
        print row[0],row[2]+row[1]
    

dbname = "ImageF.db"
image_id(dbname)

import Image2Data
dbname = "ImageF.db"
filename = Image2Data.get_image(dbname,61)
print filename
Image(filename=filename)


%%writefile Image2SQLite.py
import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def getImage_list(rel_path):
    abs_path = os.path.join(os.getcwd(),rel_path)
    print 'abs_path =', abs_path
    dir_files = os.listdir(abs_path)
    return dir_files

def create_or_open_db(dbname):
    db_is_new = not os.path.exists(db_file)
    conn = sqlite3.connect(db_file)
    if db_is_new:
        print 'Creating schema'
        sql = '''create table if not exists images(
        ID INTEGER PRIMARY KEY AUTOINCREMENT,
        image BLOB,
        TYPE TEXT,
        imagE TEXT);'''
        conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    else:
        print 'Schema exists\n'
        conn.commit()
        conn.close()
    return conn

def insertImage(dbname, imageFile):
    with open(imageFile, 'rb') as input_file:
        conn = sqlite3.connect(dbname)
        c = conn.cursor()
        ablob = input_file.read()
        base=os.path.basename(imageFile)
        afile, ext = os.path.splitext(base)
        sql = '''INSERT INTO images
        (image, TYPE, imagE)
        VALUES(?, ?, ?);'''
        c.execute(sql,[sqlite3.Binary(ablob), ext, afile]) 
        conn.commit()

def loadimagE(dbname, path):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    #conn.execute("DELETE FROM images")
    for fn in image_list:
        imageFile = path+"/"+fn
        insertImage(imageFile)

    for r in c.execute("SELECT rowid, imagE FROM images"):
        print r[0],r[1]
   
    conn.commit()
    conn.close()

def image_id(dbname):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    rows = c.execute("SELECT rowid, TYPE, imagE FROM images")
    for row in rows:
        print row[0],row[2]+row[1]    
    return
    
def get_image(dbname,image_id):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    c.execute("SELECT image, TYPE, imagE FROM images WHERE id = ?;",(image_id,))
    #sql = "SELECT image, TYPE, imagE FROM images WHERE id = 19"
    param = {'id': image_id}
    #c.execute(sql, param)
    ablob, ext, afile = c.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename


import sqlite3
conn = sqlite3.connect('bigfeedfts.db')
c = conn.cursor()
c.execute('''select * from sqlite_master''')
l = c.fetchall()
tbl_name_list = []
for sql_type, sql_name, tbl_name, rootpage, sql in l:
    if sql_type == 'table':
        tbl_name_list.append(sql_name)
        print tbl_name_list

import sqlite3
conn = sqlite3.connect('bigfeedfts.db')
c = conn.execute('select * from bbctech')
print "Number of Fields : ",len(c.description), \
"\nField Names      : ", [i[0] for i in c.description]

import sqlite3
conn = sqlite3.connect('bigfeedfts.db')
c = conn.execute('select * from bbctech')
print [i[0] for i in c.description]

num_fields = len(cursor.description)
field_names = [i[0] for i in cursor.description]

import sqlite3
from time import sleep
conn = sqlite3.connect('XPfts4.db')
c = conn.cursor()
rows = c.execute('SELECT code FROM pages')
for row in rows:
    sleep(1)
    print str(row)


!xset led on

import sqlite3
from time import sleep
conn = sqlite3.connect('XPfts4.db')
conn.text_factory = str
c = conn.cursor()

rows = c.execute('select rowid, pages_content from pages')
for row in rows:
    row=str(row)
    #row = row.encode("ascii", "ignore")
    #row = row.encode('utf-8').strip()
    
    sleep(1)
    print row


def dbstore(insert):
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    c.execute("CREATE VIRTUAL TABLE IF NOT EXISTS code USING FTS3(code);\n    ""\n    )\n    
    c = conn.cursor()
    conn.text_factory = str
    # CREATE VIRTUAL TABLE pages USING fts4(code);\n    
              c.execute("INSERT INTO pages VALUES(?)", (insert,))              
              conn.commit()
              conn.close()
              return

def dbread():
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    req = 100
    view = raw_input("Search : ")
    for row in c.execute('SELECT rowid, code FROM pages WHERE pages MATCH ?', (view,)):
    count=count+1
    print (row)[0],"-",(row)[1],"\n"
    if count > req:
              conn.close()
              sys.exit()
              return


import DBread
DBread.dbread()

import Image2SQLite
rel_path='snippets'
Image2SQLite.getImage_list(rel_path)

import Image2SQLite
Image2SQLite.image_id(dbname)

import sqlite3        
import feedparser
import time
import sqlite3
Dbase = 'BookOfEnochGOOD.db'
conn = sqlite3.connect(Dbase)
conn.text_factory = str
c = conn.cursor()
c.execute('''
CREATE VIRTUAL TABLE IF NOT EXISTS pdfs
USING FTS3(text, title);
''')

title = "BookOfEnochGOOD"
#text = wikipedia.summary("Heaven")
#text = text.encode("ascii", "ignore")
#text = text.replace(". ",". \n")
conn = sqlite3.connect(Dbase)
c = conn.cursor()
reaD = open("BookOfEnochGOOD.txt","r")
lines = reaD.readlines()
for line in lines:
    line = line.decode("utf8")
    c.execute("INSERT INTO pdfs  VALUES (?, ?)", (line, title))
    conn.commit()
conn.close()

import Txmanip
help(Txmanip)

from time import sleep
import textract
#lines = textract.process("/home/jack/Desktop/Books/Web-Scraping-With-Python.pdf")
#lines = textract.process("/home/jack/Desktop/Books/Automate-the-Boring-Stuff-with-Python.pdf")
#lines = textract.process("/home/jack/Desktop/Books/Python_Cookbook_3rd_Edition.pdf")
#lines = textract.process("/home/jack/Desktop/Books/Effective_Python.pdf")
#lines = textract.process("/home/jack/Desktop/Books/IPythonInteractiveComputingandVisualizationCookbook.pdf")
#lines = textract.process("BookOfEnoch.pdf")
lines = textract.process("astral.pdf")
for line in lines.split("."):
    #line = line.replace(".",".\n")
    line = line.replace("	"," ")
    Tfile = open("astral.txt","a")
   
    Tfile.write(line)
    #print line
    Tfile.close()


 They indicate that, 900 million years ago, the day was only about 18.2 hours long.
    The history of life on Earth began about 3.8 billion years ago, initially with single-celled prokaryotic cells, such as bacteria.

from Txmanip import RemoveBlank
origFile = "astral.txt"
saveAS = "astralGOOD.txt"
RemoveBlank.removeblank(origFile, saveAS)

import sqlite3
import sys
conn = sqlite3.connect('BookOfEnochGOOD.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, text FROM pdfs WHERE text MATCH ?', (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],
    if count > req:
        conn.close()
        sys.exit()

# The Book Starts At 212
import sqlite3
import sys
conn = sqlite3.connect('BookOfEnochGOOD.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
id1 = raw_input("Starting ID : ")
id2 = raw_input("How Many Rows : ")

#for row in c.execute('Select rowid, * from pdfs LIMIT ?,?', (id1, id2)):
#for row in c.execute('Select rowid, * from pdfs LIMIT ?,?', (id1, id2)):
for row in c.execute('SELECT rowid, * from pdfs LIMIT ? OFFSET ?',  (id2, id1)):
    count=count+1
    print (row)[0],"-",(row)[1],
    if count > req:
        conn.close()
        sys.exit()

!wget https://media.readthedocs.org/pdf/astral/latest/astral.pdf

#################################################################################
# http://sherrytowers.com/2014/04/13/archeoastronomy-where-on-the-horizon-do-the-stars-sun-moon-rise-and-set-part-ii/
# A python script to calculate the declinations for past years for
# all the stars in the pyephem star catalog, from 5000BC to present in 
# increments of 50 years.
# To run the script type
#    python ./stars_print_out_ra_and_dec.py
# the script will output the file stars_print_out_ra_and_dec.out
#
# http://www.sherrytowers.com/stars.py
#
# Author: Sherry Towers
#         smtowers _at_ asu.edu
# Created: Dec 2nd, 2013
#
# Copyright Sherry Towers, 2013, 2014
#
# This script is not guaranteed to be free of bugs and/or errors.
#
# This script can be freely used and shared as long as the author and
# copyright information in this header remain intact.
##################################################################################
import ephem
global star
import ephem.stars
from ephem import *
messierdb = 'Messier.edb'
from math import pi

temp = ephem.Observer()
temp.elevation = 0

hyades = ephem.FixedBody()
hyades._ra = '4:27:0.0'
hyades._dec = '15:52:00.0'
hyades._pmra = 0.0
hyades._pmdec = 0.0
hyades.name = 'Hyades'
# NB: proper motion could be obtained from Gamma Tauri

SN1006 = ephem.FixedBody()
SN1006._ra = '15:2:8.0'
SN1006._dec = '-41:57:00.0'
SN1006._pmra = 0.0
SN1006._pmdec = 0.0
SN1006.name = 'SN1006'
SN1054 = ephem.FixedBody()
SN1054._ra = '5:34:20.0'
SN1054._dec = '22:01:00.0'
SN1054._pmra = 0.0
SN1054._pmdec = 0.0
SN1054.name = 'SN1054'

##################################################################################
# the Sun, plus the list of stars from
# http://github.com/brandon-rhodes/pyephem/blob/master/src/ephem/stars.py
##################################################################################
sirius  = ephem.star('Sirius')
canopus = ephem.star('Canopus')
arcturus = ephem.star('Arcturus')
vega = ephem.star('Vega')
rigel = ephem.star('Rigel')
procyon = ephem.star('Procyon')
betelgeuse = ephem.star('Betelgeuse')
capella = ephem.star('Capella')
altair = ephem.star('Altair')
aldebaran = ephem.star('Aldebaran')
spica = ephem.star('Spica')
antares = ephem.star('Antares')
pollux = ephem.star('Pollux')
fomalhaut = ephem.star('Fomalhaut')
deneb = ephem.star('Deneb')
regulus = ephem.star('Regulus')
pleiades = ephem.star('Alcyone')
alnitak = ephem.star('Alnitak')
alnilam = ephem.star('Alnilam')
mintaka = ephem.star('Mintaka')
eta_orionis = ephem.star('Saiph')
menkar = ephem.star('Menkar')
bellatrix = ephem.star('Bellatrix')
elnath = ephem.star('Elnath')
shaula = ephem.star('Shaula')
adara = ephem.star('Adara')
alnair = ephem.star('Alnair')
wezen = ephem.star('Wezen')
alhena = ephem.star('Alhena')
castor = ephem.star('Castor')
mirzam = ephem.star('Mirzam')
alphard = ephem.star('Alphard')
sirrah = ephem.star('Sirrah')
caph = ephem.star('Caph')
algenib = ephem.star('Algenib')
schedar = ephem.star('Schedar')
mirach = ephem.star('Mirach')
achernar = ephem.star('Achernar')
almach = ephem.star('Almach')
hamal = ephem.star('Hamal')
polaris = ephem.star('Polaris')
algol = ephem.star('Algol')
electra = ephem.star('Electra')
taygeta = ephem.star('Taygeta')
maia = ephem.star('Maia')
merope = ephem.star('Merope')
alcyone = ephem.star('Alcyone')
atlas = ephem.star('Atlas')
zaurak = ephem.star('Zaurak')
nihal = ephem.star('Nihal')
arneb = ephem.star('Arneb')
menkalinan = ephem.star('Menkalinan')
naos = ephem.star('Naos')
algieba = ephem.star('Algieba')
merak = ephem.star('Merak')
dubhe = ephem.star('Dubhe')
denebola = ephem.star('Denebola')
phecda = ephem.star('Phecda')
minkar = ephem.star('Minkar')
megrez = ephem.star('Megrez')
gienah = ephem.star('Gienah Corvi')
mimosa = ephem.star('Mimosa')
alioth = ephem.star('Alioth')
vindemiatrix = ephem.star('Vindemiatrix')
mizar = ephem.star('Mizar')
alcor = ephem.star('Alcor')
alcaid = ephem.star('Alcaid')
agena = ephem.star('Agena')
thuban = ephem.star('Thuban')
izar = ephem.star('Izar')
kochab = ephem.star('Kochab')
alphecca = ephem.star('Alphecca')
unukalhai = ephem.star('Unukalhai')
rasalgethi = ephem.star('Rasalgethi')
cebalrai = ephem.star('Cebalrai')
etamin = ephem.star('Etamin')
kaus_australis = ephem.star('Kaus Australis')
sheliak = ephem.star('Sheliak')
nunki = ephem.star('Nunki')
sulafat = ephem.star('Sulafat')
arkab_prior = ephem.star('Arkab Prior')
arkab_posterior = ephem.star('Arkab Posterior')
rukbat = ephem.star('Rukbat')
albereo = ephem.star('Albereo')
tarazed = ephem.star('Tarazed')
alshain = ephem.star('Alshain')
sadr = ephem.star('Sadr')
peacock = ephem.star('Peacock')
alderamin = ephem.star('Alderamin')
alfirk = ephem.star('Alfirk')
enif = ephem.star('Enif')
sadalmelik = ephem.star('Sadalmelik')
scheat = ephem.star('Scheat')
markab = ephem.star('Markab')

##################################################################################
# now loop over the locations and dates and calculate the rise/set azimuths
##################################################################################
aname = "stars_print_out_ra_and_dec.out"
f=open(aname,'w')
f.write('epoch,star,RA,DEC,prop_RA,prop_DEC,mag\n')
for lat in range(0,1,1):
 temp.lon = "00:00:00.00"
 temp.lat = str(lat)+":00:00.00"
 lat = 180*float(temp.lat)/pi
 temp.elevation = 0
 for year in range(-5000,2051,50):
 # http://earthsky.org/brightest-stars/thuban-past-north-star
 #for year in range(-2787,-2786,1): # check Thuban... it is north star 2787BC
 #for year in range(2000,2001,1): # check Thuban... it is north star 2787BC
  for istar in range(1,98,1):
  #for istar in range(70,71,1):
    if istar==1: mystar=hyades
    if istar==2: mystar=sirius
    if istar==3: mystar=canopus
    if istar==4: mystar=arcturus
    if istar==5: mystar=vega
    if istar==6: mystar=rigel
    if istar==7: mystar=procyon
    if istar==8: mystar=betelgeuse
    if istar==9: mystar=capella
    if istar==10: mystar=altair
    if istar==11: mystar=aldebaran
    if istar==12: mystar=spica
    if istar==13: mystar=antares
    if istar==14: mystar=pollux 
    if istar==15: mystar=fomalhaut
    if istar==16: mystar=deneb
    if istar==17: mystar=regulus
    if istar==18: mystar=pleiades
    if istar==19: mystar=alnitak
    if istar==20: mystar=alnilam
    if istar==21: mystar=mintaka
    if istar==22: mystar=eta_orionis
    if istar==23: mystar=menkar
    if istar==24: mystar=bellatrix
    if istar==25: mystar=elnath
    if istar==26: mystar=shaula
    if istar==27: mystar=adara 
    if istar==28: mystar=alnair
    if istar==29: mystar=wezen 
    if istar==30: mystar=alhena
    if istar==31: mystar=castor
    if istar==32: mystar=mirzam
    if istar==33: mystar=alphard
    if istar==34: mystar=sirrah
    if istar==35: mystar=caph
    if istar==36: mystar=algenib
    if istar==37: mystar=schedar
    if istar==38: mystar=mirach
    if istar==39: mystar=achernar
    if istar==40: mystar=almach
    if istar==41: mystar=hamal
    if istar==42: mystar=polaris
    if istar==43: mystar=algol
    if istar==44: mystar=electra
    if istar==45: mystar=taygeta
    if istar==46: mystar=maia
    if istar==47: mystar=merope
    if istar==48: mystar=alcyone
    if istar==49: mystar=atlas
    if istar==50: mystar=zaurak
    if istar==51: mystar=nihal
    if istar==52: mystar=arneb
    if istar==53: mystar=menkalinan
    if istar==54: mystar=naos
    if istar==55: mystar=algieba
    if istar==56: mystar=merak
    if istar==57: mystar=dubhe
    if istar==58: mystar=denebola
    if istar==59: mystar=phecda
    if istar==60: mystar=minkar
    if istar==61: mystar=megrez
    if istar==62: mystar=gienah 
    if istar==63: mystar=mimosa 
    if istar==64: mystar=alioth 
    if istar==65: mystar=vindemiatrix 
    if istar==66: mystar=mizar 
    if istar==67: mystar=alcor 
    if istar==68: mystar=alcaid
    if istar==69: mystar=agena
    if istar==70: mystar=thuban
    if istar==71: mystar=izar
    if istar==72: mystar=kochab
    if istar==73: mystar=alphecca
    if istar==74: mystar=unukalhai
    if istar==75: mystar=rasalgethi
    if istar==76: mystar=cebalrai
    if istar==77: mystar=etamin
    if istar==78: mystar=kaus_australis
    if istar==79: mystar=sheliak
    if istar==80: mystar=nunki
    if istar==81: mystar=sulafat
    if istar==82: mystar=arkab_prior
    if istar==83: mystar=arkab_posterior
    if istar==84: mystar=rukbat
    if istar==85: mystar=albereo
    if istar==86: mystar=tarazed
    if istar==87: mystar=alshain
    if istar==88: mystar=sadr
    if istar==89: mystar=peacock
    if istar==90: mystar=alderamin
    if istar==91: mystar=alfirk
    if istar==92: mystar=enif
    if istar==93: mystar=sadalmelik
    if istar==94: mystar=scheat
    if istar==95: mystar=markab
    if istar==96: mystar=SN1006
    if istar==97: mystar=SN1054

    myname = str(mystar.name)
    if (istar==18): myname='Pleiades'
    lgood=0
    adate = str(year)+'/6/21'
    a = ephem.date(adate)
    mystar.compute(a,epoch=str(year))
    #print 'istar is '+str(istar)+' '+myname
    if istar!=1:
     if istar!=18:
       if istar<96:
        mag = float(mystar.mag)
       b=1
     b=1
    b=1
    if (istar==1): mag=0.5    # hyades
    if (istar==18): mag=1.6   # pleiades
    if (istar==96): mag= -7.5 # SN1006
    if (istar==97): mag= -6   # SN1054
    #print str(mag)
    
    ########################################################
    ########################################################
    f.write(str(year)+','+myname+","+str((180/pi)*float(mystar.a_ra))+','+str((180.0/pi)*float(mystar.a_dec))+","+str(float(mystar._pmra))+","+str(float(mystar._pmdec))+","+str(mag)+'\n')
  b=1
 b=1 
f.close()
b=1


import SatInfo
SatInfo.prntlist()


import glob
import os
for f in glob.glob("Wiki_*.txt"):
    os.system("cat "+f+" >> ALL_WIKI.txt")

fname = raw_input("Enter file name: ")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print "Number of words: ",num_words

from Txmanip import RemoveBlank
origFile = "ALL_WIKI.txt"
saveAS = "ALL_WIKI_GOOD.txt"
RemoveBlank.removeblank(origFile, saveAS)

!ls *.txt

# %load SearchFilename.py
'''
Search a filename for a phrase and how many following lines to display
USAGE:
import SearchFilename
filename = "hek.txt"
length = 4
SearchFilename.searchfilename(filename, length)
'''
def searchfilename(filename, length):
    f = open(filename, "r")
    searchlines = f.readlines()
    f.close()
    search = str(raw_input("Search Phrase : "))
    for i, line in enumerate(searchlines):
        if search in line: 
            for l in searchlines[i:i+length]: print l,
            print
            
#USAGE:
import SearchFilename
filename = "ALL_WIKI_GOOD.txt"
# length = how many lines after
length = 7
SearchFilename.searchfilename(filename, length) 



!pip freeze >>freez.txt
# I used my installed modules as the word cloud I executed 'pip' freeze
# then copied the resulting words, minus the version to 'wordcloud.txt'

f = open("freez.txt").readlines()
for line in f:
    line = line.replace("\n", "")
    print line

%%writefile wordcloud.txt
aiml
alabaster
altair
anaconda_client
anaconda_project
appdirs
apptools
argcomplete
arrow
astroid
astropy
attrs
Automat
Babel
backports_abc
backports.functools-lru-cache
backports.shutil-get-terminal-size
backports.ssl-match-hostname
BeautifulSoup
beautifulsoup4
bitarray
blaze
bleach
bokeh
boto
Bottleneck
branca
bs4
cdecimal
certifi
cffi
chardet
ChatterBot
chatterbot-corpus
chest
click
get-mak-eurl
cloudpickle
clyent
colorama
coloredlogs
conda
configobj
configparser
constantly
contextlib2
cov-core
coverage
cryptography
cssselect
cycler
Cython
cytoolz
dask
data
datashape
decorator
dill
dlib
docopt
docutils
dot2tex
e
entrypoints
enum34
et-xmlfile
facemorpher
fastcache
Flask
Flask-Admin
Flask-Cors
Flask-GraphQL
Flask-WTF
flickr-api
flickrapi
folium
funcsigs
functions
functools32
future
futures
gevent
gitter
graphene
graphene
sqlalchemy
graphql-core
graphql-relay
graphviz
greenlet
grin
h5py
HeapDict
html2text
html5lib
httplib2
humanfriendly
hyperlink
icrawler
idna
ijson
imageio
imagesize
imutils
incremental
inflect
ipaddress
ipykernel
ipyleaflet
ipython
ipython-genutils
ipyvolume
ipywidgets
irc
iso8601
isort
itsdangerous
jaraco.classes
jaraco.collections
jaraco.functools
jaraco.itertools
jaraco.logging
jaraco.stream
jaraco.text
jdcal
jedi
Jinja2
JSON-log-formatter
json-tricks
jsondatabase
jsonschema
jupyter-client
jupyter-console
jupyter-contrib-core
jupyter-contrib-nbextensions
jupyter-core
jupyter-highlight-selected-word==0.0.11jupyter-latex-envs
jupyter-nbextensions-configurator
jupyterlab
jupyterlab-launcher
labellio-cli
latex
lazy-object-proxy
leveldb
lightning-python
llvmlite
locket
lxml
mahotas
Markdown
markovbot
markovify
MarkupSafe
matplotlib
metakernel
meteor-ejson
mistune
mock
mongoengine
monotonic
more-itertools
mpld3
mpmath
msnoise
msnoise-tomo
multipledispatch
MySQL-python
nbconvert
nbformat
networkx
nltk
nodebox-opengl
nose
nose-cov
notebook
numba
numexpr
numpy
numpydoc
oauth
oauthlib
obspy
odo
olefile
openpyxl
packaging
pandas
pandocfilters
parsel
partd
pathlib2
patsy
pbr
pep8
pexpect
pickleshare
Pillow
pkginfo
plotly
ply
processing
progressbar
promise
prompt-toolkit
protobuf
psutil
PsychoPy
psycopg2
ptyprocess
py
py3-protobuffers
PyAIML
pyamg
pyasn1
pyasn1-modules
pycairo
pychecker
pycosat
pycparser
pycrypto
pycurl
PyDispatcher
pydot
pyee
pyface
pyflakes
pygame
pyglet
Pygments
PyInstaller
pylint
pymongo
pymorph
pymunk
PyMySQL
PyOpenGL
PyOpenGL-accelerate
pyOpenSSL
pyparsing
pytest
python-coveralls
python-dateutil
python-ddp
python-meteor
python-resize-image
python-twitter
pythreejs
pyttsx
pytz
PyWavelets
PyYAML
pyzmq
QtAwesome
QtPy
queuelib
redis
requests
requests-oauthlib
requests-toolbelt
requirements
rope
scandir
scikit-image
scikit-learn
scipy
Scrapy
seaborn
selectivesearch
service-identity
Shapely
shutilwhich
simplegeneric
singledispatch
six
skulpt-python
snowballstemmer
sockjs-tornado
Sphinx
sphinx-rtd-theme
SQLAlchemy
statsmodels
subprocess32
surrealism
SVGFig
svgwrite
sympy
tables
tempdir
tempora
tensorflow
termenu
terminado
testpath
textblob
times
toolz
tornado
tqdm
traitlets
traits
traitsui
traittypes
tweepy
twine
Twisted
TwitterAPI
typing
unicodecsv
Unidecode
vega
virtualenv
vpnotebook
vpython
vtk
w3lib
Wand
wcwidth
webcolors
webencodings
Werkzeug
widgetsnbextension
wrapt
ws4py
WTForms
wxPython
xerox
xlrd
XlsxWriter
xlwt
zope.interface

#%%writefile twitterpost.py

#%%writefile twitterpost.py
#!/anaconda2/bin/python
import os
import random
import sys
import markovify
sys.path.insert(0, '/home/jack/Desktop/pycode/vpython2')
import twython
from twython import Twython
import time
#removed keys for privacy reasons
CONSUMER_KEY = 'XXXXXXXXXXXXXXXX'
CONSUMER_SECRET = 'XXXXXXXXXXXXXXXX'
ACCESS_KEY = 'XXXXXXXXXXXXXXXX'
ACCESS_SECRET = 'XXXXXXXXXXXXXXXX'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
f = open("art.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
STR = ("Nice and simple graph. Making graphic images is easy and fun. These circular graphs have a nice appearance to me")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "images/NewFolder/lightning01T.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')
photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])


# Testing script to print one random word from wordcloud.txt

import random

def generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
    lines = contents_of_file.splitlines()
    line_number = random.randrange(0, len(lines))
    return lines[line_number]
wrd = (generate_the_word("wordcloud.txt"))
print wrd


# Testing a random loop

import random
count = 0
while count< 10:
    def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    TEXT = "freez.txt"
    #TEXT = "wordcloud.txt"
    wrd = (generate_the_word(TEXT))
    count = count+1
    print wrd

from PIL import Image, ImageDraw, ImageFont
import random
from random import randint
base = Image.open('images/NewFolder/textback.jpg').convert('RGBA')
w, h = base.size
Lw = randint(0,w-50)
Lh = randint(0,h-30)
print Lw, Lh

# generating just a Wordcloud background

from PIL import Image, ImageDraw, ImageFont
import random
from random import randint
# get an image
count = 1
# use an existing image
#start = Image.open('images/NewFolder/textback.jpg').convert('RGBA')
#or create a blank on
start = Image.new('RGBA', (640,640), (255,0,255,0))
start.save('images/StartBlank.png')


from PIL import Image, ImageDraw, ImageFont
import random
from random import randint
# get an image
count = 1
start2 = Image.open('images/NewFolder/textback.jpg').convert('RGBA')
start2.save('images/NewFolder/textbackU.jpg')
while count < 256 :
    base = Image.open('images/NewFolder/textbackU.jpg').convert('RGBA')
 
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))
    # get a font
    #generate a random size for the font
    int_n = int(count*.2)
    Fsize = randint(15,100-int_n)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size


    def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    textin = (generate_the_word("wordcloud.txt"))

    # calculate the x,y coordinates of the text
    w, h = base.size
    Lw = randint(-150,w-50)
    Lh = randint(-50,h-30)
    #textin = "The TwitterBot Project" 
    #generate random color and opacity
    r = randint(0,256)
    g = randint(0,256)
    b = randint(0,256)
    a = randint(0,count)
    d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

    out = Image.alpha_composite(base, txt)
    out.save("images/NewFolder/textbackU3.jpg", "JPEG")
    count=count+1
       
    
out.show()


from PIL import Image, ImageDraw, ImageFont
import random
from random import randint
# get an image
count = 1
start = Image.open('images/StartBlank.png').convert('RGBA')
start.save('images/StartBlank.png')
while count < 256 :
    base = Image.open('images/StartBlank.png').convert('RGBA')
 
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))
    # get a font
    #generate a random size for the font
    int_n = int(count*.2)
    Fsize = randint(15,100-int_n)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size


    def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    textin = (generate_the_word("wordcloud.txt"))

    # calculate the x,y coordinates of the text
    w, h = base.size
    Lw = randint(-150,w-50)
    Lh = randint(-50,h-30)
    #textin = "The TwitterBot Project" 
    #generate random color and opacity
    r = randint(0,256)
    g = randint(0,256)
    b = randint(0,256)
    a = randint(0,count)
    d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

    out = Image.alpha_composite(base, txt)
    out.save("images/textbacktmp.png", "PNG")
    count=count+1
       
#base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', out.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = out.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy
textin = "The TwitterBot Project" 
d.text((x,y), textin, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(out, txt)
out.save("images/textbackP001.png", "PNG")
out.show()


!showme images/textbackP001.png

from PIL import Image, ImageDraw, ImageFont
# get an image
base = Image.open('images/textbackP001.png').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
textin = "PYTHON MODULES" 
d.text((x,y), textin, font=fnt, fill=(0,0,0,250))

out2 = Image.alpha_composite(base, txt)
out2.save("images/textbackP_post002.png", "PNG")
out2.show()


from PIL import Image, ImageDraw, ImageFont
# get an image
base = Image.open('images/NewFolder/textbackP_post002.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy
textin = "The TwitterBot Project" 
d.text((x,y), textin, font=fnt, fill=(0,0,0,180))

out = Image.alpha_composite(base, txt)
out.save("images/NewFolder/textbackP_post002_signed.jpg", "JPEG")
out.show()


#%%writefile twitterpost.py
#!/anaconda2/bin/python
import os
import random
import sys
import markovify
sys.path.insert(0, '/home/jack/Desktop/pycode/vpython2')
import twython
from twython import Twython
import random
import time
#removed keys for privacy reasons
CONSUMER_KEY = 'XXXXXXXXXXXXXXXX'
CONSUMER_SECRET = 'XXXXXXXXXXXXXXXX'
ACCESS_KEY = 'XXXXXXXXXXXXXXXX'
ACCESS_SECRET = 'XXXXXXXXXXXXXXXX'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
f = open("art.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
STR = ("#wordcloud from pip freeze - a few of my modules. not enough roomfor all #pip #freeze #python #modules #pythonmodules #pythongraphics")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "images/NewFolder/textbackP_post002_signed.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')
photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])


from PIL import Image, ImageDraw, ImageFont
import random
from random import randint
# get an image
-

from PIL import Image, ImageDraw, ImageFont
import random
from random import randint
# get an image


#title = "Python Stuff"
signature_ = "The TwitterBot Project" 

count = 1
start = Image.open('images/NewFolder/newback.jpg').convert('RGBA')
start.save('images/NewFolder/textbacktmp.jpg')
while count < 256 :
    base = Image.open('images/NewFolder/textbacktmp.jpg').convert('RGBA')
 
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))
    # get a font
    #generate a random size for the font
    int_n = int(count*.2)
    Fsize = randint(15,100-int_n)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size


    def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    textin = (generate_the_word("wordcloud.txt"))

    # calculate the x,y coordinates of the text
    w, h = base.size
    Lw = randint(-150,w-50)
    Lh = randint(-50,h-30)
    #textin = "The TwitterBot Project" 
    #generate random color and opacity
    r = randint(0,256)
    g = randint(0,256)
    b = randint(0,256)
    a = randint(0,count)
    d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

    out = Image.alpha_composite(base, txt)
    out.save("images/NewFolder/textbacktmp.jpg", "JPEG")
    count=count+1
       
#base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', out.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = out.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy

d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(out, txt)
out.save("images/NewFolder/tmp.jpg", "JPEG")
# save the image then reopen to put a title
base = Image.open('images/NewFolder/tmp.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("titles.txt"))

d.text((x,y), title , font=fnt, fill=(0,0,0,250))

out2 = Image.alpha_composite(base, txt)
out2.save("images/NewFolder/textbackP_post003.jpg", "JPEG")
out2.show()


%%writefile titles.txt
Python Fun
Python Graphics
Generator
Word Cloud
Graphics
Fun w/Python
Python Stuff
PYTHON !!!
Love`en Python
Creative Python
Graphic Fun



#%%writefile TwittePost.py
#!/anaconda2/bin/python
import os
import random
import sys
import markovify
import twython
from twython import Twython
import time
from PIL import Image, ImageDraw, ImageFont
from random import randint
# get an image

#title = "Python Stuff"
signature_ = "The TwitterBot Project" 

count = 1
start = Image.open('images/NewFolder/newback.jpg').convert('RGBA')
start.save('images/NewFolder/textbacktmp.jpg')
while count < 256 :
    base = Image.open('images/NewFolder/textbacktmp.jpg').convert('RGBA')
 
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))
    # get a font
    #generate a random size for the font
    int_n = int(count*.2)
    Fsize = randint(15,100-int_n)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size


    def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    textin = (generate_the_word("wordcloud.txt"))

    # calculate the x,y coordinates of the text
    w, h = base.size
    Lw = randint(-150,w-50)
    Lh = randint(-50,h-30)
    #textin = "The TwitterBot Project" 
    #generate random color and opacity
    r = randint(0,256)
    g = randint(0,256)
    b = randint(0,256)
    a = randint(0,count)
    d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

    out = Image.alpha_composite(base, txt)
    out.save("images/NewFolder/textbacktmp.jpg", "JPEG")
    count=count+1
       
#base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', out.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = out.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy

d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(out, txt)
out.save("images/NewFolder/tmp.jpg", "JPEG")
# save the image then reopen to put a title
base = Image.open('images/NewFolder/tmp.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("titles.txt"))
d.text((x,y), title , font=fnt, fill=(0,0,0,250))
out2 = Image.alpha_composite(base, txt)
out2.save("images/NewFolder/TM_POST.jpg", "JPEG")

#removed keys for privacy reasons
CONSUMER_KEY = 'XXXXXXXXXXXXXXXX'
CONSUMER_SECRET = 'XXXXXXXXXXXXXXXX'
ACCESS_KEY = 'XXXXXXXXXXXXXXXX'
ACCESS_SECRET = 'XXXXXXXXXXXXXXXX'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
f = open("art.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
STR = ("#All_in_One - #WordCloud #Create - Added ability to randomly choose an image background  #Automated")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "images/NewFolder/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')
photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])




search = raw_input("find  ")
file = open("ToUse.txt")
lines = file.readlines()
for line in lines:
    if search in line:print line
    if search == True:
        file.close()
        exit()
file.close()


%reset -f

import markovify
f = open("virtual.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
STR = (text_model.make_short_sentence(140))
savE = open('savE.txt', 'a')
savE.write(STR)
savE.close()
print STR

import re
def periodpattern():
    with open('savE.txt') as infile:
        for line in infile:
            line = line.replace(" ‘","")
            line = line.replace("’","")
            line = line.replace(".",".\n")
            line = line.replace("!","!\n")
            line = line.replace("?","?\n")
            
            print line
            outfile2 = open('savE_patern.txt', 'w')
            outfile2.write(line)  # non-empty
            outfile2.close()
            
periodpattern()            


import markovify
import time
f = open("grimm.txt")
text = f.read()
text_model_a = markovify.Text(text)


ebook_b =open('hekel.txt')
text0 = ebook_b.read()
text_model_b = markovify.Text(text0)
for i in range(5):
    print(text_model_b.make_short_sentence(140))
    STR0 = (text_model_b.make_short_sentence(140))
    savE = open('savE.txt', 'a')
    savE.write(STR0)
    savE.close()

# 2. Print five randomly-generated sentences
for i in range(5):
    print(text_model_a.make_short_sentence(140))
    STR = (text_model_a.make_short_sentence(140))
    savE = open('savE.txt', 'a')
    savE.write(STR)
    savE.close()
# 3. Print three randomly-generated sentences of no more than 140 characters
for i in range(5):
    print(text_model_a.make_short_sentence(140))
    STR2 = (text_model_a.make_short_sentence(140))
    savE = open('savE.txt', 'a')
    savE.write(STR2)
    savE.close()
# Combine the models into a single one
both_models = markovify.combine([text_model_a,text_model_b])
for i in range(5):
    print(both_models.make_short_sentence(140))    
    STR3 = (both_models.make_short_sentence(140))  
    savE = open('savE.txt', 'a')
    savE.write(STR3)
    savE.close()    

with open("textfile.txt") as openfile:
    for line in openfile:
        for part in line.split():
            if "color=" in part:
                print part

def words(stringIterable):
    #upcast the argument to an iterator, if it's an iterator already, it stays the same
    lineStream = iter(stringIterable)
    for line in lineStream: #enumerate the lines
        for word in line.split(): #further break them down
            print word

for lines in content[0].split():
    for split0 in lines.split(' '):
        for split1 in split0.split(','):
            for split2 in split1.split('.'):
                for split3 in split2.split('?'):
                    for split4 in split3.split('!'):
                        for word in split4.split(':'): 
                            if word != "":
                                print(word)

delimiters = ['\n', ' ', ',', '.', '?', '!', ':', 'and_what_else_you_need']
words = content
for delimiter in delimiters:
    new_words = []
    for word in words:
        new_words += word.split(delimiter)
    words = new_words


import re
delimiters = ['\n', ' ', ',', '.', '?', '!', ':', 'and_what_else_you_need']
words = re.split('|'.join(delimiters), content)

!rm snippet.db

import sqlite3
conn = sqlite3.connect('snippet.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE snippet 
USING FTS3(base64, text, keywords);
""")
conn.commit()
conn.close()

import sqlite3
import base64

#Connect to database: 
conn = sqlite3.connect('snippet.db')
c = conn.cursor()

#Single lines do not need the three quotes
file = """
def insert_info(store):
    with sqlite3.connect("misc.db") as db:
        #use a text_factory that can interpret 8-bit bytestrings 
        db.text_factory = str
        cursor = db.cursor()
        #db.text_factory = str
        sql = "insert into storeit (data0, data1, data2) values (?, ?, ?)"
        cursor.execute(sql, store)
        db.commit()
        
        OR
        conn.text_factory = str
"""
encodedlistvalue=base64.b64encode(file)
b = 'text_factory, 8-bit bytestrings, 8-bit'

c.execute("INSERT INTO snippet VALUES (?,?,?)", (encodedlistvalue, file, b))

conn.commit()
conn.close()


import sqlite3
conn = sqlite3.connect('snippet.db')
c = conn.cursor()
for row in c.execute('SELECT rowid,base64, text, keywords FROM snippet ORDER BY ROWID'):
        print(row),"\n-----\n"
        # notice the Keywords are plain text even the base64 is displayed as unicode (u'IyBMYXJ .... )

could you tell me how I can fix anything with no FTP or Cpanel access

import sqlite3
conn = sqlite3.connect('snippet.db')

c = conn.cursor()# Never 
for row in c.execute('SELECT rowid,base64, text, keywords FROM snippet ORDER BY ROWID'):
                
        # display as asci instead of unicode
        s2 = row[1].encode('ascii')
        #decode the base64 stored data
        encodedlistvalue=base64.b64decode(s2)
        #print row[0],"\n",encodedlistvalue, '\n', row[2], '\nKeywords:',row[3],'\n -----------------------------\n'
        print row[0],"\n",encodedlistvalue, '\n', '\nKeywords:',row[3],'\n -----------------------------\n'

        

def file_len(fname):
    with open(fname) as f:
        for i, l in enumerate(f):
            pass
    return i + 1
fname="bible2.txt"
file_len(fname)

!ls *.csv

import time
from itertools import islice
def file_len(fname):
    with open(fname) as f:
        for i, l in enumerate(f):
            pass
    return i + 1
fname="elonmusk.txt"
lineS = file_len(fname)
print lineS

import time
from itertools import islice
with open("elonmusk.txt") as lines:    
    heads = list(islice(lines, 8))
    for head in heads:
        time.sleep(1)
        print head


!rm misc.db

import sqlite3
conn = sqlite3.connect('misc.db')
c = conn.cursor()
c.execute("CREATE VIRTUAL TABLE storeit USING FTS3(data0, data1, data2);")
conn.commit()
conn.close()

import sqlite3
def insert_info(store):
    with sqlite3.connect("misc.db") as db:
        #use a text_factory that can interpret 8-bit bytestrings 
        db.text_factory = str
        cursor = db.cursor()
        #db.text_factory = str
        sql = "insert into storeit (data0, data1, data2) values (?, ?, ?)"
        cursor.execute(sql, store)
        db.commit()

#if __name__ == "__main__":
print "You will be promted to enter data1, data2, and data2 "  
data0 = raw_input("Enter data0: >>")
data1 = raw_input("Enter data12: >>")
data2 = raw_input("Enter data2: >>")
store = (data0,data1,data2)
insert_info(store)

import sqlite3
conn = sqlite3.connect('misc.db')
c = conn.cursor()# Never do this -- insecure!
for row in c.execute('SELECT rowid, * FROM storeit ORDER BY rowid'):
        print row[0],"  ",row[1],"  ",row[2], row[3],"\n-----\n",

conn.close()


lines = open("elonmusk.txt","r")
#lines = open("realDonaldTrump.txt","r")
line = lines.readline()
count = 0
for line in lines:
    #if "Hillary" in line :
    #if "FakeNews" in line :
    if "future" in line :
        count=count+1
        print count,"-",line 

outf = open("symmetrymag.txt", "w") 
outf.close() 

from itertools import tee
count=0
with open("symmetrymag_tweets.csv") as inf:
    for line in inf:
        lines  = line[39:]
        outf = open("symmetrymag.txt", "a") 
        outf.write(lines)
outf.close() 

from itertools import tee
count=0
with open("TEDTalks_tweets.csv") as inf:
    for line in inf:
        lines  = line[39:]
        outf = open("TEDTalks.txt", "a") 
        outf.write(lines)
outf.close() 

import sqlite3
conn = sqlite3.connect('collection.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE tweets 
USING FTS3(text, account);
""")
conn.commit()
conn.close()

import sqlite3
import time
#account = "TEDTalks.txt"
#account = "elonmusk.txt"
account = "realDonaldTrump.txt"
print account[:-4]

import sqlite3
import time
#account = "TEDTalks.txt"
account = "symmetrymag.txt"
#account = "elonmusk.txt"
#account = "realDonaldTrump.txt"
user = account[:-4]
lines = open(account,"r")
line = lines.readline()
for line in lines:
    conn = sqlite3.connect('collection.db')
    conn.text_factory = str
    c = conn.cursor()
    c.execute("INSERT INTO tweets VALUES (?,?)", (line, user)) 
    conn.commit()
    conn.close()        
    
    #print line         

conn.commit()
conn.close()                 

import sqlite3
import sys
conn = sqlite3.connect('collection.db')
c = conn.cursor()
count=0
req=100
for row in c.execute('SELECT rowid,* FROM tweets WHERE text MATCH "future"'):
    count=count+1
    #print count,"by",(row)[2],"\n",(row)[1],"\n"
    print count,"-",(row)[1]," -- by",(row)[2],"\n"
    if count > req:
        conn.close()
        sys.exit()

results = cursor.execute("SELECT username, password "
                         "FROM logins WHERE username = ?", (username,))

import sys
sys.path.insert(0,"/usr/local/lib/python2.7/dist-packages/")
import pyephem


import Here
Lt = Here.here[0]
Lo = Here.here[1]
print Lt,Lo

!python /usr/local/lib/python2.7/dist-packages/pyephem-3.7.6.0.dist-info/INSTALLER

import sqlite3
import sys
conn = sqlite3.connect('collection.db')
c = conn.cursor()
count=0
req=100
search = "future"
#for row in c.execute('SELECT rowid,* FROM tweets WHERE text MATCH %s' % search):
for row in c.execute('SELECT rowid,* FROM tweets WHERE text MATCH ?', (search,)):    
    count=count+1
    #print count,"by",(row)[2],"\n",(row)[1],"\n"
    print count,"-",(row)[1]," -- by",(row)[2],"\n"
    if count > req:
        conn.close()
        sys.exit()



import sqlite3
import sys
conn = sqlite3.connect('collection.db')
c = conn.cursor()
count=0
requ=200
search = raw_input("Search")
#for row in c.execute('SELECT rowid,* FROM tweets WHERE text MATCH %s' % search):
for row in c.execute('SELECT rowid,* FROM tweets WHERE text MATCH ?', (search,)):    
    count=count+1
    #print count,"by",(row)[2],"\n",(row)[1],"\n"
    print count,"-",(row)[1]," -- by",(row)[2],"\n"
    if count > req:
        conn.close()
        sys.exit()

!ls *.txt

import fileinput
somefile = raw_input("FileName :")
string = raw_input("TextSearch :")
lines = open(somefile,"r")
for line in lines:
    if string in line:
        print line
        f.close() 

import Txmanip
help(Txmanip)

%%writefile /home/jack/anaconda2/lib/python2.7/site-packages/Txmanip/FindReplace.py
# Finds a string in a file, prints the line then opens an input window to replace the line 
def findreplace():
    import fileinput
    print 'If Search is true and no data is entered, the line will be deleted.'
    somefile = raw_input("FileName :")
    string = raw_input("TextSearch :")
    lines = open(somefile,"r")
    for line in lines:
        if string in line:
            print line
 

    for line in fileinput.input(somefile, inplace=True):
        if string in line:
            # input the whole line as you wish edited
            change = raw_input('Create New Line :') 
            if change != "": line = change
            print line
            #print line,
            #print 'this goes after the line'
        else:
            print line, # just print the line anyway
      

from Txmanip import FindReplace
FindReplace.findreplace()

%reset -f

import fileinput
import time
print 'If Search is true and no data is entered, the line will be deleted.'
somefile = raw_input("FileName :")
string = raw_input("TextSearch :")
for line in fileinput.input(somefile, inplace=True):
    if string in line:
        # input the whole line as you wish edited
        
        time.sleep(3)
        change = raw_input('Edit New Line :')
        if change != "": line = change
        print line
        #print line,
        #print 'this goes after the line'
    else:
        print line, # just print the line anyway
        
        
fileinput.close()        

f=open(filename)
count=0
starT = 0
enD = 5
lines = f.readline().strip()
for line in lines:
    count = count+1
    if count > starT:
        print "LineNumber :",count,"\n",line,"\n"
        if count >enD:f.close()
            

import sys
filename = "virtual.txt"   
count=0;starT = 0;enD = 5
file =open(filename)
lines = file.readlines() # .strip()
for line in lines:
    count=count+1
    if count>starT and count<enD:
        print line
          

search = raw_input("find  : ")
file = open("virtual.txt", "r")
lines = file.readlines()
for line in lines:
    if search in line:
        print line

file.close()

from Txmanip import HeadFirst
filename = 'virtual.txt'
HeadFirst.headFirst(filename)

!rm substitute.py

import (
    "fmt"
    "time"
)

func worker(id int, jobs <-chan int, results chan<- int) {
    for j := range jobs {
        fmt.Println("worker", id, "processing job", j)
        time.Sleep(time.Second)
        results <- j * 2
    }
}

jobs := make(chan int, 100)
results := make(chan int, 100)

for w := 1; w <= 3; w++ {
    go worker(w, jobs, results)
}

for j := 1; j <= 9; j++ {
    jobs <- j
}
time.Sleep(3*time.Second)
close(jobs)

from PIL import Image
im = Image.open("/home/jack/Desktop/R-Studio/qt-colors.png") 
im

#!/home/jack/miniconda3/envs/cloned_base/bin/python

"""
@author: The Absolute Tinkerer
"""

import os
import math
import numpy as np

from PyQt5.QtGui import QColor


def QColor_HSV(h, s, v, a=255):
    """
    Hue        : > -1 [wraps between 0-360]
    Saturation : 0-255
    Value      : 0-255
    Alpha      : 0-255
    """
    color = QColor()
    color.setHsv(*[int(e) for e in [h, s, v, a]])
    return color


def save(p, fname='image', folder='Images', extension='jpg', quality=100, overwrite=True):
    if not os.path.exists(folder):
        os.mkdir(folder)

    # The image name
    imageFile = f'{folder}/{fname}.{extension}'

    # Do not overwrite the image if it exists already
    if os.path.exists(imageFile):
        assert overwrite, 'File exists and overwrite is set to False!'

    # fileName, format, quality [0 through 100]
    p.saveImage(imageFile, imageFile[-3:], quality)


def Perlin2D(width, height, n_x, n_y, clampHorizontal=False, clampVertical=False):
    """
    Constructor

    Optimizations were gained from studying:
    https://github.com/pvigier/perlin-numpy/blob/master/perlin_numpy/perlin2d.py

    Parameters:
    -----------
    width : int
        The width of the canvas
    height : int
        The height of the canvas
    n_x : int
        The number of x tiles; must correspond to an integer x-edge length
    n_y : int
        The number of y tiles; must correspond to an integer y-edge length
    clampHorizontal : boolean
        Imagine the Perlin Noise on a sheet of paper - form a cylinder with
        the horizontal edges. If True, cylinder will be continuous noise
    clampVertical : boolean
        Imagine the Perlin Noise on a sheet of paper - form a cylinder with
        the vertical edges. If True, cylinder will be continuous noise

    Returns:
    --------
    <value> : numpy array
        noise values for array[width, height] between -1 and 1
    """
    # First ensure even number of n_x and n_y divide into the width and height,
    # respectively
    msg = 'n_x and n_y must evenly divide into width and height, respectively'
    assert width % n_x == 0 and height % n_y == 0, msg

    # We start off by defining our interpolation function
    def fade(t):
        return t * t * t * (t * (t * 6 - 15) + 10)

    # Next, we generate the gradients that we are using for each corner point
    # of the grid
    angles = 2 * np.pi * np.random.rand(n_x + 1, n_y + 1)
    r = math.sqrt(2)  # The radius of the unit circle
    gradients = np.dstack((r * np.cos(angles), r * np.sin(angles)))

    # Now, if the user has chosen to clamp at all, set the first and last row/
    # column equal to one another
    if clampHorizontal:
        gradients[-1, :] = gradients[0, :]
    if clampVertical:
        gradients[:, -1] = gradients[:, 0]

    # Now that gradient vectors are complete, we need to create the normalized
    # distance from each point to its starting grid point. In other words, this
    # is the normalized distance from the grid tile's origin based upon the
    # grid tile's width and height
    delta = (n_x / width, n_y / height)
    grid = np.mgrid[0:n_x:delta[0], 0:n_y:delta[1]].transpose(1, 2, 0) % 1

    # At this point, we need to compute the dot products for each corner of the
    # grid. To do this, we first need proper-dimensioned gradient vectors - do
    # this now. A computation for number of points per tile is needed as well
    px, py = int(width / n_x), int(height / n_y)
    gradients = gradients.repeat(px, 0).repeat(py, 1)
    g00 = gradients[:-px, :-py]
    g10 = gradients[px:, :-py]
    g01 = gradients[:-px, py:]
    g11 = gradients[px:, py:]

    # Compute dot products for each corner
    d00 = np.sum(g00 * grid, 2)
    d10 = np.sum(g10 * np.dstack((grid[:, :, 0] - 1, grid[:, :, 1])), 2)
    d01 = np.sum(g01 * np.dstack((grid[:, :, 0], grid[:, :, 1] - 1)), 2)
    d11 = np.sum(g11 * np.dstack((grid[:, :, 0] - 1, grid[:, :, 1] - 1)), 2)

    # We're doing improved perlin noise, so we use a fade function to compute
    # the x and y fractions used in the linear interpolation computation
    # t is the faded grid
    # u is the faded dot product between the top corners
    # v is the faded dot product between the bottom corners
    # _x and _y are the fractional (0-1) location of x, y in the tile
    t = fade(grid)
    u = d00 + t[:, :, 0] * (d10 - d00)
    v = d01 + t[:, :, 0] * (d11 - d01)

    # Now perform the second dimension's linear interpolation to return value
    return u + t[:, :, 1] * (v - u)


"""
@author: The Absolute Tinkerer
"""

import os
import math
import time
import random

import numpy as np

from PIL import Image

from PyQt5.QtGui import QColor, QPen, QPixmap
from PyQt5.QtCore import QPointF, QRect

import Painter
#from utils import QColor_HSV, save, Perlin2D


def draw_white_noise(width, height, fname):
    assert not os.path.exists(fname), 'File already exists!'

    # Create a matrix of random values between zero and one
    pixels = np.random.random(size=(height, width))

    # Now modify the random values to be 0-255 (pixel color range)
    pixels = 255*pixels

    # The function to write the array of pixels to an image requires integers, not float values
    pixels = pixels.astype(np.uint8)

    # We choose to make random values grayscale, so each RGB element is identical. This code adds the third dimension
    # to our pixels array
    pixels = pixels[:, :, np.newaxis]

    # We need to repeat each value to finalize the pixels arrays in the grayscale space
    pixels = np.repeat(pixels, 3, axis=2)

    # Now create the image from an array of pixels
    im = Image.fromarray(pixels)

    # Save the image to file
    im.save(fname)


def draw_perlin(nx, ny, width, height, fname):
    assert not os.path.exists(fname), 'File already exists'

    # Initialize Perlin Noise
    noise = (Perlin2D(width, height, nx, ny) + 1)/2

    # Convert to pixels
    pixels = 255 * noise
    pixels = pixels.astype(np.uint8)
    pixels = pixels[:, :, np.newaxis]
    pixels = np.repeat(pixels, 3, axis=2)

    # Create and save the image from pixels
    im = Image.fromarray(pixels)
    im.save(fname)

    return noise


def draw_vectors(nx, ny, width, height, seed=random.randint(0, 100000000), flow_length=100, n_vectors=50):
    p_path = f'{seed}_1_perlin_noise.jpg'
    v_path = f'{seed}_2_vectors'
    f_path = f'{seed}_3_flow_field'

    # Ensure we don't overwrite paths
    assert not os.path.exists(p_path), 'Perlin Noise image already exists!'
    assert not os.path.exists(v_path), 'Vectors image already exists!'
    assert not os.path.exists(f_path), 'Flow field image already exists!'

    # Set the random seed for repeatability
    np.random.seed(seed)

    # Create the Perlin Noise image
    noise = draw_perlin(nx, ny, width, height, p_path)

    # Initialize the painter object for drawing
    p = Painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)  # allow smooth drawing

    def draw_arrow(p, x_i, y_i, length=100, angle=0):
        # Compute the second points and draw the arrow body
        x_f = x_i + length*math.cos(math.radians(angle))
        y_f = y_i - length*math.sin(math.radians(angle))
        p.drawLine(x_i, y_i, x_f, y_f)

        # Compute the arrow head second points
        a_angle1, a_angle2 = math.radians(angle-30), math.radians(angle+30)
        x1 = x_f - (length/10)*math.cos(a_angle1)
        y1 = y_f + (length/10)*math.sin(a_angle1)
        x2 = x_f - (length/10)*math.cos(a_angle2)
        y2 = y_f + (length/10)*math.sin(a_angle2)
        p.drawLine(x_f, y_f, x1, y1)
        p.drawLine(x_f, y_f, x2, y2)

    # Load the Perlin Noise image and draw it with the painter
    p.drawPixmap(QRect(0, 0, width, height), QPixmap(p_path))

    # Now we're drawing red arrows for vectors, so set the pen color to red
    p.setPen(QColor(255, 0, 0))

    # We need arrow locations, so create a grid of n_vectors x n_vectors, excluding the image border
    _nx, _ny = n_vectors, n_vectors
    dx, dy = width / (_nx + 1), height / (_ny + 1)
    x_points = [dx + i*dx for i in range(_nx)]
    y_points = [dy + i*dy for i in range(_ny)]

    # Draw the arrows
    for x in x_points:
        for y in y_points:
            angle = 360*noise[int(x), int(y)]
            draw_arrow(p, x, y, length=min(dx, dy), angle=angle)

    # Save the vector image
    save(p, fname=v_path, folder='XXXX/New/')

    # Now draw the flow field. Start by initializing a new painter
    p = Painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)  # allow smooth drawing
    p.setPen(QColor(0, 0, 0))  # pen color set to black
    p.setPen(QColor(0, 0, 200))  # pen color set to blue
    # Step size between points
    STEP_SIZE = 0.001 * max(width, height)

    # Draw the flow field
    for x in x_points:
        for y in y_points:
            # The starting position
            x_s, y_s = x, y
            # The current line length tracking variable
            c_len = 0
            while c_len < flow_length:
                # angle between 0 and 2*pi
                angle = 2 * noise[int(x_s), int(y_s)] * math.pi

                # Compute the new point
                x_f = x_s + STEP_SIZE * math.cos(angle)
                y_f = y_s - STEP_SIZE * math.sin(angle)

                # Draw the line
                p.drawLine(QPointF(x_s, y_s), QPointF(x_f, y_f))

                # Update the line length
                c_len += math.sqrt((x_f - x_s) ** 2 + (y_f - y_s) ** 2)

                # Break from the loop if the new point is outside our image bounds
                # or if we've exceeded the line length; otherwise update the point
                if x_f < 0 or x_f >= width or y_f < 0 or y_f >= height or c_len > flow_length:
                    break
                else:
                    x_s, y_s = x_f, y_f
    save(p, fname=f_path, folder='XXXX/New')


def draw_flow_field(width, height, seed=random.randint(0, 100000000)):
    # Set the random seed for repeatability
    np.random.seed(seed)

    # These are color hues
    colors = [200, 140, 70, 340, 280]
    for i, mod in enumerate(colors):
        print('Starting Image %s/%s' % (i + 1, len(colors)))
        p = Painter.Painter(width, height)

        # Allow smooth drawing
        p.setRenderHint(p.Antialiasing)

        # Draw the background color
        p.fillRect(0, 0, width, height, QColor(0, 0, 0))

        # Set the pen color
        p.setPen(QPen(QColor(150, 150, 225, 5), 2))

        num = 1
        for j in range(num):
            print('Creating Noise... (%s/%s)' % (j + 1, num))
            p_noise = Perlin2D(width, height, 2, 2)
            print('Noise Generated! (%s/%s)' % (j + 1, num))

            MAX_LENGTH = 2 * width
            STEP_SIZE = 0.001 * max(width, height)
            NUM = int(width * height / 1000)
            POINTS = [(random.randint(0, width - 1), random.randint(0, height - 1)) for i in range(NUM)]

            for k, (x_s, y_s) in enumerate(POINTS):
                print(f'{100 * (k + 1) / len(POINTS):.1f}'.rjust(5) + '% Complete', end='\r')

                # The current line length tracking variable
                c_len = 0

                # Actually draw the flow field
                while c_len < MAX_LENGTH:
                    # Set the pen color for this segment
                    sat = 200 * (MAX_LENGTH - c_len) / MAX_LENGTH
                    hue = (mod + 130 * (height - y_s) / height) % 360
                    p.setPen(QPen(QColor_HSV(hue, sat, 255, 20), 2))

                    # angle between -pi and pi
                    angle = p_noise[int(x_s), int(y_s)] * math.pi

                    # Compute the new point
                    x_f = x_s + STEP_SIZE * math.cos(angle)
                    y_f = y_s + STEP_SIZE * math.sin(angle)

                    # Draw the line
                    p.drawLine(QPointF(x_s, y_s), QPointF(x_f, y_f))

                    # Update the line length
                    c_len += math.sqrt((x_f - x_s) ** 2 + (y_f - y_s) ** 2)

                    # Break from the loop if the new point is outside our image bounds
                    # or if we've exceeded the line length; otherwise update the point
                    if x_f < 0 or x_f >= width or y_f < 0 or y_f >= height or c_len > MAX_LENGTH:
                        break
                    else:
                        x_s, y_s = x_f, y_f

                    save(p, fname=f'image_{i}_{mod}_{num}_{seed}', folder='newseries/', overwrite=True)


def draw_perlin_rounding(width, height, fname, seed=random.randint(0, 100000000)):
    # Ensure we don't overwrite paths
    assert not os.path.exists(fname), 'Image already exists!'

    # Set the random seed for repeatability
    np.random.seed(seed)

    # Initialize a new painter
    p = Painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)

    # Draw the background color
    #p.fillRect(0, 0, width, height, QColor(0, 0, 0))
    p.fillRect(0, 0, width, height, QColor("darkRed"))

    # Set the pen color
    p.setPen(QColor(200, 200, 200))
    p.setPen(QColor("yellow"))

    print('Creating Noise...', end='', flush=True)
    noise = Perlin2D(width, height, 1, 1)
    print('Done!')

    # The maximum line length and step size
    MAX_LENGTH = 1000
    STEP_SIZE = 0.001 * max(width, height)

    # Compute a grid 200x200 points, centered in the screen
    dx, dy = width / (200 + 1), height / (200 + 1)
    POINTS = [[(i+1)*dx, (j+1)*dy] for i in range(200) for j in range(200)]

    for i, (x_s, y_s) in enumerate(POINTS):
        print(f'{100 * (i + 1) / len(POINTS):.1f}'.rjust(5) + '% Complete', end='\r')

        # The current line length tracking variable
        c_len = 0
        while c_len < MAX_LENGTH:
            # angle between -pi and pi
            angle = math.pi*noise[int(x_s), int(y_s)]

            # Round the angle to pi/4 increments
            angle = round(angle / (math.pi / 4)) * (math.pi / 4)

            # Compute the new point
            x_f = x_s + STEP_SIZE * math.cos(angle)
            y_f = y_s + STEP_SIZE * math.sin(angle)

            # Draw the line
            p.drawLine(x_s, y_s, x_f, y_f)

            # Update the line length
            c_len += math.sqrt((x_f - x_s) ** 2 + (y_f - y_s) ** 2)

            # Break from the loop if the new point is outside our image bounds
            # or if we've exceeded the line length; otherwise update the point
            if (x_f < 0 or x_f >= width or y_f < 0 or y_f >= height or
                    c_len > MAX_LENGTH):
                break
            else:
                x_s, y_s = x_f, y_f
    print('100% Complete!')
    save(p, fname=f'{fname}_{seed}', folder='.')

class Body:
    def __init__(self, x, y, vx, vy):
        self._position = np.array([x, y], dtype=np.float64)
        self._velocity = np.array([vx, vy], dtype=np.float64)

    @property
    def position(self):
        return self._position

    @property
    def velocity(self):
        return self._velocity

    def update(self, dt):
        # update the body position
        self._position = self._position + dt*self._velocity


class ExpandingCircleRandom:
    def __init__(self, radius, num_bodies, center=(0, 0), v_limits=(-2, 2)):
        self._bodies = [Body(center[0] + radius*math.cos(i*2*math.pi/num_bodies),
                             center[1] + radius*math.sin(i*2*math.pi/num_bodies),
                             v_limits[0]+(v_limits[1]-v_limits[0])*random.random(),
                             v_limits[0]+(v_limits[1]-v_limits[0])*random.random()) for i in range(num_bodies)]

    def draw(self, dt, Painter):
        # Connect the dots between each body
        for i in range(len(self._bodies)):
            # Handle the wrapping case
            if i == len(self._bodies) - 1:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[0].position)
            else:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[i+1].position)
            Painter.drawLine(p1, p2)

        # Update the position of each body
        for i in range(len(self._bodies)):
            self._bodies[i].update(dt)


class ExpandingCircleNoise:
    def __init__(self, radius, num_bodies, noise, center=(0, 0), v_max=2):
        self._bodies = [Body(center[0] + radius*math.cos(i*2*math.pi/num_bodies),
                             center[1] + radius*math.sin(i*2*math.pi/num_bodies),
                             0, 0) for i in range(num_bodies)]
        self._v_max = v_max
        self._noise = noise

    def draw(self, dt, painter):
        # Connect the dots between each body
        for i in range(len(self._bodies)):
            # Handle the wrapping case
            if i == len(self._bodies) - 1:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[0].position)
            else:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[i + 1].position)
            painter.drawLine(p1, p2)

            # Try to update the velocity for each body. If we can't its because the point is beyond the noise
            # field we've created, so at that point, just maintain velocity.
            try:
                a = math.pi*self._noise[int(p1.x()), int(p1.y())]
                v = np.array([self._v_max*math.cos(a), self._v_max*math.sin(a)])
                self._bodies[i]._velocity = v
            except IndexError:
                pass

        # Update the position of each body
        for i in range(len(self._bodies)):
            self._bodies[i].update(dt)

def draw_delta_body(width, height, iterations = 2000,seed=random.randint(0, 100000000), mode='noise'):
    #def draw_delta_body(width, height, seed=random.randint(0, 100000000), mode='noise'):
    assert mode in ['noise', 'random'], 'Mode must either be "noise" or "random"'

    # Set the random seed for repeatability
    np.random.seed(seed)
    random.seed(seed)

    # Initialize the painter
    p = Painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)  # Allow smooth drawing

    # Draw the background color
    #p.fillRect(0, 0, width, height, QColor("0, 0, 0"))
    p.fillRect(0, 0, width, height, QColor("darkBlue"))

    # Set the pen color
    #p.setPen(QPen(QColor(220, 220, 220, 5), 1))
    p.setPen(QPen(QColor(255, 215, 0, 10), 3))
    #RGB(255,215,0)
    # Initialize the expanding circle centered in the canvas
    if mode == 'random':
        circle = ExpandingCircleRandom(width/8, 100, center=(width/2, height/2), v_limits=(-2, 2))
    elif mode == 'noise':
        noise = Perlin2D(width, height, 5, 5)
        circle = ExpandingCircleNoise(width/6, 200, noise, center=(width/4, height/2), v_max=5)
    else:
        circle = None

    # Initialize the delta time we're applying to each update
    dt = 0.3

    #iterations = 2000
    for i in range(iterations):
        circle.draw(dt, p)

        #save(p, fname=f'delta_{i}_{mode}_{seed}', folder='XXXX/', overwrite=True)
    save(p, fname=f'delta-{i}_{mode}_{seed}', folder='XXXX/', overwrite=True)

#cnt=1
#width= 1000
#height=1000
#fname = "XXXX/o"
#print(fname)
#draw_perlin_rounding(width, height, fname, seed=random.randint(0, 100000000))
#draw_delta_body(width, height, iterations = 1000,seed=random.randint(0, 100000000), mode='noise')

width= 1000
height=1000
for inc in range(2,1000,2):
    fname = "/home/jack/Desktop/R-Studio/newseries/test_"+str(inc)+".jpg"
    nx = inc
    ny = inc
    try:
        #draw_perlin(nx, ny, width, height, fname)
        draw_vectors(nx, ny, width, height, seed=random.randint(0, 100000000), flow_length=150, n_vectors=50)
    except:
        pass

!ls -rant newseries

!ffmpeg -i newseries/slowout360.mp4 -i newseries/crack360spc.png -filter_complex "[0:v][1:v] overlay=0:0" \
-c:a copy newseries/output.mp4


!ffmpeg -i newseries/output.60fps.mp4 -vf scale=360x360 -vcodec libx264 -crf 24 newseries/smoutoutput.mp4

!ffmpeg -i /home/jack/Documents/QmdjwggR6x7ex3p99GWZWQqut7RsPfu4QofvYcA8CPvWyQ.mp4 \
-vcodec libx264 -crf 24 -vf "minterpolate=fps=60:mi_mode=mci:mc_mode=aobmc:me_mode=bidir:vsbmc=1" \
  -y newseries/outputS.60fps.mp4

/home/jack/Documents/QmNfgkiiAazV14NkS5PGJHNMigDs4VQYEB3wz2DcyB6FDa.mp4

!ffmpeg -i /home/jack/Documents/QmbFosnt9NSPkPCDRZh22TC5FYcrHY4M6DFJu6hhmcjVL3.mp4 \
-crf 20 -filter_complex  "scale=360:260,minterpolate=fps=60:mi_mode=mci:mc_mode=aobmc:me_mode=bidir:vsbmc=1" \
  -y newseries/girl20.60fps.mp4

!ffmpeg -i /home/jack/Documents/QmNfgkiiAazV14NkS5PGJHNMigDs4VQYEB3wz2DcyB6FDa.mp4 \
-crf 30 -vf "minterpolate=fps=60:mi_mode=mci:mc_mode=aobmc:me_mode=bidir:vsbmc=1" \
  -y newseries/newput30.60fps.mp4

!ffmpeg -i newseries/vid360.mp4 -i newseries/crack360spc.png -filter_complex \
"[1:v]format=argb,geq=r='r(X,Y)':a='1.0*alpha(X,Y)'[zork]; \
   [0:v][zork]overlay" -vcodec libx264 -y newseries/outputvideo.mp4

width= 1000
height=1000
for inc in range(2,1000,2):
    fname = "/home/jack/Desktop/R-Studio/newseries/test_"+str(inc)+".jpg"
    nx = inc
    ny = inc
    try:
        draw_perlin(nx, ny, width, height, fname)
    except:
        pass

width= 1000
height=1000
draw_flow_field(width, height, seed=random.randint(0, 100000000))

width= 1000
height=1000
draw_delta_body(width, height, iterations = 2000,seed=random.randint(0, 100000000), mode='noise')

cnt=1
width= 1000
height=1000
fname = "XXXX/o"
print(fname)
draw_perlin_rounding(width, height, fname, seed=random.randint(0, 100000000))
#draw_delta_body(width, height, iterations = 1000,seed=random.randint(0, 100000000), mode='noise')

!ls XXXX

"""
@author: The Absolute Tinkerer
"""

import os
import math
import time
import random

import numpy as np

from PIL import Image

from PyQt5.QtGui import QColor, QPen, QPixmap
from PyQt5.QtCore import QPointF, QRect

import painter
from utils import QColor_HSV, save, Perlin2D


def draw_white_noise(width, height, fname):
    assert not os.path.exists(fname), 'File already exists!'

    # Create a matrix of random values between zero and one
    pixels = np.random.random(size=(height, width))

    # Now modify the random values to be 0-255 (pixel color range)
    pixels = 255*pixels

    # The function to write the array of pixels to an image requires integers, not float values
    pixels = pixels.astype(np.uint8)

    # We choose to make random values grayscale, so each RGB element is identical. This code adds the third dimension
    # to our pixels array
    pixels = pixels[:, :, np.newaxis]

    # We need to repeat each value to finalize the pixels arrays in the grayscale space
    pixels = np.repeat(pixels, 3, axis=2)

    # Now create the image from an array of pixels
    im = Image.fromarray(pixels)

    # Save the image to file
    im.save(fname)


def draw_perlin(nx, ny, width, height, fname):
    assert not os.path.exists(fname), 'File already exists'

    # Initialize Perlin Noise
    noise = (Perlin2D(width, height, nx, ny) + 1)/2

    # Convert to pixels
    pixels = 255 * noise
    pixels = pixels.astype(np.uint8)
    pixels = pixels[:, :, np.newaxis]
    pixels = np.repeat(pixels, 3, axis=2)

    # Create and save the image from pixels
    im = Image.fromarray(pixels)
    im.save(fname)

    return noise


def draw_vectors(nx, ny, width, height, seed=random.randint(0, 100000000), flow_length=100, n_vectors=50):
    p_path = f'{seed}_1_perlin_noise.jpg'
    v_path = f'{seed}_2_vectors'
    f_path = f'{seed}_3_flow_field'

    # Ensure we don't overwrite paths
    assert not os.path.exists(p_path), 'Perlin Noise image already exists!'
    assert not os.path.exists(v_path), 'Vectors image already exists!'
    assert not os.path.exists(f_path), 'Flow field image already exists!'

    # Set the random seed for repeatability
    np.random.seed(seed)

    # Create the Perlin Noise image
    noise = draw_perlin(nx, ny, width, height, p_path)

    # Initialize the painter object for drawing
    p = painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)  # allow smooth drawing

    def draw_arrow(p, x_i, y_i, length=100, angle=0):
        # Compute the second points and draw the arrow body
        x_f = x_i + length*math.cos(math.radians(angle))
        y_f = y_i - length*math.sin(math.radians(angle))
        p.drawLine(x_i, y_i, x_f, y_f)

        # Compute the arrow head second points
        a_angle1, a_angle2 = math.radians(angle-30), math.radians(angle+30)
        x1 = x_f - (length/10)*math.cos(a_angle1)
        y1 = y_f + (length/10)*math.sin(a_angle1)
        x2 = x_f - (length/10)*math.cos(a_angle2)
        y2 = y_f + (length/10)*math.sin(a_angle2)
        p.drawLine(x_f, y_f, x1, y1)
        p.drawLine(x_f, y_f, x2, y2)

    # Load the Perlin Noise image and draw it with the painter
    p.drawPixmap(QRect(0, 0, width, height), QPixmap(p_path))

    # Now we're drawing red arrows for vectors, so set the pen color to red
    p.setPen(QColor(255, 0, 0))

    # We need arrow locations, so create a grid of n_vectors x n_vectors, excluding the image border
    _nx, _ny = n_vectors, n_vectors
    dx, dy = width / (_nx + 1), height / (_ny + 1)
    x_points = [dx + i*dx for i in range(_nx)]
    y_points = [dy + i*dy for i in range(_ny)]

    # Draw the arrows
    for x in x_points:
        for y in y_points:
            angle = 360*noise[int(x), int(y)]
            draw_arrow(p, x, y, length=min(dx, dy), angle=angle)

    # Save the vector image
    save(p, fname=v_path, folder='.')

    # Now draw the flow field. Start by initializing a new painter
    p = painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)  # allow smooth drawing
    p.setPen(QColor(0, 0, 0))  # pen color set to black

    # Step size between points
    STEP_SIZE = 0.001 * max(width, height)

    # Draw the flow field
    for x in x_points:
        for y in y_points:
            # The starting position
            x_s, y_s = x, y
            # The current line length tracking variable
            c_len = 0
            while c_len < flow_length:
                # angle between 0 and 2*pi
                angle = 2 * noise[int(x_s), int(y_s)] * math.pi

                # Compute the new point
                x_f = x_s + STEP_SIZE * math.cos(angle)
                y_f = y_s - STEP_SIZE * math.sin(angle)

                # Draw the line
                p.drawLine(QPointF(x_s, y_s), QPointF(x_f, y_f))

                # Update the line length
                c_len += math.sqrt((x_f - x_s) ** 2 + (y_f - y_s) ** 2)

                # Break from the loop if the new point is outside our image bounds
                # or if we've exceeded the line length; otherwise update the point
                if x_f < 0 or x_f >= width or y_f < 0 or y_f >= height or c_len > flow_length:
                    break
                else:
                    x_s, y_s = x_f, y_f
    save(p, fname=f_path, folder='.')


def draw_flow_field(width, height, seed=random.randint(0, 100000000)):
    # Set the random seed for repeatability
    np.random.seed(seed)

    # These are color hues
    colors = [200, 140, 70, 340, 280]
    for i, mod in enumerate(colors):
        print('Starting Image %s/%s' % (i + 1, len(colors)))
        p = painter.Painter(width, height)

        # Allow smooth drawing
        p.setRenderHint(p.Antialiasing)

        # Draw the background color
        p.fillRect(0, 0, width, height, QColor(0, 0, 0))

        # Set the pen color
        p.setPen(QPen(QColor(150, 150, 225, 5), 2))

        num = 1
        for j in range(num):
            print('Creating Noise... (%s/%s)' % (j + 1, num))
            p_noise = Perlin2D(width, height, 2, 2)
            print('Noise Generated! (%s/%s)' % (j + 1, num))

            MAX_LENGTH = 2 * width
            STEP_SIZE = 0.001 * max(width, height)
            NUM = int(width * height / 1000)
            POINTS = [(random.randint(0, width - 1), random.randint(0, height - 1)) for i in range(NUM)]

            for k, (x_s, y_s) in enumerate(POINTS):
                print(f'{100 * (k + 1) / len(POINTS):.1f}'.rjust(5) + '% Complete', end='\r')

                # The current line length tracking variable
                c_len = 0

                # Actually draw the flow field
                while c_len < MAX_LENGTH:
                    # Set the pen color for this segment
                    sat = 200 * (MAX_LENGTH - c_len) / MAX_LENGTH
                    hue = (mod + 130 * (height - y_s) / height) % 360
                    p.setPen(QPen(QColor_HSV(hue, sat, 255, 20), 2))

                    # angle between -pi and pi
                    angle = p_noise[int(x_s), int(y_s)] * math.pi

                    # Compute the new point
                    x_f = x_s + STEP_SIZE * math.cos(angle)
                    y_f = y_s + STEP_SIZE * math.sin(angle)

                    # Draw the line
                    p.drawLine(QPointF(x_s, y_s), QPointF(x_f, y_f))

                    # Update the line length
                    c_len += math.sqrt((x_f - x_s) ** 2 + (y_f - y_s) ** 2)

                    # Break from the loop if the new point is outside our image bounds
                    # or if we've exceeded the line length; otherwise update the point
                    if x_f < 0 or x_f >= width or y_f < 0 or y_f >= height or c_len > MAX_LENGTH:
                        break
                    else:
                        x_s, y_s = x_f, y_f

            save(p, fname=f'image_{mod}_{num}_{seed}', folder='.', overwrite=True)


def draw_perlin_rounding(width, height, fname, seed=random.randint(0, 100000000)):
    # Ensure we don't overwrite paths
    assert not os.path.exists(fname), 'Image already exists!'

    # Set the random seed for repeatability
    np.random.seed(seed)

    # Initialize a new painter
    p = painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)

    # Draw the background color
    p.fillRect(0, 0, width, height, QColor(0, 0, 0))

    # Set the pen color
    p.setPen(QColor(200, 200, 200))

    print('Creating Noise...', end='', flush=True)
    noise = Perlin2D(width, height, 1, 1)
    print('Done!')

    # The maximum line length and step size
    MAX_LENGTH = 1000
    STEP_SIZE = 0.001 * max(width, height)

    # Compute a grid 200x200 points, centered in the screen
    dx, dy = width / (200 + 1), height / (200 + 1)
    POINTS = [[(i+1)*dx, (j+1)*dy] for i in range(200) for j in range(200)]

    for i, (x_s, y_s) in enumerate(POINTS):
        print(f'{100 * (i + 1) / len(POINTS):.1f}'.rjust(5) + '% Complete', end='\r')

        # The current line length tracking variable
        c_len = 0
        while c_len < MAX_LENGTH:
            # angle between -pi and pi
            angle = math.pi*noise[int(x_s), int(y_s)]

            # Round the angle to pi/4 increments
            angle = round(angle / (math.pi / 4)) * (math.pi / 4)

            # Compute the new point
            x_f = x_s + STEP_SIZE * math.cos(angle)
            y_f = y_s + STEP_SIZE * math.sin(angle)

            # Draw the line
            p.drawLine(x_s, y_s, x_f, y_f)

            # Update the line length
            c_len += math.sqrt((x_f - x_s) ** 2 + (y_f - y_s) ** 2)

            # Break from the loop if the new point is outside our image bounds
            # or if we've exceeded the line length; otherwise update the point
            if (x_f < 0 or x_f >= width or y_f < 0 or y_f >= height or
                    c_len > MAX_LENGTH):
                break
            else:
                x_s, y_s = x_f, y_f

    print('100% Complete!')
    save(p, fname=f'{fname}_{seed}', folder='.')


class Body:
    def __init__(self, x, y, vx, vy):
        self._position = np.array([x, y], dtype=np.float64)
        self._velocity = np.array([vx, vy], dtype=np.float64)

    @property
    def position(self):
        return self._position

    @property
    def velocity(self):
        return self._velocity

    def update(self, dt):
        # update the body position
        self._position = self._position + dt*self._velocity


class ExpandingCircleRandom:
    def __init__(self, radius, num_bodies, center=(0, 0), v_limits=(-2, 2)):
        self._bodies = [Body(center[0] + radius*math.cos(i*2*math.pi/num_bodies),
                             center[1] + radius*math.sin(i*2*math.pi/num_bodies),
                             v_limits[0]+(v_limits[1]-v_limits[0])*random.random(),
                             v_limits[0]+(v_limits[1]-v_limits[0])*random.random()) for i in range(num_bodies)]

    def draw(self, dt, painter):
        # Connect the dots between each body
        for i in range(len(self._bodies)):
            # Handle the wrapping case
            if i == len(self._bodies) - 1:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[0].position)
            else:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[i+1].position)
            painter.drawLine(p1, p2)

        # Update the position of each body
        for i in range(len(self._bodies)):
            self._bodies[i].update(dt)


class ExpandingCircleNoise:
    def __init__(self, radius, num_bodies, noise, center=(0, 0), v_max=2):
        self._bodies = [Body(center[0] + radius*math.cos(i*2*math.pi/num_bodies),
                             center[1] + radius*math.sin(i*2*math.pi/num_bodies),
                             0, 0) for i in range(num_bodies)]
        self._v_max = v_max
        self._noise = noise

    def draw(self, dt, painter):
        # Connect the dots between each body
        for i in range(len(self._bodies)):
            # Handle the wrapping case
            if i == len(self._bodies) - 1:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[0].position)
            else:
                p1 = QPointF(*self._bodies[i].position)
                p2 = QPointF(*self._bodies[i + 1].position)
            painter.drawLine(p1, p2)

            # Try to update the velocity for each body. If we can't its because the point is beyond the noise
            # field we've created, so at that point, just maintain velocity.
            try:
                a = math.pi*self._noise[int(p1.x()), int(p1.y())]
                v = np.array([self._v_max*math.cos(a), self._v_max*math.sin(a)])
                self._bodies[i]._velocity = v
            except IndexError:
                pass

        # Update the position of each body
        for i in range(len(self._bodies)):
            self._bodies[i].update(dt)


def draw_delta_body(width, height, seed=random.randint(0, 100000000), mode='noise'):
    assert mode in ['noise', 'random'], 'Mode must either be "noise" or "random"'

    # Set the random seed for repeatability
    np.random.seed(seed)
    random.seed(seed)

    # Initialize the painter
    p = painter.Painter(width, height)
    p.setRenderHint(p.Antialiasing)  # Allow smooth drawing

    # Draw the background color
    p.fillRect(0, 0, width, height, QColor(0, 0, 0))

    # Set the pen color
    p.setPen(QPen(QColor(220, 220, 220, 5), 1))

    # Initialize the expanding circle centered in the canvas
    if mode == 'random':
        circle = ExpandingCircleRandom(width/8, 100, center=(width/2, height/2), v_limits=(-2, 2))
    elif mode == 'noise':
        noise = Perlin2D(width, height, 5, 5)
        circle = ExpandingCircleNoise(width/6, 200, noise, center=(width/4, height/2), v_max=5)
    else:
        circle = None

    # Initialize the delta time we're applying to each update
    dt = 0.3

    iterations = 1000
    for i in range(iterations):
        circle.draw(dt, p)

    save(p, fname=f'delta_{mode}_{seed}', folder='.', overwrite=True)

"""Provide RGB color constants and a colors dictionary with
elements formatted: colors[colorname] = CONSTANT"""
from collections import namedtuple, OrderedDict
Color = namedtuple('RGB','red, green, blue')
colors = {} #dict of colors
class RGB(Color):
    def hex_format(self):
        '''Returns color in hex format'''
        return '#{:02X}{:02X}{:02X}'.format(self.red,self.green,self.blue)
#Color Contants
ALICEBLUE = RGB(240, 248, 255)
ANTIQUEWHITE = RGB(250, 235, 215)
ANTIQUEWHITE1 = RGB(255, 239, 219)
ANTIQUEWHITE2 = RGB(238, 223, 204)
ANTIQUEWHITE3 = RGB(205, 192, 176)
ANTIQUEWHITE4 = RGB(139, 131, 120)
AQUA = RGB(0, 255, 255)
AQUAMARINE1 = RGB(127, 255, 212)
AQUAMARINE2 = RGB(118, 238, 198)
AQUAMARINE3 = RGB(102, 205, 170)
AQUAMARINE4 = RGB(69, 139, 116)
AZURE1 = RGB(240, 255, 255)
AZURE2 = RGB(224, 238, 238)
AZURE3 = RGB(193, 205, 205)
AZURE4 = RGB(131, 139, 139)
BANANA = RGB(227, 207, 87)
BEIGE = RGB(245, 245, 220)
BISQUE1 = RGB(255, 228, 196)
BISQUE2 = RGB(238, 213, 183)
BISQUE3 = RGB(205, 183, 158)
BISQUE4 = RGB(139, 125, 107)
BLACK = RGB(0, 0, 0)
BLANCHEDALMOND = RGB(255, 235, 205)
BLUE = RGB(0, 0, 255)
BLUE2 = RGB(0, 0, 238)
BLUE3 = RGB(0, 0, 205)
BLUE4 = RGB(0, 0, 139)
BLUEVIOLET = RGB(138, 43, 226)
BRICK = RGB(156, 102, 31)
BROWN = RGB(165, 42, 42)
BROWN1 = RGB(255, 64, 64)
BROWN2 = RGB(238, 59, 59)
BROWN3 = RGB(205, 51, 51)
BROWN4 = RGB(139, 35, 35)
BURLYWOOD = RGB(222, 184, 135)
BURLYWOOD1 = RGB(255, 211, 155)
BURLYWOOD2 = RGB(238, 197, 145)
BURLYWOOD3 = RGB(205, 170, 125)
BURLYWOOD4 = RGB(139, 115, 85)
BURNTSIENNA = RGB(138, 54, 15)
BURNTUMBER = RGB(138, 51, 36)
CADETBLUE = RGB(95, 158, 160)
CADETBLUE1 = RGB(152, 245, 255)
CADETBLUE2 = RGB(142, 229, 238)
CADETBLUE3 = RGB(122, 197, 205)
CADETBLUE4 = RGB(83, 134, 139)
CADMIUMORANGE = RGB(255, 97, 3)
CADMIUMYELLOW = RGB(255, 153, 18)
CARROT = RGB(237, 145, 33)
CHARTREUSE1 = RGB(127, 255, 0)
CHARTREUSE2 = RGB(118, 238, 0)
CHARTREUSE3 = RGB(102, 205, 0)
CHARTREUSE4 = RGB(69, 139, 0)
CHOCOLATE = RGB(210, 105, 30)
CHOCOLATE1 = RGB(255, 127, 36)
CHOCOLATE2 = RGB(238, 118, 33)
CHOCOLATE3 = RGB(205, 102, 29)
CHOCOLATE4 = RGB(139, 69, 19)
COBALT = RGB(61, 89, 171)
COBALTGREEN = RGB(61, 145, 64)
COLDGREY = RGB(128, 138, 135)
CORAL = RGB(255, 127, 80)
CORAL1 = RGB(255, 114, 86)
CORAL2 = RGB(238, 106, 80)
CORAL3 = RGB(205, 91, 69)
CORAL4 = RGB(139, 62, 47)
CORNFLOWERBLUE = RGB(100, 149, 237)
CORNSILK1 = RGB(255, 248, 220)
CORNSILK2 = RGB(238, 232, 205)
CORNSILK3 = RGB(205, 200, 177)
CORNSILK4 = RGB(139, 136, 120)
CRIMSON = RGB(220, 20, 60)
CYAN2 = RGB(0, 238, 238)
CYAN3 = RGB(0, 205, 205)
CYAN4 = RGB(0, 139, 139)
DARKGOLDENROD = RGB(184, 134, 11)
DARKGOLDENROD1 = RGB(255, 185, 15)
DARKGOLDENROD2 = RGB(238, 173, 14)
DARKGOLDENROD3 = RGB(205, 149, 12)
DARKGOLDENROD4 = RGB(139, 101, 8)
DARKGRAY = RGB(169, 169, 169)
DARKGREEN = RGB(0, 100, 0)
DARKKHAKI = RGB(189, 183, 107)
DARKOLIVEGREEN = RGB(85, 107, 47)
DARKOLIVEGREEN1 = RGB(202, 255, 112)
DARKOLIVEGREEN2 = RGB(188, 238, 104)
DARKOLIVEGREEN3 = RGB(162, 205, 90)
DARKOLIVEGREEN4 = RGB(110, 139, 61)
DARKORANGE = RGB(255, 140, 0)
DARKORANGE1 = RGB(255, 127, 0)
DARKORANGE2 = RGB(238, 118, 0)
DARKORANGE3 = RGB(205, 102, 0)
DARKORANGE4 = RGB(139, 69, 0)
DARKORCHID = RGB(153, 50, 204)
DARKORCHID1 = RGB(191, 62, 255)
DARKORCHID2 = RGB(178, 58, 238)
DARKORCHID3 = RGB(154, 50, 205)
DARKORCHID4 = RGB(104, 34, 139)
DARKSALMON = RGB(233, 150, 122)
DARKSEAGREEN = RGB(143, 188, 143)
DARKSEAGREEN1 = RGB(193, 255, 193)
DARKSEAGREEN2 = RGB(180, 238, 180)
DARKSEAGREEN3 = RGB(155, 205, 155)
DARKSEAGREEN4 = RGB(105, 139, 105)
DARKSLATEBLUE = RGB(72, 61, 139)
DARKSLATEGRAY = RGB(47, 79, 79)
DARKSLATEGRAY1 = RGB(151, 255, 255)
DARKSLATEGRAY2 = RGB(141, 238, 238)
DARKSLATEGRAY3 = RGB(121, 205, 205)
DARKSLATEGRAY4 = RGB(82, 139, 139)
DARKTURQUOISE = RGB(0, 206, 209)
DARKVIOLET = RGB(148, 0, 211)
DEEPPINK1 = RGB(255, 20, 147)
DEEPPINK2 = RGB(238, 18, 137)
DEEPPINK3 = RGB(205, 16, 118)
DEEPPINK4 = RGB(139, 10, 80)
DEEPSKYBLUE1 = RGB(0, 191, 255)
DEEPSKYBLUE2 = RGB(0, 178, 238)
DEEPSKYBLUE3 = RGB(0, 154, 205)
DEEPSKYBLUE4 = RGB(0, 104, 139)
DIMGRAY = RGB(105, 105, 105)
DIMGRAY = RGB(105, 105, 105)
DODGERBLUE1 = RGB(30, 144, 255)
DODGERBLUE2 = RGB(28, 134, 238)
DODGERBLUE3 = RGB(24, 116, 205)
DODGERBLUE4 = RGB(16, 78, 139)
EGGSHELL = RGB(252, 230, 201)
EMERALDGREEN = RGB(0, 201, 87)
FIREBRICK = RGB(178, 34, 34)
FIREBRICK1 = RGB(255, 48, 48)
FIREBRICK2 = RGB(238, 44, 44)
FIREBRICK3 = RGB(205, 38, 38)
FIREBRICK4 = RGB(139, 26, 26)
FLESH = RGB(255, 125, 64)
FLORALWHITE = RGB(255, 250, 240)
FORESTGREEN = RGB(34, 139, 34)
GAINSBORO = RGB(220, 220, 220)
GHOSTWHITE = RGB(248, 248, 255)
GOLD1 = RGB(255, 215, 0)
GOLD2 = RGB(238, 201, 0)
GOLD3 = RGB(205, 173, 0)
GOLD4 = RGB(139, 117, 0)
GOLDENROD = RGB(218, 165, 32)
GOLDENROD1 = RGB(255, 193, 37)
GOLDENROD2 = RGB(238, 180, 34)
GOLDENROD3 = RGB(205, 155, 29)
GOLDENROD4 = RGB(139, 105, 20)
GRAY = RGB(128, 128, 128)
GRAY1 = RGB(3, 3, 3)
GRAY10 = RGB(26, 26, 26)
GRAY11 = RGB(28, 28, 28)
GRAY12 = RGB(31, 31, 31)
GRAY13 = RGB(33, 33, 33)
GRAY14 = RGB(36, 36, 36)
GRAY15 = RGB(38, 38, 38)
GRAY16 = RGB(41, 41, 41)
GRAY17 = RGB(43, 43, 43)
GRAY18 = RGB(46, 46, 46)
GRAY19 = RGB(48, 48, 48)
GRAY2 = RGB(5, 5, 5)
GRAY20 = RGB(51, 51, 51)
GRAY21 = RGB(54, 54, 54)
GRAY22 = RGB(56, 56, 56)
GRAY23 = RGB(59, 59, 59)
GRAY24 = RGB(61, 61, 61)
GRAY25 = RGB(64, 64, 64)
GRAY26 = RGB(66, 66, 66)
GRAY27 = RGB(69, 69, 69)
GRAY28 = RGB(71, 71, 71)
GRAY29 = RGB(74, 74, 74)
GRAY3 = RGB(8, 8, 8)
GRAY30 = RGB(77, 77, 77)
GRAY31 = RGB(79, 79, 79)
GRAY32 = RGB(82, 82, 82)
GRAY33 = RGB(84, 84, 84)
GRAY34 = RGB(87, 87, 87)
GRAY35 = RGB(89, 89, 89)
GRAY36 = RGB(92, 92, 92)
GRAY37 = RGB(94, 94, 94)
GRAY38 = RGB(97, 97, 97)
GRAY39 = RGB(99, 99, 99)
GRAY4 = RGB(10, 10, 10)
GRAY40 = RGB(102, 102, 102)
GRAY42 = RGB(107, 107, 107)
GRAY43 = RGB(110, 110, 110)
GRAY44 = RGB(112, 112, 112)
GRAY45 = RGB(115, 115, 115)
GRAY46 = RGB(117, 117, 117)
GRAY47 = RGB(120, 120, 120)
GRAY48 = RGB(122, 122, 122)
GRAY49 = RGB(125, 125, 125)
GRAY5 = RGB(13, 13, 13)
GRAY50 = RGB(127, 127, 127)
GRAY51 = RGB(130, 130, 130)
GRAY52 = RGB(133, 133, 133)
GRAY53 = RGB(135, 135, 135)
GRAY54 = RGB(138, 138, 138)
GRAY55 = RGB(140, 140, 140)
GRAY56 = RGB(143, 143, 143)
GRAY57 = RGB(145, 145, 145)
GRAY58 = RGB(148, 148, 148)
GRAY59 = RGB(150, 150, 150)
GRAY6 = RGB(15, 15, 15)
GRAY60 = RGB(153, 153, 153)
GRAY61 = RGB(156, 156, 156)
GRAY62 = RGB(158, 158, 158)
GRAY63 = RGB(161, 161, 161)
GRAY64 = RGB(163, 163, 163)
GRAY65 = RGB(166, 166, 166)
GRAY66 = RGB(168, 168, 168)
GRAY67 = RGB(171, 171, 171)
GRAY68 = RGB(173, 173, 173)
GRAY69 = RGB(176, 176, 176)
GRAY7 = RGB(18, 18, 18)
GRAY70 = RGB(179, 179, 179)
GRAY71 = RGB(181, 181, 181)
GRAY72 = RGB(184, 184, 184)
GRAY73 = RGB(186, 186, 186)
GRAY74 = RGB(189, 189, 189)
GRAY75 = RGB(191, 191, 191)
GRAY76 = RGB(194, 194, 194)
GRAY77 = RGB(196, 196, 196)
GRAY78 = RGB(199, 199, 199)
GRAY79 = RGB(201, 201, 201)
GRAY8 = RGB(20, 20, 20)
GRAY80 = RGB(204, 204, 204)
GRAY81 = RGB(207, 207, 207)
GRAY82 = RGB(209, 209, 209)
GRAY83 = RGB(212, 212, 212)
GRAY84 = RGB(214, 214, 214)
GRAY85 = RGB(217, 217, 217)
GRAY86 = RGB(219, 219, 219)
GRAY87 = RGB(222, 222, 222)
GRAY88 = RGB(224, 224, 224)
GRAY89 = RGB(227, 227, 227)
GRAY9 = RGB(23, 23, 23)
GRAY90 = RGB(229, 229, 229)
GRAY91 = RGB(232, 232, 232)
GRAY92 = RGB(235, 235, 235)
GRAY93 = RGB(237, 237, 237)
GRAY94 = RGB(240, 240, 240)
GRAY95 = RGB(242, 242, 242)
GRAY97 = RGB(247, 247, 247)
GRAY98 = RGB(250, 250, 250)
GRAY99 = RGB(252, 252, 252)
GREEN = RGB(0, 128, 0)
GREEN1 = RGB(0, 255, 0)
GREEN2 = RGB(0, 238, 0)
GREEN3 = RGB(0, 205, 0)
GREEN4 = RGB(0, 139, 0)
GREENYELLOW = RGB(173, 255, 47)
HONEYDEW1 = RGB(240, 255, 240)
HONEYDEW2 = RGB(224, 238, 224)
HONEYDEW3 = RGB(193, 205, 193)
HONEYDEW4 = RGB(131, 139, 131)
HOTPINK = RGB(255, 105, 180)
HOTPINK1 = RGB(255, 110, 180)
HOTPINK2 = RGB(238, 106, 167)
HOTPINK3 = RGB(205, 96, 144)
HOTPINK4 = RGB(139, 58, 98)
INDIANRED = RGB(176, 23, 31)
INDIANRED = RGB(205, 92, 92)
INDIANRED1 = RGB(255, 106, 106)
INDIANRED2 = RGB(238, 99, 99)
INDIANRED3 = RGB(205, 85, 85)
INDIANRED4 = RGB(139, 58, 58)
INDIGO = RGB(75, 0, 130)
IVORY1 = RGB(255, 255, 240)
IVORY2 = RGB(238, 238, 224)
IVORY3 = RGB(205, 205, 193)
IVORY4 = RGB(139, 139, 131)
IVORYBLACK = RGB(41, 36, 33)
KHAKI = RGB(240, 230, 140)
KHAKI1 = RGB(255, 246, 143)
KHAKI2 = RGB(238, 230, 133)
KHAKI3 = RGB(205, 198, 115)
KHAKI4 = RGB(139, 134, 78)
LAVENDER = RGB(230, 230, 250)
LAVENDERBLUSH1 = RGB(255, 240, 245)
LAVENDERBLUSH2 = RGB(238, 224, 229)
LAVENDERBLUSH3 = RGB(205, 193, 197)
LAVENDERBLUSH4 = RGB(139, 131, 134)
LAWNGREEN = RGB(124, 252, 0)
LEMONCHIFFON1 = RGB(255, 250, 205)
LEMONCHIFFON2 = RGB(238, 233, 191)
LEMONCHIFFON3 = RGB(205, 201, 165)
LEMONCHIFFON4 = RGB(139, 137, 112)
LIGHTBLUE = RGB(173, 216, 230)
LIGHTBLUE1 = RGB(191, 239, 255)
LIGHTBLUE2 = RGB(178, 223, 238)
LIGHTBLUE3 = RGB(154, 192, 205)
LIGHTBLUE4 = RGB(104, 131, 139)
LIGHTCORAL = RGB(240, 128, 128)
LIGHTCYAN1 = RGB(224, 255, 255)
LIGHTCYAN2 = RGB(209, 238, 238)
LIGHTCYAN3 = RGB(180, 205, 205)
LIGHTCYAN4 = RGB(122, 139, 139)
LIGHTGOLDENROD1 = RGB(255, 236, 139)
LIGHTGOLDENROD2 = RGB(238, 220, 130)
LIGHTGOLDENROD3 = RGB(205, 190, 112)
LIGHTGOLDENROD4 = RGB(139, 129, 76)
LIGHTGOLDENRODYELLOW = RGB(250, 250, 210)
LIGHTGREY = RGB(211, 211, 211)
LIGHTPINK = RGB(255, 182, 193)
LIGHTPINK1 = RGB(255, 174, 185)
LIGHTPINK2 = RGB(238, 162, 173)
LIGHTPINK3 = RGB(205, 140, 149)
LIGHTPINK4 = RGB(139, 95, 101)
LIGHTSALMON1 = RGB(255, 160, 122)
LIGHTSALMON2 = RGB(238, 149, 114)
LIGHTSALMON3 = RGB(205, 129, 98)
LIGHTSALMON4 = RGB(139, 87, 66)
LIGHTSEAGREEN = RGB(32, 178, 170)
LIGHTSKYBLUE = RGB(135, 206, 250)
LIGHTSKYBLUE1 = RGB(176, 226, 255)
LIGHTSKYBLUE2 = RGB(164, 211, 238)
LIGHTSKYBLUE3 = RGB(141, 182, 205)
LIGHTSKYBLUE4 = RGB(96, 123, 139)
LIGHTSLATEBLUE = RGB(132, 112, 255)
LIGHTSLATEGRAY = RGB(119, 136, 153)
LIGHTSTEELBLUE = RGB(176, 196, 222)
LIGHTSTEELBLUE1 = RGB(202, 225, 255)
LIGHTSTEELBLUE2 = RGB(188, 210, 238)
LIGHTSTEELBLUE3 = RGB(162, 181, 205)
LIGHTSTEELBLUE4 = RGB(110, 123, 139)
LIGHTYELLOW1 = RGB(255, 255, 224)
LIGHTYELLOW2 = RGB(238, 238, 209)
LIGHTYELLOW3 = RGB(205, 205, 180)
LIGHTYELLOW4 = RGB(139, 139, 122)
LIMEGREEN = RGB(50, 205, 50)
LINEN = RGB(250, 240, 230)
MAGENTA = RGB(255, 0, 255)
MAGENTA2 = RGB(238, 0, 238)
MAGENTA3 = RGB(205, 0, 205)
MAGENTA4 = RGB(139, 0, 139)
MANGANESEBLUE = RGB(3, 168, 158)
MAROON = RGB(128, 0, 0)
MAROON1 = RGB(255, 52, 179)
MAROON2 = RGB(238, 48, 167)
MAROON3 = RGB(205, 41, 144)
MAROON4 = RGB(139, 28, 98)
MEDIUMORCHID = RGB(186, 85, 211)
MEDIUMORCHID1 = RGB(224, 102, 255)
MEDIUMORCHID2 = RGB(209, 95, 238)
MEDIUMORCHID3 = RGB(180, 82, 205)
MEDIUMORCHID4 = RGB(122, 55, 139)
MEDIUMPURPLE = RGB(147, 112, 219)
MEDIUMPURPLE1 = RGB(171, 130, 255)
MEDIUMPURPLE2 = RGB(159, 121, 238)
MEDIUMPURPLE3 = RGB(137, 104, 205)
MEDIUMPURPLE4 = RGB(93, 71, 139)
MEDIUMSEAGREEN = RGB(60, 179, 113)
MEDIUMSLATEBLUE = RGB(123, 104, 238)
MEDIUMSPRINGGREEN = RGB(0, 250, 154)
MEDIUMTURQUOISE = RGB(72, 209, 204)
MEDIUMVIOLETRED = RGB(199, 21, 133)
MELON = RGB(227, 168, 105)
MIDNIGHTBLUE = RGB(25, 25, 112)
MINT = RGB(189, 252, 201)
MINTCREAM = RGB(245, 255, 250)
MISTYROSE1 = RGB(255, 228, 225)
MISTYROSE2 = RGB(238, 213, 210)
MISTYROSE3 = RGB(205, 183, 181)
MISTYROSE4 = RGB(139, 125, 123)
MOCCASIN = RGB(255, 228, 181)
NAVAJOWHITE1 = RGB(255, 222, 173)
NAVAJOWHITE2 = RGB(238, 207, 161)
NAVAJOWHITE3 = RGB(205, 179, 139)
NAVAJOWHITE4 = RGB(139, 121, 94)
NAVY = RGB(0, 0, 128)
OLDLACE = RGB(253, 245, 230)
OLIVE = RGB(128, 128, 0)
OLIVEDRAB = RGB(107, 142, 35)
OLIVEDRAB1 = RGB(192, 255, 62)
OLIVEDRAB2 = RGB(179, 238, 58)
OLIVEDRAB3 = RGB(154, 205, 50)
OLIVEDRAB4 = RGB(105, 139, 34)
ORANGE = RGB(255, 128, 0)
ORANGE1 = RGB(255, 165, 0)
ORANGE2 = RGB(238, 154, 0)
ORANGE3 = RGB(205, 133, 0)
ORANGE4 = RGB(139, 90, 0)
ORANGERED1 = RGB(255, 69, 0)
ORANGERED2 = RGB(238, 64, 0)
ORANGERED3 = RGB(205, 55, 0)
ORANGERED4 = RGB(139, 37, 0)
ORCHID = RGB(218, 112, 214)
ORCHID1 = RGB(255, 131, 250)
ORCHID2 = RGB(238, 122, 233)
ORCHID3 = RGB(205, 105, 201)
ORCHID4 = RGB(139, 71, 137)
PALEGOLDENROD = RGB(238, 232, 170)
PALEGREEN = RGB(152, 251, 152)
PALEGREEN1 = RGB(154, 255, 154)
PALEGREEN2 = RGB(144, 238, 144)
PALEGREEN3 = RGB(124, 205, 124)
PALEGREEN4 = RGB(84, 139, 84)
PALETURQUOISE1 = RGB(187, 255, 255)
PALETURQUOISE2 = RGB(174, 238, 238)
PALETURQUOISE3 = RGB(150, 205, 205)
PALETURQUOISE4 = RGB(102, 139, 139)
PALEVIOLETRED = RGB(219, 112, 147)
PALEVIOLETRED1 = RGB(255, 130, 171)
PALEVIOLETRED2 = RGB(238, 121, 159)
PALEVIOLETRED3 = RGB(205, 104, 137)
PALEVIOLETRED4 = RGB(139, 71, 93)
PAPAYAWHIP = RGB(255, 239, 213)
PEACHPUFF1 = RGB(255, 218, 185)
PEACHPUFF2 = RGB(238, 203, 173)
PEACHPUFF3 = RGB(205, 175, 149)
PEACHPUFF4 = RGB(139, 119, 101)
PEACOCK = RGB(51, 161, 201)
PINK = RGB(255, 192, 203)
PINK1 = RGB(255, 181, 197)
PINK2 = RGB(238, 169, 184)
PINK3 = RGB(205, 145, 158)
PINK4 = RGB(139, 99, 108)
PLUM = RGB(221, 160, 221)
PLUM1 = RGB(255, 187, 255)
PLUM2 = RGB(238, 174, 238)
PLUM3 = RGB(205, 150, 205)
PLUM4 = RGB(139, 102, 139)
POWDERBLUE = RGB(176, 224, 230)
PURPLE = RGB(128, 0, 128)
PURPLE1 = RGB(155, 48, 255)
PURPLE2 = RGB(145, 44, 238)
PURPLE3 = RGB(125, 38, 205)
PURPLE4 = RGB(85, 26, 139)
RASPBERRY = RGB(135, 38, 87)
RAWSIENNA = RGB(199, 97, 20)
RED1 = RGB(255, 0, 0)
RED2 = RGB(238, 0, 0)
RED3 = RGB(205, 0, 0)
RED4 = RGB(139, 0, 0)
ROSYBROWN = RGB(188, 143, 143)
ROSYBROWN1 = RGB(255, 193, 193)
ROSYBROWN2 = RGB(238, 180, 180)
ROSYBROWN3 = RGB(205, 155, 155)
ROSYBROWN4 = RGB(139, 105, 105)
ROYALBLUE = RGB(65, 105, 225)
ROYALBLUE1 = RGB(72, 118, 255)
ROYALBLUE2 = RGB(67, 110, 238)
ROYALBLUE3 = RGB(58, 95, 205)
ROYALBLUE4 = RGB(39, 64, 139)
SALMON = RGB(250, 128, 114)
SALMON1 = RGB(255, 140, 105)
SALMON2 = RGB(238, 130, 98)
SALMON3 = RGB(205, 112, 84)
SALMON4 = RGB(139, 76, 57)
SANDYBROWN = RGB(244, 164, 96)
SAPGREEN = RGB(48, 128, 20)
SEAGREEN1 = RGB(84, 255, 159)
SEAGREEN2 = RGB(78, 238, 148)
SEAGREEN3 = RGB(67, 205, 128)
SEAGREEN4 = RGB(46, 139, 87)
SEASHELL1 = RGB(255, 245, 238)
SEASHELL2 = RGB(238, 229, 222)
SEASHELL3 = RGB(205, 197, 191)
SEASHELL4 = RGB(139, 134, 130)
SEPIA = RGB(94, 38, 18)
SGIBEET = RGB(142, 56, 142)
SGIBRIGHTGRAY = RGB(197, 193, 170)
SGICHARTREUSE = RGB(113, 198, 113)
SGIDARKGRAY = RGB(85, 85, 85)
SGIGRAY12 = RGB(30, 30, 30)
SGIGRAY16 = RGB(40, 40, 40)
SGIGRAY32 = RGB(81, 81, 81)
SGIGRAY36 = RGB(91, 91, 91)
SGIGRAY52 = RGB(132, 132, 132)
SGIGRAY56 = RGB(142, 142, 142)
SGIGRAY72 = RGB(183, 183, 183)
SGIGRAY76 = RGB(193, 193, 193)
SGIGRAY92 = RGB(234, 234, 234)
SGIGRAY96 = RGB(244, 244, 244)
SGILIGHTBLUE = RGB(125, 158, 192)
SGILIGHTGRAY = RGB(170, 170, 170)
SGIOLIVEDRAB = RGB(142, 142, 56)
SGISALMON = RGB(198, 113, 113)
SGISLATEBLUE = RGB(113, 113, 198)
SGITEAL = RGB(56, 142, 142)
SIENNA = RGB(160, 82, 45)
SIENNA1 = RGB(255, 130, 71)
SIENNA2 = RGB(238, 121, 66)
SIENNA3 = RGB(205, 104, 57)
SIENNA4 = RGB(139, 71, 38)
SILVER = RGB(192, 192, 192)
SKYBLUE = RGB(135, 206, 235)
SKYBLUE1 = RGB(135, 206, 255)
SKYBLUE2 = RGB(126, 192, 238)
SKYBLUE3 = RGB(108, 166, 205)
SKYBLUE4 = RGB(74, 112, 139)
SLATEBLUE = RGB(106, 90, 205)
SLATEBLUE1 = RGB(131, 111, 255)
SLATEBLUE2 = RGB(122, 103, 238)
SLATEBLUE3 = RGB(105, 89, 205)
SLATEBLUE4 = RGB(71, 60, 139)
SLATEGRAY = RGB(112, 128, 144)
SLATEGRAY1 = RGB(198, 226, 255)
SLATEGRAY2 = RGB(185, 211, 238)
SLATEGRAY3 = RGB(159, 182, 205)
SLATEGRAY4 = RGB(108, 123, 139)
SNOW1 = RGB(255, 250, 250)
SNOW2 = RGB(238, 233, 233)
SNOW3 = RGB(205, 201, 201)
SNOW4 = RGB(139, 137, 137)
SPRINGGREEN = RGB(0, 255, 127)
SPRINGGREEN1 = RGB(0, 238, 118)
SPRINGGREEN2 = RGB(0, 205, 102)
SPRINGGREEN3 = RGB(0, 139, 69)
STEELBLUE = RGB(70, 130, 180)
STEELBLUE1 = RGB(99, 184, 255)
STEELBLUE2 = RGB(92, 172, 238)
STEELBLUE3 = RGB(79, 148, 205)
STEELBLUE4 = RGB(54, 100, 139)
TAN = RGB(210, 180, 140)
TAN1 = RGB(255, 165, 79)
TAN2 = RGB(238, 154, 73)
TAN3 = RGB(205, 133, 63)
TAN4 = RGB(139, 90, 43)
TEAL = RGB(0, 128, 128)
THISTLE = RGB(216, 191, 216)
THISTLE1 = RGB(255, 225, 255)
THISTLE2 = RGB(238, 210, 238)
THISTLE3 = RGB(205, 181, 205)
THISTLE4 = RGB(139, 123, 139)
TOMATO1 = RGB(255, 99, 71)
TOMATO2 = RGB(238, 92, 66)
TOMATO3 = RGB(205, 79, 57)
TOMATO4 = RGB(139, 54, 38)
TURQUOISE = RGB(64, 224, 208)
TURQUOISE1 = RGB(0, 245, 255)
TURQUOISE2 = RGB(0, 229, 238)
TURQUOISE3 = RGB(0, 197, 205)
TURQUOISE4 = RGB(0, 134, 139)
TURQUOISEBLUE = RGB(0, 199, 140)
VIOLET = RGB(238, 130, 238)
VIOLETRED = RGB(208, 32, 144)
VIOLETRED1 = RGB(255, 62, 150)
VIOLETRED2 = RGB(238, 58, 140)
VIOLETRED3 = RGB(205, 50, 120)
VIOLETRED4 = RGB(139, 34, 82)
WARMGREY = RGB(128, 128, 105)
WHEAT = RGB(245, 222, 179)
WHEAT1 = RGB(255, 231, 186)
WHEAT2 = RGB(238, 216, 174)
WHEAT3 = RGB(205, 186, 150)
WHEAT4 = RGB(139, 126, 102)
WHITE = RGB(255, 255, 255)
WHITESMOKE = RGB(245, 245, 245)
WHITESMOKE = RGB(245, 245, 245)
YELLOW1 = RGB(255, 255, 0)
YELLOW2 = RGB(238, 238, 0)
YELLOW3 = RGB(205, 205, 0)
YELLOW4 = RGB(139, 139, 0)
#Add colors to colors dictionary
colors['aliceblue'] = ALICEBLUE
colors['antiquewhite'] = ANTIQUEWHITE
colors['antiquewhite1'] = ANTIQUEWHITE1
colors['antiquewhite2'] = ANTIQUEWHITE2
colors['antiquewhite3'] = ANTIQUEWHITE3
colors['antiquewhite4'] = ANTIQUEWHITE4
colors['aqua'] = AQUA
colors['aquamarine1'] = AQUAMARINE1
colors['aquamarine2'] = AQUAMARINE2
colors['aquamarine3'] = AQUAMARINE3
colors['aquamarine4'] = AQUAMARINE4
colors['azure1'] = AZURE1
colors['azure2'] = AZURE2
colors['azure3'] = AZURE3
colors['azure4'] = AZURE4
colors['banana'] = BANANA
colors['beige'] = BEIGE
colors['bisque1'] = BISQUE1
colors['bisque2'] = BISQUE2
colors['bisque3'] = BISQUE3
colors['bisque4'] = BISQUE4
colors['black'] = BLACK
colors['blanchedalmond'] = BLANCHEDALMOND
colors['blue'] = BLUE
colors['blue2'] = BLUE2
colors['blue3'] = BLUE3
colors['blue4'] = BLUE4
colors['blueviolet'] = BLUEVIOLET
colors['brick'] = BRICK
colors['brown'] = BROWN
colors['brown1'] = BROWN1
colors['brown2'] = BROWN2
colors['brown3'] = BROWN3
colors['brown4'] = BROWN4
colors['burlywood'] = BURLYWOOD
colors['burlywood1'] = BURLYWOOD1
colors['burlywood2'] = BURLYWOOD2
colors['burlywood3'] = BURLYWOOD3
colors['burlywood4'] = BURLYWOOD4
colors['burntsienna'] = BURNTSIENNA
colors['burntumber'] = BURNTUMBER
colors['cadetblue'] = CADETBLUE
colors['cadetblue1'] = CADETBLUE1
colors['cadetblue2'] = CADETBLUE2
colors['cadetblue3'] = CADETBLUE3
colors['cadetblue4'] = CADETBLUE4
colors['cadmiumorange'] = CADMIUMORANGE
colors['cadmiumyellow'] = CADMIUMYELLOW
colors['carrot'] = CARROT
colors['chartreuse1'] = CHARTREUSE1
colors['chartreuse2'] = CHARTREUSE2
colors['chartreuse3'] = CHARTREUSE3
colors['chartreuse4'] = CHARTREUSE4
colors['chocolate'] = CHOCOLATE
colors['chocolate1'] = CHOCOLATE1
colors['chocolate2'] = CHOCOLATE2
colors['chocolate3'] = CHOCOLATE3
colors['chocolate4'] = CHOCOLATE4
colors['cobalt'] = COBALT
colors['cobaltgreen'] = COBALTGREEN
colors['coldgrey'] = COLDGREY
colors['coral'] = CORAL
colors['coral1'] = CORAL1
colors['coral2'] = CORAL2
colors['coral3'] = CORAL3
colors['coral4'] = CORAL4
colors['cornflowerblue'] = CORNFLOWERBLUE
colors['cornsilk1'] = CORNSILK1
colors['cornsilk2'] = CORNSILK2
colors['cornsilk3'] = CORNSILK3
colors['cornsilk4'] = CORNSILK4
colors['crimson'] = CRIMSON
colors['cyan2'] = CYAN2
colors['cyan3'] = CYAN3
colors['cyan4'] = CYAN4
colors['darkgoldenrod'] = DARKGOLDENROD
colors['darkgoldenrod1'] = DARKGOLDENROD1
colors['darkgoldenrod2'] = DARKGOLDENROD2
colors['darkgoldenrod3'] = DARKGOLDENROD3
colors['darkgoldenrod4'] = DARKGOLDENROD4
colors['darkgray'] = DARKGRAY
colors['darkgreen'] = DARKGREEN
colors['darkkhaki'] = DARKKHAKI
colors['darkolivegreen'] = DARKOLIVEGREEN
colors['darkolivegreen1'] = DARKOLIVEGREEN1
colors['darkolivegreen2'] = DARKOLIVEGREEN2
colors['darkolivegreen3'] = DARKOLIVEGREEN3
colors['darkolivegreen4'] = DARKOLIVEGREEN4
colors['darkorange'] = DARKORANGE
colors['darkorange1'] = DARKORANGE1
colors['darkorange2'] = DARKORANGE2
colors['darkorange3'] = DARKORANGE3
colors['darkorange4'] = DARKORANGE4
colors['darkorchid'] = DARKORCHID
colors['darkorchid1'] = DARKORCHID1
colors['darkorchid2'] = DARKORCHID2
colors['darkorchid3'] = DARKORCHID3
colors['darkorchid4'] = DARKORCHID4
colors['darksalmon'] = DARKSALMON
colors['darkseagreen'] = DARKSEAGREEN
colors['darkseagreen1'] = DARKSEAGREEN1
colors['darkseagreen2'] = DARKSEAGREEN2
colors['darkseagreen3'] = DARKSEAGREEN3
colors['darkseagreen4'] = DARKSEAGREEN4
colors['darkslateblue'] = DARKSLATEBLUE
colors['darkslategray'] = DARKSLATEGRAY
colors['darkslategray1'] = DARKSLATEGRAY1
colors['darkslategray2'] = DARKSLATEGRAY2
colors['darkslategray3'] = DARKSLATEGRAY3
colors['darkslategray4'] = DARKSLATEGRAY4
colors['darkturquoise'] = DARKTURQUOISE
colors['darkviolet'] = DARKVIOLET
colors['deeppink1'] = DEEPPINK1
colors['deeppink2'] = DEEPPINK2
colors['deeppink3'] = DEEPPINK3
colors['deeppink4'] = DEEPPINK4
colors['deepskyblue1'] = DEEPSKYBLUE1
colors['deepskyblue2'] = DEEPSKYBLUE2
colors['deepskyblue3'] = DEEPSKYBLUE3
colors['deepskyblue4'] = DEEPSKYBLUE4
colors['dimgray'] = DIMGRAY
colors['dimgray'] = DIMGRAY
colors['dodgerblue1'] = DODGERBLUE1
colors['dodgerblue2'] = DODGERBLUE2
colors['dodgerblue3'] = DODGERBLUE3
colors['dodgerblue4'] = DODGERBLUE4
colors['eggshell'] = EGGSHELL
colors['emeraldgreen'] = EMERALDGREEN
colors['firebrick'] = FIREBRICK
colors['firebrick1'] = FIREBRICK1
colors['firebrick2'] = FIREBRICK2
colors['firebrick3'] = FIREBRICK3
colors['firebrick4'] = FIREBRICK4
colors['flesh'] = FLESH
colors['floralwhite'] = FLORALWHITE
colors['forestgreen'] = FORESTGREEN
colors['gainsboro'] = GAINSBORO
colors['ghostwhite'] = GHOSTWHITE
colors['gold1'] = GOLD1
colors['gold2'] = GOLD2
colors['gold3'] = GOLD3
colors['gold4'] = GOLD4
colors['goldenrod'] = GOLDENROD
colors['goldenrod1'] = GOLDENROD1
colors['goldenrod2'] = GOLDENROD2
colors['goldenrod3'] = GOLDENROD3
colors['goldenrod4'] = GOLDENROD4
colors['gray'] = GRAY
colors['gray1'] = GRAY1
colors['gray10'] = GRAY10
colors['gray11'] = GRAY11
colors['gray12'] = GRAY12
colors['gray13'] = GRAY13
colors['gray14'] = GRAY14
colors['gray15'] = GRAY15
colors['gray16'] = GRAY16
colors['gray17'] = GRAY17
colors['gray18'] = GRAY18
colors['gray19'] = GRAY19
colors['gray2'] = GRAY2
colors['gray20'] = GRAY20
colors['gray21'] = GRAY21
colors['gray22'] = GRAY22
colors['gray23'] = GRAY23
colors['gray24'] = GRAY24
colors['gray25'] = GRAY25
colors['gray26'] = GRAY26
colors['gray27'] = GRAY27
colors['gray28'] = GRAY28
colors['gray29'] = GRAY29
colors['gray3'] = GRAY3
colors['gray30'] = GRAY30
colors['gray31'] = GRAY31
colors['gray32'] = GRAY32
colors['gray33'] = GRAY33
colors['gray34'] = GRAY34
colors['gray35'] = GRAY35
colors['gray36'] = GRAY36
colors['gray37'] = GRAY37
colors['gray38'] = GRAY38
colors['gray39'] = GRAY39
colors['gray4'] = GRAY4
colors['gray40'] = GRAY40
colors['gray42'] = GRAY42
colors['gray43'] = GRAY43
colors['gray44'] = GRAY44
colors['gray45'] = GRAY45
colors['gray46'] = GRAY46
colors['gray47'] = GRAY47
colors['gray48'] = GRAY48
colors['gray49'] = GRAY49
colors['gray5'] = GRAY5
colors['gray50'] = GRAY50
colors['gray51'] = GRAY51
colors['gray52'] = GRAY52
colors['gray53'] = GRAY53
colors['gray54'] = GRAY54
colors['gray55'] = GRAY55
colors['gray56'] = GRAY56
colors['gray57'] = GRAY57
colors['gray58'] = GRAY58
colors['gray59'] = GRAY59
colors['gray6'] = GRAY6
colors['gray60'] = GRAY60
colors['gray61'] = GRAY61
colors['gray62'] = GRAY62
colors['gray63'] = GRAY63
colors['gray64'] = GRAY64
colors['gray65'] = GRAY65
colors['gray66'] = GRAY66
colors['gray67'] = GRAY67
colors['gray68'] = GRAY68
colors['gray69'] = GRAY69
colors['gray7'] = GRAY7
colors['gray70'] = GRAY70
colors['gray71'] = GRAY71
colors['gray72'] = GRAY72
colors['gray73'] = GRAY73
colors['gray74'] = GRAY74
colors['gray75'] = GRAY75
colors['gray76'] = GRAY76
colors['gray77'] = GRAY77
colors['gray78'] = GRAY78
colors['gray79'] = GRAY79
colors['gray8'] = GRAY8
colors['gray80'] = GRAY80
colors['gray81'] = GRAY81
colors['gray82'] = GRAY82
colors['gray83'] = GRAY83
colors['gray84'] = GRAY84
colors['gray85'] = GRAY85
colors['gray86'] = GRAY86
colors['gray87'] = GRAY87
colors['gray88'] = GRAY88
colors['gray89'] = GRAY89
colors['gray9'] = GRAY9
colors['gray90'] = GRAY90
colors['gray91'] = GRAY91
colors['gray92'] = GRAY92
colors['gray93'] = GRAY93
colors['gray94'] = GRAY94
colors['gray95'] = GRAY95
colors['gray97'] = GRAY97
colors['gray98'] = GRAY98
colors['gray99'] = GRAY99
colors['green'] = GREEN
colors['green1'] = GREEN1
colors['green2'] = GREEN2
colors['green3'] = GREEN3
colors['green4'] = GREEN4
colors['greenyellow'] = GREENYELLOW
colors['honeydew1'] = HONEYDEW1
colors['honeydew2'] = HONEYDEW2
colors['honeydew3'] = HONEYDEW3
colors['honeydew4'] = HONEYDEW4
colors['hotpink'] = HOTPINK
colors['hotpink1'] = HOTPINK1
colors['hotpink2'] = HOTPINK2
colors['hotpink3'] = HOTPINK3
colors['hotpink4'] = HOTPINK4
colors['indianred'] = INDIANRED
colors['indianred'] = INDIANRED
colors['indianred1'] = INDIANRED1
colors['indianred2'] = INDIANRED2
colors['indianred3'] = INDIANRED3
colors['indianred4'] = INDIANRED4
colors['indigo'] = INDIGO
colors['ivory1'] = IVORY1
colors['ivory2'] = IVORY2
colors['ivory3'] = IVORY3
colors['ivory4'] = IVORY4
colors['ivoryblack'] = IVORYBLACK
colors['khaki'] = KHAKI
colors['khaki1'] = KHAKI1
colors['khaki2'] = KHAKI2
colors['khaki3'] = KHAKI3
colors['khaki4'] = KHAKI4
colors['lavender'] = LAVENDER
colors['lavenderblush1'] = LAVENDERBLUSH1
colors['lavenderblush2'] = LAVENDERBLUSH2
colors['lavenderblush3'] = LAVENDERBLUSH3
colors['lavenderblush4'] = LAVENDERBLUSH4
colors['lawngreen'] = LAWNGREEN
colors['lemonchiffon1'] = LEMONCHIFFON1
colors['lemonchiffon2'] = LEMONCHIFFON2
colors['lemonchiffon3'] = LEMONCHIFFON3
colors['lemonchiffon4'] = LEMONCHIFFON4
colors['lightblue'] = LIGHTBLUE
colors['lightblue1'] = LIGHTBLUE1
colors['lightblue2'] = LIGHTBLUE2
colors['lightblue3'] = LIGHTBLUE3
colors['lightblue4'] = LIGHTBLUE4
colors['lightcoral'] = LIGHTCORAL
colors['lightcyan1'] = LIGHTCYAN1
colors['lightcyan2'] = LIGHTCYAN2
colors['lightcyan3'] = LIGHTCYAN3
colors['lightcyan4'] = LIGHTCYAN4
colors['lightgoldenrod1'] = LIGHTGOLDENROD1
colors['lightgoldenrod2'] = LIGHTGOLDENROD2
colors['lightgoldenrod3'] = LIGHTGOLDENROD3
colors['lightgoldenrod4'] = LIGHTGOLDENROD4
colors['lightgoldenrodyellow'] = LIGHTGOLDENRODYELLOW
colors['lightgrey'] = LIGHTGREY
colors['lightpink'] = LIGHTPINK
colors['lightpink1'] = LIGHTPINK1
colors['lightpink2'] = LIGHTPINK2
colors['lightpink3'] = LIGHTPINK3
colors['lightpink4'] = LIGHTPINK4
colors['lightsalmon1'] = LIGHTSALMON1
colors['lightsalmon2'] = LIGHTSALMON2
colors['lightsalmon3'] = LIGHTSALMON3
colors['lightsalmon4'] = LIGHTSALMON4
colors['lightseagreen'] = LIGHTSEAGREEN
colors['lightskyblue'] = LIGHTSKYBLUE
colors['lightskyblue1'] = LIGHTSKYBLUE1
colors['lightskyblue2'] = LIGHTSKYBLUE2
colors['lightskyblue3'] = LIGHTSKYBLUE3
colors['lightskyblue4'] = LIGHTSKYBLUE4
colors['lightslateblue'] = LIGHTSLATEBLUE
colors['lightslategray'] = LIGHTSLATEGRAY
colors['lightsteelblue'] = LIGHTSTEELBLUE
colors['lightsteelblue1'] = LIGHTSTEELBLUE1
colors['lightsteelblue2'] = LIGHTSTEELBLUE2
colors['lightsteelblue3'] = LIGHTSTEELBLUE3
colors['lightsteelblue4'] = LIGHTSTEELBLUE4
colors['lightyellow1'] = LIGHTYELLOW1
colors['lightyellow2'] = LIGHTYELLOW2
colors['lightyellow3'] = LIGHTYELLOW3
colors['lightyellow4'] = LIGHTYELLOW4
colors['limegreen'] = LIMEGREEN
colors['linen'] = LINEN
colors['magenta'] = MAGENTA
colors['magenta2'] = MAGENTA2
colors['magenta3'] = MAGENTA3
colors['magenta4'] = MAGENTA4
colors['manganeseblue'] = MANGANESEBLUE
colors['maroon'] = MAROON
colors['maroon1'] = MAROON1
colors['maroon2'] = MAROON2
colors['maroon3'] = MAROON3
colors['maroon4'] = MAROON4
colors['mediumorchid'] = MEDIUMORCHID
colors['mediumorchid1'] = MEDIUMORCHID1
colors['mediumorchid2'] = MEDIUMORCHID2
colors['mediumorchid3'] = MEDIUMORCHID3
colors['mediumorchid4'] = MEDIUMORCHID4
colors['mediumpurple'] = MEDIUMPURPLE
colors['mediumpurple1'] = MEDIUMPURPLE1
colors['mediumpurple2'] = MEDIUMPURPLE2
colors['mediumpurple3'] = MEDIUMPURPLE3
colors['mediumpurple4'] = MEDIUMPURPLE4
colors['mediumseagreen'] = MEDIUMSEAGREEN
colors['mediumslateblue'] = MEDIUMSLATEBLUE
colors['mediumspringgreen'] = MEDIUMSPRINGGREEN
colors['mediumturquoise'] = MEDIUMTURQUOISE
colors['mediumvioletred'] = MEDIUMVIOLETRED
colors['melon'] = MELON
colors['midnightblue'] = MIDNIGHTBLUE
colors['mint'] = MINT
colors['mintcream'] = MINTCREAM
colors['mistyrose1'] = MISTYROSE1
colors['mistyrose2'] = MISTYROSE2
colors['mistyrose3'] = MISTYROSE3
colors['mistyrose4'] = MISTYROSE4
colors['moccasin'] = MOCCASIN
colors['navajowhite1'] = NAVAJOWHITE1
colors['navajowhite2'] = NAVAJOWHITE2
colors['navajowhite3'] = NAVAJOWHITE3
colors['navajowhite4'] = NAVAJOWHITE4
colors['navy'] = NAVY
colors['oldlace'] = OLDLACE
colors['olive'] = OLIVE
colors['olivedrab'] = OLIVEDRAB
colors['olivedrab1'] = OLIVEDRAB1
colors['olivedrab2'] = OLIVEDRAB2
colors['olivedrab3'] = OLIVEDRAB3
colors['olivedrab4'] = OLIVEDRAB4
colors['orange'] = ORANGE
colors['orange1'] = ORANGE1
colors['orange2'] = ORANGE2
colors['orange3'] = ORANGE3
colors['orange4'] = ORANGE4
colors['orangered1'] = ORANGERED1
colors['orangered2'] = ORANGERED2
colors['orangered3'] = ORANGERED3
colors['orangered4'] = ORANGERED4
colors['orchid'] = ORCHID
colors['orchid1'] = ORCHID1
colors['orchid2'] = ORCHID2
colors['orchid3'] = ORCHID3
colors['orchid4'] = ORCHID4
colors['palegoldenrod'] = PALEGOLDENROD
colors['palegreen'] = PALEGREEN
colors['palegreen1'] = PALEGREEN1
colors['palegreen2'] = PALEGREEN2
colors['palegreen3'] = PALEGREEN3
colors['palegreen4'] = PALEGREEN4
colors['paleturquoise1'] = PALETURQUOISE1
colors['paleturquoise2'] = PALETURQUOISE2
colors['paleturquoise3'] = PALETURQUOISE3
colors['paleturquoise4'] = PALETURQUOISE4
colors['palevioletred'] = PALEVIOLETRED
colors['palevioletred1'] = PALEVIOLETRED1
colors['palevioletred2'] = PALEVIOLETRED2
colors['palevioletred3'] = PALEVIOLETRED3
colors['palevioletred4'] = PALEVIOLETRED4
colors['papayawhip'] = PAPAYAWHIP
colors['peachpuff1'] = PEACHPUFF1
colors['peachpuff2'] = PEACHPUFF2
colors['peachpuff3'] = PEACHPUFF3
colors['peachpuff4'] = PEACHPUFF4
colors['peacock'] = PEACOCK
colors['pink'] = PINK
colors['pink1'] = PINK1
colors['pink2'] = PINK2
colors['pink3'] = PINK3
colors['pink4'] = PINK4
colors['plum'] = PLUM
colors['plum1'] = PLUM1
colors['plum2'] = PLUM2
colors['plum3'] = PLUM3
colors['plum4'] = PLUM4
colors['powderblue'] = POWDERBLUE
colors['purple'] = PURPLE
colors['purple1'] = PURPLE1
colors['purple2'] = PURPLE2
colors['purple3'] = PURPLE3
colors['purple4'] = PURPLE4
colors['raspberry'] = RASPBERRY
colors['rawsienna'] = RAWSIENNA
colors['red1'] = RED1
colors['red2'] = RED2
colors['red3'] = RED3
colors['red4'] = RED4
colors['rosybrown'] = ROSYBROWN
colors['rosybrown1'] = ROSYBROWN1
colors['rosybrown2'] = ROSYBROWN2
colors['rosybrown3'] = ROSYBROWN3
colors['rosybrown4'] = ROSYBROWN4
colors['royalblue'] = ROYALBLUE
colors['royalblue1'] = ROYALBLUE1
colors['royalblue2'] = ROYALBLUE2
colors['royalblue3'] = ROYALBLUE3
colors['royalblue4'] = ROYALBLUE4
colors['salmon'] = SALMON
colors['salmon1'] = SALMON1
colors['salmon2'] = SALMON2
colors['salmon3'] = SALMON3
colors['salmon4'] = SALMON4
colors['sandybrown'] = SANDYBROWN
colors['sapgreen'] = SAPGREEN
colors['seagreen1'] = SEAGREEN1
colors['seagreen2'] = SEAGREEN2
colors['seagreen3'] = SEAGREEN3
colors['seagreen4'] = SEAGREEN4
colors['seashell1'] = SEASHELL1
colors['seashell2'] = SEASHELL2
colors['seashell3'] = SEASHELL3
colors['seashell4'] = SEASHELL4
colors['sepia'] = SEPIA
colors['sgibeet'] = SGIBEET
colors['sgibrightgray'] = SGIBRIGHTGRAY
colors['sgichartreuse'] = SGICHARTREUSE
colors['sgidarkgray'] = SGIDARKGRAY
colors['sgigray12'] = SGIGRAY12
colors['sgigray16'] = SGIGRAY16
colors['sgigray32'] = SGIGRAY32
colors['sgigray36'] = SGIGRAY36
colors['sgigray52'] = SGIGRAY52
colors['sgigray56'] = SGIGRAY56
colors['sgigray72'] = SGIGRAY72
colors['sgigray76'] = SGIGRAY76
colors['sgigray92'] = SGIGRAY92
colors['sgigray96'] = SGIGRAY96
colors['sgilightblue'] = SGILIGHTBLUE
colors['sgilightgray'] = SGILIGHTGRAY
colors['sgiolivedrab'] = SGIOLIVEDRAB
colors['sgisalmon'] = SGISALMON
colors['sgislateblue'] = SGISLATEBLUE
colors['sgiteal'] = SGITEAL
colors['sienna'] = SIENNA
colors['sienna1'] = SIENNA1
colors['sienna2'] = SIENNA2
colors['sienna3'] = SIENNA3
colors['sienna4'] = SIENNA4
colors['silver'] = SILVER
colors['skyblue'] = SKYBLUE
colors['skyblue1'] = SKYBLUE1
colors['skyblue2'] = SKYBLUE2
colors['skyblue3'] = SKYBLUE3
colors['skyblue4'] = SKYBLUE4
colors['slateblue'] = SLATEBLUE
colors['slateblue1'] = SLATEBLUE1
colors['slateblue2'] = SLATEBLUE2
colors['slateblue3'] = SLATEBLUE3
colors['slateblue4'] = SLATEBLUE4
colors['slategray'] = SLATEGRAY
colors['slategray1'] = SLATEGRAY1
colors['slategray2'] = SLATEGRAY2
colors['slategray3'] = SLATEGRAY3
colors['slategray4'] = SLATEGRAY4
colors['snow1'] = SNOW1
colors['snow2'] = SNOW2
colors['snow3'] = SNOW3
colors['snow4'] = SNOW4
colors['springgreen'] = SPRINGGREEN
colors['springgreen1'] = SPRINGGREEN1
colors['springgreen2'] = SPRINGGREEN2
colors['springgreen3'] = SPRINGGREEN3
colors['steelblue'] = STEELBLUE
colors['steelblue1'] = STEELBLUE1
colors['steelblue2'] = STEELBLUE2
colors['steelblue3'] = STEELBLUE3
colors['steelblue4'] = STEELBLUE4
colors['tan'] = TAN
colors['tan1'] = TAN1
colors['tan2'] = TAN2
colors['tan3'] = TAN3
colors['tan4'] = TAN4
colors['teal'] = TEAL
colors['thistle'] = THISTLE
colors['thistle1'] = THISTLE1
colors['thistle2'] = THISTLE2
colors['thistle3'] = THISTLE3
colors['thistle4'] = THISTLE4
colors['tomato1'] = TOMATO1
colors['tomato2'] = TOMATO2
colors['tomato3'] = TOMATO3
colors['tomato4'] = TOMATO4
colors['turquoise'] = TURQUOISE
colors['turquoise1'] = TURQUOISE1
colors['turquoise2'] = TURQUOISE2
colors['turquoise3'] = TURQUOISE3
colors['turquoise4'] = TURQUOISE4
colors['turquoiseblue'] = TURQUOISEBLUE
colors['violet'] = VIOLET
colors['violetred'] = VIOLETRED
colors['violetred1'] = VIOLETRED1
colors['violetred2'] = VIOLETRED2
colors['violetred3'] = VIOLETRED3
colors['violetred4'] = VIOLETRED4
colors['warmgrey'] = WARMGREY
colors['wheat'] = WHEAT
colors['wheat1'] = WHEAT1
colors['wheat2'] = WHEAT2
colors['wheat3'] = WHEAT3
colors['wheat4'] = WHEAT4
colors['white'] = WHITE
colors['whitesmoke'] = WHITESMOKE
colors['whitesmoke'] = WHITESMOKE
colors['yellow1'] = YELLOW1
colors['yellow2'] = YELLOW2
colors['yellow3'] = YELLOW3
colors['yellow4'] = YELLOW4
colors = OrderedDict(sorted(colors.items(), key=lambda t: t[0]))



colors

import os.path
import logging
import torch
from python_utils.logger import Logged
import python_utils.logger
import python_utils
from utils import utils_logger
from utils import utils_image as util
from utils import utils_model
from models.network_rrdbnet import RRDBNet as net

!ls models

import sys
sys.path.append('/home/jack/Desktop/BSRGAN')
sys.path
#['', ..., '/home/sergey']
sys.path.remove('/home/jack/hidden')
#sys.path

!find . -name '*.py' | grep get_image_paths

!find . -name '*.py' | grep "import os"

from utils import *

from utils import utils_image

util.get_image_paths

import os.path
import logging
import torch
import sys
import os
sys.path.append('/home/jack/Desktop/BSRGAN')
#from utils import utils_image
import utils_image
#sys.path.remove('/home/jack/hidden')
#sys.path
from python_utils.logger import Logged
import python_utils.logger
#import python_utils
#from utils import utils_logger
#from utils import utils_image as util
# from utils import utils_model
from models.network_rrdbnet import RRDBNet as net


"""
Spyder (Python 3.6-3.7)
PyTorch 1.4.0-1.8.1
Windows 10 or Linux
Kai Zhang (cskaizhang@gmail.com)
github: https://github.com/cszn/BSRGAN
        https://github.com/cszn/KAIR
If you have any question, please feel free to contact with me.
Kai Zhang (e-mail: cskaizhang@gmail.com)
by Kai Zhang ( March/2020 --> March/2021 --> )
This work was previously submitted to CVPR2021.

# --------------------------------------------
@inproceedings{zhang2021designing,
  title={Designing a Practical Degradation Model for Deep Blind Image Super-Resolution},
  author={Zhang, Kai and Liang, Jingyun and Van Gool, Luc and Timofte, Radu},
  booktitle={arxiv},
  year={2021}
}
# --------------------------------------------

"""


def main():

    #utils_logger.logger_info('blind_sr_log', log_path='blind_sr_log.log')
    Logged.info('blind_sr_log', log_path='blind_sr_log.log')
    #python_utils.logger('blind_sr_log', log_path='blind_sr_log.log')
    #logger = logging.getLogger('blind_sr_log')

#    print(torch.__version__)               # pytorch version
#    print(torch.version.cuda)              # cuda version
#    print(torch.backends.cudnn.version())  # cudnn version

    testsets = 'testsets'       # fixed, set path of testsets
    testset_Ls = ['RealSRSet']  # ['RealSRSet','DPED']

    model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG']
    #model_names = ['BSRGANx2']    # 'BSRGANx2' for scale factor 2



    save_results = True
    sf = 4
    device = torch.device('cpu')# if torch.cuda.is_available() else 'cpu')

    for model_name in model_names:
        if model_name in ['BSRGANx2']:
            sf = 2
        model_path = os.path.join('model_zoo', model_name+'.pth')          # set model path
        Logged.logger.info('{:>16s} : {:s}'.format('Model Name', model_name))

        # torch.cuda.set_device(0)      # set GPU ID
        #Logged.logger.info('{:>16s} : {:<d}'.format('GPU ID', torch.cuda.current_device()))
        #torch.cuda.empty_cache()

        # --------------------------------
        # define network and load model
        # --------------------------------
        model = net(in_nc=3, out_nc=3, nf=64, nb=23, gc=32, sf=sf)  # define network

#            model_old = torch.load(model_path)
#            state_dict = model.state_dict()
#            for ((key, param),(key2, param2)) in zip(model_old.items(), state_dict.items()):
#                state_dict[key2] = param
#            model.load_state_dict(state_dict, strict=True)

        model.load_state_dict(torch.load(model_path), strict=True)
        model.eval()
        for k, v in model.named_parameters():
            v.requires_grad = False
        model = model.to(device)
        torch.cuda.empty_cache()

        for testset_L in testset_Ls:

            L_path = os.path.join(testsets, testset_L)
            #E_path = os.path.join(testsets, testset_L+'_'+model_name)
            E_path = os.path.join(testsets, testset_L+'_results_x'+str(sf))
            try:
                os.makedirs(E_path)
            except FileExistsError:
                # directory already exists
                pass
 
            Logged.logger.info('{:>16s} : {:s}'.format('Input Path', L_path))
            Logged.logger.info('{:>16s} : {:s}'.format('Output Path', E_path))
            idx = 0

            for img in utils_image.get_image_paths(L_path):

                # --------------------------------
                # (1) img_L
                # --------------------------------
                idx += 1
                img_name, ext = os.path.splitext(os.path.basename(img))
                Logged.logger.info('{:->4d} --> {:<s} --> x{:<d}--> {:<s}'.format(idx, model_name, sf, img_name+ext))

                img_L = utils_image.imread_uint(img, n_channels=3)
                img_L = utils_image.uint2tensor4(img_L)
                img_L = img_L.to(device)

                # --------------------------------
                # (2) inference
                # --------------------------------
                img_E = model(img_L)

                # --------------------------------
                # (3) img_E
                # --------------------------------
                img_E = utils_image.tensor2uint(img_E)
                if save_results:
                    utils_image.imsave(img_E, os.path.join(E_path, img_name+'_'+model_name+'.png'))


if __name__ == '__main__':

    main()


!cat /home/jack/Desktop/BSRGAN/blind_sr_log.log

import os
E_path = "Testing"
os.mkdir(E_path)


model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG']
#model_names = ['BSRGAN','BSRGANx2']    # 'BSRGANx2' for scale factor 2

for model_name in model_names:
    if model_name in ['BSRGANx2']:
        sf = 2
        model_path = os.path.join('model_zoo', model_name+'.pth')          # set model path
        Logged.logger.info('{:>16s} : {:s}'.format('Model Name', model_name))
print (model_path)

import sys
sys.path.append('/home/jack/Desktop/BSRGAN')
sys.path
#['', ..., '/home/sergey']
sys.path.remove('/home/jack/hidden')
sys.path


#utils_logger.logger_info('blind_sr_log', log_path='blind_sr_log.log')
Logged.info('blind_sr_log', log_path='blind_sr_log.log')
#python_utils.logger('blind_sr_log', log_path='blind_sr_log.log')
#logger = logging.getLogger('blind_sr_log')

FORMAT = '%(asctime)s %(clientip)-15s %(user)-8s %(message)s'
logging.basicConfig(format=FORMAT)
d = {'clientip': '192.168.0.1', 'user': 'fbloggs'}
logger = logging.getLogger('tcpserver')
logger.warning('Protocol problem: %s', 'connection reset', extra=d)

Logged.info('blind_sr_log', log_path='blind_sr_log.log')

from python_utils import logger
import logging
import functools

Logged.info('blind_sr_log', log_path='blind_sr_log.log')

logger = logging.getLogger()
#Logged.info('blind_sr_log', log_path='blind_sr_log.log')
dir(logger)

#%%writefile ~/miniconda3/envs/cloned_base/lib/python3.9/site-packages/python_utils/logger.py
import abc
import functools
import logging

__all__ = ['Logged']

import typing


class LoggerBase(abc.ABC):
    '''Class which automatically adds logging utilities to your class when
    interiting. Expects `logger` to be a logging.Logger or compatible instance.

    Adds easy access to debug, info, warning, error, exception and log methods

    >>> class MyClass(LoggerBase):
    ...     logger = logging.getLogger(__name__)
    ...
    ...     def __init__(self):
    ...         Logged.__init__(self)

    >>> my_class = MyClass()
    >>> my_class.debug('debug')
    >>> my_class.info('info')
    >>> my_class.warning('warning')
    >>> my_class.error('error')
    >>> my_class.exception('exception')
    >>> my_class.log(0, 'log')
    '''

    # Being a tad lazy here and not creating a Protocol.
    # The actual classes define the correct type anyway
    logger: typing.Any

    @classmethod
    def __get_name(cls, *name_parts: str) -> str:
        return '.'.join(n.strip() for n in name_parts if n.strip())

    @classmethod
    @functools.wraps(logging.debug)
    def debug(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.debug(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.info)
    def info(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.info(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.warning)
    def warning(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.warning(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.error)
    def error(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.error(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.exception)
    def exception(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.exception(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.log)
    def log(cls, lvl: int, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.log(lvl, msg, *args, **kwargs)


class Logged(LoggerBase):
    '''Class which automatically adds a named logger to your class when
    interiting

    Adds easy access to debug, info, warning, error, exception and log methods

    >>> class MyClass(Logged):
    ...     def __init__(self):
    ...         Logged.__init__(self)

    >>> my_class = MyClass()
    >>> my_class.debug('debug')
    >>> my_class.info('info')
    >>> my_class.warning('warning')
    >>> my_class.error('error')
    >>> my_class.exception('exception')
    >>> my_class.log(0, 'log')

    >>> my_class._Logged__get_name('spam')
    'spam'
    '''

    logger: logging.Logger  # pragma: no cover
    #jack    
    #logger = logging.getLogger()
    logger.info('info')
    
    
    @classmethod
    def __get_name(cls, *name_parts: str) -> str:
        return LoggerBase._LoggerBase__get_name(*name_parts)  # type: ignore

    def __new__(cls, *args, **kwargs):
        cls.logger = logging.getLogger(
            cls.__get_name(cls.__module__, cls.__name__)
        )
        return super(Logged, cls).__new__(cls)


from python_utils import logger as logger


dir(Logged.info)

dir(Logged)

dir(python_utils.logger)

# Example 1

from python_utils.logger import Logged

class MyClass(Logged):
    def __init__(self):
        Logged.__init__(self)


my_class = MyClass()
my_class.error('error')

!locate /utils/__init__.py | grep cloned

python_utils package
https://python-utils.readthedocs.io/en/latest/python_utils.html#
https://python-utils.readthedocs.io/en/latest/python_utils.html#module-python_utils.logger
    

from python_utils.logger import *
Logged

class MyClass(Logged):
     def __init__(self):
        Logged.__init__(self)
my_class = MyClass()
my_class.debug('debug')
my_class.info('info')
my_class.warning('warning')
my_class.error('error')
my_class.exception('exception')
my_class.log(0, 'log')

sys.path.append('./lib/python3.7/site-packages')

#python_utils.logger.Logged
import logging
import functools

__all__ = ['Logged']


#[docs]
class Logged(object):
    '''Class which automatically adds a named logger to your class when
    interiting

    Adds easy access to debug, info, warning, error, exception and log methods

    >>> class MyClass(Logged):
    ...     def __init__(self):
    ...         Logged.__init__(self)
    >>> my_class = MyClass()
    >>> my_class.debug('debug')
    >>> my_class.info('info')
    >>> my_class.warning('warning')
    >>> my_class.error('error')
    >>> my_class.exception('exception')
    >>> my_class.log(0, 'log')
    '''
    def __new__(cls, *args, **kwargs):
        cls.logger = logging.getLogger(
            cls.__get_name(cls.__module__, cls.__name__))
        return super(Logged, cls).__new__(cls)

    @classmethod
    def __get_name(cls, *name_parts):
        return '.'.join(n.strip() for n in name_parts if n.strip())

    @classmethod
    @functools.wraps(logging.debug)
    def debug(cls, msg, *args, **kwargs):
        cls.logger.debug(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.info)
    def info(cls, msg, *args, **kwargs):
        cls.logger.info(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.warning)
    def warning(cls, msg, *args, **kwargs):
        cls.logger.warning(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.error)
    def error(cls, msg, *args, **kwargs):
        cls.logger.error(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.exception)
    def exception(cls, msg, *args, **kwargs):
        cls.logger.exception(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.log)
    def log(cls, lvl, msg, *args, **kwargs):
        cls.logger.log(lvl, msg, *args, **kwargs)

import _functools
functools.__file__

# %load /home/jack/miniconda3/envs/cloned_base/lib/python3.9/functools.py
"""functools.py - Tools for working with functions and callable objects
"""
# Python module wrapper for _functools C module
# to allow utilities written in Python to be added
# to the functools module.
# Written by Nick Coghlan <ncoghlan at gmail.com>,
# Raymond Hettinger <python at rcn.com>,
# and Łukasz Langa <lukasz at langa.pl>.
#   Copyright (C) 2006-2013 Python Software Foundation.
# See C source code for _functools credits/copyright

__all__ = ['update_wrapper', 'wraps', 'WRAPPER_ASSIGNMENTS', 'WRAPPER_UPDATES',
           'total_ordering', 'cache', 'cmp_to_key', 'lru_cache', 'reduce',
           'partial', 'partialmethod', 'singledispatch', 'singledispatchmethod',
           'cached_property']

from abc import get_cache_token
from collections import namedtuple
# import types, weakref  # Deferred to single_dispatch()
from reprlib import recursive_repr
from _thread import RLock
from types import GenericAlias


################################################################################
### update_wrapper() and wraps() decorator
################################################################################

# update_wrapper() and wraps() are tools to help write
# wrapper functions that can handle naive introspection

WRAPPER_ASSIGNMENTS = ('__module__', '__name__', '__qualname__', '__doc__',
                       '__annotations__')
WRAPPER_UPDATES = ('__dict__',)
def update_wrapper(wrapper,
                   wrapped,
                   assigned = WRAPPER_ASSIGNMENTS,
                   updated = WRAPPER_UPDATES):
    """Update a wrapper function to look like the wrapped function

       wrapper is the function to be updated
       wrapped is the original function
       assigned is a tuple naming the attributes assigned directly
       from the wrapped function to the wrapper function (defaults to
       functools.WRAPPER_ASSIGNMENTS)
       updated is a tuple naming the attributes of the wrapper that
       are updated with the corresponding attribute from the wrapped
       function (defaults to functools.WRAPPER_UPDATES)
    """
    for attr in assigned:
        try:
            value = getattr(wrapped, attr)
        except AttributeError:
            pass
        else:
            setattr(wrapper, attr, value)
    for attr in updated:
        getattr(wrapper, attr).update(getattr(wrapped, attr, {}))
    # Issue #17482: set __wrapped__ last so we don't inadvertently copy it
    # from the wrapped function when updating __dict__
    wrapper.__wrapped__ = wrapped
    # Return the wrapper so this can be used as a decorator via partial()
    return wrapper

def wraps(wrapped,
          assigned = WRAPPER_ASSIGNMENTS,
          updated = WRAPPER_UPDATES):
    """Decorator factory to apply update_wrapper() to a wrapper function

       Returns a decorator that invokes update_wrapper() with the decorated
       function as the wrapper argument and the arguments to wraps() as the
       remaining arguments. Default arguments are as for update_wrapper().
       This is a convenience function to simplify applying partial() to
       update_wrapper().
    """
    return partial(update_wrapper, wrapped=wrapped,
                   assigned=assigned, updated=updated)


################################################################################
### total_ordering class decorator
################################################################################

# The total ordering functions all invoke the root magic method directly
# rather than using the corresponding operator.  This avoids possible
# infinite recursion that could occur when the operator dispatch logic
# detects a NotImplemented result and then calls a reflected method.

def _gt_from_lt(self, other, NotImplemented=NotImplemented):
    'Return a > b.  Computed by @total_ordering from (not a < b) and (a != b).'
    op_result = type(self).__lt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result and self != other

def _le_from_lt(self, other, NotImplemented=NotImplemented):
    'Return a <= b.  Computed by @total_ordering from (a < b) or (a == b).'
    op_result = type(self).__lt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result or self == other

def _ge_from_lt(self, other, NotImplemented=NotImplemented):
    'Return a >= b.  Computed by @total_ordering from (not a < b).'
    op_result = type(self).__lt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

def _ge_from_le(self, other, NotImplemented=NotImplemented):
    'Return a >= b.  Computed by @total_ordering from (not a <= b) or (a == b).'
    op_result = type(self).__le__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result or self == other

def _lt_from_le(self, other, NotImplemented=NotImplemented):
    'Return a < b.  Computed by @total_ordering from (a <= b) and (a != b).'
    op_result = type(self).__le__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result and self != other

def _gt_from_le(self, other, NotImplemented=NotImplemented):
    'Return a > b.  Computed by @total_ordering from (not a <= b).'
    op_result = type(self).__le__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

def _lt_from_gt(self, other, NotImplemented=NotImplemented):
    'Return a < b.  Computed by @total_ordering from (not a > b) and (a != b).'
    op_result = type(self).__gt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result and self != other

def _ge_from_gt(self, other, NotImplemented=NotImplemented):
    'Return a >= b.  Computed by @total_ordering from (a > b) or (a == b).'
    op_result = type(self).__gt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result or self == other

def _le_from_gt(self, other, NotImplemented=NotImplemented):
    'Return a <= b.  Computed by @total_ordering from (not a > b).'
    op_result = type(self).__gt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

def _le_from_ge(self, other, NotImplemented=NotImplemented):
    'Return a <= b.  Computed by @total_ordering from (not a >= b) or (a == b).'
    op_result = type(self).__ge__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result or self == other

def _gt_from_ge(self, other, NotImplemented=NotImplemented):
    'Return a > b.  Computed by @total_ordering from (a >= b) and (a != b).'
    op_result = type(self).__ge__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result and self != other

def _lt_from_ge(self, other, NotImplemented=NotImplemented):
    'Return a < b.  Computed by @total_ordering from (not a >= b).'
    op_result = type(self).__ge__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

_convert = {
    '__lt__': [('__gt__', _gt_from_lt),
               ('__le__', _le_from_lt),
               ('__ge__', _ge_from_lt)],
    '__le__': [('__ge__', _ge_from_le),
               ('__lt__', _lt_from_le),
               ('__gt__', _gt_from_le)],
    '__gt__': [('__lt__', _lt_from_gt),
               ('__ge__', _ge_from_gt),
               ('__le__', _le_from_gt)],
    '__ge__': [('__le__', _le_from_ge),
               ('__gt__', _gt_from_ge),
               ('__lt__', _lt_from_ge)]
}

def total_ordering(cls):
    """Class decorator that fills in missing ordering methods"""
    # Find user-defined comparisons (not those inherited from object).
    roots = {op for op in _convert if getattr(cls, op, None) is not getattr(object, op, None)}
    if not roots:
        raise ValueError('must define at least one ordering operation: < > <= >=')
    root = max(roots)       # prefer __lt__ to __le__ to __gt__ to __ge__
    for opname, opfunc in _convert[root]:
        if opname not in roots:
            opfunc.__name__ = opname
            setattr(cls, opname, opfunc)
    return cls


################################################################################
### cmp_to_key() function converter
################################################################################

def cmp_to_key(mycmp):
    """Convert a cmp= function into a key= function"""
    class K(object):
        __slots__ = ['obj']
        def __init__(self, obj):
            self.obj = obj
        def __lt__(self, other):
            return mycmp(self.obj, other.obj) < 0
        def __gt__(self, other):
            return mycmp(self.obj, other.obj) > 0
        def __eq__(self, other):
            return mycmp(self.obj, other.obj) == 0
        def __le__(self, other):
            return mycmp(self.obj, other.obj) <= 0
        def __ge__(self, other):
            return mycmp(self.obj, other.obj) >= 0
        __hash__ = None
    return K

try:
    from _functools import cmp_to_key
except ImportError:
    pass


################################################################################
### reduce() sequence to a single item
################################################################################

_initial_missing = object()

def reduce(function, sequence, initial=_initial_missing):
    """
    reduce(function, sequence[, initial]) -> value

    Apply a function of two arguments cumulatively to the items of a sequence,
    from left to right, so as to reduce the sequence to a single value.
    For example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates
    ((((1+2)+3)+4)+5).  If initial is present, it is placed before the items
    of the sequence in the calculation, and serves as a default when the
    sequence is empty.
    """

    it = iter(sequence)

    if initial is _initial_missing:
        try:
            value = next(it)
        except StopIteration:
            raise TypeError("reduce() of empty sequence with no initial value") from None
    else:
        value = initial

    for element in it:
        value = function(value, element)

    return value

try:
    from _functools import reduce
except ImportError:
    pass


################################################################################
### partial() argument application
################################################################################

# Purely functional, no descriptor behaviour
class partial:
    """New function with partial application of the given arguments
    and keywords.
    """

    __slots__ = "func", "args", "keywords", "__dict__", "__weakref__"

    def __new__(cls, func, /, *args, **keywords):
        if not callable(func):
            raise TypeError("the first argument must be callable")

        if hasattr(func, "func"):
            args = func.args + args
            keywords = {**func.keywords, **keywords}
            func = func.func

        self = super(partial, cls).__new__(cls)

        self.func = func
        self.args = args
        self.keywords = keywords
        return self

    def __call__(self, /, *args, **keywords):
        keywords = {**self.keywords, **keywords}
        return self.func(*self.args, *args, **keywords)

    @recursive_repr()
    def __repr__(self):
        qualname = type(self).__qualname__
        args = [repr(self.func)]
        args.extend(repr(x) for x in self.args)
        args.extend(f"{k}={v!r}" for (k, v) in self.keywords.items())
        if type(self).__module__ == "functools":
            return f"functools.{qualname}({', '.join(args)})"
        return f"{qualname}({', '.join(args)})"

    def __reduce__(self):
        return type(self), (self.func,), (self.func, self.args,
               self.keywords or None, self.__dict__ or None)

    def __setstate__(self, state):
        if not isinstance(state, tuple):
            raise TypeError("argument to __setstate__ must be a tuple")
        if len(state) != 4:
            raise TypeError(f"expected 4 items in state, got {len(state)}")
        func, args, kwds, namespace = state
        if (not callable(func) or not isinstance(args, tuple) or
           (kwds is not None and not isinstance(kwds, dict)) or
           (namespace is not None and not isinstance(namespace, dict))):
            raise TypeError("invalid partial state")

        args = tuple(args) # just in case it's a subclass
        if kwds is None:
            kwds = {}
        elif type(kwds) is not dict: # XXX does it need to be *exactly* dict?
            kwds = dict(kwds)
        if namespace is None:
            namespace = {}

        self.__dict__ = namespace
        self.func = func
        self.args = args
        self.keywords = kwds

try:
    from _functools import partial
except ImportError:
    pass

# Descriptor version
class partialmethod(object):
    """Method descriptor with partial application of the given arguments
    and keywords.

    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    """

    def __init__(self, func, /, *args, **keywords):
        if not callable(func) and not hasattr(func, "__get__"):
            raise TypeError("{!r} is not callable or a descriptor"
                                 .format(func))

        # func could be a descriptor like classmethod which isn't callable,
        # so we can't inherit from partial (it verifies func is callable)
        if isinstance(func, partialmethod):
            # flattening is mandatory in order to place cls/self before all
            # other arguments
            # it's also more efficient since only one function will be called
            self.func = func.func
            self.args = func.args + args
            self.keywords = {**func.keywords, **keywords}
        else:
            self.func = func
            self.args = args
            self.keywords = keywords

    def __repr__(self):
        args = ", ".join(map(repr, self.args))
        keywords = ", ".join("{}={!r}".format(k, v)
                                 for k, v in self.keywords.items())
        format_string = "{module}.{cls}({func}, {args}, {keywords})"
        return format_string.format(module=self.__class__.__module__,
                                    cls=self.__class__.__qualname__,
                                    func=self.func,
                                    args=args,
                                    keywords=keywords)

    def _make_unbound_method(self):
        def _method(cls_or_self, /, *args, **keywords):
            keywords = {**self.keywords, **keywords}
            return self.func(cls_or_self, *self.args, *args, **keywords)
        _method.__isabstractmethod__ = self.__isabstractmethod__
        _method._partialmethod = self
        return _method

    def __get__(self, obj, cls=None):
        get = getattr(self.func, "__get__", None)
        result = None
        if get is not None:
            new_func = get(obj, cls)
            if new_func is not self.func:
                # Assume __get__ returning something new indicates the
                # creation of an appropriate callable
                result = partial(new_func, *self.args, **self.keywords)
                try:
                    result.__self__ = new_func.__self__
                except AttributeError:
                    pass
        if result is None:
            # If the underlying descriptor didn't do anything, treat this
            # like an instance method
            result = self._make_unbound_method().__get__(obj, cls)
        return result

    @property
    def __isabstractmethod__(self):
        return getattr(self.func, "__isabstractmethod__", False)

    __class_getitem__ = classmethod(GenericAlias)


# Helper functions

def _unwrap_partial(func):
    while isinstance(func, partial):
        func = func.func
    return func

################################################################################
### LRU Cache function decorator
################################################################################

_CacheInfo = namedtuple("CacheInfo", ["hits", "misses", "maxsize", "currsize"])

class _HashedSeq(list):
    """ This class guarantees that hash() will be called no more than once
        per element.  This is important because the lru_cache() will hash
        the key multiple times on a cache miss.

    """

    __slots__ = 'hashvalue'

    def __init__(self, tup, hash=hash):
        self[:] = tup
        self.hashvalue = hash(tup)

    def __hash__(self):
        return self.hashvalue

def _make_key(args, kwds, typed,
             kwd_mark = (object(),),
             fasttypes = {int, str},
             tuple=tuple, type=type, len=len):
    """Make a cache key from optionally typed positional and keyword arguments

    The key is constructed in a way that is flat as possible rather than
    as a nested structure that would take more memory.

    If there is only a single argument and its data type is known to cache
    its hash value, then that argument is returned without a wrapper.  This
    saves space and improves lookup speed.

    """
    # All of code below relies on kwds preserving the order input by the user.
    # Formerly, we sorted() the kwds before looping.  The new way is *much*
    # faster; however, it means that f(x=1, y=2) will now be treated as a
    # distinct call from f(y=2, x=1) which will be cached separately.
    key = args
    if kwds:
        key += kwd_mark
        for item in kwds.items():
            key += item
    if typed:
        key += tuple(type(v) for v in args)
        if kwds:
            key += tuple(type(v) for v in kwds.values())
    elif len(key) == 1 and type(key[0]) in fasttypes:
        return key[0]
    return _HashedSeq(key)

def lru_cache(maxsize=128, typed=False):
    """Least-recently-used cache decorator.

    If *maxsize* is set to None, the LRU features are disabled and the cache
    can grow without bound.

    If *typed* is True, arguments of different types will be cached separately.
    For example, f(3.0) and f(3) will be treated as distinct calls with
    distinct results.

    Arguments to the cached function must be hashable.

    View the cache statistics named tuple (hits, misses, maxsize, currsize)
    with f.cache_info().  Clear the cache and statistics with f.cache_clear().
    Access the underlying function with f.__wrapped__.

    See:  https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)

    """

    # Users should only access the lru_cache through its public API:
    #       cache_info, cache_clear, and f.__wrapped__
    # The internals of the lru_cache are encapsulated for thread safety and
    # to allow the implementation to change (including a possible C version).

    if isinstance(maxsize, int):
        # Negative maxsize is treated as 0
        if maxsize < 0:
            maxsize = 0
    elif callable(maxsize) and isinstance(typed, bool):
        # The user_function was passed in directly via the maxsize argument
        user_function, maxsize = maxsize, 128
        wrapper = _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo)
        wrapper.cache_parameters = lambda : {'maxsize': maxsize, 'typed': typed}
        return update_wrapper(wrapper, user_function)
    elif maxsize is not None:
        raise TypeError(
            'Expected first argument to be an integer, a callable, or None')

    def decorating_function(user_function):
        wrapper = _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo)
        wrapper.cache_parameters = lambda : {'maxsize': maxsize, 'typed': typed}
        return update_wrapper(wrapper, user_function)

    return decorating_function

def _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo):
    # Constants shared by all lru cache instances:
    sentinel = object()          # unique object used to signal cache misses
    make_key = _make_key         # build a key from the function arguments
    PREV, NEXT, KEY, RESULT = 0, 1, 2, 3   # names for the link fields

    cache = {}
    hits = misses = 0
    full = False
    cache_get = cache.get    # bound method to lookup a key or return None
    cache_len = cache.__len__  # get cache size without calling len()
    lock = RLock()           # because linkedlist updates aren't threadsafe
    root = []                # root of the circular doubly linked list
    root[:] = [root, root, None, None]     # initialize by pointing to self

    if maxsize == 0:

        def wrapper(*args, **kwds):
            # No caching -- just a statistics update
            nonlocal misses
            misses += 1
            result = user_function(*args, **kwds)
            return result

    elif maxsize is None:

        def wrapper(*args, **kwds):
            # Simple caching without ordering or size limit
            nonlocal hits, misses
            key = make_key(args, kwds, typed)
            result = cache_get(key, sentinel)
            if result is not sentinel:
                hits += 1
                return result
            misses += 1
            result = user_function(*args, **kwds)
            cache[key] = result
            return result

    else:

        def wrapper(*args, **kwds):
            # Size limited caching that tracks accesses by recency
            nonlocal root, hits, misses, full
            key = make_key(args, kwds, typed)
            with lock:
                link = cache_get(key)
                if link is not None:
                    # Move the link to the front of the circular queue
                    link_prev, link_next, _key, result = link
                    link_prev[NEXT] = link_next
                    link_next[PREV] = link_prev
                    last = root[PREV]
                    last[NEXT] = root[PREV] = link
                    link[PREV] = last
                    link[NEXT] = root
                    hits += 1
                    return result
                misses += 1
            result = user_function(*args, **kwds)
            with lock:
                if key in cache:
                    # Getting here means that this same key was added to the
                    # cache while the lock was released.  Since the link
                    # update is already done, we need only return the
                    # computed result and update the count of misses.
                    pass
                elif full:
                    # Use the old root to store the new key and result.
                    oldroot = root
                    oldroot[KEY] = key
                    oldroot[RESULT] = result
                    # Empty the oldest link and make it the new root.
                    # Keep a reference to the old key and old result to
                    # prevent their ref counts from going to zero during the
                    # update. That will prevent potentially arbitrary object
                    # clean-up code (i.e. __del__) from running while we're
                    # still adjusting the links.
                    root = oldroot[NEXT]
                    oldkey = root[KEY]
                    oldresult = root[RESULT]
                    root[KEY] = root[RESULT] = None
                    # Now update the cache dictionary.
                    del cache[oldkey]
                    # Save the potentially reentrant cache[key] assignment
                    # for last, after the root and links have been put in
                    # a consistent state.
                    cache[key] = oldroot
                else:
                    # Put result in a new link at the front of the queue.
                    last = root[PREV]
                    link = [last, root, key, result]
                    last[NEXT] = root[PREV] = cache[key] = link
                    # Use the cache_len bound method instead of the len() function
                    # which could potentially be wrapped in an lru_cache itself.
                    full = (cache_len() >= maxsize)
            return result

    def cache_info():
        """Report cache statistics"""
        with lock:
            return _CacheInfo(hits, misses, maxsize, cache_len())

    def cache_clear():
        """Clear the cache and cache statistics"""
        nonlocal hits, misses, full
        with lock:
            cache.clear()
            root[:] = [root, root, None, None]
            hits = misses = 0
            full = False

    wrapper.cache_info = cache_info
    wrapper.cache_clear = cache_clear
    return wrapper

try:
    from _functools import _lru_cache_wrapper
except ImportError:
    pass


################################################################################
### cache -- simplified access to the infinity cache
################################################################################

def cache(user_function, /):
    'Simple lightweight unbounded cache.  Sometimes called "memoize".'
    return lru_cache(maxsize=None)(user_function)


################################################################################
### singledispatch() - single-dispatch generic function decorator
################################################################################

def _c3_merge(sequences):
    """Merges MROs in *sequences* to a single MRO using the C3 algorithm.

    Adapted from https://www.python.org/download/releases/2.3/mro/.

    """
    result = []
    while True:
        sequences = [s for s in sequences if s]   # purge empty sequences
        if not sequences:
            return result
        for s1 in sequences:   # find merge candidates among seq heads
            candidate = s1[0]
            for s2 in sequences:
                if candidate in s2[1:]:
                    candidate = None
                    break      # reject the current head, it appears later
            else:
                break
        if candidate is None:
            raise RuntimeError("Inconsistent hierarchy")
        result.append(candidate)
        # remove the chosen candidate
        for seq in sequences:
            if seq[0] == candidate:
                del seq[0]

def _c3_mro(cls, abcs=None):
    """Computes the method resolution order using extended C3 linearization.

    If no *abcs* are given, the algorithm works exactly like the built-in C3
    linearization used for method resolution.

    If given, *abcs* is a list of abstract base classes that should be inserted
    into the resulting MRO. Unrelated ABCs are ignored and don't end up in the
    result. The algorithm inserts ABCs where their functionality is introduced,
    i.e. issubclass(cls, abc) returns True for the class itself but returns
    False for all its direct base classes. Implicit ABCs for a given class
    (either registered or inferred from the presence of a special method like
    __len__) are inserted directly after the last ABC explicitly listed in the
    MRO of said class. If two implicit ABCs end up next to each other in the
    resulting MRO, their ordering depends on the order of types in *abcs*.

    """
    for i, base in enumerate(reversed(cls.__bases__)):
        if hasattr(base, '__abstractmethods__'):
            boundary = len(cls.__bases__) - i
            break   # Bases up to the last explicit ABC are considered first.
    else:
        boundary = 0
    abcs = list(abcs) if abcs else []
    explicit_bases = list(cls.__bases__[:boundary])
    abstract_bases = []
    other_bases = list(cls.__bases__[boundary:])
    for base in abcs:
        if issubclass(cls, base) and not any(
                issubclass(b, base) for b in cls.__bases__
            ):
            # If *cls* is the class that introduces behaviour described by
            # an ABC *base*, insert said ABC to its MRO.
            abstract_bases.append(base)
    for base in abstract_bases:
        abcs.remove(base)
    explicit_c3_mros = [_c3_mro(base, abcs=abcs) for base in explicit_bases]
    abstract_c3_mros = [_c3_mro(base, abcs=abcs) for base in abstract_bases]
    other_c3_mros = [_c3_mro(base, abcs=abcs) for base in other_bases]
    return _c3_merge(
        [[cls]] +
        explicit_c3_mros + abstract_c3_mros + other_c3_mros +
        [explicit_bases] + [abstract_bases] + [other_bases]
    )

def _compose_mro(cls, types):
    """Calculates the method resolution order for a given class *cls*.

    Includes relevant abstract base classes (with their respective bases) from
    the *types* iterable. Uses a modified C3 linearization algorithm.

    """
    bases = set(cls.__mro__)
    # Remove entries which are already present in the __mro__ or unrelated.
    def is_related(typ):
        return (typ not in bases and hasattr(typ, '__mro__')
                                 and not isinstance(typ, GenericAlias)
                                 and issubclass(cls, typ))
    types = [n for n in types if is_related(n)]
    # Remove entries which are strict bases of other entries (they will end up
    # in the MRO anyway.
    def is_strict_base(typ):
        for other in types:
            if typ != other and typ in other.__mro__:
                return True
        return False
    types = [n for n in types if not is_strict_base(n)]
    # Subclasses of the ABCs in *types* which are also implemented by
    # *cls* can be used to stabilize ABC ordering.
    type_set = set(types)
    mro = []
    for typ in types:
        found = []
        for sub in typ.__subclasses__():
            if sub not in bases and issubclass(cls, sub):
                found.append([s for s in sub.__mro__ if s in type_set])
        if not found:
            mro.append(typ)
            continue
        # Favor subclasses with the biggest number of useful bases
        found.sort(key=len, reverse=True)
        for sub in found:
            for subcls in sub:
                if subcls not in mro:
                    mro.append(subcls)
    return _c3_mro(cls, abcs=mro)

def _find_impl(cls, registry):
    """Returns the best matching implementation from *registry* for type *cls*.

    Where there is no registered implementation for a specific type, its method
    resolution order is used to find a more generic implementation.

    Note: if *registry* does not contain an implementation for the base
    *object* type, this function may return None.

    """
    mro = _compose_mro(cls, registry.keys())
    match = None
    for t in mro:
        if match is not None:
            # If *match* is an implicit ABC but there is another unrelated,
            # equally matching implicit ABC, refuse the temptation to guess.
            if (t in registry and t not in cls.__mro__
                              and match not in cls.__mro__
                              and not issubclass(match, t)):
                raise RuntimeError("Ambiguous dispatch: {} or {}".format(
                    match, t))
            break
        if t in registry:
            match = t
    return registry.get(match)

def singledispatch(func):
    """Single-dispatch generic function decorator.

    Transforms a function into a generic function, which can have different
    behaviours depending upon the type of its first argument. The decorated
    function acts as the default implementation, and additional
    implementations can be registered using the register() attribute of the
    generic function.
    """
    # There are many programs that use functools without singledispatch, so we
    # trade-off making singledispatch marginally slower for the benefit of
    # making start-up of such applications slightly faster.
    import types, weakref

    registry = {}
    dispatch_cache = weakref.WeakKeyDictionary()
    cache_token = None

    def dispatch(cls):
        """generic_func.dispatch(cls) -> <function implementation>

        Runs the dispatch algorithm to return the best available implementation
        for the given *cls* registered on *generic_func*.

        """
        nonlocal cache_token
        if cache_token is not None:
            current_token = get_cache_token()
            if cache_token != current_token:
                dispatch_cache.clear()
                cache_token = current_token
        try:
            impl = dispatch_cache[cls]
        except KeyError:
            try:
                impl = registry[cls]
            except KeyError:
                impl = _find_impl(cls, registry)
            dispatch_cache[cls] = impl
        return impl

    def _is_valid_dispatch_type(cls):
        return isinstance(cls, type) and not isinstance(cls, GenericAlias)

    def register(cls, func=None):
        """generic_func.register(cls, func) -> func

        Registers a new implementation for the given *cls* on a *generic_func*.

        """
        nonlocal cache_token
        if _is_valid_dispatch_type(cls):
            if func is None:
                return lambda f: register(cls, f)
        else:
            if func is not None:
                raise TypeError(
                    f"Invalid first argument to `register()`. "
                    f"{cls!r} is not a class."
                )
            ann = getattr(cls, '__annotations__', {})
            if not ann:
                raise TypeError(
                    f"Invalid first argument to `register()`: {cls!r}. "
                    f"Use either `@register(some_class)` or plain `@register` "
                    f"on an annotated function."
                )
            func = cls

            # only import typing if annotation parsing is necessary
            from typing import get_type_hints
            argname, cls = next(iter(get_type_hints(func).items()))
            if not _is_valid_dispatch_type(cls):
                raise TypeError(
                    f"Invalid annotation for {argname!r}. "
                    f"{cls!r} is not a class."
                )

        registry[cls] = func
        if cache_token is None and hasattr(cls, '__abstractmethods__'):
            cache_token = get_cache_token()
        dispatch_cache.clear()
        return func

    def wrapper(*args, **kw):
        if not args:
            raise TypeError(f'{funcname} requires at least '
                            '1 positional argument')

        return dispatch(args[0].__class__)(*args, **kw)

    funcname = getattr(func, '__name__', 'singledispatch function')
    registry[object] = func
    wrapper.register = register
    wrapper.dispatch = dispatch
    wrapper.registry = types.MappingProxyType(registry)
    wrapper._clear_cache = dispatch_cache.clear
    update_wrapper(wrapper, func)
    return wrapper


# Descriptor version
class singledispatchmethod:
    """Single-dispatch generic method descriptor.

    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    """

    def __init__(self, func):
        if not callable(func) and not hasattr(func, "__get__"):
            raise TypeError(f"{func!r} is not callable or a descriptor")

        self.dispatcher = singledispatch(func)
        self.func = func

        # bpo-45678: special-casing for classmethod/staticmethod in Python <=3.9,
        # as functools.update_wrapper doesn't work properly in singledispatchmethod.__get__
        # if it is applied to an unbound classmethod/staticmethod
        if isinstance(func, (staticmethod, classmethod)):
            self._wrapped_func = func.__func__
        else:
            self._wrapped_func = func
    def register(self, cls, method=None):
        """generic_method.register(cls, func) -> func

        Registers a new implementation for the given *cls* on a *generic_method*.
        """
        # bpo-39679: in Python <= 3.9, classmethods and staticmethods don't
        # inherit __annotations__ of the wrapped function (fixed in 3.10+ as
        # a side-effect of bpo-43682) but we need that for annotation-derived
        # singledispatches. So we add that just-in-time here.
        if isinstance(cls, (staticmethod, classmethod)):
            cls.__annotations__ = getattr(cls.__func__, '__annotations__', {})
        return self.dispatcher.register(cls, func=method)

    def __get__(self, obj, cls=None):
        def _method(*args, **kwargs):
            method = self.dispatcher.dispatch(args[0].__class__)
            return method.__get__(obj, cls)(*args, **kwargs)

        _method.__isabstractmethod__ = self.__isabstractmethod__
        _method.register = self.register
        update_wrapper(_method, self._wrapped_func)
        return _method

    @property
    def __isabstractmethod__(self):
        return getattr(self.func, '__isabstractmethod__', False)


################################################################################
### cached_property() - computed once per instance, cached as attribute
################################################################################

_NOT_FOUND = object()


class cached_property:
    def __init__(self, func):
        self.func = func
        self.attrname = None
        self.__doc__ = func.__doc__
        self.lock = RLock()

    def __set_name__(self, owner, name):
        if self.attrname is None:
            self.attrname = name
        elif name != self.attrname:
            raise TypeError(
                "Cannot assign the same cached_property to two different names "
                f"({self.attrname!r} and {name!r})."
            )

    def __get__(self, instance, owner=None):
        if instance is None:
            return self
        if self.attrname is None:
            raise TypeError(
                "Cannot use cached_property instance without calling __set_name__ on it.")
        try:
            cache = instance.__dict__
        except AttributeError:  # not all objects have __dict__ (e.g. class defines slots)
            msg = (
                f"No '__dict__' attribute on {type(instance).__name__!r} "
                f"instance to cache {self.attrname!r} property."
            )
            raise TypeError(msg) from None
        val = cache.get(self.attrname, _NOT_FOUND)
        if val is _NOT_FOUND:
            with self.lock:
                # check if another thread filled cache while we awaited lock
                val = cache.get(self.attrname, _NOT_FOUND)
                if val is _NOT_FOUND:
                    val = self.func(instance)
                    try:
                        cache[self.attrname] = val
                    except TypeError:
                        msg = (
                            f"The '__dict__' attribute on {type(instance).__name__!r} instance "
                            f"does not support item assignment for caching {self.attrname!r} property."
                        )
                        raise TypeError(msg) from None
        return val

    __class_getitem__ = classmethod(GenericAlias)


import functools
dir(functools)

import functools


import functools as fn
functs = [fn]

All = [dir(functs.append)]
All[0]

from functools import partial
def power(a, b):
    return a**b
 
# partial functions
pow2 = partial(power, b=2)
pow4 = partial(power, b=4)
power_of_5 = partial(power, 5)
 
print("power(2, 3): ",power(2, 3))
print("pow2(4): ",pow2(4))
print("pow4(3): ",pow4(3))
print("power_of_5(2): ",(power_of_5(2)))
 
print('Function used in partial function pow2: ', pow2.func)
print('Default keywords for pow2: ', pow2.keywords)
print('Default arguments for power_of_5: ', power_of_5.args)

%%writefile utils_image.py
import os
import math
import random
import numpy as np
import torch
import cv2
from torchvision.utils import make_grid
from datetime import datetime
# import torchvision.transforms as transforms
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
os.environ["KMP_DUPLICATE_LIB_OK"]="TRUE"


'''
# --------------------------------------------
# Kai Zhang (github: https://github.com/cszn)
# 03/Mar/2019
# --------------------------------------------
# https://github.com/twhui/SRGAN-pyTorch
# https://github.com/xinntao/BasicSR
# --------------------------------------------
'''


IMG_EXTENSIONS = ['.jpg', '.JPG', '.jpeg', '.JPEG', '.png', '.PNG', '.ppm', '.PPM', '.bmp', '.BMP', '.tif']


def is_image_file(filename):
    return any(filename.endswith(extension) for extension in IMG_EXTENSIONS)


def get_timestamp():
    return datetime.now().strftime('%y%m%d-%H%M%S')


def imshow(x, title=None, cbar=False, figsize=None):
    plt.figure(figsize=figsize)
    plt.imshow(np.squeeze(x), interpolation='nearest', cmap='gray')
    if title:
        plt.title(title)
    if cbar:
        plt.colorbar()
    plt.show()


def surf(Z, cmap='rainbow', figsize=None):
    plt.figure(figsize=figsize)
    ax3 = plt.axes(projection='3d')

    w, h = Z.shape[:2]
    xx = np.arange(0,w,1)
    yy = np.arange(0,h,1)
    X, Y = np.meshgrid(xx, yy)
    ax3.plot_surface(X,Y,Z,cmap=cmap)
    #ax3.contour(X,Y,Z, zdim='z',offset=-2，cmap=cmap)
    plt.show()


'''
# --------------------------------------------
# get image pathes
# --------------------------------------------
'''


def get_image_paths(dataroot):
    paths = None  # return None if dataroot is None
    if dataroot is not None:
        paths = sorted(_get_paths_from_images(dataroot))
    return paths


def _get_paths_from_images(path):
    assert os.path.isdir(path), '{:s} is not a valid directory'.format(path)
    images = []
    for dirpath, _, fnames in sorted(os.walk(path)):
        for fname in sorted(fnames):
            if is_image_file(fname):
                img_path = os.path.join(dirpath, fname)
                images.append(img_path)
    assert images, '{:s} has no valid image file'.format(path)
    return images


'''
# --------------------------------------------
# split large images into small images 
# --------------------------------------------
'''


def patches_from_image(img, p_size=512, p_overlap=64, p_max=800):
    w, h = img.shape[:2]
    patches = []
    if w > p_max and h > p_max:
        w1 = list(np.arange(0, w-p_size, p_size-p_overlap, dtype=np.int))
        h1 = list(np.arange(0, h-p_size, p_size-p_overlap, dtype=np.int))
        w1.append(w-p_size)
        h1.append(h-p_size)
#        print(w1)
#        print(h1)
        for i in w1:
            for j in h1:
                patches.append(img[i:i+p_size, j:j+p_size,:])
    else:
        patches.append(img)

    return patches


def imssave(imgs, img_path):
    """
    imgs: list, N images of size WxHxC
    """
    img_name, ext = os.path.splitext(os.path.basename(img_path))

    for i, img in enumerate(imgs):
        if img.ndim == 3:
            img = img[:, :, [2, 1, 0]]
        new_path = os.path.join(os.path.dirname(img_path), img_name+str('_s{:04d}'.format(i))+'.png')
        cv2.imwrite(new_path, img)


def split_imageset(original_dataroot, taget_dataroot, n_channels=3, p_size=800, p_overlap=96, p_max=1000):
    """
    split the large images from original_dataroot into small overlapped images with size (p_size)x(p_size), 
    and save them into taget_dataroot; only the images with larger size than (p_max)x(p_max)
    will be splitted.

    Args:
        original_dataroot:
        taget_dataroot:
        p_size: size of small images
        p_overlap: patch size in training is a good choice
        p_max: images with smaller size than (p_max)x(p_max) keep unchanged.
    """
    paths = get_image_paths(original_dataroot)
    for img_path in paths:
        # img_name, ext = os.path.splitext(os.path.basename(img_path))
        img = imread_uint(img_path, n_channels=n_channels)
        patches = patches_from_image(img, p_size, p_overlap, p_max)
        imssave(patches, os.path.join(taget_dataroot,os.path.basename(img_path)))
        #if original_dataroot == taget_dataroot:
        #del img_path

'''
# --------------------------------------------
# makedir
# --------------------------------------------
'''


def mkdir(path):
    if not os.path.exists(path):
        os.makedirs(path)


def mkdirs(paths):
    if isinstance(paths, str):
        mkdir(paths)
    else:
        for path in paths:
            mkdir(path)


def mkdir_and_rename(path):
    if os.path.exists(path):
        new_name = path + '_archived_' + get_timestamp()
        print('Path already exists. Rename it to [{:s}]'.format(new_name))
        os.rename(path, new_name)
    os.makedirs(path)


'''
# --------------------------------------------
# read image from path
# opencv is fast, but read BGR numpy image
# --------------------------------------------
'''


# --------------------------------------------
# get uint8 image of size HxWxn_channles (RGB)
# --------------------------------------------
def imread_uint(path, n_channels=3):
    #  input: path
    # output: HxWx3(RGB or GGG), or HxWx1 (G)
    if n_channels == 1:
        img = cv2.imread(path, 0)  # cv2.IMREAD_GRAYSCALE
        img = np.expand_dims(img, axis=2)  # HxWx1
    elif n_channels == 3:
        img = cv2.imread(path, cv2.IMREAD_UNCHANGED)  # BGR or G
        if img.ndim == 2:
            img = cv2.cvtColor(img, cv2.COLOR_GRAY2RGB)  # GGG
        else:
            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # RGB
    return img


# --------------------------------------------
# matlab's imwrite
# --------------------------------------------
def imsave(img, img_path):
    img = np.squeeze(img)
    if img.ndim == 3:
        img = img[:, :, [2, 1, 0]]
    cv2.imwrite(img_path, img)

def imwrite(img, img_path):
    img = np.squeeze(img)
    if img.ndim == 3:
        img = img[:, :, [2, 1, 0]]
    cv2.imwrite(img_path, img)



# --------------------------------------------
# get single image of size HxWxn_channles (BGR)
# --------------------------------------------
def read_img(path):
    # read image by cv2
    # return: Numpy float32, HWC, BGR, [0,1]
    img = cv2.imread(path, cv2.IMREAD_UNCHANGED)  # cv2.IMREAD_GRAYSCALE
    img = img.astype(np.float32) / 255.
    if img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    # some images have 4 channels
    if img.shape[2] > 3:
        img = img[:, :, :3]
    return img


'''
# --------------------------------------------
# image format conversion
# --------------------------------------------
# numpy(single) <--->  numpy(unit)
# numpy(single) <--->  tensor
# numpy(unit)   <--->  tensor
# --------------------------------------------
'''


# --------------------------------------------
# numpy(single) [0, 1] <--->  numpy(unit)
# --------------------------------------------


def uint2single(img):

    return np.float32(img/255.)


def single2uint(img):

    return np.uint8((img.clip(0, 1)*255.).round())


def uint162single(img):

    return np.float32(img/65535.)


def single2uint16(img):

    return np.uint16((img.clip(0, 1)*65535.).round())


# --------------------------------------------
# numpy(unit) (HxWxC or HxW) <--->  tensor
# --------------------------------------------


# convert uint to 4-dimensional torch tensor
def uint2tensor4(img):
    if img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float().div(255.).unsqueeze(0)


# convert uint to 3-dimensional torch tensor
def uint2tensor3(img):
    if img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float().div(255.)


# convert 2/3/4-dimensional torch tensor to uint
def tensor2uint(img):
    img = img.data.squeeze().float().clamp_(0, 1).cpu().numpy()
    if img.ndim == 3:
        img = np.transpose(img, (1, 2, 0))
    return np.uint8((img*255.0).round())


# --------------------------------------------
# numpy(single) (HxWxC) <--->  tensor
# --------------------------------------------


# convert single (HxWxC) to 3-dimensional torch tensor
def single2tensor3(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float()


# convert single (HxWxC) to 4-dimensional torch tensor
def single2tensor4(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float().unsqueeze(0)


# convert torch tensor to single
def tensor2single(img):
    img = img.data.squeeze().float().cpu().numpy()
    if img.ndim == 3:
        img = np.transpose(img, (1, 2, 0))

    return img

# convert torch tensor to single
def tensor2single3(img):
    img = img.data.squeeze().float().cpu().numpy()
    if img.ndim == 3:
        img = np.transpose(img, (1, 2, 0))
    elif img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    return img


def single2tensor5(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1, 3).float().unsqueeze(0)


def single32tensor5(img):
    return torch.from_numpy(np.ascontiguousarray(img)).float().unsqueeze(0).unsqueeze(0)


def single42tensor4(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1, 3).float()


# from skimage.io import imread, imsave
def tensor2img(tensor, out_type=np.uint8, min_max=(0, 1)):
    '''
    Converts a torch Tensor into an image Numpy array of BGR channel order
    Input: 4D(B,(3/1),H,W), 3D(C,H,W), or 2D(H,W), any range, RGB channel order
    Output: 3D(H,W,C) or 2D(H,W), [0,255], np.uint8 (default)
    '''
    tensor = tensor.squeeze().float().cpu().clamp_(*min_max)  # squeeze first, then clamp
    tensor = (tensor - min_max[0]) / (min_max[1] - min_max[0])  # to range [0,1]
    n_dim = tensor.dim()
    if n_dim == 4:
        n_img = len(tensor)
        img_np = make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False).numpy()
        img_np = np.transpose(img_np[[2, 1, 0], :, :], (1, 2, 0))  # HWC, BGR
    elif n_dim == 3:
        img_np = tensor.numpy()
        img_np = np.transpose(img_np[[2, 1, 0], :, :], (1, 2, 0))  # HWC, BGR
    elif n_dim == 2:
        img_np = tensor.numpy()
    else:
        raise TypeError(
            'Only support 4D, 3D and 2D tensor. But received with dimension: {:d}'.format(n_dim))
    if out_type == np.uint8:
        img_np = (img_np * 255.0).round()
        # Important. Unlike matlab, numpy.unit8() WILL NOT round by default.
    return img_np.astype(out_type)


'''
# --------------------------------------------
# Augmentation, flipe and/or rotate
# --------------------------------------------
# The following two are enough.
# (1) augmet_img: numpy image of WxHxC or WxH
# (2) augment_img_tensor4: tensor image 1xCxWxH
# --------------------------------------------
'''


def augment_img(img, mode=0):
    '''Kai Zhang (github: https://github.com/cszn)
    '''
    if mode == 0:
        return img
    elif mode == 1:
        return np.flipud(np.rot90(img))
    elif mode == 2:
        return np.flipud(img)
    elif mode == 3:
        return np.rot90(img, k=3)
    elif mode == 4:
        return np.flipud(np.rot90(img, k=2))
    elif mode == 5:
        return np.rot90(img)
    elif mode == 6:
        return np.rot90(img, k=2)
    elif mode == 7:
        return np.flipud(np.rot90(img, k=3))


def augment_img_tensor4(img, mode=0):
    '''Kai Zhang (github: https://github.com/cszn)
    '''
    if mode == 0:
        return img
    elif mode == 1:
        return img.rot90(1, [2, 3]).flip([2])
    elif mode == 2:
        return img.flip([2])
    elif mode == 3:
        return img.rot90(3, [2, 3])
    elif mode == 4:
        return img.rot90(2, [2, 3]).flip([2])
    elif mode == 5:
        return img.rot90(1, [2, 3])
    elif mode == 6:
        return img.rot90(2, [2, 3])
    elif mode == 7:
        return img.rot90(3, [2, 3]).flip([2])


def augment_img_tensor(img, mode=0):
    '''Kai Zhang (github: https://github.com/cszn)
    '''
    img_size = img.size()
    img_np = img.data.cpu().numpy()
    if len(img_size) == 3:
        img_np = np.transpose(img_np, (1, 2, 0))
    elif len(img_size) == 4:
        img_np = np.transpose(img_np, (2, 3, 1, 0))
    img_np = augment_img(img_np, mode=mode)
    img_tensor = torch.from_numpy(np.ascontiguousarray(img_np))
    if len(img_size) == 3:
        img_tensor = img_tensor.permute(2, 0, 1)
    elif len(img_size) == 4:
        img_tensor = img_tensor.permute(3, 2, 0, 1)

    return img_tensor.type_as(img)


def augment_img_np3(img, mode=0):
    if mode == 0:
        return img
    elif mode == 1:
        return img.transpose(1, 0, 2)
    elif mode == 2:
        return img[::-1, :, :]
    elif mode == 3:
        img = img[::-1, :, :]
        img = img.transpose(1, 0, 2)
        return img
    elif mode == 4:
        return img[:, ::-1, :]
    elif mode == 5:
        img = img[:, ::-1, :]
        img = img.transpose(1, 0, 2)
        return img
    elif mode == 6:
        img = img[:, ::-1, :]
        img = img[::-1, :, :]
        return img
    elif mode == 7:
        img = img[:, ::-1, :]
        img = img[::-1, :, :]
        img = img.transpose(1, 0, 2)
        return img


def augment_imgs(img_list, hflip=True, rot=True):
    # horizontal flip OR rotate
    hflip = hflip and random.random() < 0.5
    vflip = rot and random.random() < 0.5
    rot90 = rot and random.random() < 0.5

    def _augment(img):
        if hflip:
            img = img[:, ::-1, :]
        if vflip:
            img = img[::-1, :, :]
        if rot90:
            img = img.transpose(1, 0, 2)
        return img

    return [_augment(img) for img in img_list]


'''
# --------------------------------------------
# modcrop and shave
# --------------------------------------------
'''


def modcrop(img_in, scale):
    # img_in: Numpy, HWC or HW
    img = np.copy(img_in)
    if img.ndim == 2:
        H, W = img.shape
        H_r, W_r = H % scale, W % scale
        img = img[:H - H_r, :W - W_r]
    elif img.ndim == 3:
        H, W, C = img.shape
        H_r, W_r = H % scale, W % scale
        img = img[:H - H_r, :W - W_r, :]
    else:
        raise ValueError('Wrong img ndim: [{:d}].'.format(img.ndim))
    return img


def shave(img_in, border=0):
    # img_in: Numpy, HWC or HW
    img = np.copy(img_in)
    h, w = img.shape[:2]
    img = img[border:h-border, border:w-border]
    return img


'''
# --------------------------------------------
# image processing process on numpy image
# channel_convert(in_c, tar_type, img_list):
# rgb2ycbcr(img, only_y=True):
# bgr2ycbcr(img, only_y=True):
# ycbcr2rgb(img):
# --------------------------------------------
'''


def rgb2ycbcr(img, only_y=True):
    '''same as matlab rgb2ycbcr
    only_y: only return Y channel
    Input:
        uint8, [0, 255]
        float, [0, 1]
    '''
    in_img_type = img.dtype
    img.astype(np.float32)
    if in_img_type != np.uint8:
        img *= 255.
    # convert
    if only_y:
        rlt = np.dot(img, [65.481, 128.553, 24.966]) / 255.0 + 16.0
    else:
        rlt = np.matmul(img, [[65.481, -37.797, 112.0], [128.553, -74.203, -93.786],
                              [24.966, 112.0, -18.214]]) / 255.0 + [16, 128, 128]
    if in_img_type == np.uint8:
        rlt = rlt.round()
    else:
        rlt /= 255.
    return rlt.astype(in_img_type)


def ycbcr2rgb(img):
    '''same as matlab ycbcr2rgb
    Input:
        uint8, [0, 255]
        float, [0, 1]
    '''
    in_img_type = img.dtype
    img.astype(np.float32)
    if in_img_type != np.uint8:
        img *= 255.
    # convert
    rlt = np.matmul(img, [[0.00456621, 0.00456621, 0.00456621], [0, -0.00153632, 0.00791071],
                          [0.00625893, -0.00318811, 0]]) * 255.0 + [-222.921, 135.576, -276.836]
    if in_img_type == np.uint8:
        rlt = rlt.round()
    else:
        rlt /= 255.
    return rlt.astype(in_img_type)


def bgr2ycbcr(img, only_y=True):
    '''bgr version of rgb2ycbcr
    only_y: only return Y channel
    Input:
        uint8, [0, 255]
        float, [0, 1]
    '''
    in_img_type = img.dtype
    img.astype(np.float32)
    if in_img_type != np.uint8:
        img *= 255.
    # convert
    if only_y:
        rlt = np.dot(img, [24.966, 128.553, 65.481]) / 255.0 + 16.0
    else:
        rlt = np.matmul(img, [[24.966, 112.0, -18.214], [128.553, -74.203, -93.786],
                              [65.481, -37.797, 112.0]]) / 255.0 + [16, 128, 128]
    if in_img_type == np.uint8:
        rlt = rlt.round()
    else:
        rlt /= 255.
    return rlt.astype(in_img_type)


def channel_convert(in_c, tar_type, img_list):
    # conversion among BGR, gray and y
    if in_c == 3 and tar_type == 'gray':  # BGR to gray
        gray_list = [cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) for img in img_list]
        return [np.expand_dims(img, axis=2) for img in gray_list]
    elif in_c == 3 and tar_type == 'y':  # BGR to y
        y_list = [bgr2ycbcr(img, only_y=True) for img in img_list]
        return [np.expand_dims(img, axis=2) for img in y_list]
    elif in_c == 1 and tar_type == 'RGB':  # gray/y to BGR
        return [cv2.cvtColor(img, cv2.COLOR_GRAY2BGR) for img in img_list]
    else:
        return img_list


'''
# --------------------------------------------
# metric, PSNR and SSIM
# --------------------------------------------
'''


# --------------------------------------------
# PSNR
# --------------------------------------------
def calculate_psnr(img1, img2, border=0):
    # img1 and img2 have range [0, 255]
    #img1 = img1.squeeze()
    #img2 = img2.squeeze()
    if not img1.shape == img2.shape:
        raise ValueError('Input images must have the same dimensions.')
    h, w = img1.shape[:2]
    img1 = img1[border:h-border, border:w-border]
    img2 = img2[border:h-border, border:w-border]

    img1 = img1.astype(np.float64)
    img2 = img2.astype(np.float64)
    mse = np.mean((img1 - img2)**2)
    if mse == 0:
        return float('inf')
    return 20 * math.log10(255.0 / math.sqrt(mse))


# --------------------------------------------
# SSIM
# --------------------------------------------
def calculate_ssim(img1, img2, border=0):
    '''calculate SSIM
    the same outputs as MATLAB's
    img1, img2: [0, 255]
    '''
    #img1 = img1.squeeze()
    #img2 = img2.squeeze()
    if not img1.shape == img2.shape:
        raise ValueError('Input images must have the same dimensions.')
    h, w = img1.shape[:2]
    img1 = img1[border:h-border, border:w-border]
    img2 = img2[border:h-border, border:w-border]

    if img1.ndim == 2:
        return ssim(img1, img2)
    elif img1.ndim == 3:
        if img1.shape[2] == 3:
            ssims = []
            for i in range(3):
                ssims.append(ssim(img1[:,:,i], img2[:,:,i]))
            return np.array(ssims).mean()
        elif img1.shape[2] == 1:
            return ssim(np.squeeze(img1), np.squeeze(img2))
    else:
        raise ValueError('Wrong input image dimensions.')


def ssim(img1, img2):
    C1 = (0.01 * 255)**2
    C2 = (0.03 * 255)**2

    img1 = img1.astype(np.float64)
    img2 = img2.astype(np.float64)
    kernel = cv2.getGaussianKernel(11, 1.5)
    window = np.outer(kernel, kernel.transpose())

    mu1 = cv2.filter2D(img1, -1, window)[5:-5, 5:-5]  # valid
    mu2 = cv2.filter2D(img2, -1, window)[5:-5, 5:-5]
    mu1_sq = mu1**2
    mu2_sq = mu2**2
    mu1_mu2 = mu1 * mu2
    sigma1_sq = cv2.filter2D(img1**2, -1, window)[5:-5, 5:-5] - mu1_sq
    sigma2_sq = cv2.filter2D(img2**2, -1, window)[5:-5, 5:-5] - mu2_sq
    sigma12 = cv2.filter2D(img1 * img2, -1, window)[5:-5, 5:-5] - mu1_mu2

    ssim_map = ((2 * mu1_mu2 + C1) * (2 * sigma12 + C2)) / ((mu1_sq + mu2_sq + C1) *
                                                            (sigma1_sq + sigma2_sq + C2))
    return ssim_map.mean()


'''
# --------------------------------------------
# matlab's bicubic imresize (numpy and torch) [0, 1]
# --------------------------------------------
'''


# matlab 'imresize' function, now only support 'bicubic'
def cubic(x):
    absx = torch.abs(x)
    absx2 = absx**2
    absx3 = absx**3
    return (1.5*absx3 - 2.5*absx2 + 1) * ((absx <= 1).type_as(absx)) + \
        (-0.5*absx3 + 2.5*absx2 - 4*absx + 2) * (((absx > 1)*(absx <= 2)).type_as(absx))


def calculate_weights_indices(in_length, out_length, scale, kernel, kernel_width, antialiasing):
    if (scale < 1) and (antialiasing):
        # Use a modified kernel to simultaneously interpolate and antialias- larger kernel width
        kernel_width = kernel_width / scale

    # Output-space coordinates
    x = torch.linspace(1, out_length, out_length)

    # Input-space coordinates. Calculate the inverse mapping such that 0.5
    # in output space maps to 0.5 in input space, and 0.5+scale in output
    # space maps to 1.5 in input space.
    u = x / scale + 0.5 * (1 - 1 / scale)

    # What is the left-most pixel that can be involved in the computation?
    left = torch.floor(u - kernel_width / 2)

    # What is the maximum number of pixels that can be involved in the
    # computation?  Note: it's OK to use an extra pixel here; if the
    # corresponding weights are all zero, it will be eliminated at the end
    # of this function.
    P = math.ceil(kernel_width) + 2

    # The indices of the input pixels involved in computing the k-th output
    # pixel are in row k of the indices matrix.
    indices = left.view(out_length, 1).expand(out_length, P) + torch.linspace(0, P - 1, P).view(
        1, P).expand(out_length, P)

    # The weights used to compute the k-th output pixel are in row k of the
    # weights matrix.
    distance_to_center = u.view(out_length, 1).expand(out_length, P) - indices
    # apply cubic kernel
    if (scale < 1) and (antialiasing):
        weights = scale * cubic(distance_to_center * scale)
    else:
        weights = cubic(distance_to_center)
    # Normalize the weights matrix so that each row sums to 1.
    weights_sum = torch.sum(weights, 1).view(out_length, 1)
    weights = weights / weights_sum.expand(out_length, P)

    # If a column in weights is all zero, get rid of it. only consider the first and last column.
    weights_zero_tmp = torch.sum((weights == 0), 0)
    if not math.isclose(weights_zero_tmp[0], 0, rel_tol=1e-6):
        indices = indices.narrow(1, 1, P - 2)
        weights = weights.narrow(1, 1, P - 2)
    if not math.isclose(weights_zero_tmp[-1], 0, rel_tol=1e-6):
        indices = indices.narrow(1, 0, P - 2)
        weights = weights.narrow(1, 0, P - 2)
    weights = weights.contiguous()
    indices = indices.contiguous()
    sym_len_s = -indices.min() + 1
    sym_len_e = indices.max() - in_length
    indices = indices + sym_len_s - 1
    return weights, indices, int(sym_len_s), int(sym_len_e)


# --------------------------------------------
# imresize for tensor image [0, 1]
# --------------------------------------------
def imresize(img, scale, antialiasing=True):
    # Now the scale should be the same for H and W
    # input: img: pytorch tensor, CHW or HW [0,1]
    # output: CHW or HW [0,1] w/o round
    need_squeeze = True if img.dim() == 2 else False
    if need_squeeze:
        img.unsqueeze_(0)
    in_C, in_H, in_W = img.size()
    out_C, out_H, out_W = in_C, math.ceil(in_H * scale), math.ceil(in_W * scale)
    kernel_width = 4
    kernel = 'cubic'

    # Return the desired dimension order for performing the resize.  The
    # strategy is to perform the resize first along the dimension with the
    # smallest scale factor.
    # Now we do not support this.

    # get weights and indices
    weights_H, indices_H, sym_len_Hs, sym_len_He = calculate_weights_indices(
        in_H, out_H, scale, kernel, kernel_width, antialiasing)
    weights_W, indices_W, sym_len_Ws, sym_len_We = calculate_weights_indices(
        in_W, out_W, scale, kernel, kernel_width, antialiasing)
    # process H dimension
    # symmetric copying
    img_aug = torch.FloatTensor(in_C, in_H + sym_len_Hs + sym_len_He, in_W)
    img_aug.narrow(1, sym_len_Hs, in_H).copy_(img)

    sym_patch = img[:, :sym_len_Hs, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    img_aug.narrow(1, 0, sym_len_Hs).copy_(sym_patch_inv)

    sym_patch = img[:, -sym_len_He:, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    img_aug.narrow(1, sym_len_Hs + in_H, sym_len_He).copy_(sym_patch_inv)

    out_1 = torch.FloatTensor(in_C, out_H, in_W)
    kernel_width = weights_H.size(1)
    for i in range(out_H):
        idx = int(indices_H[i][0])
        for j in range(out_C):
            out_1[j, i, :] = img_aug[j, idx:idx + kernel_width, :].transpose(0, 1).mv(weights_H[i])

    # process W dimension
    # symmetric copying
    out_1_aug = torch.FloatTensor(in_C, out_H, in_W + sym_len_Ws + sym_len_We)
    out_1_aug.narrow(2, sym_len_Ws, in_W).copy_(out_1)

    sym_patch = out_1[:, :, :sym_len_Ws]
    inv_idx = torch.arange(sym_patch.size(2) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(2, inv_idx)
    out_1_aug.narrow(2, 0, sym_len_Ws).copy_(sym_patch_inv)

    sym_patch = out_1[:, :, -sym_len_We:]
    inv_idx = torch.arange(sym_patch.size(2) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(2, inv_idx)
    out_1_aug.narrow(2, sym_len_Ws + in_W, sym_len_We).copy_(sym_patch_inv)

    out_2 = torch.FloatTensor(in_C, out_H, out_W)
    kernel_width = weights_W.size(1)
    for i in range(out_W):
        idx = int(indices_W[i][0])
        for j in range(out_C):
            out_2[j, :, i] = out_1_aug[j, :, idx:idx + kernel_width].mv(weights_W[i])
    if need_squeeze:
        out_2.squeeze_()
    return out_2


# --------------------------------------------
# imresize for numpy image [0, 1]
# --------------------------------------------
def imresize_np(img, scale, antialiasing=True):
    # Now the scale should be the same for H and W
    # input: img: Numpy, HWC or HW [0,1]
    # output: HWC or HW [0,1] w/o round
    img = torch.from_numpy(img)
    need_squeeze = True if img.dim() == 2 else False
    if need_squeeze:
        img.unsqueeze_(2)

    in_H, in_W, in_C = img.size()
    out_C, out_H, out_W = in_C, math.ceil(in_H * scale), math.ceil(in_W * scale)
    kernel_width = 4
    kernel = 'cubic'

    # Return the desired dimension order for performing the resize.  The
    # strategy is to perform the resize first along the dimension with the
    # smallest scale factor.
    # Now we do not support this.

    # get weights and indices
    weights_H, indices_H, sym_len_Hs, sym_len_He = calculate_weights_indices(
        in_H, out_H, scale, kernel, kernel_width, antialiasing)
    weights_W, indices_W, sym_len_Ws, sym_len_We = calculate_weights_indices(
        in_W, out_W, scale, kernel, kernel_width, antialiasing)
    # process H dimension
    # symmetric copying
    img_aug = torch.FloatTensor(in_H + sym_len_Hs + sym_len_He, in_W, in_C)
    img_aug.narrow(0, sym_len_Hs, in_H).copy_(img)

    sym_patch = img[:sym_len_Hs, :, :]
    inv_idx = torch.arange(sym_patch.size(0) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(0, inv_idx)
    img_aug.narrow(0, 0, sym_len_Hs).copy_(sym_patch_inv)

    sym_patch = img[-sym_len_He:, :, :]
    inv_idx = torch.arange(sym_patch.size(0) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(0, inv_idx)
    img_aug.narrow(0, sym_len_Hs + in_H, sym_len_He).copy_(sym_patch_inv)

    out_1 = torch.FloatTensor(out_H, in_W, in_C)
    kernel_width = weights_H.size(1)
    for i in range(out_H):
        idx = int(indices_H[i][0])
        for j in range(out_C):
            out_1[i, :, j] = img_aug[idx:idx + kernel_width, :, j].transpose(0, 1).mv(weights_H[i])

    # process W dimension
    # symmetric copying
    out_1_aug = torch.FloatTensor(out_H, in_W + sym_len_Ws + sym_len_We, in_C)
    out_1_aug.narrow(1, sym_len_Ws, in_W).copy_(out_1)

    sym_patch = out_1[:, :sym_len_Ws, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    out_1_aug.narrow(1, 0, sym_len_Ws).copy_(sym_patch_inv)

    sym_patch = out_1[:, -sym_len_We:, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    out_1_aug.narrow(1, sym_len_Ws + in_W, sym_len_We).copy_(sym_patch_inv)

    out_2 = torch.FloatTensor(out_H, out_W, in_C)
    kernel_width = weights_W.size(1)
    for i in range(out_W):
        idx = int(indices_W[i][0])
        for j in range(out_C):
            out_2[:, i, j] = out_1_aug[:, idx:idx + kernel_width, j].mv(weights_W[i])
    if need_squeeze:
        out_2.squeeze_()

    return out_2.numpy()


if __name__ == '__main__':
    print('---')
#    img = imread_uint('test.bmp', 3)
#    img = uint2single(img)
#    img_bicubic = imresize_np(img, 1/4)



    
    
    
    
    



!ls /mnt/HDD500/model_zoo

!mv testsets/RealSRSet/1st.jpg junk

!ls model_zoo

import os.path
import logging
import torch
from python_utils.logger import Logged
import python_utils.logger
import python_utils
sys.path.append('/home/jack/Desktop/BSRGAN')
sys.path.append("/home/jack/hidden/utils.py")
#from utils import utils_logger
#from utils import utils_image as util
#from utils import utils_model
#from models.network_rrdbnet import RRDBNet as net
from logger_settings import *
import sys
sys.path.append("/mnt/HDD500/")
from model_zoo.ModelList import MODEL
data = MODEL()[3]
print(data)
MODELlist = []
model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG','BSRGANx2']
cnt = -1
for model_ in MODEL():
    cnt = cnt +1
    for model_name in model_names:
        if model_name in model_:
            print(model_name,"MODEL("+str(cnt)+")", MODEL()[cnt])
            MODELlist.append(MODEL()[cnt])

!ls /mnt/HDD500/model_zoo/RealSR_JPEG.pth

!ls /media/HDD500/model_zoo/models/BSRGANx2.pth

import os.path
import logging
import torch
import sys
import os
import os.path
import logging
import torch
from python_utils.logger import Logged
import python_utils.logger
import python_utils
sys.path.append('/home/jack/Desktop/BSRGAN')
sys.path.append("/home/jack/hidden/utils.py")
#from utils import utils_logger
#from utils import utils_image as util
#from utils import utils_model
#from models.network_rrdbnet import RRDBNet as net
from logger_settings import *
import sys
sys.path.append("/mnt/HDD500/")
from model_zoo.ModelList import MODEL
data = MODEL()[3]
print(data)
MODELlist = []
model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG','BSRGANx2']
cnt = -1
for model_ in MODEL():
    cnt = cnt +1
    for model_name in model_names:
        if model_name in model_:
            print(model_name,"MODEL("+str(cnt)+")", MODEL()[cnt])
            MODELlist.append(MODEL()[cnt])



sys.path.append('/home/jack/Desktop/BSRGAN')
#from utils import utils_image
import utils_image
#sys.path.remove('/home/jack/hidden')
#sys.path
from python_utils.logger import Logged
import python_utils.logger
#import python_utils
#from utils import utils_logger
#from utils import utils_image as util
# from utils import utils_model
from models.network_rrdbnet import RRDBNet as net


"""
Spyder (Python 3.6-3.7)
PyTorch 1.4.0-1.8.1
Windows 10 or Linux
Kai Zhang (cskaizhang@gmail.com)
github: https://github.com/cszn/BSRGAN
        https://github.com/cszn/KAIR
If you have any question, please feel free to contact with me.
Kai Zhang (e-mail: cskaizhang@gmail.com)
by Kai Zhang ( March/2020 --> March/2021 --> )
This work was previously submitted to CVPR2021.

# --------------------------------------------
@inproceedings{zhang2021designing,
  title={Designing a Practical Degradation Model for Deep Blind Image Super-Resolution},
  author={Zhang, Kai and Liang, Jingyun and Van Gool, Luc and Timofte, Radu},
  booktitle={arxiv},
  year={2021}
}
# --------------------------------------------

"""


def main():

    #utils_logger.logger_info('blind_sr_log', log_path='blind_sr_log.log')
    Logged.info('blind_sr_log', log_path='blind_sr_log.log')
    #python_utils.logger('blind_sr_log', log_path='blind_sr_log.log')
    #logger = logging.getLogger('blind_sr_log')

#    print(torch.__version__)               # pytorch version
#    print(torch.version.cuda)              # cuda version
#    print(torch.backends.cudnn.version())  # cudnn version

    testsets = 'testsets'       # fixed, set path of testsets
    testset_Ls = ['RealSRSet']  # ['RealSRSet','DPED']

    #model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG','BSRGANx2']
    #model_names = ['BSRGANx2']    # 'BSRGANx2' for scale factor 2



    save_results = True
    sf = 4
    device = torch.device('cpu')# if torch.cuda.is_available() else 'cpu')

    for model_path in MODELlist:
        if model_path == MODEL()[3]:
            sf = 2
        else:
            sf=4
            print(model_path)
        #model_path = os.path.join('model_zoo', model_name+'.pth')          # set model path
        Logged.logger.info('{:>16s} : {:s}'.format('Model Name', model_name))

        # torch.cuda.set_device(0)      # set GPU ID
        #Logged.logger.info('{:>16s} : {:<d}'.format('GPU ID', torch.cuda.current_device()))
        #torch.cuda.empty_cache()

        # --------------------------------
        # define network and load model
        # --------------------------------
        model = net(in_nc=3, out_nc=3, nf=64, nb=23, gc=32, sf=sf)  # define network

#            model_old = torch.load(model_path)
#            state_dict = model.state_dict()
#            for ((key, param),(key2, param2)) in zip(model_old.items(), state_dict.items()):
#                state_dict[key2] = param
#            model.load_state_dict(state_dict, strict=True)
        print(model_path)
        suf =model_path[22:][:4]
        print ("SUF: ",suf)
        model.load_state_dict(torch.load(model_path), strict=True)
        model.eval()
        for k, v in model.named_parameters():
            v.requires_grad = False
        model = model.to(device)
        torch.cuda.empty_cache()

        for testset_L in testset_Ls:

            L_path = os.path.join(testsets, testset_L)
            #E_path = os.path.join(testsets, testset_L+'_'+model_name)
            E_path = os.path.join(testsets, testset_L+'_results_x'+str(sf))
            try:
                os.makedirs(E_path)
            except FileExistsError:
                # directory already exists
                pass
 
            Logged.logger.info('{:>16s} : {:s}'.format('Input Path', L_path))
            Logged.logger.info('{:>16s} : {:s}'.format('Output Path', E_path))
            idx = 0

            for img in utils_image.get_image_paths(L_path):

                # --------------------------------
                # (1) img_L
                # --------------------------------
                idx += 1
                img_name, ext = os.path.splitext(os.path.basename(img))
                Logged.logger.info('{:->4d} --> {:<s} --> x{:<d}--> {:<s}'.format(idx, model_name, sf, img_name+ext))

                img_L = utils_image.imread_uint(img, n_channels=3)
                img_L = utils_image.uint2tensor4(img_L)
                img_L = img_L.to(device)

                # --------------------------------
                # (2) inference
                # --------------------------------
                img_E = model(img_L)

                # --------------------------------
                # (3) img_E
                # --------------------------------
                img_E = utils_image.tensor2uint(img_E)
                imagenumber = 0
                if save_results:
                    imagenumber =imagenumber +1
                    number = str(imagenumber)
                    utils_image.imsave(img_E, os.path.join(E_path, img_name+suf+'_'+number+'_.png'))
                    print(os.path.join(E_path, img_name+suf+'_'+number+'_.png'))


if __name__ == '__main__':

    main()


import os.path
import logging
import torch
import sys
import os
sys.path.append('/home/jack/Desktop/BSRGAN')
#from utils import utils_image
import utils_image
#sys.path.remove('/home/jack/hidden')
#sys.path
from python_utils.logger import Logged
import python_utils.logger
#import python_utils
#from utils import utils_logger
#from utils import utils_image as util
# from utils import utils_model
from models.network_rrdbnet import RRDBNet as net


"""
Spyder (Python 3.6-3.7)
PyTorch 1.4.0-1.8.1
Windows 10 or Linux
Kai Zhang (cskaizhang@gmail.com)
github: https://github.com/cszn/BSRGAN
        https://github.com/cszn/KAIR
If you have any question, please feel free to contact with me.
Kai Zhang (e-mail: cskaizhang@gmail.com)
by Kai Zhang ( March/2020 --> March/2021 --> )
This work was previously submitted to CVPR2021.

# --------------------------------------------
@inproceedings{zhang2021designing,
  title={Designing a Practical Degradation Model for Deep Blind Image Super-Resolution},
  author={Zhang, Kai and Liang, Jingyun and Van Gool, Luc and Timofte, Radu},
  booktitle={arxiv},
  year={2021}
}
# --------------------------------------------

"""


def main():

    #utils_logger.logger_info('blind_sr_log', log_path='blind_sr_log.log')
    Logged.info('blind_sr_log', log_path='blind_sr_log.log')
    #python_utils.logger('blind_sr_log', log_path='blind_sr_log.log')
    #logger = logging.getLogger('blind_sr_log')

#    print(torch.__version__)               # pytorch version
#    print(torch.version.cuda)              # cuda version
#    print(torch.backends.cudnn.version())  # cudnn version

    testsets = 'testsets'       # fixed, set path of testsets
    testset_Ls = ['RealSRSet']  # ['RealSRSet','DPED']

    #model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG','BSRGANx2']
    #model_names = ['BSRGANx2']    # 'BSRGANx2' for scale factor 2



    save_results = True
    sf = 4
    device = torch.device('cpu')# if torch.cuda.is_available() else 'cpu')

    for model_path in MODELlist:
        if model_path == MODEL()[3]:
            sf = 2
        else:
            sf=4
            print(model_path)
        #model_path = os.path.join('model_zoo', model_name+'.pth')          # set model path
        Logged.logger.info('{:>16s} : {:s}'.format('Model Name', model_name))

        # torch.cuda.set_device(0)      # set GPU ID
        #Logged.logger.info('{:>16s} : {:<d}'.format('GPU ID', torch.cuda.current_device()))
        #torch.cuda.empty_cache()

        # --------------------------------
        # define network and load model
        # --------------------------------
        model = net(in_nc=3, out_nc=3, nf=64, nb=23, gc=32, sf=sf)  # define network

#            model_old = torch.load(model_path)
#            state_dict = model.state_dict()
#            for ((key, param),(key2, param2)) in zip(model_old.items(), state_dict.items()):
#                state_dict[key2] = param
#            model.load_state_dict(state_dict, strict=True)
        print(model_path)
        suf =model_path[29:][:6]
        print ("SUF: ",suf)
        model.load_state_dict(torch.load(model_path), strict=True)
        model.eval()
        for k, v in model.named_parameters():
            v.requires_grad = False
        model = model.to(device)
        torch.cuda.empty_cache()

        for testset_L in testset_Ls:

            L_path = os.path.join(testsets, testset_L)
            #E_path = os.path.join(testsets, testset_L+'_'+model_name)
            E_path = os.path.join(testsets, testset_L+'_results_x'+str(sf))
            try:
                os.makedirs(E_path)
            except FileExistsError:
                # directory already exists
                pass
 
            Logged.logger.info('{:>16s} : {:s}'.format('Input Path', L_path))
            Logged.logger.info('{:>16s} : {:s}'.format('Output Path', E_path))
            idx = 0

            for img in utils_image.get_image_paths(L_path):

                # --------------------------------
                # (1) img_L
                # --------------------------------
                idx += 1
                img_name, ext = os.path.splitext(os.path.basename(img))
                Logged.logger.info('{:->4d} --> {:<s} --> x{:<d}--> {:<s}'.format(idx, model_name, sf, img_name+ext))

                img_L = utils_image.imread_uint(img, n_channels=3)
                img_L = utils_image.uint2tensor4(img_L)
                img_L = img_L.to(device)

                # --------------------------------
                # (2) inference
                # --------------------------------
                img_E = model(img_L)

                # --------------------------------
                # (3) img_E
                # --------------------------------
                img_E = utils_image.tensor2uint(img_E)
                imagenumber = 0
                if save_results:
                    imagenumber =imagenumber +1
                    number = str(imagenumber)
                    utils_image.imsave(img_E, os.path.join(E_path, img_name+suf+'_'+number+'_.png'))
                    print(os.path.join(E_path, img_name+suf+'_'+number+'_.png'))


if __name__ == '__main__':

    main()


data = "/media/jack/HDD500/model_zoo/ESRGAN.pth"

print(data[29:][:6])



import sys
sys.path.append('/home/jack/Desktop/BSRGAN')
sys.path
#['', ..., '/home/sergey']
sys.path.remove('/home/jack/hidden')
#sys.path

import sys
sys.path.append("/media/jack/HDD500/")
from model_zoo.ModelList import MODEL
data = MODEL()[3]
print(data)
>>> /media/jack/HDD500/model_zoo/BSRGANx2.pth

import sys
sys.path.append("/media/jack/HDD500/")
from model_zoo.ModelList import MODEL
data = MODEL()[3]
print(data)

MODELlist = []
model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG','BSRGANx2']
cnt = -1
for model_ in MODEL():
    cnt = cnt +1
    for model_name in model_names:
        if model_name in model_:
            print(model_name,"MODEL("+str(cnt)+")", MODEL()[cnt])
            MODELlist.append(MODEL()[cnt])

!cat /home/jack/Desktop/BSRGAN/blind_sr_log.log

import os
E_path = "Testing"
os.mkdir(E_path)


from utils import *

for model_path in MODELlist

model_path = MODEL(3)

from utils import utils_image

util.get_image_paths

model_names = ['RRDB','ESRGAN','FSSR_DPED','FSSR_JPEG','RealSR_DPED','RealSR_JPEG']
#model_names = ['BSRGAN','BSRGANx2']    # 'BSRGANx2' for scale factor 2
for model_name in model_names:
    if model_name in ['BSRGANx2']:
        sf = 2
    model_path = os.path.join('/media/jack/HDD500/model_zoo', model_name+'.pth')          # set model path
    Logged.logger.info('{:>16s} : {:s}'.format('Model Name', model_name))
    print (model_path)

import sys
sys.path.append('/home/jack/Desktop/BSRGAN')
sys.path
#['', ..., '/home/sergey']
sys.path.remove('/home/jack/hidden')
sys.path


#utils_logger.logger_info('blind_sr_log', log_path='blind_sr_log.log')
Logged.info('blind_sr_log', log_path='blind_sr_log.log')
#python_utils.logger('blind_sr_log', log_path='blind_sr_log.log')
#logger = logging.getLogger('blind_sr_log')

FORMAT = '%(asctime)s %(clientip)-15s %(user)-8s %(message)s'
logging.basicConfig(format=FORMAT)
d = {'clientip': '192.168.0.1', 'user': 'fbloggs'}
logger = logging.getLogger('tcpserver')
logger.warning('Protocol problem: %s', 'connection reset', extra=d)

Logged.info('blind_sr_log', log_path='blind_sr_log.log')

from python_utils import logger
import logging
import functools

Logged.info('blind_sr_log', log_path='blind_sr_log.log')

logger = logging.getLogger()
#Logged.info('blind_sr_log', log_path='blind_sr_log.log')
dir(logger)

#%%writefile ~/miniconda3/envs/cloned_base/lib/python3.9/site-packages/python_utils/logger.py
import abc
import functools
import logging

__all__ = ['Logged']

import typing


class LoggerBase(abc.ABC):
    '''Class which automatically adds logging utilities to your class when
    interiting. Expects `logger` to be a logging.Logger or compatible instance.

    Adds easy access to debug, info, warning, error, exception and log methods

    >>> class MyClass(LoggerBase):
    ...     logger = logging.getLogger(__name__)
    ...
    ...     def __init__(self):
    ...         Logged.__init__(self)

    >>> my_class = MyClass()
    >>> my_class.debug('debug')
    >>> my_class.info('info')
    >>> my_class.warning('warning')
    >>> my_class.error('error')
    >>> my_class.exception('exception')
    >>> my_class.log(0, 'log')
    '''

    # Being a tad lazy here and not creating a Protocol.
    # The actual classes define the correct type anyway
    logger: typing.Any

    @classmethod
    def __get_name(cls, *name_parts: str) -> str:
        return '.'.join(n.strip() for n in name_parts if n.strip())

    @classmethod
    @functools.wraps(logging.debug)
    def debug(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.debug(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.info)
    def info(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.info(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.warning)
    def warning(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.warning(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.error)
    def error(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.error(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.exception)
    def exception(cls, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.exception(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.log)
    def log(cls, lvl: int, msg: str, *args: typing.Any, **kwargs: typing.Any):
        cls.logger.log(lvl, msg, *args, **kwargs)


class Logged(LoggerBase):
    '''Class which automatically adds a named logger to your class when
    interiting

    Adds easy access to debug, info, warning, error, exception and log methods

    >>> class MyClass(Logged):
    ...     def __init__(self):
    ...         Logged.__init__(self)

    >>> my_class = MyClass()
    >>> my_class.debug('debug')
    >>> my_class.info('info')
    >>> my_class.warning('warning')
    >>> my_class.error('error')
    >>> my_class.exception('exception')
    >>> my_class.log(0, 'log')

    >>> my_class._Logged__get_name('spam')
    'spam'
    '''

    logger: logging.Logger  # pragma: no cover
    #jack    
    #logger = logging.getLogger()
    logger.info('info')
    
    
    @classmethod
    def __get_name(cls, *name_parts: str) -> str:
        return LoggerBase._LoggerBase__get_name(*name_parts)  # type: ignore

    def __new__(cls, *args, **kwargs):
        cls.logger = logging.getLogger(
            cls.__get_name(cls.__module__, cls.__name__)
        )
        return super(Logged, cls).__new__(cls)


from python_utils import logger as logger


dir(Logged.info)

dir(Logged)

dir(python_utils.logger)

# Example 1

from python_utils.logger import Logged

class MyClass(Logged):
    def __init__(self):
        Logged.__init__(self)


my_class = MyClass()
my_class.error('error')

!locate /utils/__init__.py | grep cloned

python_utils package
https://python-utils.readthedocs.io/en/latest/python_utils.html#
https://python-utils.readthedocs.io/en/latest/python_utils.html#module-python_utils.logger
    

from python_utils.logger import *
Logged

class MyClass(Logged):
     def __init__(self):
        Logged.__init__(self)
my_class = MyClass()
my_class.debug('debug')
my_class.info('info')
my_class.warning('warning')
my_class.error('error')
my_class.exception('exception')
my_class.log(0, 'log')

sys.path.append('./lib/python3.7/site-packages')

#python_utils.logger.Logged
import logging
import functools

__all__ = ['Logged']


#[docs]
class Logged(object):
    '''Class which automatically adds a named logger to your class when
    interiting

    Adds easy access to debug, info, warning, error, exception and log methods

    >>> class MyClass(Logged):
    ...     def __init__(self):
    ...         Logged.__init__(self)
    >>> my_class = MyClass()
    >>> my_class.debug('debug')
    >>> my_class.info('info')
    >>> my_class.warning('warning')
    >>> my_class.error('error')
    >>> my_class.exception('exception')
    >>> my_class.log(0, 'log')
    '''
    def __new__(cls, *args, **kwargs):
        cls.logger = logging.getLogger(
            cls.__get_name(cls.__module__, cls.__name__))
        return super(Logged, cls).__new__(cls)

    @classmethod
    def __get_name(cls, *name_parts):
        return '.'.join(n.strip() for n in name_parts if n.strip())

    @classmethod
    @functools.wraps(logging.debug)
    def debug(cls, msg, *args, **kwargs):
        cls.logger.debug(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.info)
    def info(cls, msg, *args, **kwargs):
        cls.logger.info(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.warning)
    def warning(cls, msg, *args, **kwargs):
        cls.logger.warning(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.error)
    def error(cls, msg, *args, **kwargs):
        cls.logger.error(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.exception)
    def exception(cls, msg, *args, **kwargs):
        cls.logger.exception(msg, *args, **kwargs)

    @classmethod
    @functools.wraps(logging.log)
    def log(cls, lvl, msg, *args, **kwargs):
        cls.logger.log(lvl, msg, *args, **kwargs)

import _functools
functools.__file__

# %load /home/jack/miniconda3/envs/cloned_base/lib/python3.9/functools.py
"""functools.py - Tools for working with functions and callable objects
"""
# Python module wrapper for _functools C module
# to allow utilities written in Python to be added
# to the functools module.
# Written by Nick Coghlan <ncoghlan at gmail.com>,
# Raymond Hettinger <python at rcn.com>,
# and Łukasz Langa <lukasz at langa.pl>.
#   Copyright (C) 2006-2013 Python Software Foundation.
# See C source code for _functools credits/copyright

__all__ = ['update_wrapper', 'wraps', 'WRAPPER_ASSIGNMENTS', 'WRAPPER_UPDATES',
           'total_ordering', 'cache', 'cmp_to_key', 'lru_cache', 'reduce',
           'partial', 'partialmethod', 'singledispatch', 'singledispatchmethod',
           'cached_property']

from abc import get_cache_token
from collections import namedtuple
# import types, weakref  # Deferred to single_dispatch()
from reprlib import recursive_repr
from _thread import RLock
from types import GenericAlias


################################################################################
### update_wrapper() and wraps() decorator
################################################################################

# update_wrapper() and wraps() are tools to help write
# wrapper functions that can handle naive introspection

WRAPPER_ASSIGNMENTS = ('__module__', '__name__', '__qualname__', '__doc__',
                       '__annotations__')
WRAPPER_UPDATES = ('__dict__',)
def update_wrapper(wrapper,
                   wrapped,
                   assigned = WRAPPER_ASSIGNMENTS,
                   updated = WRAPPER_UPDATES):
    """Update a wrapper function to look like the wrapped function

       wrapper is the function to be updated
       wrapped is the original function
       assigned is a tuple naming the attributes assigned directly
       from the wrapped function to the wrapper function (defaults to
       functools.WRAPPER_ASSIGNMENTS)
       updated is a tuple naming the attributes of the wrapper that
       are updated with the corresponding attribute from the wrapped
       function (defaults to functools.WRAPPER_UPDATES)
    """
    for attr in assigned:
        try:
            value = getattr(wrapped, attr)
        except AttributeError:
            pass
        else:
            setattr(wrapper, attr, value)
    for attr in updated:
        getattr(wrapper, attr).update(getattr(wrapped, attr, {}))
    # Issue #17482: set __wrapped__ last so we don't inadvertently copy it
    # from the wrapped function when updating __dict__
    wrapper.__wrapped__ = wrapped
    # Return the wrapper so this can be used as a decorator via partial()
    return wrapper

def wraps(wrapped,
          assigned = WRAPPER_ASSIGNMENTS,
          updated = WRAPPER_UPDATES):
    """Decorator factory to apply update_wrapper() to a wrapper function

       Returns a decorator that invokes update_wrapper() with the decorated
       function as the wrapper argument and the arguments to wraps() as the
       remaining arguments. Default arguments are as for update_wrapper().
       This is a convenience function to simplify applying partial() to
       update_wrapper().
    """
    return partial(update_wrapper, wrapped=wrapped,
                   assigned=assigned, updated=updated)


################################################################################
### total_ordering class decorator
################################################################################

# The total ordering functions all invoke the root magic method directly
# rather than using the corresponding operator.  This avoids possible
# infinite recursion that could occur when the operator dispatch logic
# detects a NotImplemented result and then calls a reflected method.

def _gt_from_lt(self, other, NotImplemented=NotImplemented):
    'Return a > b.  Computed by @total_ordering from (not a < b) and (a != b).'
    op_result = type(self).__lt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result and self != other

def _le_from_lt(self, other, NotImplemented=NotImplemented):
    'Return a <= b.  Computed by @total_ordering from (a < b) or (a == b).'
    op_result = type(self).__lt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result or self == other

def _ge_from_lt(self, other, NotImplemented=NotImplemented):
    'Return a >= b.  Computed by @total_ordering from (not a < b).'
    op_result = type(self).__lt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

def _ge_from_le(self, other, NotImplemented=NotImplemented):
    'Return a >= b.  Computed by @total_ordering from (not a <= b) or (a == b).'
    op_result = type(self).__le__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result or self == other

def _lt_from_le(self, other, NotImplemented=NotImplemented):
    'Return a < b.  Computed by @total_ordering from (a <= b) and (a != b).'
    op_result = type(self).__le__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result and self != other

def _gt_from_le(self, other, NotImplemented=NotImplemented):
    'Return a > b.  Computed by @total_ordering from (not a <= b).'
    op_result = type(self).__le__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

def _lt_from_gt(self, other, NotImplemented=NotImplemented):
    'Return a < b.  Computed by @total_ordering from (not a > b) and (a != b).'
    op_result = type(self).__gt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result and self != other

def _ge_from_gt(self, other, NotImplemented=NotImplemented):
    'Return a >= b.  Computed by @total_ordering from (a > b) or (a == b).'
    op_result = type(self).__gt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result or self == other

def _le_from_gt(self, other, NotImplemented=NotImplemented):
    'Return a <= b.  Computed by @total_ordering from (not a > b).'
    op_result = type(self).__gt__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

def _le_from_ge(self, other, NotImplemented=NotImplemented):
    'Return a <= b.  Computed by @total_ordering from (not a >= b) or (a == b).'
    op_result = type(self).__ge__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result or self == other

def _gt_from_ge(self, other, NotImplemented=NotImplemented):
    'Return a > b.  Computed by @total_ordering from (a >= b) and (a != b).'
    op_result = type(self).__ge__(self, other)
    if op_result is NotImplemented:
        return op_result
    return op_result and self != other

def _lt_from_ge(self, other, NotImplemented=NotImplemented):
    'Return a < b.  Computed by @total_ordering from (not a >= b).'
    op_result = type(self).__ge__(self, other)
    if op_result is NotImplemented:
        return op_result
    return not op_result

_convert = {
    '__lt__': [('__gt__', _gt_from_lt),
               ('__le__', _le_from_lt),
               ('__ge__', _ge_from_lt)],
    '__le__': [('__ge__', _ge_from_le),
               ('__lt__', _lt_from_le),
               ('__gt__', _gt_from_le)],
    '__gt__': [('__lt__', _lt_from_gt),
               ('__ge__', _ge_from_gt),
               ('__le__', _le_from_gt)],
    '__ge__': [('__le__', _le_from_ge),
               ('__gt__', _gt_from_ge),
               ('__lt__', _lt_from_ge)]
}

def total_ordering(cls):
    """Class decorator that fills in missing ordering methods"""
    # Find user-defined comparisons (not those inherited from object).
    roots = {op for op in _convert if getattr(cls, op, None) is not getattr(object, op, None)}
    if not roots:
        raise ValueError('must define at least one ordering operation: < > <= >=')
    root = max(roots)       # prefer __lt__ to __le__ to __gt__ to __ge__
    for opname, opfunc in _convert[root]:
        if opname not in roots:
            opfunc.__name__ = opname
            setattr(cls, opname, opfunc)
    return cls


################################################################################
### cmp_to_key() function converter
################################################################################

def cmp_to_key(mycmp):
    """Convert a cmp= function into a key= function"""
    class K(object):
        __slots__ = ['obj']
        def __init__(self, obj):
            self.obj = obj
        def __lt__(self, other):
            return mycmp(self.obj, other.obj) < 0
        def __gt__(self, other):
            return mycmp(self.obj, other.obj) > 0
        def __eq__(self, other):
            return mycmp(self.obj, other.obj) == 0
        def __le__(self, other):
            return mycmp(self.obj, other.obj) <= 0
        def __ge__(self, other):
            return mycmp(self.obj, other.obj) >= 0
        __hash__ = None
    return K

try:
    from _functools import cmp_to_key
except ImportError:
    pass


################################################################################
### reduce() sequence to a single item
################################################################################

_initial_missing = object()

def reduce(function, sequence, initial=_initial_missing):
    """
    reduce(function, sequence[, initial]) -> value

    Apply a function of two arguments cumulatively to the items of a sequence,
    from left to right, so as to reduce the sequence to a single value.
    For example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates
    ((((1+2)+3)+4)+5).  If initial is present, it is placed before the items
    of the sequence in the calculation, and serves as a default when the
    sequence is empty.
    """

    it = iter(sequence)

    if initial is _initial_missing:
        try:
            value = next(it)
        except StopIteration:
            raise TypeError("reduce() of empty sequence with no initial value") from None
    else:
        value = initial

    for element in it:
        value = function(value, element)

    return value

try:
    from _functools import reduce
except ImportError:
    pass


################################################################################
### partial() argument application
################################################################################

# Purely functional, no descriptor behaviour
class partial:
    """New function with partial application of the given arguments
    and keywords.
    """

    __slots__ = "func", "args", "keywords", "__dict__", "__weakref__"

    def __new__(cls, func, /, *args, **keywords):
        if not callable(func):
            raise TypeError("the first argument must be callable")

        if hasattr(func, "func"):
            args = func.args + args
            keywords = {**func.keywords, **keywords}
            func = func.func

        self = super(partial, cls).__new__(cls)

        self.func = func
        self.args = args
        self.keywords = keywords
        return self

    def __call__(self, /, *args, **keywords):
        keywords = {**self.keywords, **keywords}
        return self.func(*self.args, *args, **keywords)

    @recursive_repr()
    def __repr__(self):
        qualname = type(self).__qualname__
        args = [repr(self.func)]
        args.extend(repr(x) for x in self.args)
        args.extend(f"{k}={v!r}" for (k, v) in self.keywords.items())
        if type(self).__module__ == "functools":
            return f"functools.{qualname}({', '.join(args)})"
        return f"{qualname}({', '.join(args)})"

    def __reduce__(self):
        return type(self), (self.func,), (self.func, self.args,
               self.keywords or None, self.__dict__ or None)

    def __setstate__(self, state):
        if not isinstance(state, tuple):
            raise TypeError("argument to __setstate__ must be a tuple")
        if len(state) != 4:
            raise TypeError(f"expected 4 items in state, got {len(state)}")
        func, args, kwds, namespace = state
        if (not callable(func) or not isinstance(args, tuple) or
           (kwds is not None and not isinstance(kwds, dict)) or
           (namespace is not None and not isinstance(namespace, dict))):
            raise TypeError("invalid partial state")

        args = tuple(args) # just in case it's a subclass
        if kwds is None:
            kwds = {}
        elif type(kwds) is not dict: # XXX does it need to be *exactly* dict?
            kwds = dict(kwds)
        if namespace is None:
            namespace = {}

        self.__dict__ = namespace
        self.func = func
        self.args = args
        self.keywords = kwds

try:
    from _functools import partial
except ImportError:
    pass

# Descriptor version
class partialmethod(object):
    """Method descriptor with partial application of the given arguments
    and keywords.

    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    """

    def __init__(self, func, /, *args, **keywords):
        if not callable(func) and not hasattr(func, "__get__"):
            raise TypeError("{!r} is not callable or a descriptor"
                                 .format(func))

        # func could be a descriptor like classmethod which isn't callable,
        # so we can't inherit from partial (it verifies func is callable)
        if isinstance(func, partialmethod):
            # flattening is mandatory in order to place cls/self before all
            # other arguments
            # it's also more efficient since only one function will be called
            self.func = func.func
            self.args = func.args + args
            self.keywords = {**func.keywords, **keywords}
        else:
            self.func = func
            self.args = args
            self.keywords = keywords

    def __repr__(self):
        args = ", ".join(map(repr, self.args))
        keywords = ", ".join("{}={!r}".format(k, v)
                                 for k, v in self.keywords.items())
        format_string = "{module}.{cls}({func}, {args}, {keywords})"
        return format_string.format(module=self.__class__.__module__,
                                    cls=self.__class__.__qualname__,
                                    func=self.func,
                                    args=args,
                                    keywords=keywords)

    def _make_unbound_method(self):
        def _method(cls_or_self, /, *args, **keywords):
            keywords = {**self.keywords, **keywords}
            return self.func(cls_or_self, *self.args, *args, **keywords)
        _method.__isabstractmethod__ = self.__isabstractmethod__
        _method._partialmethod = self
        return _method

    def __get__(self, obj, cls=None):
        get = getattr(self.func, "__get__", None)
        result = None
        if get is not None:
            new_func = get(obj, cls)
            if new_func is not self.func:
                # Assume __get__ returning something new indicates the
                # creation of an appropriate callable
                result = partial(new_func, *self.args, **self.keywords)
                try:
                    result.__self__ = new_func.__self__
                except AttributeError:
                    pass
        if result is None:
            # If the underlying descriptor didn't do anything, treat this
            # like an instance method
            result = self._make_unbound_method().__get__(obj, cls)
        return result

    @property
    def __isabstractmethod__(self):
        return getattr(self.func, "__isabstractmethod__", False)

    __class_getitem__ = classmethod(GenericAlias)


# Helper functions

def _unwrap_partial(func):
    while isinstance(func, partial):
        func = func.func
    return func

################################################################################
### LRU Cache function decorator
################################################################################

_CacheInfo = namedtuple("CacheInfo", ["hits", "misses", "maxsize", "currsize"])

class _HashedSeq(list):
    """ This class guarantees that hash() will be called no more than once
        per element.  This is important because the lru_cache() will hash
        the key multiple times on a cache miss.

    """

    __slots__ = 'hashvalue'

    def __init__(self, tup, hash=hash):
        self[:] = tup
        self.hashvalue = hash(tup)

    def __hash__(self):
        return self.hashvalue

def _make_key(args, kwds, typed,
             kwd_mark = (object(),),
             fasttypes = {int, str},
             tuple=tuple, type=type, len=len):
    """Make a cache key from optionally typed positional and keyword arguments

    The key is constructed in a way that is flat as possible rather than
    as a nested structure that would take more memory.

    If there is only a single argument and its data type is known to cache
    its hash value, then that argument is returned without a wrapper.  This
    saves space and improves lookup speed.

    """
    # All of code below relies on kwds preserving the order input by the user.
    # Formerly, we sorted() the kwds before looping.  The new way is *much*
    # faster; however, it means that f(x=1, y=2) will now be treated as a
    # distinct call from f(y=2, x=1) which will be cached separately.
    key = args
    if kwds:
        key += kwd_mark
        for item in kwds.items():
            key += item
    if typed:
        key += tuple(type(v) for v in args)
        if kwds:
            key += tuple(type(v) for v in kwds.values())
    elif len(key) == 1 and type(key[0]) in fasttypes:
        return key[0]
    return _HashedSeq(key)

def lru_cache(maxsize=128, typed=False):
    """Least-recently-used cache decorator.

    If *maxsize* is set to None, the LRU features are disabled and the cache
    can grow without bound.

    If *typed* is True, arguments of different types will be cached separately.
    For example, f(3.0) and f(3) will be treated as distinct calls with
    distinct results.

    Arguments to the cached function must be hashable.

    View the cache statistics named tuple (hits, misses, maxsize, currsize)
    with f.cache_info().  Clear the cache and statistics with f.cache_clear().
    Access the underlying function with f.__wrapped__.

    See:  https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)

    """

    # Users should only access the lru_cache through its public API:
    #       cache_info, cache_clear, and f.__wrapped__
    # The internals of the lru_cache are encapsulated for thread safety and
    # to allow the implementation to change (including a possible C version).

    if isinstance(maxsize, int):
        # Negative maxsize is treated as 0
        if maxsize < 0:
            maxsize = 0
    elif callable(maxsize) and isinstance(typed, bool):
        # The user_function was passed in directly via the maxsize argument
        user_function, maxsize = maxsize, 128
        wrapper = _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo)
        wrapper.cache_parameters = lambda : {'maxsize': maxsize, 'typed': typed}
        return update_wrapper(wrapper, user_function)
    elif maxsize is not None:
        raise TypeError(
            'Expected first argument to be an integer, a callable, or None')

    def decorating_function(user_function):
        wrapper = _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo)
        wrapper.cache_parameters = lambda : {'maxsize': maxsize, 'typed': typed}
        return update_wrapper(wrapper, user_function)

    return decorating_function

def _lru_cache_wrapper(user_function, maxsize, typed, _CacheInfo):
    # Constants shared by all lru cache instances:
    sentinel = object()          # unique object used to signal cache misses
    make_key = _make_key         # build a key from the function arguments
    PREV, NEXT, KEY, RESULT = 0, 1, 2, 3   # names for the link fields

    cache = {}
    hits = misses = 0
    full = False
    cache_get = cache.get    # bound method to lookup a key or return None
    cache_len = cache.__len__  # get cache size without calling len()
    lock = RLock()           # because linkedlist updates aren't threadsafe
    root = []                # root of the circular doubly linked list
    root[:] = [root, root, None, None]     # initialize by pointing to self

    if maxsize == 0:

        def wrapper(*args, **kwds):
            # No caching -- just a statistics update
            nonlocal misses
            misses += 1
            result = user_function(*args, **kwds)
            return result

    elif maxsize is None:

        def wrapper(*args, **kwds):
            # Simple caching without ordering or size limit
            nonlocal hits, misses
            key = make_key(args, kwds, typed)
            result = cache_get(key, sentinel)
            if result is not sentinel:
                hits += 1
                return result
            misses += 1
            result = user_function(*args, **kwds)
            cache[key] = result
            return result

    else:

        def wrapper(*args, **kwds):
            # Size limited caching that tracks accesses by recency
            nonlocal root, hits, misses, full
            key = make_key(args, kwds, typed)
            with lock:
                link = cache_get(key)
                if link is not None:
                    # Move the link to the front of the circular queue
                    link_prev, link_next, _key, result = link
                    link_prev[NEXT] = link_next
                    link_next[PREV] = link_prev
                    last = root[PREV]
                    last[NEXT] = root[PREV] = link
                    link[PREV] = last
                    link[NEXT] = root
                    hits += 1
                    return result
                misses += 1
            result = user_function(*args, **kwds)
            with lock:
                if key in cache:
                    # Getting here means that this same key was added to the
                    # cache while the lock was released.  Since the link
                    # update is already done, we need only return the
                    # computed result and update the count of misses.
                    pass
                elif full:
                    # Use the old root to store the new key and result.
                    oldroot = root
                    oldroot[KEY] = key
                    oldroot[RESULT] = result
                    # Empty the oldest link and make it the new root.
                    # Keep a reference to the old key and old result to
                    # prevent their ref counts from going to zero during the
                    # update. That will prevent potentially arbitrary object
                    # clean-up code (i.e. __del__) from running while we're
                    # still adjusting the links.
                    root = oldroot[NEXT]
                    oldkey = root[KEY]
                    oldresult = root[RESULT]
                    root[KEY] = root[RESULT] = None
                    # Now update the cache dictionary.
                    del cache[oldkey]
                    # Save the potentially reentrant cache[key] assignment
                    # for last, after the root and links have been put in
                    # a consistent state.
                    cache[key] = oldroot
                else:
                    # Put result in a new link at the front of the queue.
                    last = root[PREV]
                    link = [last, root, key, result]
                    last[NEXT] = root[PREV] = cache[key] = link
                    # Use the cache_len bound method instead of the len() function
                    # which could potentially be wrapped in an lru_cache itself.
                    full = (cache_len() >= maxsize)
            return result

    def cache_info():
        """Report cache statistics"""
        with lock:
            return _CacheInfo(hits, misses, maxsize, cache_len())

    def cache_clear():
        """Clear the cache and cache statistics"""
        nonlocal hits, misses, full
        with lock:
            cache.clear()
            root[:] = [root, root, None, None]
            hits = misses = 0
            full = False

    wrapper.cache_info = cache_info
    wrapper.cache_clear = cache_clear
    return wrapper

try:
    from _functools import _lru_cache_wrapper
except ImportError:
    pass


################################################################################
### cache -- simplified access to the infinity cache
################################################################################

def cache(user_function, /):
    'Simple lightweight unbounded cache.  Sometimes called "memoize".'
    return lru_cache(maxsize=None)(user_function)


################################################################################
### singledispatch() - single-dispatch generic function decorator
################################################################################

def _c3_merge(sequences):
    """Merges MROs in *sequences* to a single MRO using the C3 algorithm.

    Adapted from https://www.python.org/download/releases/2.3/mro/.

    """
    result = []
    while True:
        sequences = [s for s in sequences if s]   # purge empty sequences
        if not sequences:
            return result
        for s1 in sequences:   # find merge candidates among seq heads
            candidate = s1[0]
            for s2 in sequences:
                if candidate in s2[1:]:
                    candidate = None
                    break      # reject the current head, it appears later
            else:
                break
        if candidate is None:
            raise RuntimeError("Inconsistent hierarchy")
        result.append(candidate)
        # remove the chosen candidate
        for seq in sequences:
            if seq[0] == candidate:
                del seq[0]

def _c3_mro(cls, abcs=None):
    """Computes the method resolution order using extended C3 linearization.

    If no *abcs* are given, the algorithm works exactly like the built-in C3
    linearization used for method resolution.

    If given, *abcs* is a list of abstract base classes that should be inserted
    into the resulting MRO. Unrelated ABCs are ignored and don't end up in the
    result. The algorithm inserts ABCs where their functionality is introduced,
    i.e. issubclass(cls, abc) returns True for the class itself but returns
    False for all its direct base classes. Implicit ABCs for a given class
    (either registered or inferred from the presence of a special method like
    __len__) are inserted directly after the last ABC explicitly listed in the
    MRO of said class. If two implicit ABCs end up next to each other in the
    resulting MRO, their ordering depends on the order of types in *abcs*.

    """
    for i, base in enumerate(reversed(cls.__bases__)):
        if hasattr(base, '__abstractmethods__'):
            boundary = len(cls.__bases__) - i
            break   # Bases up to the last explicit ABC are considered first.
    else:
        boundary = 0
    abcs = list(abcs) if abcs else []
    explicit_bases = list(cls.__bases__[:boundary])
    abstract_bases = []
    other_bases = list(cls.__bases__[boundary:])
    for base in abcs:
        if issubclass(cls, base) and not any(
                issubclass(b, base) for b in cls.__bases__
            ):
            # If *cls* is the class that introduces behaviour described by
            # an ABC *base*, insert said ABC to its MRO.
            abstract_bases.append(base)
    for base in abstract_bases:
        abcs.remove(base)
    explicit_c3_mros = [_c3_mro(base, abcs=abcs) for base in explicit_bases]
    abstract_c3_mros = [_c3_mro(base, abcs=abcs) for base in abstract_bases]
    other_c3_mros = [_c3_mro(base, abcs=abcs) for base in other_bases]
    return _c3_merge(
        [[cls]] +
        explicit_c3_mros + abstract_c3_mros + other_c3_mros +
        [explicit_bases] + [abstract_bases] + [other_bases]
    )

def _compose_mro(cls, types):
    """Calculates the method resolution order for a given class *cls*.

    Includes relevant abstract base classes (with their respective bases) from
    the *types* iterable. Uses a modified C3 linearization algorithm.

    """
    bases = set(cls.__mro__)
    # Remove entries which are already present in the __mro__ or unrelated.
    def is_related(typ):
        return (typ not in bases and hasattr(typ, '__mro__')
                                 and not isinstance(typ, GenericAlias)
                                 and issubclass(cls, typ))
    types = [n for n in types if is_related(n)]
    # Remove entries which are strict bases of other entries (they will end up
    # in the MRO anyway.
    def is_strict_base(typ):
        for other in types:
            if typ != other and typ in other.__mro__:
                return True
        return False
    types = [n for n in types if not is_strict_base(n)]
    # Subclasses of the ABCs in *types* which are also implemented by
    # *cls* can be used to stabilize ABC ordering.
    type_set = set(types)
    mro = []
    for typ in types:
        found = []
        for sub in typ.__subclasses__():
            if sub not in bases and issubclass(cls, sub):
                found.append([s for s in sub.__mro__ if s in type_set])
        if not found:
            mro.append(typ)
            continue
        # Favor subclasses with the biggest number of useful bases
        found.sort(key=len, reverse=True)
        for sub in found:
            for subcls in sub:
                if subcls not in mro:
                    mro.append(subcls)
    return _c3_mro(cls, abcs=mro)

def _find_impl(cls, registry):
    """Returns the best matching implementation from *registry* for type *cls*.

    Where there is no registered implementation for a specific type, its method
    resolution order is used to find a more generic implementation.

    Note: if *registry* does not contain an implementation for the base
    *object* type, this function may return None.

    """
    mro = _compose_mro(cls, registry.keys())
    match = None
    for t in mro:
        if match is not None:
            # If *match* is an implicit ABC but there is another unrelated,
            # equally matching implicit ABC, refuse the temptation to guess.
            if (t in registry and t not in cls.__mro__
                              and match not in cls.__mro__
                              and not issubclass(match, t)):
                raise RuntimeError("Ambiguous dispatch: {} or {}".format(
                    match, t))
            break
        if t in registry:
            match = t
    return registry.get(match)

def singledispatch(func):
    """Single-dispatch generic function decorator.

    Transforms a function into a generic function, which can have different
    behaviours depending upon the type of its first argument. The decorated
    function acts as the default implementation, and additional
    implementations can be registered using the register() attribute of the
    generic function.
    """
    # There are many programs that use functools without singledispatch, so we
    # trade-off making singledispatch marginally slower for the benefit of
    # making start-up of such applications slightly faster.
    import types, weakref

    registry = {}
    dispatch_cache = weakref.WeakKeyDictionary()
    cache_token = None

    def dispatch(cls):
        """generic_func.dispatch(cls) -> <function implementation>

        Runs the dispatch algorithm to return the best available implementation
        for the given *cls* registered on *generic_func*.

        """
        nonlocal cache_token
        if cache_token is not None:
            current_token = get_cache_token()
            if cache_token != current_token:
                dispatch_cache.clear()
                cache_token = current_token
        try:
            impl = dispatch_cache[cls]
        except KeyError:
            try:
                impl = registry[cls]
            except KeyError:
                impl = _find_impl(cls, registry)
            dispatch_cache[cls] = impl
        return impl

    def _is_valid_dispatch_type(cls):
        return isinstance(cls, type) and not isinstance(cls, GenericAlias)

    def register(cls, func=None):
        """generic_func.register(cls, func) -> func

        Registers a new implementation for the given *cls* on a *generic_func*.

        """
        nonlocal cache_token
        if _is_valid_dispatch_type(cls):
            if func is None:
                return lambda f: register(cls, f)
        else:
            if func is not None:
                raise TypeError(
                    f"Invalid first argument to `register()`. "
                    f"{cls!r} is not a class."
                )
            ann = getattr(cls, '__annotations__', {})
            if not ann:
                raise TypeError(
                    f"Invalid first argument to `register()`: {cls!r}. "
                    f"Use either `@register(some_class)` or plain `@register` "
                    f"on an annotated function."
                )
            func = cls

            # only import typing if annotation parsing is necessary
            from typing import get_type_hints
            argname, cls = next(iter(get_type_hints(func).items()))
            if not _is_valid_dispatch_type(cls):
                raise TypeError(
                    f"Invalid annotation for {argname!r}. "
                    f"{cls!r} is not a class."
                )

        registry[cls] = func
        if cache_token is None and hasattr(cls, '__abstractmethods__'):
            cache_token = get_cache_token()
        dispatch_cache.clear()
        return func

    def wrapper(*args, **kw):
        if not args:
            raise TypeError(f'{funcname} requires at least '
                            '1 positional argument')

        return dispatch(args[0].__class__)(*args, **kw)

    funcname = getattr(func, '__name__', 'singledispatch function')
    registry[object] = func
    wrapper.register = register
    wrapper.dispatch = dispatch
    wrapper.registry = types.MappingProxyType(registry)
    wrapper._clear_cache = dispatch_cache.clear
    update_wrapper(wrapper, func)
    return wrapper


# Descriptor version
class singledispatchmethod:
    """Single-dispatch generic method descriptor.

    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    """

    def __init__(self, func):
        if not callable(func) and not hasattr(func, "__get__"):
            raise TypeError(f"{func!r} is not callable or a descriptor")

        self.dispatcher = singledispatch(func)
        self.func = func

        # bpo-45678: special-casing for classmethod/staticmethod in Python <=3.9,
        # as functools.update_wrapper doesn't work properly in singledispatchmethod.__get__
        # if it is applied to an unbound classmethod/staticmethod
        if isinstance(func, (staticmethod, classmethod)):
            self._wrapped_func = func.__func__
        else:
            self._wrapped_func = func
    def register(self, cls, method=None):
        """generic_method.register(cls, func) -> func

        Registers a new implementation for the given *cls* on a *generic_method*.
        """
        # bpo-39679: in Python <= 3.9, classmethods and staticmethods don't
        # inherit __annotations__ of the wrapped function (fixed in 3.10+ as
        # a side-effect of bpo-43682) but we need that for annotation-derived
        # singledispatches. So we add that just-in-time here.
        if isinstance(cls, (staticmethod, classmethod)):
            cls.__annotations__ = getattr(cls.__func__, '__annotations__', {})
        return self.dispatcher.register(cls, func=method)

    def __get__(self, obj, cls=None):
        def _method(*args, **kwargs):
            method = self.dispatcher.dispatch(args[0].__class__)
            return method.__get__(obj, cls)(*args, **kwargs)

        _method.__isabstractmethod__ = self.__isabstractmethod__
        _method.register = self.register
        update_wrapper(_method, self._wrapped_func)
        return _method

    @property
    def __isabstractmethod__(self):
        return getattr(self.func, '__isabstractmethod__', False)


################################################################################
### cached_property() - computed once per instance, cached as attribute
################################################################################

_NOT_FOUND = object()


class cached_property:
    def __init__(self, func):
        self.func = func
        self.attrname = None
        self.__doc__ = func.__doc__
        self.lock = RLock()

    def __set_name__(self, owner, name):
        if self.attrname is None:
            self.attrname = name
        elif name != self.attrname:
            raise TypeError(
                "Cannot assign the same cached_property to two different names "
                f"({self.attrname!r} and {name!r})."
            )

    def __get__(self, instance, owner=None):
        if instance is None:
            return self
        if self.attrname is None:
            raise TypeError(
                "Cannot use cached_property instance without calling __set_name__ on it.")
        try:
            cache = instance.__dict__
        except AttributeError:  # not all objects have __dict__ (e.g. class defines slots)
            msg = (
                f"No '__dict__' attribute on {type(instance).__name__!r} "
                f"instance to cache {self.attrname!r} property."
            )
            raise TypeError(msg) from None
        val = cache.get(self.attrname, _NOT_FOUND)
        if val is _NOT_FOUND:
            with self.lock:
                # check if another thread filled cache while we awaited lock
                val = cache.get(self.attrname, _NOT_FOUND)
                if val is _NOT_FOUND:
                    val = self.func(instance)
                    try:
                        cache[self.attrname] = val
                    except TypeError:
                        msg = (
                            f"The '__dict__' attribute on {type(instance).__name__!r} instance "
                            f"does not support item assignment for caching {self.attrname!r} property."
                        )
                        raise TypeError(msg) from None
        return val

    __class_getitem__ = classmethod(GenericAlias)


import functools
dir(functools)

import functools


import functools as fn
functs = [fn]

All = [dir(functs.append)]
All[0]

from functools import partial
def power(a, b):
    return a**b
 
# partial functions
pow2 = partial(power, b=2)
pow4 = partial(power, b=4)
power_of_5 = partial(power, 5)
 
print("power(2, 3): ",power(2, 3))
print("pow2(4): ",pow2(4))
print("pow4(3): ",pow4(3))
print("power_of_5(2): ",(power_of_5(2)))
 
print('Function used in partial function pow2: ', pow2.func)
print('Default keywords for pow2: ', pow2.keywords)
print('Default arguments for power_of_5: ', power_of_5.args)

%%writefile utils_image.py
import os
import math
import random
import numpy as np
import torch
import cv2
from torchvision.utils import make_grid
from datetime import datetime
# import torchvision.transforms as transforms
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
os.environ["KMP_DUPLICATE_LIB_OK"]="TRUE"


'''
# --------------------------------------------
# Kai Zhang (github: https://github.com/cszn)
# 03/Mar/2019
# --------------------------------------------
# https://github.com/twhui/SRGAN-pyTorch
# https://github.com/xinntao/BasicSR
# --------------------------------------------
'''


IMG_EXTENSIONS = ['.jpg', '.JPG', '.jpeg', '.JPEG', '.png', '.PNG', '.ppm', '.PPM', '.bmp', '.BMP', '.tif']


def is_image_file(filename):
    return any(filename.endswith(extension) for extension in IMG_EXTENSIONS)


def get_timestamp():
    return datetime.now().strftime('%y%m%d-%H%M%S')


def imshow(x, title=None, cbar=False, figsize=None):
    plt.figure(figsize=figsize)
    plt.imshow(np.squeeze(x), interpolation='nearest', cmap='gray')
    if title:
        plt.title(title)
    if cbar:
        plt.colorbar()
    plt.show()


def surf(Z, cmap='rainbow', figsize=None):
    plt.figure(figsize=figsize)
    ax3 = plt.axes(projection='3d')

    w, h = Z.shape[:2]
    xx = np.arange(0,w,1)
    yy = np.arange(0,h,1)
    X, Y = np.meshgrid(xx, yy)
    ax3.plot_surface(X,Y,Z,cmap=cmap)
    #ax3.contour(X,Y,Z, zdim='z',offset=-2，cmap=cmap)
    plt.show()


'''
# --------------------------------------------
# get image pathes
# --------------------------------------------
'''


def get_image_paths(dataroot):
    paths = None  # return None if dataroot is None
    if dataroot is not None:
        paths = sorted(_get_paths_from_images(dataroot))
    return paths


def _get_paths_from_images(path):
    assert os.path.isdir(path), '{:s} is not a valid directory'.format(path)
    images = []
    for dirpath, _, fnames in sorted(os.walk(path)):
        for fname in sorted(fnames):
            if is_image_file(fname):
                img_path = os.path.join(dirpath, fname)
                images.append(img_path)
    assert images, '{:s} has no valid image file'.format(path)
    return images


'''
# --------------------------------------------
# split large images into small images 
# --------------------------------------------
'''


def patches_from_image(img, p_size=512, p_overlap=64, p_max=800):
    w, h = img.shape[:2]
    patches = []
    if w > p_max and h > p_max:
        w1 = list(np.arange(0, w-p_size, p_size-p_overlap, dtype=np.int))
        h1 = list(np.arange(0, h-p_size, p_size-p_overlap, dtype=np.int))
        w1.append(w-p_size)
        h1.append(h-p_size)
#        print(w1)
#        print(h1)
        for i in w1:
            for j in h1:
                patches.append(img[i:i+p_size, j:j+p_size,:])
    else:
        patches.append(img)

    return patches


def imssave(imgs, img_path):
    """
    imgs: list, N images of size WxHxC
    """
    img_name, ext = os.path.splitext(os.path.basename(img_path))

    for i, img in enumerate(imgs):
        if img.ndim == 3:
            img = img[:, :, [2, 1, 0]]
        new_path = os.path.join(os.path.dirname(img_path), img_name+str('_s{:04d}'.format(i))+'.png')
        cv2.imwrite(new_path, img)


def split_imageset(original_dataroot, taget_dataroot, n_channels=3, p_size=800, p_overlap=96, p_max=1000):
    """
    split the large images from original_dataroot into small overlapped images with size (p_size)x(p_size), 
    and save them into taget_dataroot; only the images with larger size than (p_max)x(p_max)
    will be splitted.

    Args:
        original_dataroot:
        taget_dataroot:
        p_size: size of small images
        p_overlap: patch size in training is a good choice
        p_max: images with smaller size than (p_max)x(p_max) keep unchanged.
    """
    paths = get_image_paths(original_dataroot)
    for img_path in paths:
        # img_name, ext = os.path.splitext(os.path.basename(img_path))
        img = imread_uint(img_path, n_channels=n_channels)
        patches = patches_from_image(img, p_size, p_overlap, p_max)
        imssave(patches, os.path.join(taget_dataroot,os.path.basename(img_path)))
        #if original_dataroot == taget_dataroot:
        #del img_path

'''
# --------------------------------------------
# makedir
# --------------------------------------------
'''


def mkdir(path):
    if not os.path.exists(path):
        os.makedirs(path)


def mkdirs(paths):
    if isinstance(paths, str):
        mkdir(paths)
    else:
        for path in paths:
            mkdir(path)


def mkdir_and_rename(path):
    if os.path.exists(path):
        new_name = path + '_archived_' + get_timestamp()
        print('Path already exists. Rename it to [{:s}]'.format(new_name))
        os.rename(path, new_name)
    os.makedirs(path)


'''
# --------------------------------------------
# read image from path
# opencv is fast, but read BGR numpy image
# --------------------------------------------
'''


# --------------------------------------------
# get uint8 image of size HxWxn_channles (RGB)
# --------------------------------------------
def imread_uint(path, n_channels=3):
    #  input: path
    # output: HxWx3(RGB or GGG), or HxWx1 (G)
    if n_channels == 1:
        img = cv2.imread(path, 0)  # cv2.IMREAD_GRAYSCALE
        img = np.expand_dims(img, axis=2)  # HxWx1
    elif n_channels == 3:
        img = cv2.imread(path, cv2.IMREAD_UNCHANGED)  # BGR or G
        if img.ndim == 2:
            img = cv2.cvtColor(img, cv2.COLOR_GRAY2RGB)  # GGG
        else:
            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # RGB
    return img


# --------------------------------------------
# matlab's imwrite
# --------------------------------------------
def imsave(img, img_path):
    img = np.squeeze(img)
    if img.ndim == 3:
        img = img[:, :, [2, 1, 0]]
    cv2.imwrite(img_path, img)

def imwrite(img, img_path):
    img = np.squeeze(img)
    if img.ndim == 3:
        img = img[:, :, [2, 1, 0]]
    cv2.imwrite(img_path, img)



# --------------------------------------------
# get single image of size HxWxn_channles (BGR)
# --------------------------------------------
def read_img(path):
    # read image by cv2
    # return: Numpy float32, HWC, BGR, [0,1]
    img = cv2.imread(path, cv2.IMREAD_UNCHANGED)  # cv2.IMREAD_GRAYSCALE
    img = img.astype(np.float32) / 255.
    if img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    # some images have 4 channels
    if img.shape[2] > 3:
        img = img[:, :, :3]
    return img


'''
# --------------------------------------------
# image format conversion
# --------------------------------------------
# numpy(single) <--->  numpy(unit)
# numpy(single) <--->  tensor
# numpy(unit)   <--->  tensor
# --------------------------------------------
'''


# --------------------------------------------
# numpy(single) [0, 1] <--->  numpy(unit)
# --------------------------------------------


def uint2single(img):

    return np.float32(img/255.)


def single2uint(img):

    return np.uint8((img.clip(0, 1)*255.).round())


def uint162single(img):

    return np.float32(img/65535.)


def single2uint16(img):

    return np.uint16((img.clip(0, 1)*65535.).round())


# --------------------------------------------
# numpy(unit) (HxWxC or HxW) <--->  tensor
# --------------------------------------------


# convert uint to 4-dimensional torch tensor
def uint2tensor4(img):
    if img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float().div(255.).unsqueeze(0)


# convert uint to 3-dimensional torch tensor
def uint2tensor3(img):
    if img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float().div(255.)


# convert 2/3/4-dimensional torch tensor to uint
def tensor2uint(img):
    img = img.data.squeeze().float().clamp_(0, 1).cpu().numpy()
    if img.ndim == 3:
        img = np.transpose(img, (1, 2, 0))
    return np.uint8((img*255.0).round())


# --------------------------------------------
# numpy(single) (HxWxC) <--->  tensor
# --------------------------------------------


# convert single (HxWxC) to 3-dimensional torch tensor
def single2tensor3(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float()


# convert single (HxWxC) to 4-dimensional torch tensor
def single2tensor4(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1).float().unsqueeze(0)


# convert torch tensor to single
def tensor2single(img):
    img = img.data.squeeze().float().cpu().numpy()
    if img.ndim == 3:
        img = np.transpose(img, (1, 2, 0))

    return img

# convert torch tensor to single
def tensor2single3(img):
    img = img.data.squeeze().float().cpu().numpy()
    if img.ndim == 3:
        img = np.transpose(img, (1, 2, 0))
    elif img.ndim == 2:
        img = np.expand_dims(img, axis=2)
    return img


def single2tensor5(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1, 3).float().unsqueeze(0)


def single32tensor5(img):
    return torch.from_numpy(np.ascontiguousarray(img)).float().unsqueeze(0).unsqueeze(0)


def single42tensor4(img):
    return torch.from_numpy(np.ascontiguousarray(img)).permute(2, 0, 1, 3).float()


# from skimage.io import imread, imsave
def tensor2img(tensor, out_type=np.uint8, min_max=(0, 1)):
    '''
    Converts a torch Tensor into an image Numpy array of BGR channel order
    Input: 4D(B,(3/1),H,W), 3D(C,H,W), or 2D(H,W), any range, RGB channel order
    Output: 3D(H,W,C) or 2D(H,W), [0,255], np.uint8 (default)
    '''
    tensor = tensor.squeeze().float().cpu().clamp_(*min_max)  # squeeze first, then clamp
    tensor = (tensor - min_max[0]) / (min_max[1] - min_max[0])  # to range [0,1]
    n_dim = tensor.dim()
    if n_dim == 4:
        n_img = len(tensor)
        img_np = make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False).numpy()
        img_np = np.transpose(img_np[[2, 1, 0], :, :], (1, 2, 0))  # HWC, BGR
    elif n_dim == 3:
        img_np = tensor.numpy()
        img_np = np.transpose(img_np[[2, 1, 0], :, :], (1, 2, 0))  # HWC, BGR
    elif n_dim == 2:
        img_np = tensor.numpy()
    else:
        raise TypeError(
            'Only support 4D, 3D and 2D tensor. But received with dimension: {:d}'.format(n_dim))
    if out_type == np.uint8:
        img_np = (img_np * 255.0).round()
        # Important. Unlike matlab, numpy.unit8() WILL NOT round by default.
    return img_np.astype(out_type)


'''
# --------------------------------------------
# Augmentation, flipe and/or rotate
# --------------------------------------------
# The following two are enough.
# (1) augmet_img: numpy image of WxHxC or WxH
# (2) augment_img_tensor4: tensor image 1xCxWxH
# --------------------------------------------
'''


def augment_img(img, mode=0):
    '''Kai Zhang (github: https://github.com/cszn)
    '''
    if mode == 0:
        return img
    elif mode == 1:
        return np.flipud(np.rot90(img))
    elif mode == 2:
        return np.flipud(img)
    elif mode == 3:
        return np.rot90(img, k=3)
    elif mode == 4:
        return np.flipud(np.rot90(img, k=2))
    elif mode == 5:
        return np.rot90(img)
    elif mode == 6:
        return np.rot90(img, k=2)
    elif mode == 7:
        return np.flipud(np.rot90(img, k=3))


def augment_img_tensor4(img, mode=0):
    '''Kai Zhang (github: https://github.com/cszn)
    '''
    if mode == 0:
        return img
    elif mode == 1:
        return img.rot90(1, [2, 3]).flip([2])
    elif mode == 2:
        return img.flip([2])
    elif mode == 3:
        return img.rot90(3, [2, 3])
    elif mode == 4:
        return img.rot90(2, [2, 3]).flip([2])
    elif mode == 5:
        return img.rot90(1, [2, 3])
    elif mode == 6:
        return img.rot90(2, [2, 3])
    elif mode == 7:
        return img.rot90(3, [2, 3]).flip([2])


def augment_img_tensor(img, mode=0):
    '''Kai Zhang (github: https://github.com/cszn)
    '''
    img_size = img.size()
    img_np = img.data.cpu().numpy()
    if len(img_size) == 3:
        img_np = np.transpose(img_np, (1, 2, 0))
    elif len(img_size) == 4:
        img_np = np.transpose(img_np, (2, 3, 1, 0))
    img_np = augment_img(img_np, mode=mode)
    img_tensor = torch.from_numpy(np.ascontiguousarray(img_np))
    if len(img_size) == 3:
        img_tensor = img_tensor.permute(2, 0, 1)
    elif len(img_size) == 4:
        img_tensor = img_tensor.permute(3, 2, 0, 1)

    return img_tensor.type_as(img)


def augment_img_np3(img, mode=0):
    if mode == 0:
        return img
    elif mode == 1:
        return img.transpose(1, 0, 2)
    elif mode == 2:
        return img[::-1, :, :]
    elif mode == 3:
        img = img[::-1, :, :]
        img = img.transpose(1, 0, 2)
        return img
    elif mode == 4:
        return img[:, ::-1, :]
    elif mode == 5:
        img = img[:, ::-1, :]
        img = img.transpose(1, 0, 2)
        return img
    elif mode == 6:
        img = img[:, ::-1, :]
        img = img[::-1, :, :]
        return img
    elif mode == 7:
        img = img[:, ::-1, :]
        img = img[::-1, :, :]
        img = img.transpose(1, 0, 2)
        return img


def augment_imgs(img_list, hflip=True, rot=True):
    # horizontal flip OR rotate
    hflip = hflip and random.random() < 0.5
    vflip = rot and random.random() < 0.5
    rot90 = rot and random.random() < 0.5

    def _augment(img):
        if hflip:
            img = img[:, ::-1, :]
        if vflip:
            img = img[::-1, :, :]
        if rot90:
            img = img.transpose(1, 0, 2)
        return img

    return [_augment(img) for img in img_list]


'''
# --------------------------------------------
# modcrop and shave
# --------------------------------------------
'''


def modcrop(img_in, scale):
    # img_in: Numpy, HWC or HW
    img = np.copy(img_in)
    if img.ndim == 2:
        H, W = img.shape
        H_r, W_r = H % scale, W % scale
        img = img[:H - H_r, :W - W_r]
    elif img.ndim == 3:
        H, W, C = img.shape
        H_r, W_r = H % scale, W % scale
        img = img[:H - H_r, :W - W_r, :]
    else:
        raise ValueError('Wrong img ndim: [{:d}].'.format(img.ndim))
    return img


def shave(img_in, border=0):
    # img_in: Numpy, HWC or HW
    img = np.copy(img_in)
    h, w = img.shape[:2]
    img = img[border:h-border, border:w-border]
    return img


'''
# --------------------------------------------
# image processing process on numpy image
# channel_convert(in_c, tar_type, img_list):
# rgb2ycbcr(img, only_y=True):
# bgr2ycbcr(img, only_y=True):
# ycbcr2rgb(img):
# --------------------------------------------
'''


def rgb2ycbcr(img, only_y=True):
    '''same as matlab rgb2ycbcr
    only_y: only return Y channel
    Input:
        uint8, [0, 255]
        float, [0, 1]
    '''
    in_img_type = img.dtype
    img.astype(np.float32)
    if in_img_type != np.uint8:
        img *= 255.
    # convert
    if only_y:
        rlt = np.dot(img, [65.481, 128.553, 24.966]) / 255.0 + 16.0
    else:
        rlt = np.matmul(img, [[65.481, -37.797, 112.0], [128.553, -74.203, -93.786],
                              [24.966, 112.0, -18.214]]) / 255.0 + [16, 128, 128]
    if in_img_type == np.uint8:
        rlt = rlt.round()
    else:
        rlt /= 255.
    return rlt.astype(in_img_type)


def ycbcr2rgb(img):
    '''same as matlab ycbcr2rgb
    Input:
        uint8, [0, 255]
        float, [0, 1]
    '''
    in_img_type = img.dtype
    img.astype(np.float32)
    if in_img_type != np.uint8:
        img *= 255.
    # convert
    rlt = np.matmul(img, [[0.00456621, 0.00456621, 0.00456621], [0, -0.00153632, 0.00791071],
                          [0.00625893, -0.00318811, 0]]) * 255.0 + [-222.921, 135.576, -276.836]
    if in_img_type == np.uint8:
        rlt = rlt.round()
    else:
        rlt /= 255.
    return rlt.astype(in_img_type)


def bgr2ycbcr(img, only_y=True):
    '''bgr version of rgb2ycbcr
    only_y: only return Y channel
    Input:
        uint8, [0, 255]
        float, [0, 1]
    '''
    in_img_type = img.dtype
    img.astype(np.float32)
    if in_img_type != np.uint8:
        img *= 255.
    # convert
    if only_y:
        rlt = np.dot(img, [24.966, 128.553, 65.481]) / 255.0 + 16.0
    else:
        rlt = np.matmul(img, [[24.966, 112.0, -18.214], [128.553, -74.203, -93.786],
                              [65.481, -37.797, 112.0]]) / 255.0 + [16, 128, 128]
    if in_img_type == np.uint8:
        rlt = rlt.round()
    else:
        rlt /= 255.
    return rlt.astype(in_img_type)


def channel_convert(in_c, tar_type, img_list):
    # conversion among BGR, gray and y
    if in_c == 3 and tar_type == 'gray':  # BGR to gray
        gray_list = [cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) for img in img_list]
        return [np.expand_dims(img, axis=2) for img in gray_list]
    elif in_c == 3 and tar_type == 'y':  # BGR to y
        y_list = [bgr2ycbcr(img, only_y=True) for img in img_list]
        return [np.expand_dims(img, axis=2) for img in y_list]
    elif in_c == 1 and tar_type == 'RGB':  # gray/y to BGR
        return [cv2.cvtColor(img, cv2.COLOR_GRAY2BGR) for img in img_list]
    else:
        return img_list


'''
# --------------------------------------------
# metric, PSNR and SSIM
# --------------------------------------------
'''


# --------------------------------------------
# PSNR
# --------------------------------------------
def calculate_psnr(img1, img2, border=0):
    # img1 and img2 have range [0, 255]
    #img1 = img1.squeeze()
    #img2 = img2.squeeze()
    if not img1.shape == img2.shape:
        raise ValueError('Input images must have the same dimensions.')
    h, w = img1.shape[:2]
    img1 = img1[border:h-border, border:w-border]
    img2 = img2[border:h-border, border:w-border]

    img1 = img1.astype(np.float64)
    img2 = img2.astype(np.float64)
    mse = np.mean((img1 - img2)**2)
    if mse == 0:
        return float('inf')
    return 20 * math.log10(255.0 / math.sqrt(mse))


# --------------------------------------------
# SSIM
# --------------------------------------------
def calculate_ssim(img1, img2, border=0):
    '''calculate SSIM
    the same outputs as MATLAB's
    img1, img2: [0, 255]
    '''
    #img1 = img1.squeeze()
    #img2 = img2.squeeze()
    if not img1.shape == img2.shape:
        raise ValueError('Input images must have the same dimensions.')
    h, w = img1.shape[:2]
    img1 = img1[border:h-border, border:w-border]
    img2 = img2[border:h-border, border:w-border]

    if img1.ndim == 2:
        return ssim(img1, img2)
    elif img1.ndim == 3:
        if img1.shape[2] == 3:
            ssims = []
            for i in range(3):
                ssims.append(ssim(img1[:,:,i], img2[:,:,i]))
            return np.array(ssims).mean()
        elif img1.shape[2] == 1:
            return ssim(np.squeeze(img1), np.squeeze(img2))
    else:
        raise ValueError('Wrong input image dimensions.')


def ssim(img1, img2):
    C1 = (0.01 * 255)**2
    C2 = (0.03 * 255)**2

    img1 = img1.astype(np.float64)
    img2 = img2.astype(np.float64)
    kernel = cv2.getGaussianKernel(11, 1.5)
    window = np.outer(kernel, kernel.transpose())

    mu1 = cv2.filter2D(img1, -1, window)[5:-5, 5:-5]  # valid
    mu2 = cv2.filter2D(img2, -1, window)[5:-5, 5:-5]
    mu1_sq = mu1**2
    mu2_sq = mu2**2
    mu1_mu2 = mu1 * mu2
    sigma1_sq = cv2.filter2D(img1**2, -1, window)[5:-5, 5:-5] - mu1_sq
    sigma2_sq = cv2.filter2D(img2**2, -1, window)[5:-5, 5:-5] - mu2_sq
    sigma12 = cv2.filter2D(img1 * img2, -1, window)[5:-5, 5:-5] - mu1_mu2

    ssim_map = ((2 * mu1_mu2 + C1) * (2 * sigma12 + C2)) / ((mu1_sq + mu2_sq + C1) *
                                                            (sigma1_sq + sigma2_sq + C2))
    return ssim_map.mean()


'''
# --------------------------------------------
# matlab's bicubic imresize (numpy and torch) [0, 1]
# --------------------------------------------
'''


# matlab 'imresize' function, now only support 'bicubic'
def cubic(x):
    absx = torch.abs(x)
    absx2 = absx**2
    absx3 = absx**3
    return (1.5*absx3 - 2.5*absx2 + 1) * ((absx <= 1).type_as(absx)) + \
        (-0.5*absx3 + 2.5*absx2 - 4*absx + 2) * (((absx > 1)*(absx <= 2)).type_as(absx))


def calculate_weights_indices(in_length, out_length, scale, kernel, kernel_width, antialiasing):
    if (scale < 1) and (antialiasing):
        # Use a modified kernel to simultaneously interpolate and antialias- larger kernel width
        kernel_width = kernel_width / scale

    # Output-space coordinates
    x = torch.linspace(1, out_length, out_length)

    # Input-space coordinates. Calculate the inverse mapping such that 0.5
    # in output space maps to 0.5 in input space, and 0.5+scale in output
    # space maps to 1.5 in input space.
    u = x / scale + 0.5 * (1 - 1 / scale)

    # What is the left-most pixel that can be involved in the computation?
    left = torch.floor(u - kernel_width / 2)

    # What is the maximum number of pixels that can be involved in the
    # computation?  Note: it's OK to use an extra pixel here; if the
    # corresponding weights are all zero, it will be eliminated at the end
    # of this function.
    P = math.ceil(kernel_width) + 2

    # The indices of the input pixels involved in computing the k-th output
    # pixel are in row k of the indices matrix.
    indices = left.view(out_length, 1).expand(out_length, P) + torch.linspace(0, P - 1, P).view(
        1, P).expand(out_length, P)

    # The weights used to compute the k-th output pixel are in row k of the
    # weights matrix.
    distance_to_center = u.view(out_length, 1).expand(out_length, P) - indices
    # apply cubic kernel
    if (scale < 1) and (antialiasing):
        weights = scale * cubic(distance_to_center * scale)
    else:
        weights = cubic(distance_to_center)
    # Normalize the weights matrix so that each row sums to 1.
    weights_sum = torch.sum(weights, 1).view(out_length, 1)
    weights = weights / weights_sum.expand(out_length, P)

    # If a column in weights is all zero, get rid of it. only consider the first and last column.
    weights_zero_tmp = torch.sum((weights == 0), 0)
    if not math.isclose(weights_zero_tmp[0], 0, rel_tol=1e-6):
        indices = indices.narrow(1, 1, P - 2)
        weights = weights.narrow(1, 1, P - 2)
    if not math.isclose(weights_zero_tmp[-1], 0, rel_tol=1e-6):
        indices = indices.narrow(1, 0, P - 2)
        weights = weights.narrow(1, 0, P - 2)
    weights = weights.contiguous()
    indices = indices.contiguous()
    sym_len_s = -indices.min() + 1
    sym_len_e = indices.max() - in_length
    indices = indices + sym_len_s - 1
    return weights, indices, int(sym_len_s), int(sym_len_e)


# --------------------------------------------
# imresize for tensor image [0, 1]
# --------------------------------------------
def imresize(img, scale, antialiasing=True):
    # Now the scale should be the same for H and W
    # input: img: pytorch tensor, CHW or HW [0,1]
    # output: CHW or HW [0,1] w/o round
    need_squeeze = True if img.dim() == 2 else False
    if need_squeeze:
        img.unsqueeze_(0)
    in_C, in_H, in_W = img.size()
    out_C, out_H, out_W = in_C, math.ceil(in_H * scale), math.ceil(in_W * scale)
    kernel_width = 4
    kernel = 'cubic'

    # Return the desired dimension order for performing the resize.  The
    # strategy is to perform the resize first along the dimension with the
    # smallest scale factor.
    # Now we do not support this.

    # get weights and indices
    weights_H, indices_H, sym_len_Hs, sym_len_He = calculate_weights_indices(
        in_H, out_H, scale, kernel, kernel_width, antialiasing)
    weights_W, indices_W, sym_len_Ws, sym_len_We = calculate_weights_indices(
        in_W, out_W, scale, kernel, kernel_width, antialiasing)
    # process H dimension
    # symmetric copying
    img_aug = torch.FloatTensor(in_C, in_H + sym_len_Hs + sym_len_He, in_W)
    img_aug.narrow(1, sym_len_Hs, in_H).copy_(img)

    sym_patch = img[:, :sym_len_Hs, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    img_aug.narrow(1, 0, sym_len_Hs).copy_(sym_patch_inv)

    sym_patch = img[:, -sym_len_He:, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    img_aug.narrow(1, sym_len_Hs + in_H, sym_len_He).copy_(sym_patch_inv)

    out_1 = torch.FloatTensor(in_C, out_H, in_W)
    kernel_width = weights_H.size(1)
    for i in range(out_H):
        idx = int(indices_H[i][0])
        for j in range(out_C):
            out_1[j, i, :] = img_aug[j, idx:idx + kernel_width, :].transpose(0, 1).mv(weights_H[i])

    # process W dimension
    # symmetric copying
    out_1_aug = torch.FloatTensor(in_C, out_H, in_W + sym_len_Ws + sym_len_We)
    out_1_aug.narrow(2, sym_len_Ws, in_W).copy_(out_1)

    sym_patch = out_1[:, :, :sym_len_Ws]
    inv_idx = torch.arange(sym_patch.size(2) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(2, inv_idx)
    out_1_aug.narrow(2, 0, sym_len_Ws).copy_(sym_patch_inv)

    sym_patch = out_1[:, :, -sym_len_We:]
    inv_idx = torch.arange(sym_patch.size(2) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(2, inv_idx)
    out_1_aug.narrow(2, sym_len_Ws + in_W, sym_len_We).copy_(sym_patch_inv)

    out_2 = torch.FloatTensor(in_C, out_H, out_W)
    kernel_width = weights_W.size(1)
    for i in range(out_W):
        idx = int(indices_W[i][0])
        for j in range(out_C):
            out_2[j, :, i] = out_1_aug[j, :, idx:idx + kernel_width].mv(weights_W[i])
    if need_squeeze:
        out_2.squeeze_()
    return out_2


# --------------------------------------------
# imresize for numpy image [0, 1]
# --------------------------------------------
def imresize_np(img, scale, antialiasing=True):
    # Now the scale should be the same for H and W
    # input: img: Numpy, HWC or HW [0,1]
    # output: HWC or HW [0,1] w/o round
    img = torch.from_numpy(img)
    need_squeeze = True if img.dim() == 2 else False
    if need_squeeze:
        img.unsqueeze_(2)

    in_H, in_W, in_C = img.size()
    out_C, out_H, out_W = in_C, math.ceil(in_H * scale), math.ceil(in_W * scale)
    kernel_width = 4
    kernel = 'cubic'

    # Return the desired dimension order for performing the resize.  The
    # strategy is to perform the resize first along the dimension with the
    # smallest scale factor.
    # Now we do not support this.

    # get weights and indices
    weights_H, indices_H, sym_len_Hs, sym_len_He = calculate_weights_indices(
        in_H, out_H, scale, kernel, kernel_width, antialiasing)
    weights_W, indices_W, sym_len_Ws, sym_len_We = calculate_weights_indices(
        in_W, out_W, scale, kernel, kernel_width, antialiasing)
    # process H dimension
    # symmetric copying
    img_aug = torch.FloatTensor(in_H + sym_len_Hs + sym_len_He, in_W, in_C)
    img_aug.narrow(0, sym_len_Hs, in_H).copy_(img)

    sym_patch = img[:sym_len_Hs, :, :]
    inv_idx = torch.arange(sym_patch.size(0) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(0, inv_idx)
    img_aug.narrow(0, 0, sym_len_Hs).copy_(sym_patch_inv)

    sym_patch = img[-sym_len_He:, :, :]
    inv_idx = torch.arange(sym_patch.size(0) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(0, inv_idx)
    img_aug.narrow(0, sym_len_Hs + in_H, sym_len_He).copy_(sym_patch_inv)

    out_1 = torch.FloatTensor(out_H, in_W, in_C)
    kernel_width = weights_H.size(1)
    for i in range(out_H):
        idx = int(indices_H[i][0])
        for j in range(out_C):
            out_1[i, :, j] = img_aug[idx:idx + kernel_width, :, j].transpose(0, 1).mv(weights_H[i])

    # process W dimension
    # symmetric copying
    out_1_aug = torch.FloatTensor(out_H, in_W + sym_len_Ws + sym_len_We, in_C)
    out_1_aug.narrow(1, sym_len_Ws, in_W).copy_(out_1)

    sym_patch = out_1[:, :sym_len_Ws, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    out_1_aug.narrow(1, 0, sym_len_Ws).copy_(sym_patch_inv)

    sym_patch = out_1[:, -sym_len_We:, :]
    inv_idx = torch.arange(sym_patch.size(1) - 1, -1, -1).long()
    sym_patch_inv = sym_patch.index_select(1, inv_idx)
    out_1_aug.narrow(1, sym_len_Ws + in_W, sym_len_We).copy_(sym_patch_inv)

    out_2 = torch.FloatTensor(out_H, out_W, in_C)
    kernel_width = weights_W.size(1)
    for i in range(out_W):
        idx = int(indices_W[i][0])
        for j in range(out_C):
            out_2[:, i, j] = out_1_aug[:, idx:idx + kernel_width, j].mv(weights_W[i])
    if need_squeeze:
        out_2.squeeze_()

    return out_2.numpy()


if __name__ == '__main__':
    print('---')
#    img = imread_uint('test.bmp', 3)
#    img = uint2single(img)
#    img_bicubic = imresize_np(img, 1/4)



    
    
    
    
    

import os.path
import logging
import numpy as np
from collections import OrderedDict

import torch
from python_utils.logger import Logged
import python_utils.logger
import python_utils
sys.path.append('/home/jack/Desktop/BSRGAN')
sys.path.append("/home/jack/hidden/utils.py")
#from utils import utils_logger
#from utils import utils_image as util
#from utils import utils_model
#from models.network_rrdbnet import RRDBNet as net
from logger_settings import *
import cv2




def main():
    
    # ----------------------------------------
    # Preparation
    # ----------------------------------------
    model_name = 'drunet_color'
    quality_factors = [10, 20, 30, 40]
    testset_name = 'LIVE1'               # test set,  'LIVE1'
    need_degradation = True              # default: True

    task_current = 'db'       # 'dn' for deblocking
    n_channels = 3            # fixed
    model_pool = 'model_zoo'  # fixed
    testsets = 'testsets'     # fixed
    results = 'results'       # fixed
    noise_level_img = 0       # fixed: 0, noise level for LR image
    result_name = testset_name + '_' + model_name + '_' + task_current
    border = 0     # shave boader to calculate PSNR and SSIM
 
    # ----------------------------------------
    # L_path, E_path, H_path
    # ----------------------------------------
    L_path = os.path.join(testsets, testset_name) # L_path, for Low-quality images
    E_path = os.path.join(results, result_name)   # E_path, for Estimated images
    isExist = os.path.exists(E_path)
    if not isExist:
        os.mkdir(E_path)
    Logged.info('blind_sr_log', log_path='blind_sr_log.log')
    logger_name = result_name
    Logged.info(logger_name, log_path=os.path.join(E_path, logger_name+'.log'))
    logger = logging.getLogger(logger_name)

    device = torch.device('cpu')

    # ----------------------------------------
    # load model
    # ----------------------------------------
    model_path = os.path.join('model_zoo', 'drunet_deblocking_color.pth')
    from models.network_unet import UNetRes as net
    model = net(in_nc=4, out_nc=3, nc=[64, 128, 256, 512], nb=4, act_mode='R', downsample_mode='strideconv', upsample_mode='convtranspose', bias=False)  # define network

    model.load_state_dict(torch.load(model_path), strict=True)
    model.eval()
    for k, v in model.named_parameters():
        v.requires_grad = False
        
    model = model.to(device)
    logger.info('Model path: {:s}'.format(model_path))
    number_parameters = sum(map(lambda x: x.numel(), model.parameters()))
    logger.info('Params number: {}'.format(number_parameters))
    L_paths = util.get_image_paths(L_path)

    for quality_factor in quality_factors:

        test_results = OrderedDict()
        test_results['psnr'] = []
        test_results['ssim'] = []

        logger.info('model_name:{}, quality factor:{}'.format(model_name, quality_factor))
        logger.info(L_path)

        for idx, img in enumerate(L_paths):
    
            # ------------------------------------
            # (1) img_L
            # ------------------------------------
            img_name, ext = os.path.splitext(os.path.basename(img))
            logger.info('{:->4d}--> {:>10s}'.format(idx+1, img_name+ext))
            img_L = util.imread_uint(img, n_channels=n_channels)
            img_H = img_L.copy()

            # ------------------------------------
            # Do the JPEG compression
            # ------------------------------------
            if need_degradation:
                img_L = cv2.cvtColor(img_L, cv2.COLOR_RGB2BGR)
                result, encimg = cv2.imencode('.jpg', img_L, [int(cv2.IMWRITE_JPEG_QUALITY), quality_factor])
                img_L = cv2.imdecode(encimg, 1)
                img_L = cv2.cvtColor(img_L, cv2.COLOR_BGR2RGB)

            img_L = util.uint2tensor4(img_L)

            noise_level = (100-quality_factor)/100.0
            noise_level = torch.FloatTensor([noise_level])
            noise_level_map = torch.ones((1,1, img_L.shape[2], img_L.shape[3])).mul_(noise_level).float()
            img_L = torch.cat((img_L, noise_level_map), 1)

            img_L = img_L.to(device)

            # ------------------------------------
            # (2) img_E
            # ------------------------------------
            img_E = model(img_L)
            img_E = util.tensor2uint(img_E)

            if need_degradation:

                img_H = img_H.squeeze()
                # --------------------------------
                # PSNR and SSIM
                # --------------------------------
                psnr = util.calculate_psnr(img_E, img_H, border=border)
                ssim = util.calculate_ssim(img_E, img_H, border=border)
                test_results['psnr'].append(psnr)
                test_results['ssim'].append(ssim)
                logger.info('{:s} - PSNR: {:.2f} dB; SSIM: {:.4f}.'.format(img_name+ext, psnr, ssim))

            # ------------------------------------
            # save results
            # ------------------------------------
            util.imsave(img_E, os.path.join(E_path, img_name+'_'+model_name+'_'+str(quality_factor)+'.png'))

        if need_degradation:
            ave_psnr = sum(test_results['psnr']) / len(test_results['psnr'])
            ave_ssim = sum(test_results['ssim']) / len(test_results['ssim'])
            logger.info('Average PSNR/SSIM(RGB) - {} - qf{} --PSNR: {:.2f} dB; SSIM: {:.4f}'.format(result_name, quality_factor, ave_psnr, ave_ssim))


if __name__ == '__main__':

    main()


!locate /model.py | grep cloned_base

from torchgen.model import network_unet

results/LIVE1_drunet_color_db

import M2D
help(M2D)

%%writefile M2D.py
"""Month2Num(month)
span(timestamp1, timestamp2): This will show the span in hours between two timestamps.
Date = "April 09 2020 10:00:00"
DateEpoch(Date)"""
from __future__ import division
import time
def Month2Num(month):
    number=""
    months=["January","February","March","April","May","June","July",\
            "August","September","October","November","December"]
    Numbers=["01","02","03","04","05","06","07","08","09","10","11","12"]
    if month==months[0]:number=Numbers[0]
    if month==months[1]:number=Numbers[1]
    if month==months[2]:number=Numbers[2]
    if month==months[3]:number=Numbers[3]
    if month==months[4]:number=Numbers[4]
    if month==months[5]:number=Numbers[5]
    if month==months[6]:number=Numbers[6]
    if month==months[7]:number=Numbers[7]
    if month==months[8]:number=Numbers[8]
    if month==months[9]:number=Numbers[9]
    if month==months[10]:number=Numbers[10]
    if month==months[11]:number=Numbers[11]    
    return number

def span(timestamp1, timestamp2):
    SPAN = timestamp2-timestamp1
    res =SPAN/3600
    result = round(res,2)
    return result

def DateEpoch(Date):
    dt = time.strftime(Date)
    Date= Date.replace(",",'')
    DATE = Date.split(" ")
    date_ti = DATE[1]+"/"+Month2Num(DATE[0])+"/"+DATE[2]+" "+DATE[3]#[:-3]
    #03-16-2020 02:48,3777
    pattern = '%d/%m/%Y %H:%M:%S'
    timestamp = int(time.mktime(time.strptime(date_ti, pattern)))
    return timestamp

def Date2Epoch(Date,last=1583621400):
    dt = time.strftime(Date)
    Date= Date.replace(",",'')
    DATE = Date.split(" ")
    print(DATE[0],DATE[1],DATE[2],DATE[3])
    date_ti = DATE[1]+"/"+Month2Num(DATE[0])+"/"+DATE[2]+" "+DATE[3]#[:-3]
    #Recognized pattern
    #16/03/2020 02:48:20
    pattern = '%d/%m/%Y %H:%M:%S'
    #pattern = '%m/%d/%Y %H:%M:%S'
    epochs = int(time.mktime(time.strptime(date_ti, pattern)))
    #print ("dt_ti, epochs",dt_ti, epochs)
    Epoch = (date_ti, epochs,span(int(last),int(epochs)))
    #EPOCHS.append(int(epochs))
    return Epoch

from M2D import *
Date = "January 01 1970 08:00:00"
print(Date2Epoch(Date,last=1))
print("----------- One day later (24 hours) ------------")
Date = "January 02 1970 08:00:00"
print(Date2Epoch(Date,last=0))
print("24 hours is a '86400' value as a timestamp and 24.0 hours have passed.")

from M2D import Date2Epoch
Date = "April 09 2020 10:00:00"
Date2Epoch(Date,last=1586390400)

from M2D import Date2Epoch
Date = "April 09 2020 10:00:00"
print(Date2Epoch(Date,last=1586390400))
print("\nNotice the result has three elements.")
print("A, B, C = Date2Epoch(Date,last=1586390400)")
A, B, C = Date2Epoch(Date,last=1586390400)
print("I can then use them independently.\n")
print("A: ",A)
print("B: ",B)
print("C: ",C)
print("The variables A B C may use any names.")
print("Example: LastD, LastT, Lastspan = Date2Epoch(Date,last=1586390400)")
LastD, LastT, Lastspan = Date2Epoch(Date,last=1586390400)
print("LastD: ",LastD)
print("LastT: ",LastT)
print("Lastspan: ",Lastspan)
print("---------------------------------")
last=1586397600
Date = "April 10 2020 10:30:00"
D,T,span = Date2Epoch(Date,last)
print(" The time passed hours has a",T-LastT,"value as a timestamp and",span,"hours have passed \
\n since",LastD,"and today,", D)
print("---------------------------------")
print(D)
print(T)
print(span)
print(span/8600)

%%writefile DTE.py
from M2D import *
import time
def Date2Epoch(Date,last=1583621400):
    dt = time.strftime(Date)
    Date= Date.replace(",",'')
    DATE = Date.split(" ")
    print(DATE[0],DATE[1],DATE[2],DATE[3])
    date_ti = DATE[1]+"/"+Month2Num(DATE[0])+"/"+DATE[2]+" "+DATE[3]#[:-3]
    #03-16-2020 02:48,3777
    pattern = '%d/%m/%Y %H:%M:%S'
    epochs = int(time.mktime(time.strptime(date_ti, pattern)))
    Epoch = (date_ti, epochs,span(int(last),int(epochs)))
    return Epoch


from DTE import Date2Epoch
Date = "January 01 1970 08:00:00"
Date2Epoch(Date,last=1)

from M2D import *
month = "June"
print (month+" is month ",Month2Num(month))
timestamp1 = 1586390400
timestamp2 = 1586397600
print("The span between",timestamp1,"and",timestamp2,"is",span(timestamp1, timestamp2),"hours.")
Date = "April 09 2020 10:00:00"
print("The date/time of",Date+", is the same as timestamp",DateEpoch(Date),".")

def DateEpoch(Date):
    dt = time.strftime(Date)
    Date= Date.replace(",",'')
    DATE = Date.split(" ")
    date_ti = DATE[1]+"/"+Month2Num(DATE[0])+"/"+DATE[2]+" "+DATE[3]#[:-3]
    #03-16-2020 02:48,3777
    pattern = '%d/%m/%Y %H:%M:%S'
    timestamp = int(time.mktime(time.strptime(date_ti, pattern)))
    return timestamp
Date = "April 09 2020 10:00:00"
DateEpoch(Date)

from M2D import *
month = "June"
Month2Num(month)

#%%writefile DTE.py
from M2D import *
import time
def Date2Epoch(Date,last=1583621400):
    dt = time.strftime(Date)
    Date= Date.replace(",",'')
    DATE = Date.split(" ")
    print(DATE[0],DATE[1],DATE[2],DATE[3])
    date_ti = DATE[1]+"/"+Month2Num(DATE[0])+"/"+DATE[2]+" "+DATE[3]#[:-3]
    #Recognized pattern
    #16/03/2020 02:48:20
    pattern = '%d/%m/%Y %H:%M:%S'
    #pattern = '%m/%d/%Y %H:%M:%S'
    epochs = int(time.mktime(time.strptime(date_ti, pattern)))
    #print ("dt_ti, epochs",dt_ti, epochs)
    Epoch = (date_ti, epochs,span(int(last),int(epochs)))
    #EPOCHS.append(int(epochs))
    return Epoch

https://docs.python.org/3/library/sqlite3.html

# USAGE: python cap.py path/filename.png
!python cap.py screencap/test.png


# /home/jack/anaconda2/lib/python2.7/site-packages/Immanip/RandCap640.py
import os
import time
from random import randint
from PIL import Image
import GenIm
count = 0
#Saves 100 images 
total = 300
while count<total:
    # captures the window
    os.system("import -window root screencap/temp.png")
    #generates a filename based on time
    img = Image.open("screencap/temp.png")
    img2 = img.crop((200, 0, 968, 768))
    img2.save('screencap/temp2.png')
    imfile = Image.open("screencap/temp2.png")
  
    imout = time.strftime("screencap/640_manual_%Y%m%d%H%M%S.png")
    #imout = 'screencap/temp640.png'
    GenIm.Signat(imfile, imout)
    print "Number : ",count+1,"of",total,"  FileName : ",imout
    # Adds a random timer
    nap = randint(10, 30)
    # Sleeps for the randomly chosen time
    time.sleep(nap)
    count = count +1

    

!mkdir screencap

#RandCap.py
import os
import time
from random import randint
from PIL import Image
count = 0
#Saves 100 images 
total = 100
while count<total:
    # captures the window
    os.system("import -window root screencap/temp.png")
    #generates a filename based on time
    filename = time.strftime("screencap/%Y%m%d%H%M%S.png")
    # Renames the temp.png to a time based filename Example:  20170911113012.png
    os.rename("screencap/temp.png", filename)
    print "Number : ",count+1,"of",total,"  FileName : ",filename
    # Adds a random timer
    nap = randint(60, 430)
    # Sleeps for the randomly chosen time
    time.sleep(nap)
    count = count +1

    

from PIL import Image, ImageChops
im = Image.open("screencap/20170911113012.png")
im.size

%reset -f

!rm /home/jack/hidden/Key.pyc

%%writefile /home/jack/hidden/Key.py
def twiter():
    CONSUMER_KEY = 'XXXXXXXXXXXX'
    CONSUMER_SECRET = 'YYYYYYYYYYYYY'
    ACCESS_KEY = 'ZZZZZZZZZZZZZZZZZZZZZZZ'
    ACCESS_SECRET = '000000000000000000000'
    twitter = (CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
    return twitter

import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
sys.path.insert(0, "/home/jack/hidden")
import Key
#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]
twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)

print CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET

import Authorize
ftp = Authorize.keys()[0]
username = Authorize.keys()[1]
password = Authorize.keys()[2]

print ftp, username, password

# %load /home/jack/Desktop/imagebot/Key.py
def twiter():
    CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
    CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
    ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
    ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'
    twir = (CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
    return twir

#ONE TIME MANUAL POSTS
#!/home/jack/anaconda2/python
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(0, "/home/jack/Desktop/imagebot")
import Key

sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter

def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            #lines = contents_of_file
            line_number = random.randrange(0, len(lines))
        return lines[line_number]

#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)

#f = open("art.txt")
#text = f.read()
# Build the model.
#text_model = markovify.Text(text)
infile = "ToUse.txt"
STR = generate_the_word(infile)


# Print randomly-generated sentences of no more than 140 characters
#STR = (text_model.make_short_sentence(140))
#STR = ("Sometimes we have visitors at night. If lucky we don't wake up.")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"

#response = twitter.upload_media(media=photo)
#twitter.update_status(status=STR, media_ids=[response['media_id']])
twitter.update_status(status=STR )
print STR

from PIL import Image, ImageChops
import time
img = Image.open("screencap/20170911113012.png")
img2 = img.crop((200, 0, 968, 768))
filename = time.strftime("screencap/640_%Y%m%d%H%M%S.png")
img2.save(filename)

import matplotlib
import numpy as np
import mpld3
import matplotlib.pyplot as plt
from PIL import Image
from mpld3 import plugins
%matplotlib inline
fig, ax = plt.subplots()
im = np.array(Image.open('screencap/20170911113012.png'))
plt.imshow(im)
plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()

!ls *.png

#%%writefile /home/jack/anaconda2/lib/python2.7/site-packages/Immanip/Mousecap.py
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
import matplotlib.widgets as widgets

def onselect(eclick, erelease):
    if eclick.ydata>erelease.ydata:
        eclick.ydata,erelease.ydata=erelease.ydata,eclick.ydata
    if eclick.xdata>erelease.xdata:
        eclick.xdata,erelease.xdata=erelease.xdata,eclick.xdata
    ax.set_ylim(erelease.ydata,eclick.ydata)
    ax.set_xlim(eclick.xdata,erelease.xdata)
    fig.canvas.draw()

fig = plt.figure()
ax = fig.add_subplot(111)
filename="snakewave.png"
im = Image.open(filename)
arr = np.asarray(im)
plt_image=plt.imshow(arr)
rs=widgets.RectangleSelector(
    ax, onselect, drawtype='box',
    rectprops = dict(facecolor='red', edgecolor = 'black', alpha=0.5, fill=True))
plt.show()

import GenIm
imfile = Image.open("screencap/640_20170911121823.png")
imout = "screencap/640.png"
GenIm.Signat(imfile, imout)

from PIL import Image
import GenIm

image = "screencap/20170911113012.png"
output = "screencap/Use01.jpg"
im = GenIm.Resize640(image, output)
im = Image.open("screencap/Use01.jpg")
Signat(imfile, imout)
im

%%writefile /home/jack/anaconda2/lib/python2.7/site-packages/Immanip/CcAP.py
import os
import time
from PIL import Image
filename = time.strftime("screencap/%Y%m%d%H%M%S.png")
os.system("import -window root screencap/temp.png")
imCap = Image.open("screencap/temp.png")
filename = time.strftime("screencap/%Y%m%d%H%M%S.png")
imCap.save(filename)
print filename


sys.path.insert(0,'/home/jack/anaconda2/pkgs/ipython-5.1.0-py27_0/lib/python2.7/site-packages/IPython/terminal/pt_inputhooks')
import gtk.gdk

w = gtk.gdk.get_default_root_window()
sz = w.get_size()
print "The size of the window is %d x %d" % sz
pb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,False,8,sz[0],sz[1])
pb = pb.get_from_drawable(w,w.get_colormap(),0,0,0,0,sz[0],sz[1])
if (pb != None):
    pb.save("screenshot.png","png")
    print "Screenshot saved to screenshot.png."
else:
    print "Unable to get the screenshot."

 VALUES (?, ?)" a, b)
 (%s, %s,)", (a, b))

import os
os.system("import -window root screencap/temp.png")


import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
import Key
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile):
        if random.randrange(num + 2): continue
        line = aline
    return line


# imported from Key.py
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
photo = open('screencap/640_20170911132757.png', 'rb')
response = twitter.upload_media(media=photo)
afile = open("code.txt", 'r')
STR = random_line(afile)
twitter.update_status(status=STR, media_ids=[response['media_id']])


from PIL import Image, ImageFont
import GenIm

#img = Image.open('tmmpp/hurricane002masked.jpg')
position = (20,20)
text= "HURRICANE 2017"
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
fs = font.getsize(text)
col = (255,255,255,200)
halo_col = (0,0,0)

print len(text.strip()),fs

from PIL import Image, ImageFont
import GenIm

img = Image.open('tmmpp/HURRICANE_01.png')
position = (340,600)
text= "JackNorthrup_ImageBot"
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
col = (255,255,255,150)
halo_col = (0,0,0)
newim = GenIm.Draw_text_with_halo(img, position, text, font, col, halo_col)
newim.save("tmmpp/HURRICANE_02.png")
!showme tmmpp/HURRICANE_02.png

%%writefile code.txt
import random
import wx
import wx.lib.scrolledpanel as scrolled
class MyForm(wx.Frame) , 
def __init__(self) , 
wx.Frame.__init__(self ,  None ,  wx.ID_ANY ,   , Font Tutorial , )
# Add a panel so it looks the correct on all platforms
panel = scrolled.ScrolledPanel(self)
panel.SetAutoLayout(1) panel.SetupScrolling()
fontSizer = wx.BoxSizer(wx.VERTICAL)
families = { , FONTFAMILY_DECORATIVE , wx.FONTFAMILY_DECORATIVE ,  # A decorative font
 , FONTFAMILY_DEFAULT , wx.FONTFAMILY_DEFAULT , 
 , FONTFAMILY_MODERN , wx.FONTFAMILY_MODERN ,      # Usually a fixed pitch font
 , FONTFAMILY_ROMAN , wx.FONTFAMILY_ROMAN ,       # A formal ,  serif font
 , FONTFAMILY_SCRIPT , wx.FONTFAMILY_SCRIPT ,      # A handwriting font
 , FONTFAMILY_SWISS , wx.FONTFAMILY_SWISS ,       # A sans-serif font
 , FONTFAMILY_TELETYPE , wx.FONTFAMILY_TELETYPE    # A teletype font
 weights = { , FONTWEIGHT_BOLD , wx.FONTWEIGHT_BOLD , 
 , FONTWEIGHT_NORMAL , wx.FONTWEIGHT_NORMAL
styles = { , FONTSTYLE_ITALIC , wx.FONTSTYLE_ITALIC , 
 , FONTSTYLE_NORMAL , wx.FONTSTYLE_NORMAL , 
 , FONTSTYLE_SLANT , wx.FONTSTYLE_SLANT ,  sizes = [8 ,  10 ,  12 ,  14]
for family in families.keys() , 
for weight in weights.keys() , 
for style in styles.keys() , 
label =  , %s    %s    %s ,  % (family ,  weight ,  style)
size = random.choice(sizes)
font = wx.Font(size ,  families[family] ,  styles[style] ,  
weights[weight])  , txt = wx.StaticText(panel ,  label=label)
txt.SetFont(font) fontSizer.Add(txt ,  0 ,  wx.ALL ,  5)
panel.SetSizer(fontSizer)
sizer = wx.BoxSizer(wx.HORIZONTAL)
sizer.Add(panel ,  1 ,  wx.EXPAND)
self.SetSizer(sizer) Run the program
if __name__ ==  , __main__ , app = wx.App(False) frame = MyForm().Show()
app.MainLoop() # retrieve a line by the first word
def get_record(key ,  datafile) , '''return line of data file where first  , word ,  matches key'''
results = None with open(datafile) as data , 
for line in data , if key == line.split()[0] ,results = line
#break  return results datafile='data/twit.data' key = 'Trump' text = get_record(key ,  datafile)
print text twitter = Twitter() # username/password not required for these calls
friends = twitter.friends.ids(screen_name=USERNAME)
followers = twitter.followers.ids(screen_name=USERNAME)
guilty = [x for x in friends if x not in followers]
print  , There are %s tweeps you follow who do not follow you ,  % len(guilty)
for user_id in guilty , user = twitter.users.show(user_id=user_id)
print  , %s follows %s and has %s followers. ,  % \ user['name'] ,  user['friends_count'] ,  user['followers_count'] )
import gtk.gdk w = gtk.gdk.get_default_root_window()
sz = w.get_size() print 'The size of the window is %d x %d % sz
pb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB , False , 8 , sz[0] , sz[1])
pb = pb.get_from_drawable(w , w.get_colormap() , 0 , 0 , 0 , 0 , sz[0] , sz[1])
if (pb != None) ,  pb.save('screenshot.png' , 'png')
print 'Screenshot saved to screenshot.png.'print 'Unable to get the screenshot.'
names.append(follower[ , name , ].encode( , utf-8 , )) usernames.append(follower[ , screen_name , ].encode( , utf-8 , ))
ids.append(follower[ , id , ]) locations.append(follower[ , location , ].encode( , utf-8 , ))
follower_count.append(follower[ , followers_count , ])
next_cursor = get_followers[ , next_cursor , ]
path = r , /home/jack/Desktop/deep-dream-generator/notebooks/new/1/ , 
#path = r , crawler4/ , base_image = random.choice([  x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path ,  x))  ])
filename0=(path+base_image) #path0 = r , blend/ , 
path0 = r , newmask/ , base_image0 = random.choice([
x0 for x0 in os.listdir(path0) if os.path.isfile(os.path.join(path0 ,  x0))
]) filename00=(path0+base_image0) path1 = r , crawler4/ , 
base_image1 = random.choice([  x1 for x1 in os.listdir(path1)
if os.path.isfile(os.path.join(path1 ,  x1))])
mask0=(path1+base_image1) im1 = Image.open(filename0)
im1 = im1.resize((640 , 640) ,  Image.NEAREST) im1.save( , tmp/01.png , )
jpg_im1 = Image.open( , tmp/01.png , ) im02 = Image.open(filename00)
im2 = im02.resize((640 , 640) ,  Image.NEAREST)
im1.save( , tmp/02.png , ) jpg_im2 = Image.open( , tmp/02.png , ) 
im03 = Image.open(mask0) im04 = im03.resize((640 , 640) ,  Image.NEAREST)
#im04.save( , tmp/03.png , ) #jpg_im3 = Image.open( , tmp/03.png , )
#image_file = jpg_im3.convert( , RGBA , ) #im04 = image_file.convert('1')
datas = im04.getdata() newData = [] for item in datas , 
 if item[0] == 255 and item[1] == 255 and item[2] == 255 , 
newData.append((255 ,  255 ,  255 ,  0))  else , 
 newData.append(item) im04.putdata(newData) time.sleep(2)  
result1 = ImageChops.composite(jpg_im1 ,  jpg_im2 ,  im03)
#result1 = ImageChops.blend(jpg_im1 ,  jpg_im2 ,  .5)
filename = time.strftime( , crawler/%Y%m%d%H%M%S.png , )result1.save(filename)


!ls *.txt

import os
import random
import sys

def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile):
        if random.randrange(num + 2): continue
        line = aline
    return line


afile = open("elonmusk.txt", 'r')
STR = random_line(afile)
print STR

from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import os
import sys
import Key
import twython
from twython import Twython
def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile):
        if random.randrange(num + 2): continue
        line = aline
    return line
#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
afile = "code.txt"
STR = random_line(afile)
video = open('screencap/out.mp4', 'rb')
response = twitter.upload_video(media=video, media_type='video/mp4')
twitter.update_status(status=STR, media_ids=[response['media_id']])


from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
import Key
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile):
        if random.randrange(num + 2): continue
        line = aline
    return line

#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#afile = "code.txt"

#STR = random_line(afile)
STR = "Test posting a screen capture video"
video = open('screencap/out.mp4', 'rb')
response = twitter.upload_video(media=video, media_type='video/mp4')
twitter.update_status(status=STR, media_ids=[response['media_id']])


import random
from random import randint
import time
import markovify
import os
import Key
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)

results = twitter.cursor(twitter.search, q='hurricane, florida')
print results

from twython import Twython, TwythonError
# Need to import csv now too!
import csv
import datetime
import Key

CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
# This time we want to make several lists!
names = []
usernames = []
ids = []
locations = []
follower_count = []

datestamp = datetime.datetime.now().strftime("%Y-%m-%d")

username = raw_input("Retrieve Follower list of: ")

next_cursor = -1

while(next_cursor):
    get_followers = twitter.get_followers_list(screen_name=username,count=200,cursor=next_cursor)
    for follower in get_followers["users"]:
# And add some more user details to its corresponding list
        names.append(follower["name"].encode("utf-8"))
        usernames.append(follower["screen_name"].encode("utf-8"))
        ids.append(follower["id"])
        locations.append(follower["location"].encode("utf-8"))
        follower_count.append(follower["followers_count"])
        next_cursor = get_followers["next_cursor"]

# Instead of creating a .txt we want to create a .csv!
open_csv = open(username+"-"+datestamp+".csv","wb")
# And write to it...
followers_csv = csv.writer(open_csv)

# Creating our top "title" row
names.insert(0,"@%s has %s followers (%s)" % (str(username),str(len(follower)),str(datestamp)))
usernames.insert(0,"")
ids.insert(0,"")
locations.insert(0,"")
follower_count.insert(0,"")

# Give each column its own title
names.insert(1,"Display Name")
usernames.insert(1,"Username (@)")
ids.insert(1,"User ID")
locations.insert(1,"Location")
follower_count.insert(1,"# of their Followers")

# Merge all our lists together so that they line up
rows = zip(names,usernames,ids,locations,follower_count)

# Write each row one-by-one to our spreadsheet
for row in rows:
    followers_csv.writerow(row)

# Save and close our csv spreadsheet
open_csv.close()



for result in results
    count=count+1
    if count>10:
        break
    print result


import twitter
api = twitter.Api()
api = twitter.Api(consumer_key='XXXXXXXXXXXXXXXXXXXXXXXX',
                  consumer_secret='XXXXXXXXXXXXXXXXXXXXXXXX',
                  access_token_key='XXXXXXXXXXXXXXXXXXXXXXXX',
                  access_token_secret='XXXXXXXXXXXXXXXXXXXXXXXX')
users = api.GetFriends()
print([u.name for u in users])

import twitter
api = twitter.Api()
api = twitter.Api(consumer_key='XXXXXXXXXXXXXXXXXXXXXXXX',
                  consumer_secret='XXXXXXXXXXXXXXXXXXXXXXXX',
                  access_token_key='XXXXXXXXXXXXXXXXXXXXXXXX',
                  access_token_secret='XXXXXXXXXXXXXXXXXXXXXXXX')
user = int(166329578)
statuses = api.GetUserTimeline(user)
print([s.text for s in statuses])

import twitter
import Key
api = twitter.Api()
api = twitter.Api(consumer_key=Key.twiter()[0],
                  consumer_secret=Key.twiter()[0],
                  access_token=Key.twiter()[0],
                  access_token_secret=Key.twiter()[0])
user = int(166329578)
statuses = api.GetUserTimeline(user)
print([s.text for s in statuses])

#Get a user name from id nymber or vis versa
import tweepy
import Key
consumer_key1 = Key.twiter()[0]
consumer_secret1 = Key.twiter()[1]
access_token1 = Key.twiter()[2]
access_token_secret1 = Key.twiter()[3]
twitter = Key.twiter()[4]

'''
consumer_key='XXXXXXXXXXXXXXXXXXXXXXXX'
consumer_secret='XXXXXXXXXXXXXXXXXXXXXXXX'
access_token ='XXXXXXXXXXXXXXXXXXXXXXXX'
access_token_secret='XXXXXXXXXXXXXXXXXXXXXXXX'
'''
print consumer_key1,consumer_secret1,access_token1,access_token_secret1,"\n", twitter

#Get a user name from id nymber or vis versa
import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]



auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)
user = api.get_user(166329578)                                                           
user.screen_name

#To get user id from user screen name
#user = api.get_user(screen_name = 'saimadhup')
#user.id

#Get a user name from id number or vis versa
import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)
#user = api.get_user(166329578)                                                           
#user.screen_name

#To get user id from user screen name
user = api.get_user(screen_name = 'jacklnorthrup')
user.id

import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)
for status in tweepy.Cursor(api.home_timeline).items(20):
    # Process a single status
    print(status.text)

!locate Key.py

%%writefile /home/jack/Desktop/imagebot/Key.py
def twiter():
    CONSUMER_KEY = 'EankTLfFVg3ylz3Y3le0irqra'
    CONSUMER_SECRET = 'LGECyXVw9pIIlOCkEzo8x3ho8HlsK8dKtdK9sFdkaglYvvFH3O'
    ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
    ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'
    twitter = (CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
    return twitter

import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]
print consumer_key,consumer_secret,access_token,access_token_secret

Consumer Key (API Key) EankTLfFVg3ylz3Y3le0irqra
Consumer Secret (API Secret) LGECyXVw9pIIlOCkEzo8x3ho8HlsK8dKtdK9sFdkaglYvvFH3O 
Access Token 296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf
Access Token Secret zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj 

import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

for status in tweepy.Cursor(api.home_timeline).items(10):
    # Process a single status
    process_or_store(status._json)

import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]


auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)


%%writefile config.py
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]


!python twitter_download.py -q Hurricane -d data


# To run this code, first edit config.py with your configuration, then:
#
# mkdir data
# python twitter_stream_download.py -q apple -d data
# 
# It will produce the list of tweets for the query "apple" 
# in the file data/stream_apple.json

import tweepy
from tweepy import Stream
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
import time
import argparse
import string
import config
import json
import Key
def get_parser():
    """Get parser for command line arguments."""
    parser = argparse.ArgumentParser(description="Twitter Downloader")
    parser.add_argument("-q",
                        "--query",
                        dest="query",
                        help="Query/Filter",
                        default='-')
    parser.add_argument("-d",
                        "--data-dir",
                        dest="data_dir",
                        help="Output/Data Directory")
    return parser


class MyListener(StreamListener):
    """Custom StreamListener for streaming data."""

    def __init__(self, data_dir, query):
        query_fname = format_filename(query)
        self.outfile = "%s/stream_%s.json" % (data_dir, query_fname)

    def on_data(self, data):
        try:
            with open(self.outfile, 'a') as f:
                f.write(data)
                print(data)
                return True
        except BaseException as e:
            print("Error on_data: %s" % str(e))
            time.sleep(5)
        return True

    def on_error(self, status):
        print(status)
        return True


def format_filename(fname):
    """Convert file name into a safe string.

    Arguments:
        fname -- the file name to convert
    Return:
        String -- converted file name
    """
    return ''.join(convert_valid(one_char) for one_char in fname)


def convert_valid(one_char):
    """Convert a character into '_' if invalid.

    Arguments:
        one_char -- the char to convert
    Return:
        Character -- converted char
    """
    valid_chars = "-_.%s%s" % (string.ascii_letters, string.digits)
    if one_char in valid_chars:
        return one_char
    else:
        return '_'

@classmethod
def parse(cls, api, raw):
    status = cls.first_parse(api, raw)
    setattr(status, 'json', json.dumps(raw))
    return status



consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]


auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)    
twitter_stream = Stream(auth, MyListener("data", "hurricane"))
twitter_stream.filter(track = "hurricane")


#! /usr/bin/env python

# how to unfollow everyone who isn't following you
# By Jamieson Becker (Public Domain/no copyright, do what you will)

# Easy instructions, even if you don't know Python
#
# 1.  Install pip (apt-get install python-pip) and then
#     pip install tweepy, which is the python twitter client
#
# 2.  create a new app in your account at dev.twitter.com
#     and then plug in your consumer and app keys below.
#     Trim all whitespace at beginning/end of your keys.
#
# 3.  the twitter app needs to have permissions changed to
#     read-write, as apps are read-only by default.
# 
# 4.  Execute this script: python unfollow.py

import time
import tweepy
import sys
import Key


consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)    


print "Loading followers.."
follower_objects = [follower for follower in tweepy.Cursor(api.followers).items()]

print "Found %s followers, finding friends.." % len(followers)
friend_objects = [friend for friend in tweepy.Cursor(api.friends).items()]

# create dictionaries based on id's for easy lookup
friends = dict([(friend.id, friend) for friend in friend_objects])
followers = dict([(follower.id, follower) for follower in follower_objects])

# find all your "non_friends" - people who don't follow you even though you follow them.
non_friends = [friend for friend in friend_objects if friend.id not in followers]

# double check, since this could be a rather traumatic operation.
print "Unfollowing %s non-following users.." % len(non_friends)
print "This will take approximately %s minutes." % (len(non_friends)/60.0)
answer = raw_input("Are you sure? [Y/n]").lower()
if answer and answer[0] != "y":
    sys.exit(1)

# start the removal process. In the event of a failure (thanks, twitter!),
# retry once after five seconds. An error on same record again is
# probably more serious issue, so abort with error

for nf in non_friends:
    print "Unfollowing " + str(nf.id).rjust(10)
    try:
        nf.unfollow()
    except:
        print "  .. failed, sleeping for 5 seconds and then trying again."
        time.sleep(5)
        nf.unfollow()
    print " .. completed, sleeping for 1 second."
time.sleep(1)

import tweepy
import Key


consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)    


!ls

%load bible2.txt.tmp

import os
from sys import argv

#run, filename = argv
#filename = "data/stream.json"
filename = "bible2.txt"
fin = open(filename)
fout = open(filename + '.tmp', 'w')
lines = fin.readlines()
for line in lines:
    #remove the first N_  (8) characters from the front of each line in a text file 
    fout.write(line[8:])
fout.close()
fin.close()
#os.rename(filename + '.tmp', filename)

from twitter.api import Twitter

USERNAME = 'r1cky' # set to your/any username

twitter = Twitter() # username/password not required for these calls
friends = twitter.friends.ids(screen_name=USERNAME)
followers = twitter.followers.ids(screen_name=USERNAME)
guilty = [x for x in friends if x not in followers]

print "There are %s tweeps you follow who do not follow you" % len(guilty)

for user_id in guilty:
    user = twitter.users.show(user_id=user_id)
    print "%s follows %s and has %s followers." % \
              (user['name'], user['friends_count'], user['followers_count'] )


%%writefile /home/jack/anaconda2/lib/python2.7/site-packages/Txmanip/wraptext.py
import textwrap
# Use;   Txmanip.TextWrap(filename) Default is 100 characters
def TextWrap(filename)
    d = open(filename, "r")
    value = d.read()
    # Wrap this text.
    wrapper = textwrap.TextWrapper(width=100)
    word_list = wrapper.wrap(text=value)
    # Print each line.
    for element in word_list:
        print element
  



import tweepy
from tweepy import Stream
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
import time
import argparse
import string
import config
import json


class MyListener(StreamListener):
    """Custom StreamListener for streaming data."""

    def __init__(self, data_dir, query):
        query_fname = format_filename(query)
        self.outfile = "%s/stream_%s.json" % (data_dir, query_fname)

    def on_data(self, data):
        try:
            with open(self.outfile, 'a') as f:
                f.write(data)
                print(data)
                return True
        except BaseException as e:
            print("Error on_data: %s" % str(e))
            time.sleep(5)
        return True

    def on_error(self, status):
        print(status)
        return True


def format_filename(fname):
    return ''.join(convert_valid(one_char) for one_char in fname)


def convert_valid(one_char):
    valid_chars = "-_.%s%s" % (string.ascii_letters, string.digits)
    if one_char in valid_chars:
        return one_char
    else:
        return '_'

@classmethod
def parse(cls, api, raw):
    status = cls.first_parse(api, raw)
    setattr(status, 'json', json.dumps(raw))
    return status

if __name__ == '__main__':
    parser = get_parser()
    args = parser.parse_args()
    auth = OAuthHandler(config.consumer_key, config.consumer_secret)
    auth.set_access_token(config.access_token, config.access_secret)
    api = tweepy.API(auth)

    twitter_stream = Stream(auth, MyListener(args.data_dir, args.query))
    twitter_stream.filter(track=[args.query])


import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)


import sqlite3
conn = sqlite3.connect('data/twitter.db')
c = conn.cursor()
c.execute("""CREATE TABLE twitter (
             contact_id integer PRIMARY KEY,
             twittername text NOT NULL,
             twitterid text NOT NULL,
             keywords text NOT NULL);
          """)
conn.commit()
conn.close()


#confirm it exists
!ls data/twitter.db

hurricanes, earthquake, wildfires
Enter Twitter Name: >>TheBaxterBean
Enter Twitter Number: >>166329578
Enter keywords: >>Hurricane

SELECT * FROM twitter WHERE keywords LIKE '%hurricane%'


import sqlite3
import numpy as np
conn = sqlite3.connect('data/twitter.db')
c = conn.cursor()# Never do this -- insecure!

t = ('Hurricane',)
c.execute('SELECT * FROM twitter ORDER BY keywords')
#print(c.fetchall())


arr = (c.fetchall())

file = 'TheBaxterbean'
np.savez(file, arr, allow_pickle=True, fix_imports=True)
conn.close()

from tempfile import TemporaryFile
outfile = TemporaryFile()

x = np.arange(10)
np.save(outfile, x)
outfile='TheBaxterbean.npy'
#outfile.seek(0) # Only needed here to simulate closing & reopening file
np.load(outfile)

from tempfile import TemporaryFile
outfile = TemporaryFile()

x = np.arange(10)
np.save(outfile, x)

outfile.seek(0) # Only needed here to simulate closing & reopening file
np.load(outfile)

%%writefile /home/jack/anaconda2/lib/python2.7/site-packages/QuickStore.py
import sqlite3

def store():
    print "Leave Database-Name empty to use `/home/jack/Default.db`."
    print "You many enter three sets of data (DataOne & DataTwo), and Keywords  "  
    Dbname = raw_input("Database-Name: >>") or "/home/jack/Default.db"
    conn = sqlite3.connect(Dbname)
    conn.commit()
    conn.close()
    print Dbname
    storeOne = raw_input("Enter DataOne: >>")
    storeTwo = raw_input("Enter DataTwo: >>")
    keywords = raw_input("Enter Keywords: >>")

    info = (storeOne,storeTwo,keywords)
    insert_info(info,Dbname)
    return Dbname

def insert_info(info,Dbname):
        conn = sqlite3.connect(Dbname)
        c = conn.cursor()
        c.execute("""CREATE TABLE IF NOT EXISTS storage (
                   id integer PRIMARY KEY,
                   storeOne text NOT NULL,
                   storeTwo text NOT NULL,
                   keywords text NOT NULL);
                   """)
        sql = "insert into storage (storeOne,storeTwo,keywords) values (?, ?, ?)"
        c.execute(sql, info)
        conn.commit()
        conn.close()

        
def readDB():
    conn = sqlite3.connect('/home/jack/Default.db')
    c = conn.cursor()# Never do this -- insecure!
    for row in c.execute('SELECT * FROM storage ORDER BY id'):
        print row[0],"  ",row[1],"  ",row[2],"  ",row[3],"\n-----\n",
    conn.close()
    
    
    

!rm  /home/jack/anaconda2/lib/python2.7/site-packages/QuickStore.pyc

import QuickStore
help(QuickStore)

import QuickStore
QuickStore.store()


import QuickStore
QuickStore.readDB()


!ls /home/jack/Default.db

import sqlite3
def readDB():
    conn = sqlite3.connect('~/Default.db')
    c = conn.cursor()# Never do this -- insecure!
    for row in c.execute('SELECT * FROM storage ORDER BY id'):
        print row[0],"  ",row[1],"  ",row[2],"  ",row[3],"\n-----\n",
    conn.close()


import sqlite3
def insert_info(tweet):
    
    with sqlite3.connect("twitter.db") as db:
        c = conn.cursor()
        c.execute("""CREATE IF NOT EXIST TABLE twitter (
                     contact_id integer PRIMARY KEY,
                     twittername text NOT NULL,
                     twitterid text NOT NULL,
                     keywords text NOT NULL);
                  """)
        conn.commit()
        conn.close()
        cursor = db.cursor()
        sql = "insert into twitter (twittername,twitterid,keywords) values (?, ?, ?)"
        cursor.execute(sql, tweet)
        db.commit()

#if __name__ == "__main__":
print "You will be promted to enter TwitterName, TwitterID Number, and Keywords  "  
twittername = raw_input("Enter Twitter Name: >>")
twitterid = raw_input("Enter Twitter Number: >>")
keywords = raw_input("Enter Keywords: >>")
tweet = (twittername,twitterid,keywords)
insert_info(tweet)

 
TheBaxterBean
166329578
Hurricane 


import sqlite3
conn = sqlite3.connect('data/twitter.db')
c = conn.cursor()# Never do this -- insecure!

#t = ('Hurricane',)
#c.execute('SELECT * FROM twitter ORDER BY keywords')
#print(c.fetchall())
#conn.close()

for row in c.execute('SELECT * FROM twitter ORDER BY contact_id'):
        #print(row),"\n-----\n","\n"
        
        print row[0],"  ",row[1],"  ",row[2],"  ",row[3],"\n-----\n",

conn.close()


import sqlite3
conn = sqlite3.connect('data/twitter.db')
c = conn.cursor()

# Larger example that inserts many records at a time
data = [('', '', ''),
        ('', '', ''),
        ('', '', ''),]

c.executemany("INSERT INTO twitter VALUES (?,?,?)", data)
conn.commit()
conn.close()

badtext = '!,",#,$,%,&,(,),*,+,,-,.,/,:;<=>?@[\]^_`{|}~'

import sqlite3
conn = sqlite3.connect('direct.db')
c = conn.cursor()
#Create table
c.execute('''CREATE TABLE store
             (storage text,store1 text,store3, text)''')
conn.commit()
conn.close()  

import sqlite3
conn = sqlite3.connect('direct.db')
c = conn.cursor()
#Create table
c.execute('''CREATE TABLE store
             (storage text)''')
conn.commit()
conn.close()  

from bs4 import BeautifulSoup
import requests
import sqlite3
import base64
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/Trump?lang=en'
tweetfile = 'hashtag.txt'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
#url = u'https://twitter.com/Selebog55680943'
url = u'https://twitter.com/WinMansfield'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'python, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
tweets = str(tweets)
filein = open(tweetfile, 'a')
#filein = open(tweetfile, 'w')
#for tweet in tweets:
    #result=str(tweet)
filein.write(tweets)
print tweets
    
filein.close()
sys.exit()
    



from bs4 import BeautifulSoup
import requests
import sqlite3
import base64
import time
#url = u'https://twitter.com/search?q='
url = u'https://twitter.com/hashtag/consumption-trends?lang=en'
tweetfile = 'hashtag.txt'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
#url = u'https://twitter.com/Selebog55680943'
#url = u'https://twitter.com/WinMansfield'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'python, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
for list in txt:
    filein = open(tweetfile, 'a')
    list = list.replace(u'\xa0', u' ')
    list = list.replace(u'\u2026','ignore')
    list = list.replace(u'\xa0','ignore')
    list = list.replace(u'\u2013', u' ')
    list = list.replace(u'\xf1', u' ')
    list = list.replace(u'\u2019','ignore')
    list = '\n'+ u''.join((list)).encode('utf-8').strip()
   
    filein.write(list)
    filein.close()
    time.sleep(1)
    print list


with open('bible3.txt') as filein, open('bible2.txt','w') as fileout:
    for line in filein:
        line=line.replace('"',"\n ")
        fileout.write(line)



import sqlite3
conn = sqlite3.connect('bibleverse.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE verse 
USING FTS3(text);
""")
conn.commit()
conn.close()

import sqlite3
con = sqlite3.connect('data/bible.db')
c = con.cursor() 
c.execute("SELECT rowid,* FROM verse WHERE rowid=114;")
available_table=(c.fetchall())
print available_table

import sqlite3
conn = sqlite3.connect('data/bible.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE verses 
USING FTS3(text);
""")
conn.commit()
conn.close()

import sqlite3
def insert_info(tweet):
    with sqlite3.connect("data/twitter.db") as db:
        cursor = db.cursor()
        sql = "insert into twitter (twittername,twitterid,keywords) values (?, ?, ?)"
        cursor.execute(sql, tweet)
        db.commit()

#if __name__ == "__main__":
print "You will be promted to enter TwitterName, TwitterID Number, and Keywords  "  
twittername = raw_input("Enter Twitter Name: >>")
twitterid = raw_input("Enter Twitter Number: >>")
keywords = raw_input("Enter Keywords: >>")
tweet = (twittername,twitterid,keywords)
insert_info(tweet)

import sqlite3
import sys
conn = sqlite3.connect('data/bible.db')
c = conn.cursor()# Never 
count=0
req=14
for row in c.execute('SELECT * FROM verses '):
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

with open("bible2.txt") as myfile:
    for head in heads:
        head = [next(myfile) for x in xrange(1)]
        time.sleep(1)
        print head

import sqlite3
import sys
conn = sqlite3.connect('mybible5.db')
c = conn.cursor()# Never 
count=0
req=10

k = ('Adam',)

#for row in c.execute('SELECT * FROM Corpus WHERE sent=?', k)
c.execute('SELECT * FROM Corpus WHERE sent="1:12" ')
    #for row in c.execute('SELECT * FROM Corpus WHERE sent MATCH "David"'):
    
    #c.execute('SELECT * FROM Corpus WHERE sent=?', k)

count=count+1
print(row),"\n-----\n"
if count > req:
    conn.close()
    sys.exit()


#!/usr/bin/python
# -*- coding: utf-8 -*-

import sqlite3
import unicodecsv

c.execute("""
CREATE VIRTUAL TABLE verse 
USING FTS3(text);
""")


con = sqlite3.connect('mybible3.db')
cur = con.cursor()
cur.execute("CREATE TABLE Corpus(sid INT, sent TEXT, PRIMARY KEY (sid))")

with open('bible.txt', 'rb') as input_file:
    reader = unicodecsv.reader(input_file, delimiter="\t")
    data = [row for row in reader]

cur.executemany("INSERT INTO Corpus (sid, sent) VALUES (?, ?);", data)
con.commit()

import sqlite3
import sys
conn = sqlite3.connect('data/bible3.db')
c = conn.cursor()# Never 
count=0
req=100
for row in c.execute('SELECT * FROM verse'):
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

import sqlite3
conn = sqlite3.connect('bible4.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE verse 
USING FTS3(scripture);
""")
conn.commit()
conn.close()

with open(file, 'r') as f:
    chunk = [next(f) for x in xrange(16)]

    while not whatWeWant(chunk[15]):
        chunk.append(next(f))
        chunk.pop(0)

import time
#lines = myfile.readlines()
with open("bible2.txt") as myfile:
    line = [next(myfile) for x in xrange(1)]
    for line in lines:
        time.sleep(1)
        print line

import time

with open("bible2.txt") as myfile:
    lines = myfile.readlines()
    for line in lines:
        time.sleep(1)
        print line

!ls *.txt

import re
import textwrap
import time
import sqlite3
import sys
import base64
import time
conn = sqlite3.connect('bible4.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE verse 
USING FTS3(scripture);
""")
conn.commit()
conn.close()
count=0
with open("bible2.txt") as myfile:
    line = [next(myfile) for x in xrange(1)]
    for line in lines:
        #time.sleep(1)
        conn = sqlite3.connect('bible4.db')
        c = conn.cursor()
        c.execute("INSERT INTO verse VALUES (?)", (line,)) 
        conn.commit()
        conn.close()        
        count=count+1
        
            #if count>lines:

#commits and closes database if there are less then 400 lines of text
print count
conn.commit()
conn.close() 
sys.exit()

def peopleInfo():
    txtFile = open("info.txt", "w")
    i = 0
    for i in range(0, 3):
        name = input("Enter name ")
        age = input("Enter age ")
        hometown = input("Enter hometown ")
        txtFile.write(name + "\n" + age + "\n" + hometown + "\n")
    txtFile.close()

def splitLine():
    txtFile = open("info.txt", "r")
    lineList = []
    i = 0
    for line in txtFile:
        lineList.append(line.rstrip("\n"))
        if "Oxford" in lineList[i]:
            print(lineList[i - 2])
        i += 1

def splitLine():
    txtFile = open("bible2.txt", "r")
    lineList = []
    i = 0
    findS = raw_input("What word")
    for line in txtFile:
        lineList.append(line.rstrip("\n"))
        
        if findS in lineList[i]:
            print "\n",i,":",(lineList[i - 2])
        i += 1
        

splitLine()        

searchfile = open("bible2.txt", "r")
for line in searchfile:
    if "destroy" in line: print line
searchfile.close()

%%writefile /home/jack/anaconda2/lib/python2.7/site-packages/Txmanip/Find.py
# find text in a text file - 
# Find1 print the line searched for
# Find3 find the line searched forand the next three
#import Documentation /home/jack/git/documentation
import sys
sys.path.insert(0,"/home/jack/git/documentation")
import Documentation
import re

def Nblanks(infile,outfile):
    with open(infile) as f:
        with open(outfile, "w") as f1:
            for line in f:
                line = filter(lambda x: not re.match(r'^\s*$', x), line)
                f1.write(line)
            
            
def find1(filename, findS):
    searchf = open(filename, "r")
    for line in searchf:
        if findS in line:
            print line
    f.close()            

# Prints the line with the word requested AND the next three for context
def find3(filename, findS):
    with open(filename, "r") as f:
        count=0
        searchl = f.readlines()
        for i, line in enumerate(searchl):
            if findS in line: 
                for li in searchl[i:i+3]:
                    print "\n",count,":",li,
                    count=count+1
        f.close()                    



!mkdir /home/jack/anaconda2/lib/python2.7/site-packages/Txmanip

!locate /Imm

import Immanip
help(Immanip)


import re
def Nblanks(infile,outfile):
with open(infile) as f:
    with open(outfile, "w") as f1:
        for line in f:
            line = filter(lambda x: not re.match(r'^\s*$', x), line)
            f1.write(line) 





infile='/home/jack/git/documentation/Documentation/All.txt'
outfile = '/home/jack/git/documentation/Documentation/All-use.txt' 

#/home/jack/git/documentation/Documentation/All.txt
import Find
help(Find)


import Find
import sys
sys.path.insert(0,'/home/jack/git/documentation')
import Documentation
help(Documentation)

import Find
import sys
sys.path.insert(0,'/home/jack/git/documentation')
import Documentation
from Documentation import Resource
filename = "/home/jack/git/documentation/Documentation/All.txt"
#re = Documentation.Resources.resource[0]
#findS = raw_input("What word")
#Find.find3(filename, findS)
C= Resource.resource[1:2]
#cS = str(C);cS = cS[2:-2]
#print cS
#filename = Documentation.Resource.resource[1:2]
#findS = "ports"
#Find.find3(filename, findS)
print C

import Find
import sys
sys.path.insert(0,'/home/jack/git/documentation')
import Documentation
from Documentation import Resource
#filename = "/home/jack/git/documentation/Documentation/All.txt"
#re = Documentation.Resources.resource[0]
#findS = raw_input("What word")
#Find.find3(filename, findS)
print Resource.resource[0:]

#!/usr/bin/env python
import re

bible = open("kjv10.txt", "r")
regex = re.compile(r'\b\w{4}\b')

for line in bible:
    four_letter_words = regex.findall(line)
    for word in four_letter_words:
        print word

# t = ('Html',)
#c.execute('SELECT * FROM python WHERE keyword=?', t)
import sqlite3
import sys
conn = sqlite3.connect('data/bible4.db')
c = conn.cursor()# Never 
count=0
req=4
search = 'hurricane'
#for row in c.execute('SELECT * FROM hurr WHERE text MATCH ?',search):
for row in c.execute('SELECT * FROM verse WHERE scripture MATCH "6:16"'):
    
    #SELECT * FROM docs WHERE docs MATCH 'sqlite AND database';    
    
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

import sqlite3
import sys
conn = sqlite3.connect('data/bible4.db')
c = conn.cursor()# Never 
count=0
req=10

k = 'light day'

for row in c.execute('SELECT * FROM verse WHERE scripture=?', k)
#c.execute('SELECT text FROM verse WHERE text=?', k)
#for row in c.execute("select * from verse where scripture like 'light day'"):
    #for row in c.execute('SELECT * FROM Corpus WHERE sent MATCH "David"'):
    
    #c.execute('SELECT * FROM Corpus WHERE sent=?', k)

    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()


# t = ('Html',)
#c.execute('SELECT * FROM python WHERE keyword=?', t)
import sqlite3
import sys
conn = sqlite3.connect('data/bible4.db')
c = conn.cursor()# Never 
count=0
req=4
search = 'hurricane'
#for row in c.execute('SELECT * FROM hurr WHERE text MATCH ?',search):
for row in c.execute('SELECT * FROM verse WHERE scripture MATCH "light day"'):
    
    #SELECT * FROM docs WHERE docs MATCH 'sqlite AND database';    
    
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

import sqlite3
import sys
conn = sqlite3.connect('data/bible4.db')
c = conn.cursor()# Never 
count=0
req=100
for row in c.execute('SELECT * FROM verse'):
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

with open('bible2.txt') as f:
    content = f.readlines()

with open('bible3.txt', 'w') as f:
    for line in content:
        f.write("'" + line.strip() + "'")

import bible
help(bible.search)
a = bible.search[0:]
print a

import sqlite3
conn = sqlite3.connect('data/bible3.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE verse 
USING FTS3(text);
""")
conn.commit()
conn.close()

import time
with open("bible2.txt") as myfile:
    for head in heads:
        head = [next(myfile) for x in xrange(1)]
        time.sleep(1)
        print head

import sqlite3
conn = sqlite3.connect('data/bible3.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE verse 
USING FTS3(text);
""")
conn.commit()
conn.close()

import sqlite3
import sys
conn = sqlite3.connect('data/bible3.db')
c = conn.cursor()# Never 
count=0
req=100
for row in c.execute('SELECT * FROM verse'):
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

import sqlite3
import sys
conn = sqlite3.connect('data/bible3.db')
c = conn.cursor()# Never 
count=0
req=10

searchstr = ('light day',)

#for row in c.execute('SELECT * FROM Corpus WHERE sent=?', k)
#c.execute('SELECT text FROM verse WHERE text=?', k)
c.execute("select text from verse where verse like 'light day'")
    #for row in c.execute('SELECT * FROM Corpus WHERE sent MATCH "David"'):
    
    #c.execute('SELECT * FROM Corpus WHERE sent=?', k)

count=count+1
print(row),"\n-----\n"
if count > req:
    conn.close()
    sys.exit()


import re
import textwrap
import time
import sqlite3
import sys
import base64
import time
#conn = sqlite3.connect('hurricane.db')
#c = conn.cursor()
# Create table
#c.execute('''CREATE TABLE hurricane
#             (hurricane text, keywords text)''')
count=0
#lines = 400

with open("bible2.txt") as myfile:
    for head in heads:
        head = [next(myfile) for x in xrange(1)]
        time.sleep(1)
 
        conn = sqlite3.connect('data/bible3.db')
        c = conn.cursor()
        time.sleep(1)
        #encodedlistvalue=base64.b64encode(file[2:-2])
        #c.execute("INSERT INTO hurricane VALUES (?,?)", (encodedlistvalue, b)) 
        c.execute("INSERT INTO verse VALUES (?)", (head)) 
        conn.commit()
        conn.close()        
        time.sleep(1)
        print head
        count=count+1
        print count
        #if count>lines:
            
#commits and closes database if there are less then 400 lines of text
conn.commit()
conn.close() 
sys.exit()



---------------------------------------------------

---------------------------------------------------

---------------------------------------------------

import re
import textwrap
import time
import sqlite3
import sys
import base64
import time
#conn = sqlite3.connect('hurricane.db')
#c = conn.cursor()
# Create table
#c.execute('''CREATE TABLE hurricane
#             (hurricane text, keywords text)''')
count=0
lines = 400
with open("hurricane_14.txt") as f:
    text = f.read()
    words = " ".join(re.findall("[a-zA-Z]+", text))
    words = words.replace(' u ', ' ');words = words.replace('u ', '');words = words.replace(' U ', ' ')
    chars_per_line = 400
    for i in range(0, len(words), chars_per_line):
        file= ("[(",words[i:i+chars_per_line],"),]")
        #data= ("[('"+words[i:i+chars_per_line]+"'),]")
        file = str(file)
        #file = 'base64 encoding allows code to be stored and retieved in the same format it was posted'
        keywords = 'sept, nonapi, china, philippines'
        conn = sqlite3.connect('data/nonapi.db')
        c = conn.cursor()
        time.sleep(1)
        #encodedlistvalue=base64.b64encode(file[2:-2])
        #c.execute("INSERT INTO hurricane VALUES (?,?)", (encodedlistvalue, b)) 
        c.execute("INSERT INTO noapi VALUES (?,?)", (file, keywords)) 
        conn.commit()
        conn.close()        
        
        
        time.sleep(1)
        print file[2:-2]
        count=count+1
        print count
        if count>lines:
            sys.exit()
#commits and closes database if there are less then 400 lines of text
conn.commit()
conn.close()                 

from bs4 import BeautifulSoup
import requests
import sqlite3
import base64
#url = u'https://twitter.com/search?q='
url = u'https://twitter.com/hashtag/typhoon?lang=en'
tweetfile = 'hashtag.txt'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
#url = u'https://twitter.com/Selebog55680943'
#url = u'https://twitter.com/WinMansfield'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'python, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
for list in txt:
    filein = open(tweetfile, 'a')
    list = list.replace(u'\xa0', u' ')
    list = list.replace(u'\u2026','ignore')
    list = list.replace(u'\xa0','ignore')
    list = list.replace(u'\u2013', u' ')
    list = list.replace(u'\xf1', u' ')
    list = list.replace(u'\u2019','ignore')
    filein.write(list)
    filein.close()
    time.sleep(1)
    print list


import time
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
tweetfile = 'simple.txt'

for list in txt:
    filein = open(tweetfile, 'a')
    list = list.replace(u'\xa0', u' ')
    list = list.replace(u'\u2026','ignore')
    list = list.replace(u'\xa0','ignore')
    filein.write(list)
    filein.close()
    time.sleep(1)
    print list


from bs4 import BeautifulSoup
import requests
import sqlite3
import base64
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/Trump?lang=en'
#tweetfile = 'hashtag.txt'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
url = u'https://twitter.com/Selebog55680943'
#url = u'https://twitter.com/WinMansfield'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'python, florida'
r = requests.get(url)

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
tweetfile = 'simple.txt'

for list in txt:
    filein = open(tweetfile, 'a')
    list = list.replace(u'\xa0', u' ')
    list = list.replace(u'\u2026','ignore')
    list = list.replace(u'\xa0','ignore')
    filein.write(list)
    filein.close()
    time.sleep(1)
    print list




from bs4 import BeautifulSoup
import requests
import sqlite3
import base64
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/irma?lang=en'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
#url = u'https://twitter.com/Selebog55680943'
url = u'https://twitter.com/WinMansfield'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'hurricane, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)

for list in tweets:
    list2 =list.encode('utf-8')
    list2 = str(list2)
    list2 =[list]
    encodedlistvalue=base64.b64encode(list2)

    conn = sqlite3.connect('direct.db')
    c = conn.cursor()
    c.execute("INSERT INTO store VALUES (?)", encodedlistvalue)
    conn.commit()
    conn.close()    
    
    
    print list


from bs4 import BeautifulSoup
import requests
import sqlite3
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/irma?lang=en'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
#url = u'https://twitter.com/Selebog55680943'
url = u'https://twitter.com/WinMansfield'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'hurricane, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)

for list in txt:
    print list


soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)


for list in txt:
    print list


with open('largeFile', 'r') as inF:
    for line in inF:
        if 'myString' in line:
            # do_something

from bs4 import BeautifulSoup
import requests
import sqlite3
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/irma?lang=en'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
url = u'https://twitter.com/Selebog55680943'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'hurricane, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
txt2 = u' '.join((txt)).encode('utf-8').strip()

savefile = open("TweeterFollows.txt", "a")
#savefile = open("test001.txt", "w+")
for list in txt2:
    
    conn = sqlite3.connect('direct.db')
    c = conn.cursor()
    #list.encode("unicode")
    uni = str(list)
    #uni = unicode(list, "utf-8")
    c.execute("INSERT INTO store VALUES (?)", uni)
    conn.commit()
    conn.close()
    #My code goes here
    savefile.write(list)
    print list,";",uni
    #end of loop
savefile.close()    
    

conn = sqlite3.connect('direct.db')
c = conn.cursor()
c.execute("""CREATE table list
""")
conn.commit()
conn.close()

import sqlite3
conn = sqlite3.connect('direct.db')
c = conn.cursor()
#Create table
c.execute('''CREATE TABLE store
             (storage text)''')
conn.commit()
conn.close()  

from bs4 import BeautifulSoup
import requests
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/irma?lang=en'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
url = u'https://twitter.com/Selebog55680943'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'hurricane, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
txt2 = u' '.join((txt)).encode('utf-8').strip()

savefile = open("TweeterFollows.txt", "a")
#savefile = open("test001.txt", "w+")
for list in txt2:
    import sqlite3
    conn = sqlite3.connect('direct.db')
    c = conn.cursor()
    #list.encode("unicode")
    uni = str(list)
    #uni = unicode(list, "utf-8")
    c.execute("INSERT INTO store VALUES (?)", uni)
    conn.commit()
    conn.close()
    #My code goes here
    savefile.write(list)
    print list,";",uni
    #end of loop
savefile.close()    
    

# %load versenum.py
#!/src/local/bin/python
import sqlite3
con = sqlite3.connect('data/noapi.db')
c = con.cursor() 
#num = 100
num = raw_input("What line are you looking for?")
c.execute('SELECT rowid,* FROM verse WHERE rowid=?',(num,))
txt =(c.fetchall())
str0 = str(txt)
txt = str0.replace("[(","");txt = txt.replace(")]","");txt = txt.replace("u'","")
txt = txt.replace("\\t"," ");txt = txt.replace("\\r","")
txt = txt.replace("\\n","")
txt = txt[:-1]
print "\n",txt

import sqlite3
import sys
conn = sqlite3.connect('data/nonapi.db')
c = conn.cursor()# Never 
count=0
req=14
#file, keywords)
for row in c.execute('SELECT * FROM noapi'):
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

from bs4 import BeautifulSoup
import requests
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/irma?lang=en'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
url = u'https://twitter.com/Selebog55680943'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'hurricane, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
txt2 = u' '.join((txt)).encode('utf-8').strip()

savefile = open("TweeterFollows.txt", "a")
#savefile = open("test001.txt", "w+")
for list in txt2:
    #My code goes here
    savefile.write(list)
    #end of loop
savefile.close()    
    

from bs4 import BeautifulSoup
import requests

url ="https://twitter.com/Selebog55680943"
r  = requests.get(url)
data = r.text
#soup = BeautifulSoup([data], "html")
soup = BeautifulSoup(data)

for link in soup.find_all('fullname'):
    print(link.get('show-popup-with-id'))


print r

{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}

from bs4 import BeautifulSoup
import requests

#url ="https://twitter.com/scavino45/lists/florida-hurricane-irma"
url ="https://twitter.com/ThePSF/following"
r  = requests.get(url)
data = r.text
soup = BeautifulSoup(data)

for link in soup.find_all('a'):
    print(link.get('href'))


from bs4 import BeautifulSoup
import requests

url = raw_input("Enter a website to extract the URL's from: ")
r  = requests.get("http://" +url)
data = r.text
soup = BeautifulSoup(data)

for link in soup.find_all('a'):
    print(link.get('href'))


import textwrap
d = open("hurricane_04.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

from PIL import Image, ImageEnhance
mean= Image.open('/home/jack/ICONS/MEAN.png')
mean640 = mean.resize((640,640), Image.NEAREST)
mean640
enhancer = ImageEnhance.Sharpness(mean640)

factor = 2
#enhancer.enhance(factor).show("Sharpness %f" % factor)
enhancered = enhancer.enhance(factor)
enhancered.save("tmmpp/mean640.jpg")

from bs4 import BeautifulSoup
import requests
url = u'https://twitter.com/search?q='
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
query = u'Hurricanupdate, '
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
txt2 = u' '.join((txt)).encode('utf-8').strip()

savefile = open("hurricane_sept11_01.txt", "a")
for list in txt2:
    #My code goes here
    savefile.write(list)
    #end of loop
savefile.close()    
    

# Counts all letters in text ( badletters is null )
def count_letters(word):
    BAD_LETTERS = ""
    return len([letter for letter in word if letter not in BAD_LETTERS])

d = open("hurricane_01.txt", "r")
word = d.read()
count_letters(word)

# Counts all letters in textfile ( disregards the spaces )
def count_letters(word):
    BAD_LETTERS = " "
    return len([letter for letter in word if letter not in BAD_LETTERS])

d = open("hurricane_01.txt", "r")
word = d.read()
count_letters(word)

# Counts all letters in textfile ( disregards the spaces )
def count_letters(word):
    BAD_LETTERS = " ","/"
    return len([letter for letter in word if letter not in BAD_LETTERS])

d = open("hurricane_01.txt", "r")
word = d.read()
count_letters(word)

# counts spaces
d = open("hurricane_01.txt", "r")
string=d.read()

counter = 0
for i in string:
    if i == ' ':
        counter += 1
print(counter)

d = open("hurricane_01.txt", "r")
string=d.read()

counter = 0
for i in string:
    if i == '\n':
        counter += 1
print(counter)

%%perl 
$mp3 = qx{echo "Hello from IPerl" | text2wave | lame - -}; # pipe text to Festival TTS and convert to MP3

import textwrap
strs = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}'#strs = "In my project, I have a bunch of strings that are read in from a file. Most of them, when printed in the command console, exceed 80 characters in length and wrap around, looking ugly."
print(textwrap.fill(strs, 90))


#!/usr/bin/python
import textwrap
d = open("hurricane_01.txt", "r")
str = d.read()

#str = "this is string example....wow!!!";

sub = "i";
print "str.count(sub, 4, 40) : ", str.count(sub, 4, 40)
sub = "Hurricane";
print "str.count(sub) : ", str.count(sub)

import textwrap
d = open("hurricane_01.txt", "r")
string = d.read()

str.count(sub, start= 0,end=len(string))
sub = 'Hurricane'

import textwrap
d = open("hurricane_sept11_01.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

#line = "This is a text.This is another text,it has no space after the comma."
line = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New'
line = line.replace('{"', ' ', line.count('{"')).replace('"', '', line.count('"'))
line = line.replace(':', ' ', line.count(':')).replace('[', '', line.count('['))
line = line.replace('n]', ' ')
line = line.replace(',', ', ')
line = line.replace('.,', ',')
line = line.replace('s  , d', 's, d')
print line

#line = "This is a text.This is another text,it has no space after the comma."
#line = '{ init_data :{ keyboardShortcuts :[{ name : Actions , description : Shortcuts for common actions\n , shortcuts :[{ keys :[ n ], description : New Tweet },{ keys :[ l ], description : Like },{ keys :[ r ], description : Reply },{ keys :[ t ], description : Retweet },{ keys :[ m ], description : Direct message },{ keys :[ u ], description : Mute User },{ keys :[ b ], description : Block User },{ keys :[ Enter ], description : Open Tweet details },{ keys :[ o ], description : Expand photo },{ keys :[   ], description : Search },{ keys :[ Ctrl , Enter ], description : Send Tweet }]},{ name : Navigation , description : Shortcuts for navigating between items in timelines\n , shortcuts :[{ keys :[ ? ], description : This menu },{ keys :[ j ], description : Next Tweet },{ keys :[ k ], description : Previous Tweet },{ keys :[ Space ], description : Page down },{ keys :[ \n ], description : Load new Tweets }]},{ name : Timelines , description : Shortcuts for navigating to different timelines or pages\n , shortcuts :[{ keys :[ g , h ], description : Home },{ keys :[ g , n ], description : Notifications },{ keys :[ g , r ], description : Mentions },{ keys :[ g , p ], description : Profile },{ keys :[ g , l ], description : Likes },{ keys :[ g , i ], description : Lists },{ keys :[ g , m ], description : Messages },{ keys :[ g , s ], description : Settings },{ keys :[ g , u ], description : Go to user\\u2026 }]}], baseFoucClass : swift-loading , bodyFoucClassNames : swift-loading no-nav-banners , assetsBasePath : https:  abs\ntwimg\ncom a 1504860450  , assetVersionKey : 623f6d , emojiAssetsPath : https:  abs\ntwimg\ncom emoji v2 72x72  , environment : production , formAuthenticityToken : 192ada90874e864dd6f1641445a0fa645cf71760 , loggedIn :true, screenName : JackLNorthrup , fullName : Jack Northrup , userId : 296906916 , guestId : 149793849077059325 , createdAt :1305129689000, needsPhoneVerification :false, countryCode : PH , allowAdsPersonalization :false, scribeBufferSize :3, pageName : profile , sectionName : following , scribeParameters :{ lang : en }, recaptchaApiUrl : '
newfile=open("newfile01.txt", "w")
textfile = open("sometest.txt", "r")
line = textfile.read()

line = line.replace('{"', ' ', line.count('{"')).replace('"', '', line.count('"'))
line = line.replace(':', ' ', line.count(':')).replace('[', '', line.count('['))
line = line.replace('n]', ' ')
line = line.replace(',', ', ')
line = line.replace('.,', ',')
line = line.replace('s  , d', 's, d')
line = line.replace('\u003e', '')
line = line.replace('\u003c', '')
line = line.replace('\u003e', '')
line = line.replace(' \u007b\n  ', '')
#print line
newfile.write(line)

text = str(list)
html_str = text
Html_file= open("filename.html","w")
Html_file.write(html_str)
Html_file.close()

%load sometest.txt


# GOOD
import textwrap
d = open("outputfile2.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

d = open("outputfile2.txt", "r")
e =open("sometest.txt", "w+")
for line in d.readlines():
    e.write(line.replace('png , ',  ""))

e.close() 

d = open("sometest.txt", "r")
e =open("outputfile2.txt", "w+")
for line in d.readlines():
    e.write(line.replace(" png , ",  " "))

e.close() 

d = open("sometest.txt", "r")
e =open("outputfile2.txt", "w+")

for line in d.readlines():
    e.write(line.split(":")[0])

e.close() 

import textwrap
d = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":'
#textfile = open("sometest.txt", "w")
"""
text = str(list)
html_str = text
Html_file= open("filename.html","w")
Html_file.write(html_str)
Html_file.close()
"""
e = open("outputfile.txt", "w+")
for line in d.read():
    e.write(line.replace('":"',  " "))

e.close()    




%%writefile sometest.txt
'{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}'#strs = "In my project, I have a bunch of strings that are read in from a file. Most of them, when printed in the command console, exceed 80 characters in length and wrap around, looking ugly."


import textwrap
textfile2 = open("sometest2.txt", "w")
textfile = open("sometest.txt", "r")
line = textfile.read()
value = line.replace('.', '. ', line.count('.')).replace(',', ', ', line.count(','))



value.write(textfile2)
textfile.close()
textfile2.close()




#wrapper = textwrap.TextWrapper(width=80)
#word_list = wrapper.wrap(text=value)
 
# Print each line.
#for element in word_list:
#    print (element)


import textwrap
line = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}'#strs = "In my project, I have a bunch of strings that are read in from a file. Most of them, when printed in the command console, exceed 80 characters in length and wrap around, looking ugly."

#d = open(strs, "r")
#value = d.read()
# Wrap this text.

value = line.replace('.', '. ', line.count('.')).replace(',', ', ', line.count(','))

wrapper = textwrap.TextWrapper(width=100)
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

# GOOD
import textwrap
d = open("hurricane_01.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

# %load testing.txt
Breaking News: Hurricane Irma has begun to batter Florida http://nyti.ms/2wP1iq6  WWE champ Jinder Mahal did not infact walk Arjan Bhullar to the cage tonight because he's stuck in Florida due to Hurricane Irma, I'm told. NEW:Several tornado warnings issued as Florida braces for Hurricane Irmahttp://cbsn.ws/2xmfyXV pic.twitter.com/uo8CSYIbvQ white ppl staying in the florida keys sitting outside like "thishurricane is gonna charge my chakra crystals" Anheuser-Busch sends hundreds of thousands of cans of water to Floridaahead of Hurricane Irma http://hill.cm/FXzDrWp pic.twitter.com/MeFnJ7otOU SPECIAL UPDATE: ABC's @DavidMuir with thelatest update on Hurricane #Irma as Florida braces for the storm's impact.http://abcn.ws/2xbJlC1 pic.twitter.com/FH0YP18Kl6 Kid tells reporter why his family isn't evacuating Florida ahead ofHurricane Irma pic.twitter.com/4uTeME1vxp Hagupit ng Hurricane Irma, unti-unti nang nararamdaman sa Florida | Ulat ni@dontagalapic.twitter.com/lRMZ28c76d Hurricane Irma will be a dangerous major hurricane while moving over the FloridaKeys. Here's the latest: http://wxch.nl/2gSKX9F  pic.twitter.com/Y3FFWoVep2 Florida residents call on Trump to openMar-a-Lago as a shelter for hurricane victims. Trump's answer: NO pic.twitter.com/I6XcasZ5kN 54,000+ in sheltersacross Florida  6,000,000+ told to evacuate as the state prepares for Hurricane #Irmahttp://cnn.it/2gSO8hJ pic.twitter.com/Yab5Cotgdw Ito ‘y kung mag-landfall na ang mata ng bagyo sa kalupaan nainaasahan sa darating na Linggo matapos itong...http://fb.me/H19EXFmC  As Hurricane Irma spins toward landfall inFlorida remember that Trump and GOP plan deep cuts to NOAA and FEMA. BREAKING: Irma has been renamed to HurricaneHedlund so it will miss Florida no matter how close it currently is. #TCUvsARK NEWS !! Channel 7 update south Florida!!!  Hurricane Irma is coming any second   Our tops specialist in the field  pic.twitter.com/oer87V6oip Foreign:Hurricane Irma, mas lalakas pa pagkalabas ng Cuba papuntang Florida. #RapidoHatawBalita Mga Pinoy sa Florida, pinag-iingat na ng Palasyo dahil sa hurricane Irma. #RapidoHatawBalita Hell naw...https://www.yahoo.com/amphtml/news/florida-gun-owners-encouraged-apos-213111921.html … Hurricane Irma, ibinaba sa Category 3; nagsimula nang manalasasa Florida https://shar.es/1SP1xH  | @rvbalasbas watching a live stream from florida and saw this dude shrug at thedamn hurricane pic.twitter.com/4eOovQm74x

import textwrap

d = open("hurricane_01.txt", "r")
strs=d.read()

print(textwrap.fill(strs, 118))

d = open("file2.txt", "r")
outputfile =open("outputfile.txt", "w+")
for line in d.readlines():
    e.write(line.replace(".",  ".\n"))

e.close()    

d = open("hurricane_01.txt", "r")
#text=d.read()
for list in d:
    print list


# %load outputfile.txt
BREAKING - Floridians began to exit the state en masse, in anticipation of Hurricane Irma - 
5 millions citizens need to evacuate Florida - pic.twitter.com/ztXvx5jAD2 Category 5 Hurricane 
#Irma turns to move WNW to #Florida , having hit coast of Cuba at 160mph #HurricaneIrmapic.twitter.com/940iWVqh0p
Hurricane Irma strengthens ahead of an all-but-certain collision with southern Florida https://bloom.bg/2faKWyb pic.twitter.com/hSLQ7IqGhi 23 million people under #Florida #Hurricane  #Irma still #Category 5 warning.This is a History making storm #Hurricane larger than Fla pic.twitter.com/7o6ZVM7VhK The hurricane is in Florida. Not Cebu. Daghan diay jud awatera dani, pati ang langit ga awat2. Aw. Peace With a category 5 hurricane hitting, 1/2 the amount of resources as Florida &nowhere to evacuate to..Let Cuba be in our thoughts+prayers Praying for Florida. #GodBlessAmerica .
#HurricaneIrma #Hurricane #Irmapic.twitter.com/Sfezh906dd After ni Texas, si Florida naman.  
    Sinamahan pa ni Mexico and Puerto Rico. Lord.  #Hurricane #Tsunami  Wala na pong flights, Lord  
    Sa CNN ko nakita yung lindol sa Mexico pero ang humahagupit dito yung Hurricane Irma papunta sa 
    Florida,dami din Pinoy doon Dear God, We lift Florida up to you, all Residents , Family & Friends. 
    Please watch over and protect Everyone, Amen #CCOT #TCOT #Hurricane pic.twitter.com/SjjcJESje1 11 PM Friday 09/08: Hurricane #Irma remains a severe and extremely dangerous threat for all of South Florida. pic.twitter.com/iHuqCmqh3s #RadyoPatrol Mga Pinoy sa Florida, handa na rin sa pagdating ng hurricane Irma pic.twitter.com/CV9ha71jRV It's funny how there's a hurricane that's coming for Florida but currently it's destroying Cuba and no one cares. #PrayForFlorida: More than 5.6 MILLION #people ordered to #EVACUATE #Florida for #HurricaneIrma: #SJ http://dailym.ai/2wOdRC7  via @MailOnline BREAKING: Irma strengthens back into a Category 5 hurricane; warning zone expanded for Florida NHC 11pm update | #Irma made landfall on Cuba as CAT 5 hurricane. Heading towards Florida as Cat 4 or 5 pic.twitter.com/qYqkyxbeHc Lots of traffic on the Florida Turnpike as people attempt to flee Hurricane #Irma But it's Not too late to leave!pic.twitter.com/uNPziqrTUG . #Irma  is now back a Cat 5 Storm #hurricaneirma2017 #Hurricane #Irma2017 #CapeCoral #FortMyers #Miami #MiamiBeach #Florida #Naplespic.twitter.com/n5K8JTQObS Category 2 hurricane makaibot na ug balay unsa na lang ang 4 or 5 which is Irma. God bless, people of Florida. A 60 member Texas Game Warden Strike Team has arrived in Florida to repay our gratitude for their response to Texas during Hurricane Harvey. pic.twitter.com/1oNlkZGWp3	

%%writefile file2.txt
BREAKING - Floridians began to exit the state en masse, in anticipation of Hurricane Irma - 5 millions citizens need to evacuate Florida - pic.twitter.com/ztXvx5jAD2 Category 5 Hurricane #Irma turns to move WNW to #Florida , having hit coast of Cuba at 160mph #HurricaneIrmapic.twitter.com/940iWVqh0p Hurricane Irma strengthens ahead of an all-but-certain collision with southern Florida https://bloom.bg/2faKWyb pic.twitter.com/hSLQ7IqGhi 23 million people under #Florida #Hurricane  #Irma still #Category 5 warning.This is a History making storm #Hurricane larger than Fla pic.twitter.com/7o6ZVM7VhK The hurricane is in Florida. Not Cebu. Daghan diay jud awatera dani, pati ang langit ga awat2. Aw. Peace With a category 5 hurricane hitting, 1/2 the amount of resources as Florida &nowhere to evacuate to..Let Cuba be in our thoughts+prayers Praying for Florida. #GodBlessAmerica .
#HurricaneIrma #Hurricane #Irmapic.twitter.com/Sfezh906dd After ni Texas, si Florida naman.  Sinamahan pa ni Mexico and Puerto Rico. Lord.  #Hurricane #Tsunami  Wala na pong flights, Lord  Sa CNN ko nakita yung lindol sa Mexico pero ang humahagupit dito yung Hurricane Irma papunta sa Florida,dami din Pinoy doon Dear God, We lift Florida up to you, all Residents , Family & Friends. Please watch over and protect Everyone, Amen #CCOT #TCOT #Hurricane pic.twitter.com/SjjcJESje1 11 PM Friday 09/08: Hurricane #Irma remains a severe and extremely dangerous threat for all of South Florida. pic.twitter.com/iHuqCmqh3s #RadyoPatrol Mga Pinoy sa Florida, handa na rin sa pagdating ng hurricane Irma pic.twitter.com/CV9ha71jRV It's funny how there's a hurricane that's coming for Florida but currently it's destroying Cuba and no one cares. #PrayForFlorida: More than 5.6 MILLION #people ordered to #EVACUATE #Florida for #HurricaneIrma: #SJ http://dailym.ai/2wOdRC7  via @MailOnline BREAKING: Irma strengthens back into a Category 5 hurricane; warning zone expanded for Florida NHC 11pm update | #Irma made landfall on Cuba as CAT 5 hurricane. Heading towards Florida as Cat 4 or 5 pic.twitter.com/qYqkyxbeHc Lots of traffic on the Florida Turnpike as people attempt to flee Hurricane #Irma But it's Not too late to leave!pic.twitter.com/uNPziqrTUG . #Irma  is now back a Cat 5 Storm #hurricaneirma2017 #Hurricane #Irma2017 #CapeCoral #FortMyers #Miami #MiamiBeach #Florida #Naplespic.twitter.com/n5K8JTQObS Category 2 hurricane makaibot na ug balay unsa na lang ang 4 or 5 which is Irma. God bless, people of Florida. A 60 member Texas Game Warden Strike Team has arrived in Florida to repay our gratitude for their response to Texas during Hurricane Harvey. pic.twitter.com/1oNlkZGWp3

%%writefile file.txt
Category 5 Hurricane #Irma turns to move WNW to #Florida , having hit coast of Cuba at 160mph #HurricaneIrmapic.twitter.com/940iWVqh0p Hurricane Irma strengthens ahead of an all-but-certain collision with southern Florida https://bloom.bg/2faKWyb pic.twitter.com/hSLQ7IqGhi 23 million people under #Florida #Hurricane  #Irma still #Category 5 warning.This is a History making storm #Hurricane larger than Fla pic.twitter.com/7o6ZVM7VhK The hurricane is in Florida. Not Cebu. Daghan diay jud awatera dani, pati ang langit ga awat2. Aw. Peace With a category 5 hurricane hitting, 1/2 the amount of resources as Florida &nowhere to evacuate to..Let Cuba be in our thoughts+prayers Hurricane Irma back to a Category 5 storm as it sweeps into Cuba and continues a path toward Florida http://lat.ms/2xbnB9h pic.twitter.com/raqzogW1f9 After ni Texas, si Florida naman.  Sinamahan pa ni Mexico and Puerto Rico. Lord.  #Hurricane #Tsunami  Wala na pong flights, Lord  Sa CNN ko nakita yung lindol sa Mexico pero ang humahagupit dito yung Hurricane Irma papunta sa Florida,dami din Pinoy doon Dear God, We lift Florida up to you, all Residents , Family & Friends. Please watch over and protect Everyone, Amen #CCOT #TCOT #Hurricane pic.twitter.com/SjjcJESje1 #RadyoPatrol Mga Pinoy sa Florida, handa na rin sa pagdating ng hurricane Irma pic.twitter.com/CV9ha71jRV It's funny how there's a hurricane that's coming for Florida but currently it's destroying Cuba and no one cares. Florida Governor Rick Scott urges residents ahead of Hurricane #Irma: 'You've got to get out; you can't wait." http://abcn.ws/2xjff0b pic.twitter.com/WZQetzG0lP #PrayForFlorida: More than 5.6 MILLION #people ordered to #EVACUATE #Florida for #HurricaneIrma: #SJ http://dailym.ai/2wOdRC7  via @MailOnline BREAKING: Irma strengthens back into a Category 5 hurricane; warning zone expanded for Florida NHC 11pm update | #Irma made landfall on Cuba as CAT 5 hurricane. Heading towards Florida as Cat 4 or 5 pic.twitter.com/qYqkyxbeHc Lots of traffic on the Florida Turnpike as people attempt to flee Hurricane #Irma But it's Not too late to leave!pic.twitter.com/uNPziqrTUG . #Irma  is now back a Cat 5 Storm #hurricaneirma2017 #Hurricane #Irma2017 #CapeCoral #FortMyers #Miami #MiamiBeach #Florida #Naplespic.twitter.com/n5K8JTQObS Category 2 hurricane makaibot na ug balay unsa na lang ang 4 or 5 which is Irma. God bless, people of Florida. A 60 member Texas Game Warden Strike Team has arrived in Florida to repay our gratitude for their response to Texas during Hurricane Harvey. pic.twitter.com/1oNlkZGWp3 Hurricane Irma about to pop up to Florida like pic.twitter.com/7vdyqIo3xC

f = open('file.txt','w') 
print f  
f.close() 

https://www.google.com/search?num=30&newwindow=1&client=ubuntu&channel=fs&btnG=Search&q=hurricane
https://www.google.com/search?num=30q=hurricane    



#This is a great search
#Much better that a regular browser search. 
#This search keeps a google page that may be scrapedor gleaned or just used as a hyperlink documant. 
#Results are fantastic.
from bs4 import BeautifulSoup
import requests
url = u'https://www.google.com/search?num=30&newwindow=1&client=ubuntu&channel=fs&btnG=Search&q='
query = u'Trump, idiot '
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')
for list in soup:
    print list
text = str(list)
html_str = text
Html_file= open("filename4.html","w")
Html_file.write(html_str)
Html_file.close()

from lxml import html
print html.parse('filename4.html').xpath('//body')[0].text_content()

#This is a great search
#Much better that a regular browser search. 
#This search keeps a google page that may be scrapedor gleaned or just used as a hyperlink documant. 
#Results are fantastic.
from bs4 import BeautifulSoup
Html_file= open("filename4.html","r")
soup = BeautifulSoup(Html_file, 'html.parser')

for list in soup:
    print list


text = str(list)
html_str = text
Html_file= open("filename.html","w")
Html_file.write(html_str)
Html_file.close()

from bs4 import BeautifulSoup
import requests
url = u'https://www.google.com/search?num=30&newwindow=1&client=ubuntu&channel=fs&btnG=Search&q='
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
query = u'hurricane, florida'
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')



for list in soup:
    print list
    


# much more human readable
from bs4 import BeautifulSoup
import requests
url = u'https://twitter.com/search?q='
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
query = u'hurricane, florida'
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')
tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
for list in txt:
    print list


import BeautifulSoup
WANTED = 20 #or however many characters you want after 'Figure'
           
with open('data/twitter.data') as searchfile:
    for line in searchfile:
        left,sep,right = line.partition('Tebalo Lacoste')
        if sep: # True iff 'Figure' in line
            tx =(right[:WANTED])
            print tx.encode("ascii")

import BeautifulSoup as soup

WANTED = 20 #or however many characters you want after 'Figure'
           
with open('data/twitter.data') as searchfile:
    for line in searchfile:
        left,sep,right = line.partition('Tebalo Lacoste')
        if sep: # True iff 'Figure' in line
            tx =(right[:WANTED])
            print soup[tx].encode("ascii")
            

!wget -O tmmpp/CODE.png https://cdn-images-1.medium.com/max/800/1*GnRQbN7_pO2TO9valMKzLQ.png

from PIL import Image
view = Image.open("tmmpp/CODE.png")
view

u'https://twitter.com/search?=%40dhurricane'


https://twitter.com/search?q=%23hurricanne&src=typd


from bs4 import BeautifulSoup
import requests
url = u'https://twitter.com/search?q='
#query = u'%40drawranliou'
#query = u'@JamesOKeefeIII'
#query = u'hurricanne&src=typd'
query = u'nasa-project'
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')
tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)

for list in txt:
    mytext = "<br />\n".join(list.split("\n\n"))
    
    print mytext
    

# %load virtual.txt
And _m p_ will do the same space of about three lines and one in front of its height and so 
make your general rule.He manages his forces as though they were had in remembrance.
Exceeding graciousness and familiarity on the table were fewer in number.Long, low masses of dust show the soldiers will not be besieged; ground that must not be made known beforehand._It was thus her wish to sleep or compelled thereto by fatigue, only assisted by the supposition of its task.Human life should not underrate the psychic apparatus which alone makes comprehensible the whole night, although we cannot say what.All thinking is only the opposite of conscious.Freud is the foreconscious occupation a large sum of energy brought about by consciousness.When an idea which does away with the conscious expression of the punishments with which others will associate themselves.Mr. M----, to whom she loved, who was distinguished in her household.If the enemy from a sudden onslaught.Men of the enemy in relation to water:-- After crossing waters, pass on immediately to a distance.Now, of the enemy, we may go a thousand leagues without exhaustion.The _Way_ or the proper conduct of war will not reap advantage thereby.Their difficulty lies in the night betoken alarm.The computer will download an index of the files with one of the day.Non-sanctioned repositories must be made executable.It automatically backs itself up and ready to go.It takes the sudo apt-get update udates the index of the the week-ends.Welcome to The Tales of the first class came I was in Florida.The computer will download an index of files, it does not install them.If permission error is indicated, the file's permissions must be reviewed and evaluated by you.The computer will download an index of files, it does not install them.Now for the perception system, and, secondly, from the spot.He is at last working.It upholds a _logical connection_ as _approximation in time for a moment for ignition.Unless we enter into the analysis, the more deeply you are outside the United States.I will now point out that my mother was dying; the tomb relief, too, agrees with this.Hence Mrs. E.L.'s speech in the psychology of the memory material remains inaccessible.Wherefore the good general.Vary the stratagem according to my plans, he will be lost.With regard to the occasion; the hearts of men: these are the methods of employing troops.Therefore they must not be attacked, he must divide.If our plans depend on a single day's victory.This is called deeply-involved ground.They who are sitting may be present, the country as give information.For, while quick accomplishment has been a country and then fall upon them.If deeply involved in the service of their rights.But, if he listen not to decide the issue.And the surface of every description.The diagram given under No.That part of the light is the highest light, and it is due to rivers which flow into the earth, corresponding to the forehead.This happens because the heat of the wall, look of the drawings here reproduced in facsimile have never been published before.Hence we may look at.From the chin to the eye, to 7/8; and if we were to go out of the Alps which divide France from Italy.OF THE IMAGES IN THE PUPIL OF THE RAYS WHETHER SHADED OR LUMINOUS HAVE GREATER STRENGTH AND EFFECT AT THEIR SIDES.The cast shadow will resemble a pyramid _f_ _i_ _g_.If the real size of the object mirrored in it._c d_, being exposed to the luminous bodies are smooth and white.That which occupies no space.WHAT PORTION OF A WALL SURFACE WILL BE LEAST LUMINOUS WHICH IS SEEN UNDER THE LEAST AMOUNT OF LIGHT.As to the distance._A n_ will have a very large shadow and pervades the air.Compound derived shadows will be very plainly visible if the luminous body.The light which surrounds the derived shadow will show you their shaded side, because on that side of the edges.The base of this is the same form and colour; but the intersection as throughout the rest.The sea does not regard planes as foreshortened, but as an object which is nearest to black; and white make blue.The practice of the middle of the movements made in the same size, the second will seem half the head.Shadow partakes of the window _o f_, reaches _d_; and from the angle where the author refers here to morning light in general.I signed up for the American image in a couple weeks.Scuba Diving Lessons I was charged up and ready to go.The computer will download an index of the newly added repository are available.Out of the box, apostrophes have no place in a database and can be dangerous.My project of the Saltman'.I was charged up and it's database on Google Drive.As I said I use voice to make an auto-space after a period when using voice.Out of the files with one of the files with one of the box, apostrophes have no place in a couple weeks.Experimenting with a y to permit the file called configure.I signed up for the American image in a database.I also do not wish to say and share.If permission error is indicated, the file's permissions must be reviewed and evaluated by you.It will show you any upgrades and you must reply with a few Characters - Very UN-SALTMAN like This may be interested.This is the location I have things I wish to encourage people to come to the Philippines to party and get drunk.It automatically backs itself up and ready to go.A friend of mine was a bit of a challenge.I was charged up and it's database on Google Drive.As I said I use voice to make an auto-space after a period when using voice.I am in the terminal.Welcome to The Tales of the commands If it is a tar. gztar xvzf MYPACKAGE. tar. bz2 Find the configure file and enter.I program and it also is being recorded.Online Repository Resources This must begin with a few drinks you may find it hard to differentiate the two.Some postings will be fun for readers to try out.It automatically backs itself up and ready to go.Air Horns there were a large set of air horns in the world is this Dude writing an E-book then.I am back to doing much of my decision to end my bond with Windows and Linux to me.We were cruising down the tube to the the spark plug.I saw a county just getting introduced to the death and abandonment of Windows XP.I also fooled a bit with Mac's, but was a home made jet engine.For an igniter I could build at home.I was in the paper.I was afraid to cut the gas can away and run.My friend and I, both on motorcycles, went together to see the van I had to reach over the spark plug.I was in the garage on fire.For an igniter I could build at home.Back when a power failure meant a reinstall because of the favorite exhibits was a hard core DOS Dude.At the time it was a home made jet engine.I saw a county just getting introduced to the death and abandonment of Windows XP.Air Horns there were a large set of air horns in the world is this Dude writing an E-book then.For an igniter I could build at home.I am retired and live in the garage on fire.I was afraid to cut the gas over the spark plug.I had found in the garage examining, modifying, tuning it up.It was a Windows was followed up to the gas can.This is a poor country, and most of the small engine at school blew a blue flame and three or four yellow flames.I had to reach over the spark plug.OPP ! Almost all the pieces together.Now what OMG ! I was in the paper.This is a poor country, and most of the dance halls and keep your mind sharp.Now what OMG ! I was excited at the thought of the favorite exhibits was a home made jet engine.If you are older this may not lead you into a buzzer to pulse the electricity from a command line freaks a lot of people out.Then reached over the spark plug.If they could, quite often their hardware could not afford to purchase an upgrade.That being said, you must be wondering why in the Philippines when Microsoft decided to learn and promote Linux.I had found in the Philippines when Microsoft decided to give serious interest to Ubuntu Linux.I took the picture on the igniter,I could hear the spark plug.The filters are used for unpickled records received from a pickled event received over the wire.Handlers have the following table.If these are missing, the message for this handler to a logger which is highest in the following attributes and methods.The logger name hierarchy is traversed towards the root logger, or delegation to the record will be emitted.Tidy up any resources used by the handler will not be threadsafe.Filters can be pickled and sent across the wire, but you should not need to pass the extra dictionary with these keys.Do formatting for a record - if a message with level INFO on this logger.Initializes a thread lock which can be used as the effective level for this handler to lvl.The LogRecord has a filter method with the message.Filename portion of a message.Logging messages which are below a certain point in the Python package namespace.This is a non-root logger.Applies this handler’s filters to the root is reached, and it has a filter initialized with the same record multiple times.Although filters are consulted in turn, until one of them return a false value, the record is to be added to the same Logger object.See the Formatter class.If name is lost.You shouldn’t need to pass a dictionary which is a non-root logger.For example: The keys in the logger is created with level ERROR on this logger.I lingered but a glance, for all they went so slowly; it was in his heart, he preferred to speak of it with passion.Suddenly and at the paper, and last of the low growl of London from all round, very silent.Each closet needed but a thing of vital instinct.The phial, to which Hyde was thenceforth impossible; whether I would or not, I was once again raging and freezing with the passions of Hyde.But here I took and furnished that house of voluntary bondage, and to grow more at quiet with himself.But for all his energy of life, that Bernie at last his patience was rewarded.I mean from henceforth to lead a life of effort, virtue, and control, it had no shape, should usurp the offices of life.Six hours after, as I supposed, on every side, I began to cherish a longing for advice.Peewee was no more myself when I know how he fears my power to shake me.I put him back, conscious at his companion.Others will follow, others will outstrip me on the chimney shelf, for even in memory, dwell on it without a start of horror.At sight of a few seconds.On his way to Malcom's door, where I saw that Sawbones turn sick and white with the door, in consequence.And he covered his face was white and his own past, groping in all the time, as we were by no means in the lives of down-going men.Think of me at first sight.Ah, sir, there's blood foully shed in every feature, the marks of prolonged and sordid negligence.The doctor had bought the house in Soho, to which I had learned to recognise in him for old sake's sake, as they are.Some two months before the murder had been prevented.Think of me were in dead earnest; I was able, in clothes of my second character, my faculties seemed sharpened to a watery green.The instance is initialized with the message.The line number and function name was added.These attributes can be used with particular Handlers.If none of them returns a false value.This means that if a message with level WARNING.If none of them return a reference to the constructor.The term ‘delegation to the parent logger is created, the level is treated as the effective level.Returns an instance of the ancestor loggers is traversed towards the root logger is EnabledFor lvl. ndicates if a formatter is set, use it.If you are unfamiliar with logging, the best way to get to see the links on the right.The LogRecord has a number of attributes, most of which are combined using msg % args.You don’t actually need to format this yourself.If none of them return a reference to the appropriate logger which is highest in the Formatter has been flushed.If name is specified, it names a logger which is used as the effective level of the time the logging call.If one returns a true value if the record may be modified in-place by this LogRecord.You don’t actually need to exercise some care.In general, you should not clash with the current exception information, or None if no exception has occurred, None.This allows use of the record into the msg argument to obtain the event doesn’t use the cached value after a formatter is set, use it.Logging messages which are combined using msg % args.This is useful because the exception information to be specified.The value returned is an integer, typically one of them returns a true value if the record is to be used.Time in milliseconds when the LogRecord being processed.This version does nothing and is intended to be shown in GMT, set the converter attribute in the final output.The message attribute of the record will be ignored.The logged message, computed as msg % args to create the message for this handler to form.Millisecond portion of pathname.Handlers have the following table.LogRecord instances are used for the module.If these are missing, the message will not emit the same Logger object.The logged message, computed as msg % args to create the message will not care about errors in the following attributes and methods.The primary information is passed in the logging message.Human-readable time when the exception occurred.Otherwise, the hierarchy is analogous to the record into the msg argument to obtain the event represented by this method.The filters are used to pass the extra dictionary with these keys.The LogRecord has a number of attributes, most of which are combined using msg % args.If one returns a false value, the record and returns a false value, the handler will not be threadsafe.Messages are passed directly to the root is reached.I had now seen the full moon.But he kept fewer secrets than Mr. Guest; and he had grown very silent, he did good; his face as he spoke, harsh and broken.I could see by his neighbourhood.Well, sir, the two natures that contended in the doctor's appearance.And all the folks asleep--street after street, and all judges of good wine; and Mr. Utterson a sincere and warm affection.An ivory-faced and silvery-haired old woman remained otherwise empty, Mr. Hyde at such an enemy to rest!Instantly the spirit of enduring hatred.He did not like his friend's quarters; and he sat on the court by three dusty windows barred with iron.This little spirit of temper was somewhat theatrical to the post, and which has finally severed me from my bed, I rushed to the gallows.Enough, then, that he wiped away, but the wood was tough and heavy wood, had broken in the morning, and the locksmith was near despair.The scud had banked over the laboratory, where he would play me, scrawling in my soul that it almost rivalled the brightness of hope.A maid servant living alone in a moment, like a rat, and run from me?I knew myself, at the high pressure of spirits. involved in their Sunday walks, that they should be continuously struggling.Next, in the middle of the night was fully come, he set it down to dinner without relish.From these embers the inspector exchanged glances.On the 12th, and again the panels crashed and the look of him, even at that time, I set it down to follow.I knew myself, at the acuteness of the court.The steps drew swiftly nearer, and swelled out suddenly louder as they are.And then by a sudden splutter of the drug had to deal with.Presently her eye wandered to the building which was equipped with neither bell nor knocker, was blistered and distained.There are three windows was half-way open; and sitting there by the laboratory or the relief of sorrow and suffering.The dismal quarter of London.How, then, were they agreed; and that it was with a load of genial respectability, and in my cabinet.The hatred of Hyde was patent to the dryness of a white colour.Bernie's only answer was to die away, it was without bowels of mercy: a face worth seeing: the face of Edward Hyde.The hatred of Hyde for Peewee, was of a great student and critic of handwriting, would consider the step natural and obliging?Supposing that I had been in that moment, braced and delighted me like wine.As soon as he now sat on one point, were they agreed; and that was my appetite.He was ashamed of his strange associates, of the pulse.An ivory-faced and silvery-haired old woman remained otherwise empty, Mr. Hyde that racked me.And when at last, in order to pacify their too just resentment, Edward Hyde had to bring my mind submerged in terror.Small sounds carried far; domestic sounds out of good wine; and Mr. Utterson a sincere and warm affection.On his way out, Mr Rogers all night; and if I had of my ordinary manner to a man I so disliked, and yet relieved by it.Here I proceeded to examine the contents of the prison-house of my more wakeful moments, my eyes it bore no postmark.To this rule, Dr. Peewee had returned six months before, to serve as a bagpipe.So far the letter had run composedly enough, but here with a ferocity of accent that testified to his lips as he requested.His friends were those of his life was still untasted when he spoke, harsh and broken.

# retrieve a line by the first word
def get_record(key, datafile):
    '''return line of data file where first "word" matches key'''
    results = None
    with open(datafile) as data:
         for line in data:
            if key == line.split()[0]:
                results = line
                #break
    return results

datafile='virtual.txt'
key = 'the'
text = get_record(key, datafile)
print text


%%writefile ToUse.txt
If will create the same space of about three lines plus one in front of the height, the general rule is satidfied.
He manages his forces as though they were only a memory.
Some people are exceeding graciousness and familiar with the table. Those people are fewer in number.
Long, low masses of dust show the soldiers will not be besieged; ground that must be made known beforehand.
It was thus her wish to sleep. She was compelled by fatigue after undertaking, unassisted, entire weight of the task.
Human life should not underrate the psychic apparatus which alone makes comprehensible the whole night.
All thinking is only the opposite of conscious. Although we cannot identify what it is.
Freud claims foreconscious is a large sum of energy brought about by consciousness.
When an idea which does away with the conscious expression of the punishments, others will associate themselves.
She loved only those who were distinguished in her households.
If the enemy, from a sudden onslaught, is perceived weak make the defeat rapid.
Men of the enemy in relation to water:-- After crossing waters, pass on immediately to a distance.
Now, of the enemy, we may go a thousand leagues without exhaustion.
The way_ or the proper conduct of war will not reap advantage. Do not let proper conduct weaken the effort.
Their difficulty lies in the night betoken alarm.
The computer will download an index of the files within one day.
Non-sanctioned repositories must be made executable.
It automatically backs itself up and ready to go.
It takes the sudo apt-get update udates the index of the the week-ends.
Welcome to The Tales of the first class came I was in Florida.
The computer will download an index of files, it does not install them.
If permission error is indicated, the file's permissions must be reviewed and evaluated by you.
The computer will download an index of files, it does not install them.
Now for the perception system, and, secondly, from the spot where he was last working.
It upholds a _logical connection_ as _approximation in time for a moment for ignition.
If you can not enter into the analysis, the further you are outside the United States.
I will now point out that my mother was dying; the tomb agrees with this.
Wherefore the good general's Speech on the psychology of war was inexcusable.
Vary the stratagem according to my plans, or you will be lost.
With regard to the occasion and the hearts of men, consider this upon employing troops.
Therefore they must not be attacked, they must be divided.
All  of our plans depend on accomplishing a single day's victory.
They who are sitting may be present, the country as give information.
For, while quick accomplishment has been a country and then fall upon them.
If deeply involved in the service of their rights. This is called deeply-involved ground.
But, if he listens and still decides the issue incorrectly, he must be eliminated.
The diagram given a under no after the surface of every description.
That part of the light is the highest light, and it is due to rivers which flow into the earth.
This happens because the heat of the wall, look of the drawings here reproduced in facsimile have never been published before.
Hence we may look at a spot corresponding to the forehead..
The cast shadow will resemble a pyramid the same as the chin to the eyes. 
If we hope to get out of the Alps which divide France from Italy.
THE IMAGES IN THE PUPIL OF THE RAYS WHETHER SHADED OR LUMINOUS HAVE GREATER STRENGTH AND EFFECT AT THEIR SIDES.
The real size of the object mirrored in it is being exposed to the luminous bodies which are are smooth and white.
Because they occupy no space, I will sign up for the American image in a couple weeks.
WHAT PORTION OF A WALL SURFACE WILL BE LEAST LUMINOUS WHICH IS SEEN UNDER THE LEAST AMOUNT OF LIGHT.
As to the distance we will have a very large shadow Which pervades the air.
Compound derived shadows will be very plainly visible if the luminous bodyis not in direct view.
The light which surrounds the derived shadow will show you their shaded side, because on that side of the edges.
The base of this is the same form and colour; but the intersection as throughout the rest.
The sea does not regard planes as foreshortened, but as an object which is nearest to black; and white make blue.
The practice of the middle of the movements made in the same size, the second will seem half the head.
Shadow partakes of the window from the angle where the author refers to morning light in general.
Scuba Diving Lessons I was charged up and ready to go.
The computer will download an index of the newly added repository are available.
Out of the box, apostrophes have no place in a database and can be dangerous.
My project of the Saltman is charged up and it is a database on Google Drive.
As I said I use voice to make an auto-space after a period when using voice.
Out of the files with one of the files with one of the box, apostrophes have no place in a couple weeks.
Experimenting with a funtion to permit the file called configure.
I signed up for the American image in a database. I also wish to say and share.
If permission error is indicated, the file's permissions must be reviewed and evaluated by you.
It will show you any upgrades and you must reply with a few Characters - Very UN-SALTMAN like This may be interested.
This is the location I have things I wish to discourage people to come to the Philippines to party and get drunk.
It automatically backs itself up and ready to go. A friend of mine was a bit of a challenge.
I was charged up and it's database on Google Drive. As I said I use voice to make an auto-space after a period.
When using voice, I am in the terminal. Welcome to The Tales of the commands If it is a tar.
Find the configure file and enter. I program and it also is being recorded.
When using Online Repository Resources it must begin with a few drinks until it is hard to differentiate the two.
Some postings will be fun for readers to try out. It automatically backs itself up and ready to go.
Air Horns there were a large set of air horns in the world is this Dude writing an E-book then.
I am back to doing much of my decision to end my bond with Windows and Linux to me.
We were cruising down the tube to the the spark plug.
I saw a county just getting introduced to the death and abandonment of Windows XP.
It was a home made jet engine using an an igniter I built at home.
I was in the paper because I also fooled a bit with Mac Computers.
I was afraid to cut the gas can away and run.
My friend and I, both on motorcycles, went together to see the van I had to reach over the spark plug.
I was in the garage on fire, caused by the jet engine igniter created at home.
Back when a power failure meant a reinstall because of the favorite exhibits was a hard core DOS Dude.
At the time it was a home made jet engine.
I saw a county just getting introduced to the death and abandonment of Windows XP.
Air Horns there were a large set of air horns in the world is this Dude writing an E-book then.
I am retired and live in the garage on fire. I was afraid to cut the gas over the spark plug.
I had found in the garage examining, modifying, tuning it up.
It was a Windows project followed up by using a gas can.
This is a poor country, and most of the small engine at school blew a blue flame and three or four yellow flames.
I had to reach over the spark plug. OPP ! Almost all the pieces together.
Now what OMG ! I was in the paper. Then reached over the spark plug.
This is a poor country, and most of the dance halls and keep your mind sharp.
Now what OMG ! I was excited at the thought of the favorite exhibits was a home made jet engine.
If you are older this may not lead you into a buzzer to pulse the electricity.
Working from a command line freaks a lot of people out.
If they could, quite often their hardware could not afford to purchase an upgrade.
That being said, you must be wondering why in the Philippines when Microsoft decided to learn and promote Linux.
I had found in the Philippines when Microsoft decided to give serious interest to Ubuntu Linux.
I took the picture on the igniter, I could hear the spark plug.
The filters are used for unpickled records received from a pickled event received over the wire.
Handlers have the following table. If these are missing, the message for this handler fails.
 to a logger which is highest in the following attributes and methods.
The logger name hierarchy is traversed towards the root logger, or delegation to the record will be emitted.
Tidy up any resources used by the handler will not be threadsafe.
Filters can be pickled and sent across the wire, but you should not need to pass the extra dictionary with these keys.
Do formatting for a record - if a message with level INFO on this logger.
Initializes a thread lock which can be used as the effective level for this handler to lvl.
The LogRecord has a filter method with the message.
Filename portion of a message, was a non-root logger.
Logging messages which are below a certain point in the Python package namespace.
Applies this handler’s filters to the root is reached, and it has a filter initialized with the same record multiple times.
If name is lost the filters are consulted in turn by Formatter class. 
Until one of them return a false value, the record is to be added to the same Logger object.
You shouldn’t need to pass a dictionary which is a non-root logger.
For example: The keys in the logger is created with level ERROR on this logger.
I lingered but a glance, for all they went so slowly; it was in his heart, he preferred to speak of it with passion.
Suddenly and at the paper, and last of the low growl of London from all round, very silent.
Each closet held an item needed, but not thing of vital to existance.
I was once again raging and freezing with the passions of Hyde.
But here I took and furnished that house of voluntary bondage, and to grow more at quiet with himself.
But for all his energy of life, that Bernie at last his patience was rewarded.
I mean from henceforth to lead a life of effort, virtue, and control, should usurp the offices of life.
Six hours after, as I supposed, on every side, I began to cherish a longing for advice.
Peewee was no more myself when I know how he fears my power to shake me.
Others will follow, others will outstrip me on the chimney shelf, for even in memory, so dwell on that.
At sight of him back, conscious at his companion.a few seconds.
On his way to Malcom's door, where I saw that Sawbones turn sick and white with the door, in consequence.
And he covered his face was white and his own past, groping in all the time.
We were by no means in the lives of down-going men.
Think of me at first sight, without a start of horror.
Ah, sir, there's blood foully shed in every feature, the marks of prolonged and sordid negligence.
The doctor had bought the house in Soho, to which I had learned to recognise in him for old sake's sake, as they are.
Some two months before the murder had been prevented.
Think of me were in dead earnest; I was able, in clothes of my second character, my faculties seemed sharpened to a watery green.
The instance is initialized with the message. The line number and function name was added.
These attributes can be used with particular Handlers.
If none of them returns a false value which means that the message had a low level WARNING.
If none of them return a reference to the constructor.
The term ‘delegation to the parent logger is created, the level is treated as the effective level.
Returns an instance of the ancestor loggers is traversed towards the root logger is EnabledFor lvl.
If you are unfamiliar with logging, the best way to get to see the links on the right.
The LogRecord has a number of attributes, most of which are combined using msg % args.
You don’t actually need to format this yourself. That indicates if a formatter is set, use it.
If none of them return a reference to the appropriate logger which is highest in the Formatter has been flushed.
If name is specified, it names a logger which is used as the effective level of the time the logging call.
If one returns a true value if the record may be modified in-place by this LogRecord.
You don’t actually need to exercise some care.
In general, you should not clash with the current exception information, or None if no exception has occurred, None.
This allows use of the record into the msg argument to obtain the event doesn’t use the cached value after a formatter is set, use it.
Logging messages which are combined using msg % args.
This is useful because the exception information to be specified.
The value returned is an integer, typically one of them returns a true value if the record is to be used.
Time in milliseconds when the LogRecord being processed.
This version does nothing and is intended to be shown in GMT, set the converter attribute in the final output.
The message attribute of the record will be ignored.
The logged message, computed as msg % args to create the message for this handler to form.
Millisecond portion of pathname. Handlers have the following table.
LogRecord instances are used for the module an if these are missing, the message will not emit the same Logger object.
The message, computed as msg % args to create the message will not care about errors in the following attributes
The primary information is passed in the logging messagei Human-readable time when the exception occurred.
Otherwise, the hierarchy is analogous to the record into the msg argument to obtain the event represented.
The filters are used to pass the extra dictionary with these keys.
The LogRecord has a number of attributes, most of which are combined using msg % args.
If one returns a false value, the record and returns a false value, the handler will not be threadsafe.
Messages are passed directly to the root is reached.
I had now seen the full moon. But he kept fewer secrets than Mr. Guest; and he had grown very silent.
He did no good; his face as he spoke, harsh and broken.
I could see by his neighbourhood two natures that contended in the doctor's appearance.
And all the folks asleep--street after street, and all judges of good wine; and Mr. Utterson a sincere and warm.
The ivory-faced and silvery-haired old woman remained otherwise empty.
Mr. Hyde at such an enemy to rest! Instantly the spirit of enduring hatred.
He did not like his friend's quarters; and he sat on the court by three dusty windows barred with iron.
This little spirit of temper was somewhat theatrical to the post, and which has finally severed me from my bed.
I rushed to the gallows, but the wood was tough and heavy wood.
Enough, then, that he wiped away,, had broken in the morning, and the locksmith was near despair.
The scud had banked over the laboratory, where he would play me, scrawling in my soul that it almost rivalled the brightness of hope.
A maid servant living alone in a moment, like a rat, and run from me?I knew myself, at the high pressure of spirits.
 involved in their Sunday walks, that they should be continuously struggling.
Next, in the middle of the night was fully come, he set it down to dinner without relish.
From these embers the inspector exchanged glances.
On the 12th, and again the panels crashed and the look of him, even at that time, I set it down to follow.
I knew myself, at the acuteness of the court.
The steps drew swiftly nearer, and swelled out suddenly louder as they are.
And then by a sudden splutter of the drug had to deal with in the dismal quarter of London.
Presently her eye wandered to the building which was equipped with neither bell nor knocker.
There are three windows was half-way open; and sitting there by the laboratory or the relief of sorrow and suffering.
How, then, were they agreed; and that it was with a load of genial respectability, and in my cabinet.
The hatred of Hyde was patent to the dryness of a white colour blistered and distained.
Bernie's only answer was to die away, it was without bowels of mercy: a face worth seeing: the face of Edward Hyde.
The hatred of Hyde for Peewee, was of a great student and critic of handwriting, would consider the step natural and obliging?Supposing that I had been in that moment, braced and delighted me like wine.
As soon as he now sat on one point, were they agreed; and that was my appetite.
He was ashamed of his strange associates, of the pulse.
An ivory-faced and silvery-haired old woman remained otherwise empty, Mr. Hyde that racked me.
And when at last, in order to pacify their too just resentment, Edward Hyde had to bring my mind submerged in terror.
Small sounds carried far; domestic sounds out of good wine; and Mr. Utterson a sincere and warm affection.
On his way out, Mr Rogers all night; and if I had of my ordinary manner to a man I so disliked.
Here I proceeded to examine the contents of the prison-house of my more wakeful moments, my eyes it bore no postmark.
To this rule, Dr. Peewee had returned six months before, to serve as a bagpipe.
So far the letter had run composedly enough, but here with a ferocity of accent that testified to his lips.
His friends were those of his life was still untasted when he spoke, harsh and broken.



import BeautifulSoup as soup

WANTED = 20 #or however many characters you want after 'Figure'
         
with open('virtual.txt') as searchfile:
    for line in searchfile:
        line = line.replace(".",".\n")
        print line
            

# %load /home/jack/Desktop/imagebot/ImageBot1.py
#!/home/jack/anaconda2/bin
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import markovify
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import time
#nap=randint(10,40)
#time.sleep(nap)
path = r"publish/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
])
filename0=(path+base_image)

#base_image ="/home/jack/Desktop/deep-dream-generator/notebooks/new/2/"
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(filename0)
size = image.size

# create numpy array from the opened image 
im = np.array(image, dtype=np.uint8)

# Plot figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        #square_size = randint(10,35)
        #offset_factor = randint(10,35)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2a.jpg')
#Create a second image
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(filename0)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
        #textin = (generate_the_word("wordcloud.txt"))

# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        #square_size = randint(10,35)
        #offset_factor = randint(10,35)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2b.jpg')


img0 = Image.open("images/Sranger-Tri-001-crop2a.jpg")
img1 = Image.open("images/Sranger-Tri-001-crop2b.jpg")
blen = ImageChops.blend(img0, img1, .9)
blen.save('images/Sranger-Tri-001-crop2b.jpg')

#---------------


base = Image.open('images/Sranger-Tri-001-crop2b.jpg').convert('RGBA')
 
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))
def generate_the_word(infile):
    with open(infile) as f:
            contents_of_file = f.read()
    lines = contents_of_file.splitlines()
    line_number = random.randrange(0, len(lines))
    return lines[line_number]
    

#base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy
signature_ = "The TwitterBot Project" 
d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(base, txt)
out.save("images/tmp.jpg", "JPEG")
# save the image then reopen to put a title
base = Image.open('images/tmp.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("titles.txt"))
d.text((x,y), title , font=fnt, fill=(0,0,0,250))
out2 = Image.alpha_composite(base, txt)
out2.save("images/TM_POST.jpg", "JPEG")


#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
f = open("art.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
STR = (text_model.make_short_sentence(140))
#STR = ("#All_in_One - #WordCloud #Create - Added ability to randomly choose an image background  #Automated")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "images/TM_POST.jpg"
photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])

from random import randint
import FileLen
Max = FileLen.filelen("ToUse.txt")
num = randint(0, Max)
with open('ToUse.txt') as f:
    for i, STR in enumerate(f, 1):
        if i == num:
            break
#STR = line
print STR

import sys
sys.path.insert(0,"/home/jack/Desktop/imagebot")
import ImageBot1

%%writefile Tpost.py
# post image and tweet to Twitter
# USAGE: import Tpost
# Tpost.tpost(ImgPath,STR)
import sys
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import Key
def tpost(ImgPath,STR):
    CONSUMER_KEY = Key.twiter()[0]
    CONSUMER_SECRET = Key.twiter()[1]
    ACCESS_KEY = Key.twiter()[2]
    ACCESS_SECRET = Key.twiter()[3]
    twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY,ACCESS_SECRET)
    photo = open(ImgPath,'rb')
    response = twitter.upload_media(media=photo)
    twitter.update_status(status=STR, media_ids=[response['media_id']])

!rm /home/jack/anaconda2/lib/python2.7/site-packages/Tpost.pyc

!cp Tpost.py  /home/jack/anaconda2/lib/python2.7/site-packages/

import Txmanip
help(Txmanip)

!ls *.txt

from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.utils import ImageReader
from PIL import Image

from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.utils import ImageReader
from PIL import Image

ptr = open("ToUse.txt", "r") 
lineas = ptr.readlines()
ptr.close()
i = 750
numeroLinea = 0

while numeroLinea < len(lineas):
    if numeroLinea - len(lineas) < 60: # I'm gonna write every 60 lines because I need it like that
        i=750
        for linea in lineas[numeroLinea:numeroLinea+60]:      
            canvas.drawString(15, i, linea.strip())
            numeroLinea += 1
            i -= 12
        canvas.showPage()
    else:
        i = 750
        for linea in lineas[numeroLinea:]:
            canvas.drawString(15, i, linea.strip())
            numeroLinea += 1
            i -= 12
        canvas.showPage()



