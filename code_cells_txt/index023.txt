-





#ONE TIME MANUAL POSTS
#!/home/jack/anaconda2/python
import random
from random import randint
import time
import markovify
import os
import Key
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
custom = "screencap/640_manual_20170914082852.png"
filename0=(custom)
def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

if __name__ == '__main__':
    inp = Image.open(filename0)
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text_col = (255, 25,23,180) # bright green
    halo_col = (0, 0, 0)   # black
    textin = (generate_the_word("wordcloud.txt"))
    i2 = draw_text_with_halo(inp, (15, 8), textin, font, text_col, halo_col)
    
    #txt = Image.new('RGBA', i.size, (255,255,255,0))
    
    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    width, height = inp.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    txt=draw_text_with_halo(i2,(x,y), signature_, fnt, text_col2, halo_col2)
    out = Image.alpha_composite(i2, txt)
    out.save("tmp/TM_POST.jpg")

#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
f = open("art.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
STR = ("#Jupyter #Notebook Work Random pages posted #python #jupyternotebook #programming")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "tmp/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')

photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])


!showme tmp/TM_POST.jpg

print STR

%%writefile cap.py
import gtk.gdk
import sys
# arg is passed on to filename
output = sys.argv[1]
def Cap(output):
    w = gtk.gdk.get_default_root_window()
    sz = w.get_size()
    pb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,False,8,sz[0],sz[1])
    pb = pb.get_from_drawable(w,w.get_colormap(),0,0,0,0,sz[0],sz[1])
    pb.save(output,"png")
if __name__ == "__main__":
    Cap(output)    


# USAGE: python cap.py path/filename.png
!python cap.py screencap/test.png


from PIL import Image
import GenIm
import time
imfile = Image.open("screencap/640_20170911121823.png")
#imout = time.strftime("screencap/640_%Y%m%d%H%M%S.png")
imout = "screencap/640.png"
GenIm.Signat(imfile, imout)

filename = time.strftime("screencap/%Y%m%d%H%M%S.png")
# Renames the temp.png to a time based filename Example:  20170911113012.png
os.rename("screencap/640.png", filename)

#%%writefile RandCap640.py
import os
import time
from random import randint
from PIL import Image
import GenIm
count = 0
#Saves 100 images 
total = 300
while count<total:
    # captures the window
    os.system("import -window root screencap/temp.png")
    #generates a filename based on time
    img = Image.open("screencap/temp.png")
    img2 = img.crop((200, 0, 968, 768))
    img2 = img2.resize((640,640), Image.NEAREST)
    img2.save('screencap/temp2.png')
    imfile = Image.open("screencap/temp2.png")
  
    imout = time.strftime("screencap/640_manual_%Y%m%d%H%M%S.png")
    #imout = 'screencap/temp640.png'
    GenIm.Signat(imfile, imout)
    print "Number : ",count+1,"of",total,"  FileName : ",imout
    # Adds a random timer
    nap = randint(10, 30)
    # Sleeps for the randomly chosen time
    time.sleep(nap)
    count = count +1

    

#%%writefile RandCap.py
import os
import time
from random import randint
from PIL import Image
count = 0
#Saves 100 images 
total = 100
while count<total:
    # captures the window
    os.system("import -window root screencap/temp.png")
    #generates a filename based on time
    filename = time.strftime("screencap/%Y%m%d%H%M%S.png")
    # Renames the temp.png to a time based filename Example:  20170911113012.png
    os.rename("screencap/temp.png", filename)
    print "Number : ",count+1,"of",total,"  FileName : ",filename
    # Adds a random timer
    nap = randint(60, 430)
    # Sleeps for the randomly chosen time
    time.sleep(nap)
    count = count +1

    

from PIL import Image, ImageChops
im = Image.open("screencap/20170911113012.png")
im.size

# %load GenIm.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import cv2
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import shutil
import numpy as np

def Verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
Verify_path('tmmpp/')

def Resize640(image, output):
    Bp=Image.open(image)
    width, height = Bp.size
    if width>height:
        w1=(width-height)/2
        w2 = width-w1
        h1=height-height
        h2=height
        Cc=Bp.crop((w1,h1,w2,h2))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
    else:
        w1= width - width
        w2 = width
        h1 = (height-width)/2
        h2= height - h1
        Cc=Bp.crop((w1,h1,w2,h2))
        #Cc=Bp.crop((260,680,680,940))
        #Cc=Bp.crop((0,260,680,940))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
        return resizeIm
        # USE example
        #image = "junk/wide.png"
        #output = "junk/wideTest4.png"
        #nim = genim.Resize640(image, output)    

def CustIm(color):
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, color)
    img0.save('tmmpp/img0.png')
    return img0

    # generate and save Custom color/transparency image as: tmmpp/img0.png
    # GenIm.CustIm(color)
        
    
def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image as: tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image as: tmmpp/img1.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    op1 = Image.open(img0a).convert("RGBA")
    op2 = Image.open(img1a).convert("RGBA")
    resulta = ImageChops.blend(op1,op2,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

def Brightness(fileN, output, alpha):
    alpha = float(alpha)
    im3 = Image.open(fileN)
    # multiply each pixel by < 1.0 (darker image)
    # multiply each pixel by > 1.0 (lighter image)
    # works best with .jpg and .png files
    # note that lambda is akin to a one-line function
    #im2 = im1.point(lambda p: p * 0.9)
    im4 = im3.point(lambda p: p * alpha)
    im4.save(output)
    return im4
    #Usage Example:
    #fileN = "junk/wideTest4.png"
    #output= "tmmpp/brightnessTest3.png"
    #alpha = 1.2
    #GenIm.brightness(fileN, output, alpha)
    #view = Image.open("tmmpp/brightnessTest3.png")
    #view
def wordcloud(inputF,outputF):
    title = "Python Stuff"
    signature_ = "Jack Northrup" 
    count = 1
    start = Image.open(inputF).convert('RGBA')
    start.save('tmmpp/textbacktmp.jpg')
    while count < 256 :
        base = Image.open('tmmpp/textbacktmp.jpg').convert('RGBA')

        #8 5 4 6 3 2
        # make a blank image for the text, initialized to transparent text color
        txt = Image.new('RGBA', base.size, (255,255,255,0))
        # get a font
        #generate a random size for the font
        int_n = int(count*.2)
        Fsize = randint(15,100-int_n)
        fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
        # get a drawing context
        d = ImageDraw.Draw(txt)
        width, height = base.size
        


        def generate_the_word(infile):
            with open(infile) as f:
                contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            line_number = random.randrange(0, len(lines))
            return lines[line_number]
        textin = (generate_the_word("wordcloud.txt"))

        # calculate the x,y coordinates of the text
        w, h = base.size
        Lw = randint(-150,w-50)
        Lh = randint(-50,h-30)
        #textin = "The TwitterBot Project" 
        #generate random color and opacity
        r = randint(0,256)
        g = randint(0,256)
        b = randint(0,256)
        a = randint(0,count)
        d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

        out = Image.alpha_composite(base, txt)
        out.save("tmmpp/textbacktmp.jpg", "JPEG")
        count=count+1

    #base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', out.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = out.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    marginx = 225
    marginy = 50
    x = width - marginx
    y = height - marginy

    d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

    out = Image.alpha_composite(out, txt)
    out.save("tmmpp/tmp.jpg", "JPEG")
    # save the image then reopen to put a title
    base = Image.open('tmmpp/tmp.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    x = 90
    y = 10
    d.text((x,y), title , font=fnt, fill=(0,0,0,250))
    out2 = Image.alpha_composite(base, txt)
    out2.save(outputF, "JPEG")
    out2.show()
    return out2
    #outputF = 'tmmpp/wordcloud_01.jpg'
    #inputF = 'tmmpp/brightnessTest3.png'
    #wordcloud(inputF,outputF)

n=5
def Swappalette(filename0, filename1, output):
    #input1='/home/jack/Desktop/imagebot/colorful/20170824124329.jpg'
    #input2='/home/jack/Desktop/imagebot/posted/'
    shutil.copy2(filename0, 'instagram/') # complete target filename given
    shutil.copy2(filename1, 'instagram/')# target filename is /dst/dir/file.ext

    aa = Image.open(filename0).convert("RGB")
    #bb = Image.open("/home/jack/Documents/GG.jpg").convert("RGB")
    bb = Image.open(filename1).convert("RGB")
    xx=aa.resize((640,640), Image.NEAREST)
    yy=bb.resize((640,640), Image.NEAREST)
    xx.save("junk/aa.png")
    yy.save("junk/bb.png")
    src = Image.open('junk/aa.png').convert('RGB')
    dst = Image.open('junk/bb.png').convert('RGB')
    src.save("junk/aa.png")
    dst.save("junk/bb.png")
    n = 5 #number of partitions per channel.
    src_handle = Image.open("junk/bb.png")
    dst_handle = Image.open("junk/aa.png")
    src = src_handle.load()
    dst = dst_handle.load()
    assert src_handle.size[0]*src_handle.size[1] == dst_handle.size[0]*dst_handle.size[1],"images must be same size"

    def makePixelList(img):
        l = []
        for x in range(img.size[0]):
            for y in range(img.size[1]):
                l.append((x,y))
        return l

    lsrc = makePixelList(src_handle)
    ldst = makePixelList(dst_handle)

    def sortAndDivide(coordlist,pixelimage,channel): #core
        global src,dst,n
        retlist = []
        #sort
        coordlist.sort(key=lambda t: pixelimage[t][channel])
        #divide
        partitionLength = int(len(coordlist)/n)
        if partitionLength <= 0:
            partitionLength = 1
        if channel < 2:
            for i in range(0,len(coordlist),partitionLength):
                retlist += sortAndDivide(coordlist[i:i+partitionLength],pixelimage,channel+1)
        else:
            retlist += coordlist
        return retlist
    print(src[lsrc[0]])
    lsrc = sortAndDivide(lsrc,src,0)
    ldst = sortAndDivide(ldst,dst,0)
    for i in range(len(ldst)):
        dst[ldst[i]] = src[lsrc[i]]


    filename = time.strftime(output)

    dst_handle.save(filename)

    shutil.copy2(filename, "instagram/")

    custom = "junk/PalletteTemp.png"
    filename0 = (custom)
    return filename0

    """
    import GenIm
    filename0 = 'tmmpp/640_iguana.jpg'   
    filename1 = 'images/Sranger-Tri-001-crop2b.jpg'

    output = "junk/PalletteTemp.png"    
    GenIm.Swappalette(filename0, filename1, output)    
    """    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    #font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    '''
    Usage:
    import GenIm
    img = Image.open("tmmpp/imblend.png")
    x=200;y=200
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text = "Place Text in Image"
    col= (255,0,0)
    xf=10;yf=10
    halo_col = (255,255,255)
    GenIm.Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col)
    '''
def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

def applybin(inputA, outputA):
    im = Image.open(inputA)
    im_grey = im.convert('LA') # convert to grayscale
    width,height = im.size

    total=0
    for i in range(0,width):
        for j in range(0,height):
            total += im_grey.getpixel((i,j))[0]

    mean = total / (width * height)
    image_file = Image.open(inputA)
    imagex = image_file.convert('L')  # convert image to monochrome
    imagey = np.array(imagex)
    binim = binarize_array(imagey, mean)
    cv2.imwrite(outputA, binim)
    return binim
    #import GenIm
    #inputA ="tmmpp/640_iguana.jpg"
    #outputA = "tmmpp/binim02.png"
    #binim = GenIm.applybin(inputA, outputA)
    
def bw(imgFile,outFile):
    #convert image to blackand white
    col = Image.open(imgFile)
    gry = col.convert('L')
    grarray = np.asarray(gry)
    bw = (grarray > grarray.mean())*255
    cv2.imwrite(outFile, bw)
    return bw
    #import GenIm
    #imgFile= 'tmmpp/Effects.png'
    #outFile= 'tmmpp/bw3.png'
    #GenIm.bw(imgFile,outFile)

def Generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def alpha_to_color(image, color=(255, 255, 255)):
    """Set all fully transparent pixels of an RGBA image to the specified color.
    This is a very simple solution that might leave over some ugly edges, due
    to semi-transparent areas. You should use alpha_composite_with color instead.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    x = np.array(image)
    r, g, b, a = np.rollaxis(x, axis=-1)
    r[a == 0] = color[0]
    g[a == 0] = color[1]
    b[a == 0] = color[2] 
    x = np.dstack([r, g, b, a])
    return Image.fromarray(x, 'RGBA')


def alpha_composite(front, back, falpha):
    """Alpha composite two RGBA images.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    front -- PIL RGBA Image object
    back -- PIL RGBA Image object
    """
    front = np.asarray(front)
    back = np.asarray(back)
    result = np.empty(front.shape, dtype='float')
    alpha = np.index_exp[:, :, 3:]
    rgb = np.index_exp[:, :, :3]
    falpha = front[alpha] / 255.0
    balpha = back[alpha] / 255.0
    result[alpha] = falpha + balpha * (1 - falpha)
    old_setting = np.seterr(invalid='ignore')
    result[rgb] = (front[rgb] * falpha + back[rgb] * balpha * (1 - falpha)) / result[alpha]
    np.seterr(**old_setting)
    result[alpha] *= 255
    np.clip(result, 0, 255)
    # astype('uint8') maps np.nan and np.inf to 0
    result = result.astype('uint8')
    result = Image.fromarray(result, 'RGBA')
    return result


def alpha_composite_with_color(image, color=(255, 255, 255)):
    """Alpha composite an RGBA image with a single color image of the
    specified color and the same size as the original image.
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    back = Image.new('RGBA', size=image.size, color=color + (255,))
    return alpha_composite(image, back)


def pure_pil_alpha_to_color_v1(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    NOTE: This version is much slower than the
    alpha_composite_with_color solution. Use it only if
    numpy is not available.
    Source: http://stackoverflow.com/a/9168169/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    def blend_value(back, front, a):
        return (front * a + back * (255 - a)) / 255

    def blend_rgba(back, front):
        result = [blend_value(back[i], front[i], front[3]) for i in (0, 1, 2)]
        return tuple(result + [255])

    im = image.copy()  # don't edit the reference directly
    p = im.load()  # load pixel array
    for y in range(im.size[1]):
        for x in range(im.size[0]):
            p[x, y] = blend_rgba(color + (255,), p[x, y])

    return im

def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    Simpler, faster version than the solutions above.
    Source: http://stackoverflow.com/a/9459208/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    image.load()  # needed for split()
    background = Image.new('RGB', image.size, color)
    background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
    return background    
    
def Rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def Get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()

def Adtext(inputIm,text):
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    Draw_text_with_halo(img, position, text, font, col, halo_col)
    # USE: img = GenIm.Adtext(inputIm,text)
    return text
    
def Signat(imfile,imout):
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
    width, height = imfile.size
    marginx = 325
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    imfile = Draw_text_with_halo(imfile,(x,y), signature_ , fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile

def Centercut(img1, new_width, new_height):
    # def Centercut(path, img1, new_width, new_height):
    # img = Image.open(path+"/"+img1)
    img = Image.open(img1)
    w_var=new_width/2
    h_var=new_height/2
    half_the_width = img.size[0] / 2
    half_the_height = img.size[1] / 2
    img4 = img.crop(
        (
            half_the_width - w_var,
            half_the_height - h_var,
            half_the_width + w_var,
            half_the_height + h_var
        )
    )
    return img4

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath


from PIL import Image, ImageChops
import time
img = Image.open("screencap/20170911113012.png")
img2 = img.crop((200, 0, 968, 768))
filename = time.strftime("screencap/640_%Y%m%d%H%M%S.png")
img2.save(filename)

import matplotlib
import numpy as np
import mpld3
import matplotlib.pyplot as plt
from PIL import Image
from mpld3 import plugins
%matplotlib inline
fig, ax = plt.subplots()
im = np.array(Image.open('screencap/20170911113012.png'))
plt.imshow(im)
plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()

%%writefile mousecap.py
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
import matplotlib.widgets as widgets

def onselect(eclick, erelease):
    if eclick.ydata>erelease.ydata:
        eclick.ydata,erelease.ydata=erelease.ydata,eclick.ydata
    if eclick.xdata>erelease.xdata:
        eclick.xdata,erelease.xdata=erelease.xdata,eclick.xdata
    ax.set_ylim(erelease.ydata,eclick.ydata)
    ax.set_xlim(eclick.xdata,erelease.xdata)
    fig.canvas.draw()

fig = plt.figure()
ax = fig.add_subplot(111)
filename="screencap/20170911113012.png"
im = Image.open(filename)
arr = np.asarray(im)
plt_image=plt.imshow(arr)
rs=widgets.RectangleSelector(
    ax, onselect, drawtype='box',
    rectprops = dict(facecolor='red', edgecolor = 'black', alpha=0.5, fill=True))
plt.show()

import GenIm
imfile = Image.open("screencap/640_20170911121823.png")
imout = "screencap/640.png"
GenIm.Signat(imfile, imout)

from PIL import Image
import GenIm

image = "screencap/20170911113012.png"
output = "screencap/Use01.jpg"
im = GenIm.Resize640(image, output)
im = Image.open("screencap/Use01.jpg")
Signat(imfile, imout)
im

%%writefile CAP.py
import os
import time
from PIL import Image
filename = time.strftime("screencap/%Y%m%d%H%M%S.png")
os.system("import -window root screencap/temp.png")
imCap = Image.open("screencap/temp.png")
filename = time.strftime("screencap/%Y%m%d%H%M%S.png")
imCap.save(filename)
print filename


import gtk.gdk

w = gtk.gdk.get_default_root_window()
sz = w.get_size()
print "The size of the window is %d x %d" % sz
pb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,False,8,sz[0],sz[1])
pb = pb.get_from_drawable(w,w.get_colormap(),0,0,0,0,sz[0],sz[1])
if (pb != None):
    pb.save("screenshot.png","png")
    print "Screenshot saved to screenshot.png."
else:
    print "Unable to get the screenshot."

 VALUES (?, ?)" a, b)
 (%s, %s,)", (a, b))

import os
os.system("import -window root screencap/temp.png")


!ls ~/anaconda2/lib/python2.7/site-packages/pyscreenshot

!ls ~/anaconda2/lib/python2.7/site-packages/pyscreenshot/plugins

!ls pyscreenshot/pyscreenshot

import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
import Key
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile):
        if random.randrange(num + 2): continue
        line = aline
    return line


# imported from Key.py
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
photo = open('screencap/640_20170911132757.png', 'rb')
response = twitter.upload_media(media=photo)
afile = open("code.txt", 'r')
STR = random_line(afile)
twitter.update_status(status=STR, media_ids=[response['media_id']])


from PIL import Image, ImageFont
import GenIm

#img = Image.open('tmmpp/hurricane002masked.jpg')
position = (20,20)
text= "HURRICANE 2017"
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
fs = font.getsize(text)
col = (255,255,255,200)
halo_col = (0,0,0)

print len(text.strip()),fs

from PIL import Image, ImageFont
import GenIm

img = Image.open('tmmpp/HURRICANE_01.png')
position = (340,600)
text= "JackNorthrup_ImageBot"
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
col = (255,255,255,150)
halo_col = (0,0,0)
newim = GenIm.Draw_text_with_halo(img, position, text, font, col, halo_col)
newim.save("tmmpp/HURRICANE_02.png")
!showme tmmpp/HURRICANE_02.png

%%writefile code.txt
import random
import wx
import wx.lib.scrolledpanel as scrolled
class MyForm(wx.Frame) , 
def __init__(self) , 
wx.Frame.__init__(self ,  None ,  wx.ID_ANY ,   , Font Tutorial , )
# Add a panel so it looks the correct on all platforms
panel = scrolled.ScrolledPanel(self)
panel.SetAutoLayout(1) panel.SetupScrolling()
fontSizer = wx.BoxSizer(wx.VERTICAL)
families = { , FONTFAMILY_DECORATIVE , wx.FONTFAMILY_DECORATIVE ,  # A decorative font
 , FONTFAMILY_DEFAULT , wx.FONTFAMILY_DEFAULT , 
 , FONTFAMILY_MODERN , wx.FONTFAMILY_MODERN ,      # Usually a fixed pitch font
 , FONTFAMILY_ROMAN , wx.FONTFAMILY_ROMAN ,       # A formal ,  serif font
 , FONTFAMILY_SCRIPT , wx.FONTFAMILY_SCRIPT ,      # A handwriting font
 , FONTFAMILY_SWISS , wx.FONTFAMILY_SWISS ,       # A sans-serif font
 , FONTFAMILY_TELETYPE , wx.FONTFAMILY_TELETYPE    # A teletype font
 weights = { , FONTWEIGHT_BOLD , wx.FONTWEIGHT_BOLD , 
 , FONTWEIGHT_NORMAL , wx.FONTWEIGHT_NORMAL
styles = { , FONTSTYLE_ITALIC , wx.FONTSTYLE_ITALIC , 
 , FONTSTYLE_NORMAL , wx.FONTSTYLE_NORMAL , 
 , FONTSTYLE_SLANT , wx.FONTSTYLE_SLANT ,  sizes = [8 ,  10 ,  12 ,  14]
for family in families.keys() , 
for weight in weights.keys() , 
for style in styles.keys() , 
label =  , %s    %s    %s ,  % (family ,  weight ,  style)
size = random.choice(sizes)
font = wx.Font(size ,  families[family] ,  styles[style] ,  
weights[weight])  , txt = wx.StaticText(panel ,  label=label)
txt.SetFont(font) fontSizer.Add(txt ,  0 ,  wx.ALL ,  5)
panel.SetSizer(fontSizer)
sizer = wx.BoxSizer(wx.HORIZONTAL)
sizer.Add(panel ,  1 ,  wx.EXPAND)
self.SetSizer(sizer) Run the program
if __name__ ==  , __main__ , app = wx.App(False) frame = MyForm().Show()
app.MainLoop() # retrieve a line by the first word
def get_record(key ,  datafile) , '''return line of data file where first  , word ,  matches key'''
results = None with open(datafile) as data , 
for line in data , if key == line.split()[0] ,results = line
#break  return results datafile='data/twit.data' key = 'Trump' text = get_record(key ,  datafile)
print text twitter = Twitter() # username/password not required for these calls
friends = twitter.friends.ids(screen_name=USERNAME)
followers = twitter.followers.ids(screen_name=USERNAME)
guilty = [x for x in friends if x not in followers]
print  , There are %s tweeps you follow who do not follow you ,  % len(guilty)
for user_id in guilty , user = twitter.users.show(user_id=user_id)
print  , %s follows %s and has %s followers. ,  % \ user['name'] ,  user['friends_count'] ,  user['followers_count'] )
import gtk.gdk w = gtk.gdk.get_default_root_window()
sz = w.get_size() print 'The size of the window is %d x %d % sz
pb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB , False , 8 , sz[0] , sz[1])
pb = pb.get_from_drawable(w , w.get_colormap() , 0 , 0 , 0 , 0 , sz[0] , sz[1])
if (pb != None) ,  pb.save('screenshot.png' , 'png')
print 'Screenshot saved to screenshot.png.'print 'Unable to get the screenshot.'
names.append(follower[ , name , ].encode( , utf-8 , )) usernames.append(follower[ , screen_name , ].encode( , utf-8 , ))
ids.append(follower[ , id , ]) locations.append(follower[ , location , ].encode( , utf-8 , ))
follower_count.append(follower[ , followers_count , ])
next_cursor = get_followers[ , next_cursor , ]
path = r , /home/jack/Desktop/deep-dream-generator/notebooks/new/1/ , 
#path = r , crawler4/ , base_image = random.choice([  x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path ,  x))  ])
filename0=(path+base_image) #path0 = r , blend/ , 
path0 = r , newmask/ , base_image0 = random.choice([
x0 for x0 in os.listdir(path0) if os.path.isfile(os.path.join(path0 ,  x0))
]) filename00=(path0+base_image0) path1 = r , crawler4/ , 
base_image1 = random.choice([  x1 for x1 in os.listdir(path1)
if os.path.isfile(os.path.join(path1 ,  x1))])
mask0=(path1+base_image1) im1 = Image.open(filename0)
im1 = im1.resize((640 , 640) ,  Image.NEAREST) im1.save( , tmp/01.png , )
jpg_im1 = Image.open( , tmp/01.png , ) im02 = Image.open(filename00)
im2 = im02.resize((640 , 640) ,  Image.NEAREST)
im1.save( , tmp/02.png , ) jpg_im2 = Image.open( , tmp/02.png , ) 
im03 = Image.open(mask0) im04 = im03.resize((640 , 640) ,  Image.NEAREST)
#im04.save( , tmp/03.png , ) #jpg_im3 = Image.open( , tmp/03.png , )
#image_file = jpg_im3.convert( , RGBA , ) #im04 = image_file.convert('1')
datas = im04.getdata() newData = [] for item in datas , 
 if item[0] == 255 and item[1] == 255 and item[2] == 255 , 
newData.append((255 ,  255 ,  255 ,  0))  else , 
 newData.append(item) im04.putdata(newData) time.sleep(2)  
result1 = ImageChops.composite(jpg_im1 ,  jpg_im2 ,  im03)
#result1 = ImageChops.blend(jpg_im1 ,  jpg_im2 ,  .5)
filename = time.strftime( , crawler/%Y%m%d%H%M%S.png , )result1.save(filename)


import os
import random
import sys
import markovify


def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile):
        if random.randrange(num + 2): continue
        line = aline
    return line


afile = open("code.txt", 'r')
STR = random_line(afile)
print STR

from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
import Key
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile):
        if random.randrange(num + 2): continue
        line = aline
    return line

#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
afile = "code.txt"
STR = random_line(afile)

video = open('/path/to/file/video.mp4', 'rb')
response = twitter.upload_video(media=video, media_type='video/mp4')
twitter.update_status(status=STR, media_ids=[response['media_id']])


import random
from random import randint
import time
import markovify
import os
import Key
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
#removed keys for privacy reasons
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)

results = twitter.cursor(twitter.search, q='hurricane, florida')
print results

from twython import Twython, TwythonError
# Need to import csv now too!
import csv
import datetime
import Key

CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
# This time we want to make several lists!
names = []
usernames = []
ids = []
locations = []
follower_count = []

datestamp = datetime.datetime.now().strftime("%Y-%m-%d")

username = raw_input("Retrieve Follower list of: ")

next_cursor = -1

while(next_cursor):
    get_followers = twitter.get_followers_list(screen_name=username,count=200,cursor=next_cursor)
    for follower in get_followers["users"]:
# And add some more user details to its corresponding list
        names.append(follower["name"].encode("utf-8"))
        usernames.append(follower["screen_name"].encode("utf-8"))
        ids.append(follower["id"])
        locations.append(follower["location"].encode("utf-8"))
        follower_count.append(follower["followers_count"])
        next_cursor = get_followers["next_cursor"]

# Instead of creating a .txt we want to create a .csv!
open_csv = open(username+"-"+datestamp+".csv","wb")
# And write to it...
followers_csv = csv.writer(open_csv)

# Creating our top "title" row
names.insert(0,"@%s has %s followers (%s)" % (str(username),str(len(follower)),str(datestamp)))
usernames.insert(0,"")
ids.insert(0,"")
locations.insert(0,"")
follower_count.insert(0,"")

# Give each column its own title
names.insert(1,"Display Name")
usernames.insert(1,"Username (@)")
ids.insert(1,"User ID")
locations.insert(1,"Location")
follower_count.insert(1,"# of their Followers")

# Merge all our lists together so that they line up
rows = zip(names,usernames,ids,locations,follower_count)

# Write each row one-by-one to our spreadsheet
for row in rows:
    followers_csv.writerow(row)

# Save and close our csv spreadsheet
open_csv.close()



for result in results
    count=count+1
    if count>10:
        break
    print result


import twitter
import Key
api = twitter.Api()

api = twitter.Api(consumer_key=Key.twiter()[0],
                  consumer_secret=Key.twiter()[0],
                  access_token=Key.twiter()[0],
                  access_token_secret=Key.twiter()[0])
user = int(166329578)
statuses = api.GetUserTimeline(user)
print([s.text for s in statuses])

#Get a user name from id nymber or vis versa
import tweepy
import Key
consumer_key1 = Key.twiter()[0]
consumer_secret1 = Key.twiter()[1]
access_token1 = Key.twiter()[2]
access_token_secret1 = Key.twiter()[3]
twitter = Key.twiter()[4]

'''
consumer_key='YazCRIfWX4VICiRCOiph08jDL'
consumer_secret='QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
access_token ='296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
access_token_secret='zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'
'''
print consumer_key1,consumer_secret1,access_token1,access_token_secret1,"\n", twitter

#Get a user name from id nymber or vis versa
import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]



auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)
user = api.get_user(166329578)                                                           
user.screen_name

#To get user id from user screen name
#user = api.get_user(screen_name = 'saimadhup')
#user.id

#Get a user name from id number or vis versa
import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)
#user = api.get_user(166329578)                                                           
#user.screen_name

#To get user id from user screen name
user = api.get_user(screen_name = 'MiamiDadeCounty')
user.id

import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)
for status in tweepy.Cursor(api.home_timeline).items(20):
    # Process a single status
    print(status.text)

import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

for status in tweepy.Cursor(api.home_timeline).items(10):
    # Process a single status
    process_or_store(status._json)

import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]


auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)


%%writefile config.py
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]


!python twitter_download.py -q Hurricane -d data


# To run this code, first edit config.py with your configuration, then:
#
# mkdir data
# python twitter_stream_download.py -q apple -d data
# 
# It will produce the list of tweets for the query "apple" 
# in the file data/stream_apple.json

import tweepy
from tweepy import Stream
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
import time
import argparse
import string
import config
import json
import Key
def get_parser():
    """Get parser for command line arguments."""
    parser = argparse.ArgumentParser(description="Twitter Downloader")
    parser.add_argument("-q",
                        "--query",
                        dest="query",
                        help="Query/Filter",
                        default='-')
    parser.add_argument("-d",
                        "--data-dir",
                        dest="data_dir",
                        help="Output/Data Directory")
    return parser


class MyListener(StreamListener):
    """Custom StreamListener for streaming data."""

    def __init__(self, data_dir, query):
        query_fname = format_filename(query)
        self.outfile = "%s/stream_%s.json" % (data_dir, query_fname)

    def on_data(self, data):
        try:
            with open(self.outfile, 'a') as f:
                f.write(data)
                print(data)
                return True
        except BaseException as e:
            print("Error on_data: %s" % str(e))
            time.sleep(5)
        return True

    def on_error(self, status):
        print(status)
        return True


def format_filename(fname):
    """Convert file name into a safe string.

    Arguments:
        fname -- the file name to convert
    Return:
        String -- converted file name
    """
    return ''.join(convert_valid(one_char) for one_char in fname)


def convert_valid(one_char):
    """Convert a character into '_' if invalid.

    Arguments:
        one_char -- the char to convert
    Return:
        Character -- converted char
    """
    valid_chars = "-_.%s%s" % (string.ascii_letters, string.digits)
    if one_char in valid_chars:
        return one_char
    else:
        return '_'

@classmethod
def parse(cls, api, raw):
    status = cls.first_parse(api, raw)
    setattr(status, 'json', json.dumps(raw))
    return status



consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]


auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)    
twitter_stream = Stream(auth, MyListener("data", "hurricane"))
twitter_stream.filter(track = "hurricane")


#! /usr/bin/env python

# how to unfollow everyone who isn't following you
# By Jamieson Becker (Public Domain/no copyright, do what you will)

# Easy instructions, even if you don't know Python
#
# 1.  Install pip (apt-get install python-pip) and then
#     pip install tweepy, which is the python twitter client
#
# 2.  create a new app in your account at dev.twitter.com
#     and then plug in your consumer and app keys below.
#     Trim all whitespace at beginning/end of your keys.
#
# 3.  the twitter app needs to have permissions changed to
#     read-write, as apps are read-only by default.
# 
# 4.  Execute this script: python unfollow.py

import time
import tweepy
import sys
import Key


consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)    


print "Loading followers.."
follower_objects = [follower for follower in tweepy.Cursor(api.followers).items()]

print "Found %s followers, finding friends.." % len(followers)
friend_objects = [friend for friend in tweepy.Cursor(api.friends).items()]

# create dictionaries based on id's for easy lookup
friends = dict([(friend.id, friend) for friend in friend_objects])
followers = dict([(follower.id, follower) for follower in follower_objects])

# find all your "non_friends" - people who don't follow you even though you follow them.
non_friends = [friend for friend in friend_objects if friend.id not in followers]

# double check, since this could be a rather traumatic operation.
print "Unfollowing %s non-following users.." % len(non_friends)
print "This will take approximately %s minutes." % (len(non_friends)/60.0)
answer = raw_input("Are you sure? [Y/n]").lower()
if answer and answer[0] != "y":
    sys.exit(1)

# start the removal process. In the event of a failure (thanks, twitter!),
# retry once after five seconds. An error on same record again is
# probably more serious issue, so abort with error

for nf in non_friends:
    print "Unfollowing " + str(nf.id).rjust(10)
    try:
        nf.unfollow()
    except:
        print "  .. failed, sleeping for 5 seconds and then trying again."
        time.sleep(5)
        nf.unfollow()
    print " .. completed, sleeping for 1 second."
time.sleep(1)

import tweepy
import Key


consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)    


import os
from sys import argv

#run, filename = argv
filename = "data/stream.json"

fin = open(filename)
fout = open(filename + '.tmp', 'w')
lines = fin.readlines()
for line in lines:
    fout.write(line[108:])
fout.close()
fin.close()
#os.rename(filename + '.tmp', filename)

from twitter.api import Twitter

USERNAME = 'r1cky' # set to your/any username

twitter = Twitter() # username/password not required for these calls
friends = twitter.friends.ids(screen_name=USERNAME)
followers = twitter.followers.ids(screen_name=USERNAME)
guilty = [x for x in friends if x not in followers]

print "There are %s tweeps you follow who do not follow you" % len(guilty)

for user_id in guilty:
    user = twitter.users.show(user_id=user_id)
    print "%s follows %s and has %s followers." % \
              (user['name'], user['friends_count'], user['followers_count'] )


import textwrap
d = open("data/stream.tmp", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=100)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print element
  



import tweepy
from tweepy import Stream
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
import time
import argparse
import string
import config
import json


class MyListener(StreamListener):
    """Custom StreamListener for streaming data."""

    def __init__(self, data_dir, query):
        query_fname = format_filename(query)
        self.outfile = "%s/stream_%s.json" % (data_dir, query_fname)

    def on_data(self, data):
        try:
            with open(self.outfile, 'a') as f:
                f.write(data)
                print(data)
                return True
        except BaseException as e:
            print("Error on_data: %s" % str(e))
            time.sleep(5)
        return True

    def on_error(self, status):
        print(status)
        return True


def format_filename(fname):
    return ''.join(convert_valid(one_char) for one_char in fname)


def convert_valid(one_char):
    valid_chars = "-_.%s%s" % (string.ascii_letters, string.digits)
    if one_char in valid_chars:
        return one_char
    else:
        return '_'

@classmethod
def parse(cls, api, raw):
    status = cls.first_parse(api, raw)
    setattr(status, 'json', json.dumps(raw))
    return status

if __name__ == '__main__':
    parser = get_parser()
    args = parser.parse_args()
    auth = OAuthHandler(config.consumer_key, config.consumer_secret)
    auth.set_access_token(config.access_token, config.access_secret)
    api = tweepy.API(auth)

    twitter_stream = Stream(auth, MyListener(args.data_dir, args.query))
    twitter_stream.filter(track=[args.query])


import tweepy
import Key
consumer_key = Key.twiter()[0]
consumer_secret = Key.twiter()[1]
access_token = Key.twiter()[2]
access_token_secret = Key.twiter()[3]
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)


import sqlite3
conn = sqlite3.connect('data/twitter.db')
c = conn.cursor()
c.execute("""CREATE TABLE twitter (
             contact_id integer PRIMARY KEY,
             twittername text NOT NULL,
             twitterid text NOT NULL,
             keywords text NOT NULL);
          """)
conn.commit()
conn.close()


#confirm it exists
!ls data/twitter.db

hurricanes, earthquake, wildfires
Enter Twitter Name: >>TheBaxterBean
Enter Twitter Number: >>166329578
Enter keywords: >>Hurricane

SELECT * FROM twitter WHERE keywords LIKE '%hurricane%'


import sqlite3
import numpy as np
conn = sqlite3.connect('data/twitter.db')
c = conn.cursor()# Never do this -- insecure!

t = ('Hurricane',)
c.execute('SELECT * FROM twitter ORDER BY keywords')
#print(c.fetchall())


arr = (c.fetchall())

file = 'TheBaxterbean'
np.savez(file, arr, allow_pickle=True, fix_imports=True)
conn.close()

from tempfile import TemporaryFile
outfile = TemporaryFile()

x = np.arange(10)
np.save(outfile, x)
outfile='TheBaxterbean.npy'
#outfile.seek(0) # Only needed here to simulate closing & reopening file
np.load(outfile)

from tempfile import TemporaryFile
outfile = TemporaryFile()

x = np.arange(10)
np.save(outfile, x)

outfile.seek(0) # Only needed here to simulate closing & reopening file
np.load(outfile)

import sqlite3
conn = sqlite3.connect('data/twitter.db')
c = conn.cursor()# Never do this -- insecure!

#t = ('Hurricane',)
#c.execute('SELECT * FROM twitter ORDER BY keywords')
#print(c.fetchall())
#conn.close()

for row in c.execute('SELECT * FROM twitter ORDER BY contact_id'):
        #print(row),"\n-----\n","\n"
        
        print row[0],"  ",row[1],"  ",row[2],"  ",row[3],"\n-----\n",

conn.close()


import sqlite3
def insert_info(tweet):
    with sqlite3.connect("data/twitter.db") as db:
        cursor = db.cursor()
        sql = "insert into twitter (twittername,twitterid,keywords) values (?, ?, ?)"
        cursor.execute(sql, tweet)
        db.commit()

#if __name__ == "__main__":
print "You will be promted to enter TwitterName, TwitterID Number, and Keywords  "  
twittername = raw_input("Enter Twitter Name: >>")
twitterid = raw_input("Enter Twitter Number: >>")
keywords = raw_input("Enter Keywords: >>")
tweet = (twittername,twitterid,keywords)
insert_info(tweet)

 
TheBaxterBean
166329578
Hurricane 


import sqlite3
conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()

# Larger example that inserts many records at a time
data = [('', '', ''),
        ('', '', ''),
        ('', '', ''),]

c.executemany("INSERT INTO python VALUES (?,?,?)", data)
conn.commit()
conn.close()

soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)


for list in txt:
    print list


with open('largeFile', 'r') as inF:
    for line in inF:
        if 'myString' in line:
            # do_something

from bs4 import BeautifulSoup
import requests
#url = u'https://twitter.com/search?q='
#url = u'https://twitter.com/hashtag/irma?lang=en'
#url = u'https://twitter.com/scavino45/lists/florida-hurricane-irma'
url = u'https://twitter.com/Selebog55680943'
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
#query = u'hurricane, florida'
r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
txt2 = u' '.join((txt)).encode('utf-8').strip()

savefile = open("TweeterFollows.txt", "a")
#savefile = open("test001.txt", "w+")
for list in txt2:
    #My code goes here
    savefile.write(list)
    #end of loop
savefile.close()    
    

from bs4 import BeautifulSoup
import requests

url ="https://twitter.com/Selebog55680943"
r  = requests.get(url)
data = r.text
#soup = BeautifulSoup([data], "html")
soup = BeautifulSoup(data)

for link in soup.find_all('fullname'):
    print(link.get('show-popup-with-id'))


print r

{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}

from bs4 import BeautifulSoup
import requests

#url ="https://twitter.com/scavino45/lists/florida-hurricane-irma"
url ="https://twitter.com/ThePSF/following"
r  = requests.get(url)
data = r.text
soup = BeautifulSoup(data)

for link in soup.find_all('a'):
    print(link.get('href'))


from bs4 import BeautifulSoup
import requests

url = raw_input("Enter a website to extract the URL's from: ")
r  = requests.get("http://" +url)
data = r.text
soup = BeautifulSoup(data)

for link in soup.find_all('a'):
    print(link.get('href'))


import textwrap
d = open("hurricane_04.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

from PIL import Image, ImageEnhance
mean= Image.open('/home/jack/ICONS/MEAN.png')
mean640 = mean.resize((640,640), Image.NEAREST)
mean640
enhancer = ImageEnhance.Sharpness(mean640)

factor = 2
#enhancer.enhance(factor).show("Sharpness %f" % factor)
enhancered = enhancer.enhance(factor)
enhancered.save("tmmpp/mean640.jpg")

from bs4 import BeautifulSoup
import requests
url = u'https://twitter.com/search?q='
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
query = u'Hurricanupdate, '
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)
txt2 = u' '.join((txt)).encode('utf-8').strip()

savefile = open("hurricane_sept11_01.txt", "a")
for list in txt2:
    #My code goes here
    savefile.write(list)
    #end of loop
savefile.close()    
    

# Counts all letters in text ( badletters is null )
def count_letters(word):
    BAD_LETTERS = ""
    return len([letter for letter in word if letter not in BAD_LETTERS])

d = open("hurricane_01.txt", "r")
word = d.read()
count_letters(word)

# Counts all letters in textfile ( disregards the spaces )
def count_letters(word):
    BAD_LETTERS = " "
    return len([letter for letter in word if letter not in BAD_LETTERS])

d = open("hurricane_01.txt", "r")
word = d.read()
count_letters(word)

# Counts all letters in textfile ( disregards the spaces )
def count_letters(word):
    BAD_LETTERS = " ","/"
    return len([letter for letter in word if letter not in BAD_LETTERS])

d = open("hurricane_01.txt", "r")
word = d.read()
count_letters(word)

# counts spaces
d = open("hurricane_01.txt", "r")
string=d.read()

counter = 0
for i in string:
    if i == ' ':
        counter += 1
print(counter)

d = open("hurricane_01.txt", "r")
string=d.read()

counter = 0
for i in string:
    if i == '\n':
        counter += 1
print(counter)

%%perl 
$mp3 = qx{echo "Hello from IPerl" | text2wave | lame - -}; # pipe text to Festival TTS and convert to MP3

import textwrap
strs = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}'#strs = "In my project, I have a bunch of strings that are read in from a file. Most of them, when printed in the command console, exceed 80 characters in length and wrap around, looking ugly."
print(textwrap.fill(strs, 90))


#!/usr/bin/python
import textwrap
d = open("hurricane_01.txt", "r")
str = d.read()

#str = "this is string example....wow!!!";

sub = "i";
print "str.count(sub, 4, 40) : ", str.count(sub, 4, 40)
sub = "Hurricane";
print "str.count(sub) : ", str.count(sub)

import textwrap
d = open("hurricane_01.txt", "r")
string = d.read()

str.count(sub, start= 0,end=len(string))
sub = 'Hurricane'

import textwrap
d = open("hurricane_sept11_01.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

#line = "This is a text.This is another text,it has no space after the comma."
line = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New'
line = line.replace('{"', ' ', line.count('{"')).replace('"', '', line.count('"'))
line = line.replace(':', ' ', line.count(':')).replace('[', '', line.count('['))
line = line.replace('n]', ' ')
line = line.replace(',', ', ')
line = line.replace('.,', ',')
line = line.replace('s  , d', 's, d')
print line

#line = "This is a text.This is another text,it has no space after the comma."
#line = '{ init_data :{ keyboardShortcuts :[{ name : Actions , description : Shortcuts for common actions\n , shortcuts :[{ keys :[ n ], description : New Tweet },{ keys :[ l ], description : Like },{ keys :[ r ], description : Reply },{ keys :[ t ], description : Retweet },{ keys :[ m ], description : Direct message },{ keys :[ u ], description : Mute User },{ keys :[ b ], description : Block User },{ keys :[ Enter ], description : Open Tweet details },{ keys :[ o ], description : Expand photo },{ keys :[   ], description : Search },{ keys :[ Ctrl , Enter ], description : Send Tweet }]},{ name : Navigation , description : Shortcuts for navigating between items in timelines\n , shortcuts :[{ keys :[ ? ], description : This menu },{ keys :[ j ], description : Next Tweet },{ keys :[ k ], description : Previous Tweet },{ keys :[ Space ], description : Page down },{ keys :[ \n ], description : Load new Tweets }]},{ name : Timelines , description : Shortcuts for navigating to different timelines or pages\n , shortcuts :[{ keys :[ g , h ], description : Home },{ keys :[ g , n ], description : Notifications },{ keys :[ g , r ], description : Mentions },{ keys :[ g , p ], description : Profile },{ keys :[ g , l ], description : Likes },{ keys :[ g , i ], description : Lists },{ keys :[ g , m ], description : Messages },{ keys :[ g , s ], description : Settings },{ keys :[ g , u ], description : Go to user\\u2026 }]}], baseFoucClass : swift-loading , bodyFoucClassNames : swift-loading no-nav-banners , assetsBasePath : https:  abs\ntwimg\ncom a 1504860450  , assetVersionKey : 623f6d , emojiAssetsPath : https:  abs\ntwimg\ncom emoji v2 72x72  , environment : production , formAuthenticityToken : 192ada90874e864dd6f1641445a0fa645cf71760 , loggedIn :true, screenName : JackLNorthrup , fullName : Jack Northrup , userId : 296906916 , guestId : 149793849077059325 , createdAt :1305129689000, needsPhoneVerification :false, countryCode : PH , allowAdsPersonalization :false, scribeBufferSize :3, pageName : profile , sectionName : following , scribeParameters :{ lang : en }, recaptchaApiUrl : '
newfile=open("newfile01.txt", "w")
textfile = open("sometest.txt", "r")
line = textfile.read()

line = line.replace('{"', ' ', line.count('{"')).replace('"', '', line.count('"'))
line = line.replace(':', ' ', line.count(':')).replace('[', '', line.count('['))
line = line.replace('n]', ' ')
line = line.replace(',', ', ')
line = line.replace('.,', ',')
line = line.replace('s  , d', 's, d')
line = line.replace('\u003e', '')
line = line.replace('\u003c', '')
line = line.replace('\u003e', '')
line = line.replace(' \u007b\n  ', '')
#print line
newfile.write(line)

text = str(list)
html_str = text
Html_file= open("filename.html","w")
Html_file.write(html_str)
Html_file.close()

textfile = open("sometest.txt", "r")
textfile.read()

textfile = open("outputfile2.txt", "r")
textfile.read()

%load sometest.txt


# GOOD
import textwrap
d = open("outputfile2.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

d = open("outputfile2.txt", "r")
e =open("sometest.txt", "w+")
for line in d.readlines():
    e.write(line.replace('png , ',  ""))

e.close() 

d = open("sometest.txt", "r")
e =open("outputfile2.txt", "w+")
for line in d.readlines():
    e.write(line.replace(" png , ",  " "))

e.close() 

d = open("sometest.txt", "r")
e =open("outputfile2.txt", "w+")

for line in d.readlines():
    e.write(line.split(":")[0])

e.close() 

import textwrap
d = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":'
#textfile = open("sometest.txt", "w")
"""
text = str(list)
html_str = text
Html_file= open("filename.html","w")
Html_file.write(html_str)
Html_file.close()
"""
e = open("outputfile.txt", "w+")
for line in d.read():
    e.write(line.replace('":"',  " "))

e.close()    




%%writefile sometest.txt
'{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}'#strs = "In my project, I have a bunch of strings that are read in from a file. Most of them, when printed in the command console, exceed 80 characters in length and wrap around, looking ugly."


import textwrap
textfile2 = open("sometest2.txt", "w")
textfile = open("sometest.txt", "r")
line = textfile.read()
value = line.replace('.', '. ', line.count('.')).replace(',', ', ', line.count(','))



value.write(textfile2)
textfile.close()
textfile2.close()




#wrapper = textwrap.TextWrapper(width=80)
#word_list = wrapper.wrap(text=value)
 
# Print each line.
#for element in word_list:
#    print (element)


import textwrap
line = '{"init_data":{"keyboardShortcuts":[{"name":"Actions","description":"Shortcuts for common actions.","shortcuts":[{"keys":["n"],"description":"New Tweet"},{"keys":["l"],"description":"Like"},{"keys":["r"],"description":"Reply"},{"keys":["t"],"description":"Retweet"},{"keys":["m"],"description":"Direct message"},{"keys":["u"],"description":"Mute User"},{"keys":["b"],"description":"Block User"},{"keys":["Enter"],"description":"Open Tweet details"},{"keys":["o"],"description":"Expand photo"},{"keys":["\/"],"description":"Search"},{"keys":["Ctrl","Enter"],"description":"Send Tweet"}]},{"name":"Navigation","description":"Shortcuts for navigating between items in timelines.","shortcuts":[{"keys":["?"],"description":"This menu"},{"keys":["j"],"description":"Next Tweet"},{"keys":["k"],"description":"Previous Tweet"},{"keys":["Space"],"description":"Page down"},{"keys":["."],"description":"Load new Tweets"}]},{"name":"Timelines","description":"Shortcuts for navigating to different timelines or pages.","shortcuts":[{"keys":["g","h"],"description":"Home"},{"keys":["g","n"],"description":"Notifications"},{"keys":["g","r"],"description":"Mentions"},{"keys":["g","p"],"description":"Profile"},{"keys":["g","l"],"description":"Likes"},{"keys":["g","i"],"description":"Lists"},{"keys":["g","m"],"description":"Messages"},{"keys":["g","s"],"description":"Settings"},{"keys":["g","u"],"description":"Go to user\u2026"}]}],"baseFoucClass":"swift-loading","bodyFoucClassNames":"swift-loading no-nav-banners","assetsBasePath":"https:\/\/abs.twimg.com\/a\/1504860450\/","assetVersionKey":"623f6d","emojiAssetsPath":"https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/","environment":"production","formAuthenticityToken":"192ada90874e864dd6f1641445a0fa645cf71760","loggedIn":true,"screenName":"JackLNorthrup","fullName":"Jack Northrup","userId":"296906916","guestId":"149793849077059325","createdAt":1305129689000,"needsPhoneVerification":false,"countryCode":"PH","allowAdsPersonalization":false,"scribeBufferSize":3,"pageName":"profile","sectionName":"following","scribeParameters":{"lang":"en"},"recaptchaApiUrl":"https:\/\/www.google.com\/recaptcha\/api\/js\/recaptcha_ajax.js","internalReferer":"\/ThePSF","geoEnabled":true,"typeaheadData":{"accounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"limit":6},"trendLocations":{"enabled":true},"dmConversations":{"enabled":true},"followedSearches":{"enabled":false},"savedSearches":{"enabled":true,"items":[{"name":"#bulacan","id_str":"139775382","search_query_source":"saved_search_click","query":"#bulacan","saved_search_path":"\/search?q=%23bulacan&src=savs","id":"139775382"}]},"dmAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyDMable":true},"mediaTagAccounts":{"enabled":true,"localQueriesEnabled":true,"remoteQueriesEnabled":true,"onlyShowUsersWithCanMediaTag":false,"currentUserId":296906916},"selectedUsers":{"enabled":true},"prefillUsers":{"enabled":true},"topics":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500,"limit":4},"concierge":{"enabled":false,"localQueriesEnabled":false,"remoteQueriesEnabled":false,"prefetchLimit":500,"limit":6},"recentSearches":{"enabled":true},"hashtags":{"enabled":true,"localQueriesEnabled":false,"remoteQueriesEnabled":true,"prefetchLimit":500},"useIndexedDB":false,"showSearchAccountSocialContext":true,"showDebugInfo":false,"useThrottle":true,"accountsOnTop":false,"remoteDebounceInterval":300,"remoteThrottleInterval":300,"tweetContextEnabled":false,"fullNameMatchingInCompose":true,"topicsWithFiltersEnabled":true},"dm":{"notifications":false,"usePushForNotifications":true,"participant_max":50,"welcome_message_add_to_conversation_enabled":true,"poll_options":{"foreground_poll_interval":3000,"burst_poll_interval":3000,"burst_poll_duration":300000,"max_poll_interval":60000},"card_prefetch":true,"card_prefetch_interval_in_seconds":2000,"dm_quick_reply_options_panel_dismiss_in_ms":2000,"open_dm_enabled":false},"autoplayDisabled":false,"pushStatePageLimit":500000,"routes":{"profile":"\/JackLNorthrup"},"pushState":true,"viewContainer":"#page-container","href":"\/ThePSF\/following","searchPathWithQuery":"\/search?q=query&src=typd","composeAltText":false,"night_mode_activated":false,"night_mode_available":true,"user_color":"F70A1D","deciders":{"custom_timeline_curation":false,"native_notifications":true,"disable_ajax_datatype_default_to_text":false,"dm_polling_frequency_in_seconds":3000,"dm_granular_mute_controls":true,"enable_media_tag_prefetch":true,"enableMacawNymizerConversionLanding":false,"hqImageUploads":false,"live_pipeline_consume":true,"mqImageUploads":false,"partnerIdSyncEnabled":true,"sruMediaCategory":true,"photoSruGifLimitMb":15,"promoted_logging_force_post":true,"promoted_video_logging_enabled":true,"pushState":true,"emojiNewCategory":false,"contentEditablePlainTextOnly":false,"web_client_api_stats":false,"web_perftown_stats":true,"web_perftown_ttft":true,"web_client_events_ttft":true,"log_push_state_ttft_metrics":true,"web_sru_stats":false,"web_upload_video":true,"web_upload_video_advanced":false,"upload_video_size":500,"useVmapVariants":false,"autoplayPreviewPreroll":true,"moments_home_module":false,"moments_lohp_enabled":true,"enableNativePush":true,"autoSubscribeNativePush":false,"allowWebPushVapidUpgrade":true,"stickersInteractivity":true,"stickersInteractivityDuringLoading":true,"stickersExperience":true,"dynamic_video_ads_include_long_videos":true,"push_state_size":1000,"live_video_media_control_enabled":false,"use_api_for_retweet_and_unretweet":false,"use_api_for_follow_and_unfollow":true,"edge_probe_enabled":false,"like_over_http_client":true,"enable_tweetstorm_creation":false,"cramming_ui_enabled":false,"dm_report_webview_macaw_swift_enabled":true,"page_title_unread_notification_count":false},"experiments":{},"toasts_dm":true,"toasts_timeline":false,"toasts_dm_poll_scale":60,"defaultNotificationIcon":"https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/mobile\/wp7_app_icon.png","promptbirdData":{"promptbirdEnabled":false,"immediateTriggers":["PullToRefresh","Navigate"],"format":"ProfileOther"},"pageContext":"profile","deviceEnabled":true,"hasPushDevice":true,"smsDeviceVerified":true,"skipAutoSignupDialog":false,"shouldReplaceSignupWithLogin":true,"hashflagBaseUrl":"https:\/\/abs.twimg.com\/hashflags\/","activeHashflags":{"المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gobinge":"ThreeUK_Dolph_a_Sloth\/ThreeUK_Dolph_a_Sloth.png","çağlayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","skol":"NFL_2017_MINVikings_v2\/NFL_2017_MINVikings_v2.png","chargers":"NFL_2017_LAChargers_v2\/NFL_2017_LAChargers_v2.png","ボディソープきれた":"unilever_emojiv4\/unilever_emojiv4.png","영화마더":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalteaser":"MersalEmoji\/MersalEmoji.png","ourhealthynyc":"NYC_health_Emoji\/NYC_health_Emoji.png","thetick":"The_Tick_Emoji\/The_Tick_Emoji.png","partiucelebreak":"Kit_Kat_Emoji_v2\/Kit_Kat_Emoji_v2.png","tebtennisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","itishappeningagain":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","avici":"Avicii_emojiv2\/Avicii_emojiv2.png","twitter4me":"Twitter4Me_Emoji\/Twitter4Me_Emoji.png","httr":"NFL_2017_WASHRedskins_v4\/NFL_2017_WASHRedskins_v4.png","twinpeakssundays":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","cam356":"CAM365_emoji\/CAM365_emoji.png","giantspride":"NFL_2017_NYGiants_v4\/NFL_2017_NYGiants_v4.png","letsbelonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","xfactor2017":"XFactorAug2017\/XFactorAug2017.png","goldencircleday":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","r1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","thescriptfamily":"The_Script_Emoji\/The_Script_Emoji.png","undrip":"UIPD_Emojiv2\/UIPD_Emojiv2.png","mersaltheme":"MersalEmoji\/MersalEmoji.png","onepride":"NFL_2017_DETLions_v2\/NFL_2017_DETLions_v2.png","getshorty":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","badmoments":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","ellen15":"Ellen15_emoji\/Ellen15_emoji.png","spideyreturns":"SpiderMan_Emoji\/SpiderMan_Emoji.png","wnba":"WMBA_Emoji\/WMBA_Emoji.png","مهرجان":"GEA_Emoji\/GEA_Emoji.png","iemshanghai":"IEM_2017_Emoji\/IEM_2017_Emoji.png","fortheloveoflearning":"Apple_Edu_Emojiv3\/Apple_Edu_Emojiv3.png","avicii":"Avicii_emojiv2\/Avicii_emojiv2.png","periscope":"Periscope\/Periscope.png","runtheneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","soudoador":"Donor_Emoji\/Donor_Emoji.png","almosafer":"Almo_Emojiv2\/Almo_Emojiv2.png","exidelife":"Exide_Emoji\/Exide_Emoji.png","cokestudioph":"CokeStudioPH\/CokeStudioPH.png","gopackgo":"NFL_2017_GBYPackers_v2\/NFL_2017_GBYPackers_v2.png","thexfactor":"XFactorAug2017\/XFactorAug2017.png","transparentamazon":"Transparent_emoji\/Transparent_emoji.png","cgd":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","esloneny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","mercuryprize":"Mercury_Prize_Emoji\/Mercury_Prize_Emoji.png","وناسة":"GEA_Emoji\/GEA_Emoji.png","elpapacol":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","jets":"NFL_2017_NYJets_v2\/NFL_2017_NYJets_v2.png","haydicagla":"TEBTennis_emoji\/TEBTennis_emoji.png","castinggh":"BB_2017_Emoji\/BB_2017_Emoji.png","7reasonstobuyvivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","prazeremdescobrir":"Caprese_Emojiv2\/Caprese_Emojiv2.png","lovetwitter":"LoveTwitter\/LoveTwitter.png","eslny":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","sharksforever":"NRL_2017_SharksForever\/NRL_2017_SharksForever.png","mobily":"Mobily_Emoji\/Mobily_Emoji.png","forlove":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","teamspidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","finalschapter":"AFLFianlsSeries2017_FinalsChapter\/AFLFianlsSeries2017_FinalsChapter.png","imarooster":"NRL_2017_IMARooster_v2\/NRL_2017_IMARooster_v2.png","chrisodowd":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","elife":"Mobily_Emoji\/Mobily_Emoji.png","espejopublico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","أنا_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","電影母親":"Mother_Emojiv2\/Mother_Emojiv2.png","mersalmusiclive":"MersalEmoji\/MersalEmoji.png","vsee7":"VivoV7plus_emoji\/VivoV7plus_emoji.png","xfbootcamp":"XFactorAug2017\/XFactorAug2017.png","aviciilonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","thewebhead":"SpiderMan_Emoji\/SpiderMan_Emoji.png","badape":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","standupwithyt":"SUTC_Emojiv2\/SUTC_Emojiv2.png","ifood":"Ifood_Emoji\/Ifood_Emoji.png","livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","wannasprite":"Sprite_Emoji_Summer\/Sprite_Emoji_Summer.png","destappagol":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","jaguars":"NFL_2017_JAXJaguars_v2\/NFL_2017_JAXJaguars_v2.png","ifoodsalva":"Ifood_Emoji\/Ifood_Emoji.png","twinpeakspremiere":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","wnbalive":"WMBA_Emoji\/WMBA_Emoji.png","ダヴうるおいお届け便":"unilever_emojiv4\/unilever_emojiv4.png","f3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","visitpandora":"Disney_Visit_Pandora_emoji_ext\/Disney_Visit_Pandora_emoji_ext.png","mersaltrailer":"MersalEmoji\/MersalEmoji.png","btw2017":"GermanElection2017_v2\/GermanElection2017_v2.png","destiny2":"destiny2\/destiny2.png","praqualquerfome":"Ifood_Emoji\/Ifood_Emoji.png","gameofthrones":"HBO_GoT\/HBO_GoT.png","bengals50":"NFL_2017_CINBengals\/NFL_2017_CINBengals.png","oppof3plus":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","r1livelounge":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","caviaris":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","radio1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","elmoreleonard":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","nuevotiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","eurobasket2017":"Euro_Basket\/Euro_Basket.png","judwaa2kidussehra":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","gobears":"NFL_2017_CHIBears\/NFL_2017_CHIBears.png","nba2k":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","apnapan":"Uber_indiav2\/Uber_indiav2.png","sienteelsabor":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","احجز_الحين_وادفع_بعدين":"Almo_Emojiv2\/Almo_Emojiv2.png","díapueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","milesdaly":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","ابتسامة":"GEA_Emoji\/GEA_Emoji.png","ghrevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","cruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","dhden17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","oonchihaibuilding":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviarlive":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","tebtennisstarsseries":"TEBTennis_emoji\/TEBTennis_emoji.png","eslonenewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","imadonor":"Donor_Emoji\/Donor_Emoji.png","btw":"GermanElection2017_v2\/GermanElection2017_v2.png","autochtones":"UIPD_Emojiv2\/UIPD_Emojiv2.png","haydiçağla":"TEBTennis_emoji\/TEBTennis_emoji.png","مرح":"GEA_Emoji\/GEA_Emoji.png","badmomsnightout":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","titanup":"NFL_2017_TENTitans\/NFL_2017_TENTitans.png","eslonenyc2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","oppof3":"OPPO_emojiv5_extend\/OPPO_emojiv5_extend.png","insecurehbo":"HBO_Emoji\/HBO_Emoji.png","6chairchallenge":"XFactorAug2017\/XFactorAug2017.png","raqi":"Mobily_Emoji\/Mobily_Emoji.png","btw17":"GermanElection2017_v2\/GermanElection2017_v2.png","willtnt":"Will_TV_Emoij\/Will_TV_Emoij.png","votrevie":"Percy_Extensionv2\/Percy_Extensionv2.png","gotmvp":"Amazon_GoT_Emojiv4\/Amazon_GoT_Emojiv4.png","mothermovieph":"Mother_Emojiv2\/Mother_Emojiv2.png","agentcooper":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","su2c":"SUTC_Emojiv2\/SUTC_Emojiv2.png","spidermanmovie":"SpiderMan_Emoji\/SpiderMan_Emoji.png","sixchairchallenge":"XFactorAug2017\/XFactorAug2017.png","மெர்சல்":"MersalEmoji\/MersalEmoji.png","golive":"GoLive_Emoji\/GoLive_Emoji.png","freedomchild":"The_Script_Emoji\/The_Script_Emoji.png","نقاطي":"Mobily_Emoji\/Mobily_Emoji.png","appleevent":"AcmeConfidential_2017\/AcmeConfidential_2017.png","ايلايف":"Mobily_Emoji\/Mobily_Emoji.png","nrlgf":"NRL_2017_NRLGF_v2\/NRL_2017_NRLGF_v2.png","tiguan":"Tiguan_Emoji\/Tiguan_Emoji.png","ويك_إند":"GEA_Emoji\/GEA_Emoji.png","beredseered":"NFL_2017_AZ_Cards_v2\/NFL_2017_AZ_Cards_v2.png","celebsgodatingseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","masterchefazteca":"MasterChefMX\/MasterChefMX.png","makeeverydeathcount":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","thescript":"The_Script_Emoji\/The_Script_Emoji.png","somosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","courseàlaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","iamadonor":"Donor_Emoji\/Donor_Emoji.png","wearegeelong":"AFLFinalsSeries2017_Geelong\/AFLFinalsSeries2017_Geelong.png","eslnyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","türkekonomibankası":"TEBTennis_emoji\/TEBTennis_emoji.png","indigenousday":"UIPD_Emojiv2\/UIPD_Emojiv2.png","dhatx17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","bucs":"NFL_2017_TAMPABuccaneers\/NFL_2017_TAMPABuccaneers.png","larams":"NFL_2017_LARams_v2\/NFL_2017_LARams_v2.png","dbt1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","conversepublicaccess":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","entelmediafest":"MoxEntel_emoji\/MoxEntel_emoji.png","واجد":"Mobily_Emoji\/Mobily_Emoji.png","gbbo":"GBBO_2017_v3\/GBBO_2017_v3.png","gopats":"NFL_2017_NEPatriots_v2\/NFL_2017_NEPatriots_v2.png","camry":"ToyotaCamryEmoji\/ToyotaCamryEmoji.png","maeofilme":"Mother_Emojiv2\/Mother_Emojiv2.png","شركة_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","islareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","gowinx":"Tab_Winx_Emoji\/Tab_Winx_Emoji.png","bluesupreme":"Nike_AL_Emoji\/Nike_AL_Emoji.png","standuptocancer":"SUTC_Emojiv2\/SUTC_Emojiv2.png","iemsydney2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","loretv":"AmazonLore\/AmazonLore.png","2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","jesuisdonneur":"Donor_Emoji\/Donor_Emoji.png","browns":"NFL_2017_CLEBrowns\/NFL_2017_CLEBrowns.png","judwaa2":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","aviciiisback":"Avicii_emojiv2\/Avicii_emojiv2.png","mengo":"FlamengoCopa\/FlamengoCopa.png","iemoakland2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","islaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","موبايلي":"Mobily_Emoji\/Mobily_Emoji.png","feelthewins":"YahooFantasyFootball2017\/YahooFantasyFootball2017.png","iemoakland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","colts":"NFL_2017_INDColts_v2\/NFL_2017_INDColts_v2.png","سعادة":"GEA_Emoji\/GEA_Emoji.png","masterchefmx":"MasterChefMX\/MasterChefMX.png","laislaelreality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","superboost":"Sky_Bet_Boost_Emoji\/Sky_Bet_Boost_Emoji.png","almosafertravel":"Almo_Emojiv2\/Almo_Emojiv2.png","cheddarlive":"Cheddar_Emoji_v3\/Cheddar_Emoji_v3.png","winterishere":"HBO_GoT\/HBO_GoT.png","theneighborhood":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","madrelapelicula":"Mother_Emojiv2\/Mother_Emojiv2.png","wembleycup":"WembleyCup_2017\/WembleyCup_2017.png","goniners":"NFL_2017_SF49ers_v2\/NFL_2017_SF49ers_v2.png","gala1gh":"BB_2017_Emoji\/BB_2017_Emoji.png","caglayasor":"TEBTennis_emoji\/TEBTennis_emoji.png","aflfinals":"AFLFinalsSeries2017_AFLFinalsTrophy\/AFLFinalsSeries2017_AFLFinalsTrophy.png","vivov7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","soyindígena":"UIPD_Emojiv2\/UIPD_Emojiv2.png","aviciiyoubelove":"Avicii_emojiv2\/Avicii_emojiv2.png","datelaoportunidad":"CO_Emoji\/CO_Emoji.png","aatohsahi":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","iempoland":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thalapathy61":"MersalEmoji\/MersalEmoji.png","viveponiente":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslcologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","weflyasone":"AFLFinalsSeries2017_WeFlyAsOne\/AFLFinalsSeries2017_WeFlyAsOne.png","alamexicana":"SidralMundetAlaMexicana\/SidralMundetAlaMexicana.png","getbackching":"Dial_Emoji1\/Dial_Emoji1.png","super6":"Sky_Bet_6_Emoji\/Sky_Bet_6_Emoji.png","flyeaglesfly":"NFL_2017_PHILEagles_v2\/NFL_2017_PHILEagles_v2.png","iemshanghai2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","thewallcrawler":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aalaporaanthamizhan":"MersalEmoji\/MersalEmoji.png","تطبيق_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","esmadre":"Mother_Emojiv2\/Mother_Emojiv2.png","valg17":"Norwegian_election_2017\/Norwegian_election_2017.png","standupcanoe":"SUTC_Emojiv2\/SUTC_Emojiv2.png","bbcr1liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","dondelograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","cibcrunforthecure":"CIBC_Emojiv2\/CIBC_Emojiv2.png","netneutrality":"Net_Emoji\/Net_Emoji.png","dhfr17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","seahawks":"NFL_2017_SEASeahawks_v2\/NFL_2017_SEASeahawks_v2.png","ravensflock":"NFL_2017_BALRavens_v2\/NFL_2017_BALRavens_v2.png","canada150":"Canada150_emojiv5\/Canada150_emojiv5.png","iem":"IEM_2017_Emoji\/IEM_2017_Emoji.png","شارك_واربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","dhw17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","forfreedom":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","dbt3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tebletenis":"TEBTennis_emoji\/TEBTennis_emoji.png","celebsgodating":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","thebestofcokestudioph":"CokeStudioPH\/CokeStudioPH.png","rayromano":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","exidelifeinsurance":"Exide_Emoji\/Exide_Emoji.png","توقع_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","buevdesamsungvar":"SamsungBESVBrand\/SamsungBESVBrand.png","xf2017":"XFactorAug2017\/XFactorAug2017.png","мама":"Mother_Emojiv2\/Mother_Emojiv2.png","edfpulse":"EDF_Emoji\/EDF_Emoji.png","weareportadelaide":"AFLFinalsSeries2017_WeArePortAdelaide\/AFLFinalsSeries2017_WeArePortAdelaide.png","100mbeliebers":"Bieber100M_emoji\/Bieber100M_emoji.png","twinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","fitsyourlife":"Percy_Extensionv2\/Percy_Extensionv2.png","mothermovieth":"Mother_Emojiv2\/Mother_Emojiv2.png","lograndesucede":"Tiguan_Emoji\/Tiguan_Emoji.png","madden18":"Madden_Emojiv2\/Madden_Emojiv2.png","アイナナ2周年":"AinanaEmoji\/AinanaEmoji.png","iemkatowice":"IEM_2017_Emoji\/IEM_2017_Emoji.png","badmomsxmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","masterchefmex":"MasterChefMX\/MasterChefMX.png","cgd2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","laislareality":"LaIsla_MX_2017_v3\/LaIsla_MX_2017_v3.png","melbourneproud":"NRL_2017_MelbourneProud_\/NRL_2017_MelbourneProud_.png","eslone2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","vivamexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","epix":"Get_Shorty_Emoji\/Get_Shorty_Emoji.png","6añosdehieloyfuego":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","badmoms":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","warfortheplanet":"Caesar_Emoji\/Caesar_Emoji.png","spidermanhomecoming":"SpiderMan_Emoji\/SpiderMan_Emoji.png","2kproam":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","cgdseries3":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","voteformorepower":"VoteForMorePower_Emoji\/VoteForMorePower_Emoji.png","converse":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","vivaméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","xffinal":"XFactorAug2017\/XFactorAug2017.png","happydeathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","unlockunlimited":"Live_Nation_Emoji_T\/Live_Nation_Emoji_T.png","بهجة":"GEA_Emoji\/GEA_Emoji.png","loreamazon":"AmazonLore\/AmazonLore.png","imsorrytv":"Sorry_Emoji\/Sorry_Emoji.png","badmomschristmas":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","flamengo":"FlamengoCopa\/FlamengoCopa.png","motherlefilm":"Mother_Emojiv2\/Mother_Emojiv2.png","2kfirstlook":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","movistarseries":"GoT_Spain_Emoji\/GoT_Spain_Emoji.png","eslonenyc":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","tantanatan":"Judwa2_Movie_Emoji\/Judwa2_Movie_Emoji.png","rapcaviar":"SpotifyRapCaviar_v2\/SpotifyRapCaviar_v2.png","findyourgrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","johncena":"AG_emoji_Facev2\/AG_emoji_Facev2.png","soydonante":"Donor_Emoji\/Donor_Emoji.png","dallascowboys":"NFL_2017_DALCowboys\/NFL_2017_DALCowboys.png","iem2017":"IEM_2017_Emoji\/IEM_2017_Emoji.png","dipi2017":"UIPD_Emojiv2\/UIPD_Emojiv2.png","blockbustermersal":"MersalEmoji\/MersalEmoji.png","موبايلي1100":"Mobily_Emoji\/Mobily_Emoji.png","neethanae":"MersalEmoji\/MersalEmoji.png","gotiges":"AFLFinalsSeries2017_gotiges\/AFLFinalsSeries2017_gotiges.png","過嚇":"Mother_Emojiv2\/Mother_Emojiv2.png","dbt2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","theticksdcc":"The_Tick_Emoji\/The_Tick_Emoji.png","nqtoughertogether":"NRL_2017_NQTougherTogether\/NRL_2017_NQTougherTogether.png","eslone":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nbaeleague":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","finddialdude":"Dial_Emoji2\/Dial_Emoji2.png","gots7":"HBO_GoT\/HBO_GoT.png","eslonecgn":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","issoecruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","herosalutes":"Hero_salute_Emoji\/Hero_salute_Emoji.png","madeinmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","tebtenisstars":"TEBTennis_emoji\/TEBTennis_emoji.png","copadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","texans":"NFL_2017_HOUTexans_v2\/NFL_2017_HOUTexans_v2.png","amoigualchocolate":"Cacau_Show_2\/Cacau_Show_2.png","dhmtl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","badmomsmovie":"BadMomsChristmas_emoji\/BadMomsChristmas_emoji.png","mothermovie":"Mother_Emojiv2\/Mother_Emojiv2.png","gala3gh":"BB_2017_Emoji\/BB_2017_Emoji.png","gala2gh":"BB_2017_Emoji\/BB_2017_Emoji.png","tsl100":"MersalEmoji\/MersalEmoji.png","eslonegenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","judgeshouses":"XFactorAug2017\/XFactorAug2017.png","adamconover":"adam_Emoji\/adam_Emoji.png","xfactor":"XFactorAug2017\/XFactorAug2017.png","fechadocomocruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","neqaty":"Mobily_Emoji\/Mobily_Emoji.png","الهيئة_العامة_للترفيه":"GEA_Emoji\/GEA_Emoji.png","raidernation":"NFL_2017_Raiders_v4\/NFL_2017_Raiders_v4.png","mobily1100":"Mobily_Emoji\/Mobily_Emoji.png","cacomptepourmoi":"AXA_Emoji\/AXA_Emoji.png","finsup":"NFL_2017_MIADolphins_v2\/NFL_2017_MIADolphins_v2.png","هالة_الأزرق":"Nike_AL_Emoji\/Nike_AL_Emoji.png","heforshe":"HeForShe_fixed\/HeForShe_fixed.png","proudlysydney":"AFLFinalsSeries2017_ProudlySydney\/AFLFinalsSeries2017_ProudlySydney.png","uberindia":"Uber_indiav2\/Uber_indiav2.png","adamruins":"adam_Emoji\/adam_Emoji.png","csabraxgracenote":"CokeStudioPH\/CokeStudioPH.png","عروض_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","pueblosindígenas":"UIPD_Emojiv2\/UIPD_Emojiv2.png","روزنامة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","valg2017":"Norwegian_election_2017\/Norwegian_election_2017.png","hagamosteamback":"HagamosTeamBlack_v2\/HagamosTeamBlack_v2.png","inbrotherhood":"NFL_2017_ATLFalcons_v2\/NFL_2017_ATLFalcons_v2.png","名前入りリップ":"Estee_Emoji\/Estee_Emoji.png","liveloungemonth":"Radio1LiveLounge_emoji\/Radio1LiveLounge_emoji.png","teamtick":"The_Tick_Emoji\/The_Tick_Emoji.png","whatwouldichangeitto":"Avicii_emojiv2\/Avicii_emojiv2.png","transparenttv":"Transparent_emoji\/Transparent_emoji.png","lorepremiere":"AmazonLore\/AmazonLore.png","forfamily":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","masterchefmexico":"MasterChefMX\/MasterChefMX.png","esloneny2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","apnihigaadi":"Uber_indiav2\/Uber_indiav2.png","ichbinspender":"Donor_Emoji\/Donor_Emoji.png","dhvlc17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","coursealaviecibc":"CIBC_Emojiv2\/CIBC_Emojiv2.png","alittlelesslonelytogether":"Avicii_emojiv2\/Avicii_emojiv2.png","blackhistorymonth":"BlackHistoryMonth\/BlackHistoryMonth.png","siguetubeat":"ChevroletBeatGMMexico_v2\/ChevroletBeatGMMexico_v2.png","dhatl17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","eslhamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","csebedancelxautotelic":"CokeStudioPH\/CokeStudioPH.png","hechoenméxico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","eslonecologne2017":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","deathday":"HappyDD_Emojiv2\/HappyDD_Emojiv2.png","wemetontwitter":"WeMetOnt_Emoji\/WeMetOnt_Emoji.png","newtwinpeaks":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","nba2k18":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","issoécruzeiro":"Cruzeiro_emoji\/Cruzeiro_emoji.png","bundestagswahl2017":"GermanElection2017_v2\/GermanElection2017_v2.png","modopapa":"Pope_colombia_Emoji\/Pope_colombia_Emoji.png","iemsydney":"IEM_2017_Emoji\/IEM_2017_Emoji.png","celebsgodating2017":"CelebsGoDating_emoji\/CelebsGoDating_emoji.png","vamosflamengo":"FlamengoCopa\/FlamengoCopa.png","csfrancoxreeselansangan":"CokeStudioPH\/CokeStudioPH.png","theprelude":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","motherfilm":"Mother_Emojiv2\/Mother_Emojiv2.png","loganlucky":"LoganLucky_Emoji\/LoganLucky_Emoji.png","lorenycc":"AmazonLore\/AmazonLore.png","wearemanly":"NRL_2017_WeAreManly\/NRL_2017_WeAreManly.png","موبايلي_1100":"Mobily_Emoji\/Mobily_Emoji.png","新一番搾り":"KirinIchiban\/KirinIchiban.png","twinpeaks2017":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","روزنامة_العيد":"GEA_Emoji\/GEA_Emoji.png","películamadre":"Mother_Emojiv2\/Mother_Emojiv2.png","bhm":"BlackHistoryMonth\/BlackHistoryMonth.png","werehistory":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","v7plus":"VivoV7plus_emoji\/VivoV7plus_emoji.png","cantstopwontstop":"CantStopWontStopEmoji\/CantStopWontStopEmoji.png","goldencircle":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","weareindigenous":"UIPD_Emojiv2\/UIPD_Emojiv2.png","eslgenting":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","bundestagswahl":"GermanElection2017_v2\/GermanElection2017_v2.png","twinpeaksday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","crispypanpizza":"DiGiornoCrispyPanPizza\/DiGiornoCrispyPanPizza.png","spideygoals":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersalarasan":"MersalEmoji\/MersalEmoji.png","originalosinazúcar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","americangrit":"AG_emoji_Facev2\/AG_emoji_Facev2.png","eslnewyork":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","wajid":"Mobily_Emoji\/Mobily_Emoji.png","blacklivesmatter":"BlackHistoryMonth\/BlackHistoryMonth.png","bieninchismo":"Corona_MX_Q3\/Corona_MX_Q3.png","lambasaath":"Exide_Emoji\/Exide_Emoji.png","eslcologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","eslonehamburg":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","parrapride":"NRL_2017_ParraPride\/NRL_2017_ParraPride.png","mobily_1100":"Mobily_Emoji\/Mobily_Emoji.png","youbelove":"Avicii_emojiv2\/Avicii_emojiv2.png","usopen":"USOPENTennis2017\/USOPENTennis2017.png","chiefskingdom":"NFL_2017_KCChiefs_v2\/NFL_2017_KCChiefs_v2.png","راقي":"Mobily_Emoji\/Mobily_Emoji.png","annefilmi":"Mother_Emojiv2\/Mother_Emojiv2.png","mersal":"MersalEmoji\/MersalEmoji.png","onestar":"ConversePublicAccess_v2\/ConversePublicAccess_v2.png","bronxnation":"NRL_2017_BronxNation\/NRL_2017_BronxNation.png","mersalalbum":"MersalEmoji\/MersalEmoji.png","vivo7secsselfiechallenge":"VivoV7plus_emoji\/VivoV7plus_emoji.png","membersgetit":"Virgin_member_Emoji\/Virgin_member_Emoji.png","partnershipsforlife":"Exide_Emoji\/Exide_Emoji.png","spidey":"SpiderMan_Emoji\/SpiderMan_Emoji.png","aviciiwithoutyou":"Avicii_emojiv2\/Avicii_emojiv2.png","المسافر_يغنيك":"Almo_Emojiv2\/Almo_Emojiv2.png","xfactorfinal":"XFactorAug2017\/XFactorAug2017.png","2kday":"NBA_2K_EMOJI\/NBA_2K_EMOJI.png","spideysquad":"SpiderMan_Emoji\/SpiderMan_Emoji.png","mersaldiwali":"MersalEmoji\/MersalEmoji.png","twinpeakssunday":"twin_peaks_emojiv3\/twin_peaks_emojiv3.png","aviciifriendofmine":"Avicii_emojiv2\/Avicii_emojiv2.png","heretocreate":"Adidas_Emoji_HTCv2\/Adidas_Emoji_HTCv2.png","الترفيه":"GEA_Emoji\/GEA_Emoji.png","اربح_مع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","gosaints":"NFL_2017_NOLASaints_v2\/NFL_2017_NOLASaints_v2.png","nyfw":"NYFW_Sept2017\/NYFW_Sept2017.png","kingsman":"KingsmanGoldenCircle_v3\/KingsmanGoldenCircle_v3.png","broncoscountry":"NFL_2017_DENBroncos\/NFL_2017_DENBroncos.png","finalcopadobrasil":"CopaDoBrasil_2017\/CopaDoBrasil_2017.png","herewego":"NFL_2017_PITSteelers_v2\/NFL_2017_PITSteelers_v2.png","هيئة_الترفيه":"GEA_Emoji\/GEA_Emoji.png","teb":"TEBTennis_emoji\/TEBTennis_emoji.png","madrelapelícula":"Mother_Emojiv2\/Mother_Emojiv2.png","hellaoutthere":"HBO_Emoji\/HBO_Emoji.png","شاركونا_العيد":"GEA_Emoji\/GEA_Emoji.png","lesmembresenprofitent":"Virgin_member_Emoji\/Virgin_member_Emoji.png","notallheroesarehuman":"Caesar_Emoji_Two\/Caesar_Emoji_Two.png","eurobasket":"Euro_Basket\/Euro_Basket.png","adamruinseverything":"adam_Emoji\/adam_Emoji.png","dhs17":"Dreamhack_Emoji_Final\/Dreamhack_Emoji_Final.png","nflblitz":"NFL_2017_Blitz_v2\/NFL_2017_Blitz_v2.png","hechoenmexico":"MexicoIndependence17_v2\/MexicoIndependence17_v2.png","アナザーエデン":"GREE_Emoji_AEv2\/GREE_Emoji_AEv2.png","طيران_ناس":"FlyNasEidAdha_Emoji_v2\/FlyNasEidAdha_Emoji_v2.png","coronasunsets":"Corona_Sunset_Emoji_extended\/Corona_Sunset_Emoji_extended.png","موقع_المسافر":"Almo_Emojiv2\/Almo_Emojiv2.png","espejopúblico":"EspejoPublico_2017_2018\/EspejoPublico_2017_2018.png","المسافر_معك":"Almo_Emojiv2\/Almo_Emojiv2.png","gobills":"NFL_2017_BUFBills_v2\/NFL_2017_BUFBills_v2.png","granhermanorevolution":"BB_2017_Emoji\/BB_2017_Emoji.png","maachosingle":"MersalEmoji\/MersalEmoji.png","originalosinazucar":"Coca_Cola_Emoji_Dest\/Coca_Cola_Emoji_Dest.png","eslonecologne":"ESL_Live_Emojiv2\/ESL_Live_Emojiv2.png","nrlfinals":"NRL_2017_NRLFinals\/NRL_2017_NRLFinals.png","sonodonatore":"Donor_Emoji\/Donor_Emoji.png","keeppounding":"NFL_2017_CARPanthers_v3\/NFL_2017_CARPanthers_v3.png"},"profile_user":{"id":63873759,"id_str":"63873759","name":"Python Software","screen_name":"ThePSF","location":"Everywhere Python is!","url":"http:\/\/www.python.org\/psf","description":"The Python Software Foundation. For help with Python code, see comp.lang.python.","protected":false,"followers_count":156111,"friends_count":92,"listed_count":3243,"created_at":"Sat Aug 08 01:26:03 +0000 2009","favourites_count":186,"utc_offset":-14400,"time_zone":"Eastern Time (US & Canada)","geo_enabled":false,"verified":true,"statuses_count":2940,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"2B9DD6","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme1\/bg.png","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png","profile_link_color":"0084B4","profile_sidebar_border_color":"C0DEED","profile_sidebar_fill_color":"FFEE30","profile_text_color":"333333","profile_use_background_image":true,"has_extended_profile":false,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"business_profile_state":"none","translator_type":"none"},"profileEditingCSSBundle":"https:\/\/abs.twimg.com\/a\/1504860450\/css\/t1\/twitter_profile_editing.bundle.css","profile_id":63873759,"business_profile":false,"b2c_logged_out_support_indicators_enabled":true,"business_profile_featured_collections_complete":false,"cardsGallery":true,"injectComposedTweets":false,"inlineProfileEditing":false,"isClusterFollowReplenishEnabled":false,"autoplayEnabled":true,"periscopeLiveStatusPollInterval":15000,"trendsCacheKey":"3c618d964a","decider_personalized_trends":true,"trendsEndpoint":"\/i\/trends","wtfOptions":{"pc":false,"connections":true,"limit":3,"display_location":"profile-sidebar","dismissable":true,"similar_to_user_id":"63873759"},"showSensitiveContent":true,"autoPlayBalloonsAnimation":false,"momentsNuxTooltipsEnabled":true,"timeline_url":"\/ThePSF\/following\/users"},"title":"People followed by Python Software (@ThePSF) | Twitter","section":null,"module":"app\/pages\/profile\/highline_following","cache_ttl":300,"body_class_names":"three-col logged-in user-style-ThePSF enhanced-mini-profile ProfilePage","doc_class_names":"route-profile","route_name":"profile","page_container_class_names":"AppContent","ttft_navigation":false,"page":"\n  \n\n  \n        \n\u003cstyle id=\"user-style-ThePSF\"\u003e\n\n\n\n\n\n\n  a,\n  a:hover,\n  a:focus,\n  a:active \u007b\n    color: #0084B4;\n  \u007d\n\n  .u-textUserColor,\n  .u-textUserColorHover:hover,\n  .u-textUserColorHover:hover .ProfileTweet-actionCount,\n  .u-textUserColorHover:focus \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .u-borderUserColor,\n  .u-borderUserColorHover:hover,\n  .u-borderUserColorHover:focus \u007b\n    border-color: #0084B4 !important;\n  \u007d\n\n  .u-bgUserColor,\n  .u-bgUserColorHover:hover,\n  .u-bgUserColorHover:focus \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-dropdownUserColor \u003e li:hover,\n  .u-dropdownUserColor \u003e li:focus,\n  .u-dropdownUserColor \u003e li \u003e button:hover,\n  .u-dropdownUserColor \u003e li \u003e button:focus,\n  .u-dropdownUserColor \u003e li \u003e a:focus,\n  .u-dropdownUserColor \u003e li \u003e a:hover \u007b\n    color: #fff !important;\n    background-color: #0084B4 !important;\n  \u007d\n\n  .u-boxShadowInsetUserColorHover:hover,\n  .u-boxShadowInsetUserColorHover:focus \u007b\n    box-shadow: inset 0 0 0 5px #0084B4 !important;\n  \u007d\n\n  .u-dropdownOpenUserColor.dropdown.open .dropdown-toggle \u007b\n    color: #0084B4;\n  \u007d\n\n\n  .u-textUserColorLight \u007b\n    color: #99CDE1 !important;\n  \u007d\n\n  .u-borderUserColorLight,\n  .u-borderUserColorLightFocus:focus,\n  .u-borderUserColorLightHover:hover,\n  .u-borderUserColorLightHover:focus \u007b\n    border-color: #99CDE1 !important;\n  \u007d\n\n  .u-bgUserColorLight \u007b\n    background-color: #99CDE1 !important;\n  \u007d\n\n\n  .u-boxShadowUserColorLighterFocus:focus \u007b\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.05), inset 0 1px 2px rgba(0,132,180,0.25) !important;\n  \u007d\n\n\n  .u-textUserColorLightest \u007b\n    color: #E5F2F7 !important;\n  \u007d\n\n  .u-borderUserColorLightest \u007b\n    border-color: #E5F2F7 !important;\n  \u007d\n\n  .u-bgUserColorLightest \u007b\n    background-color: #E5F2F7 !important;\n  \u007d\n\n\n  .u-textUserColorLighter \u007b\n    color: #BFE0EC !important;\n  \u007d\n\n  .u-borderUserColorLighter \u007b\n    border-color: #BFE0EC !important;\n  \u007d\n\n  .u-bgUserColorLighter \u007b\n    background-color: #BFE0EC !important;\n  \u007d\n\n\n  .u-bgUserColorDarkHover:hover \u007b\n    background-color: #05719A !important;\n  \u007d\n\n  .u-borderUserColorDark \u007b\n    border-color: #05719A !important;\n  \u007d\n\n\n  .u-bgUserColorDarkerActive:active \u007b\n    background-color: #0A5F81 !important;\n  \u007d\n\n\n\n\n\n\n\n\n\n\n\n\n\na,\n.btn-link,\n.btn-link:focus,\n.icon-btn,\n\n\n\n.pretty-link b,\n.pretty-link:hover s,\n.pretty-link:hover b,\n.pretty-link:focus s,\n.pretty-link:focus b,\n\n.metadata a:hover,\n.metadata a:focus,\n\na.account-group:hover .fullname,\na.account-group:focus .fullname,\n.account-summary:focus .fullname,\n\n.message .message-text a,\n.message .message-text button,\n.stats a strong,\n.plain-btn:hover,\n.plain-btn:focus,\n.dropdown.open .user-dropdown.plain-btn,\n.open \u003e .plain-btn,\n#global-actions .new:before,\n.module .list-link:hover,\n.module .list-link:focus,\n\n.stats a:hover,\n.stats a:hover strong,\n.stats a:focus,\n.stats a:focus strong,\n\n.find-friends-sources li:hover .source,\n\n\n\n\n\n.stream-item a:hover .fullname,\n.stream-item a:focus .fullname,\n\n.stream-item .view-all-supplements:hover,\n.stream-item .view-all-supplements:focus,\n\n.tweet .time a:hover,\n.tweet .time a:focus,\n.tweet .details.with-icn b,\n.tweet .details.with-icn .Icon,\n\n.stream-item:hover .original-tweet .details b,\n.stream-item .original-tweet.focus .details b,\n.stream-item.open .original-tweet .details b,\n\n.client-and-actions a:hover,\n.client-and-actions a:focus,\n\n.dismiss-btn:hover b,\n\n.tweet .context .pretty-link:hover s,\n.tweet .context .pretty-link:hover b,\n.tweet .context .pretty-link:focus s,\n.tweet .context .pretty-link:focus b,\n\n.list .username a:hover,\n.list .username a:focus,\n.list-membership-container .create-a-list,\n.list-membership-container .create-a-list:hover,\n.new-tweets-bar,\n\n\n\n.card .list-details a:hover,\n.card .list-details a:focus,\n.card .card-body:hover .attribution,\n.card .card-body .attribution:focus \u007b\n  color: #0084B4;\n\u007d\n\n\n\n    #global-actions \u003e li \u003e a \u007b\n      border-bottom-color: #0084B4;\n    \u007d\n\n    #global-actions \u003e li:hover \u003e a,\n    #global-actions \u003e li \u003e a:focus,\n    #global-actions \u003e li.active .text,\n    .nav.right-actions \u003e li \u003e a:hover,\n    .nav.right-actions \u003e li \u003e a:focus \u007b\n      color: #0084B4;\n    \u007d\n\n\n  \n  .FoundMediaSearch--keyboard .FoundMediaSearch-focusable.is-focused \u007b\n    border-color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover,\n  .icon-btn:active,\n  .icon-btn.active,\n  .icon-btn.enabled \u007b\n    border-color: #0084B4;\n    border-color: rgba(0,132,180,0.4);\n    color: #0084B4;\n  \u007d\n\n  \n  .photo-selector:hover .btn,\n  .icon-btn:hover \u007b\n    background-image: linear-gradient(rgba(255,255,255,0), rgba(0,132,180,0.1));\n  \u007d\n\n  .icon-btn.disabled,\n  .icon-btn.disabled:hover,\n  .icon-btn[disabled],\n  .icon-btn[aria-disabled=true] \u007b\n    color: #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--primary,\n  .EdgeButton--primary:focus \u007b\n    background-color: #329CC3;\n    border-color: transparent;\n  \u007d\n\n  .EdgeButton--primary:hover,\n  .EdgeButton--primary:active \u007b\n    background-color: #0084B4;\n    border-color: #0084B4;\n  \u007d\n\n  .EdgeButton--primary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--primary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #329CC3;\n  \u007d\n\n  \n  \n\n  .EdgeButton--secondary,\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:focus,\n  .EdgeButton--secondary:active \u007b\n    border-color: #0084B4;\n    color: #0084B4;\n  \u007d\n\n  .EdgeButton--secondary:hover,\n  .EdgeButton--secondary:active \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n  .EdgeButton--secondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .EdgeButton--secondary:active \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 0 4px #0084B4;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedPrimary \u007b\n    color: #0084B4 !important;\n  \u007d\n\n  .EdgeButton--invertedPrimary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedPrimary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n  \n\n  .EdgeButton--invertedSecondary \u007b\n    background-color: #0084B4;\n  \u007d\n\n  .EdgeButton--invertedSecondary:hover \u007b\n    background-color: #329CC3;\n  \u007d\n\n  .EdgeButton--invertedSecondary:focus \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #99CDE1;\n  \u007d\n\n  .EdgeButton--invertedSecondary:active \u007b\n    box-shadow:\n      0 0 0 2px #0084B4,\n      0 0 0 4px #FFFFFF;\n  \u007d\n\n  \n\n  .btn:focus,\n  .btn.focus,\n  .Button:focus,\n  .EmojiPicker-item.is-focused,\n  .EmojiPicker .EmojiCategoryIcon:focus,\n  .EmojiPicker-skinTone:focus + .EmojiPicker-skinToneSwatch,\n  a:focus \u003e img:first-child:last-child,\n  button:focus \u007b\n    box-shadow:\n      0 0 0 2px #FFFFFF,\n      0 0 2px 4px rgba(0,132,180,0.4);\n  \u007d\n\n  .selected-stream-item:focus \u007b\n    box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item[tabindex=\"-1\"]:focus \u007b\n    outline: 3px solid rgba(0,132,180,0.4) !important;\n  \u007d\n\n  \n  .js-navigable-stream.stream-table-view .selected-stream-item:focus \u007b\n    box-shadow: none;\n  \u007d\n\n  \n\n  .global-dm-nav.new.with-count .dm-new .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .global-nav .people .count .count-inner \u007b\n    background: #0084B4;\n  \u007d\n\n  .dropdown-menu li \u003e a:hover,\n  .dropdown-menu li \u003e a:focus,\n  .dropdown-menu .dropdown-link:hover,\n  .dropdown-menu .dropdown-link:focus,\n  .dropdown-menu .dropdown-link.is-focused,\n  .dropdown-menu li:hover .dropdown-link,\n  .dropdown-menu li:focus .dropdown-link,\n  .dropdown-menu .selected a,\n  .dropdown-menu .dropdown-link.selected \u007b\n    background-color: #0084B4 !important;\n  \u007d\n\n  \/* for items in typeahead dropdown menu on logged in pages *\/\n  .dropdown-menu .typeahead-items li \u003e a:focus,\n  .dropdown-menu .typeahead-items li \u003e a:hover,\n  .dropdown-menu .typeahead-items .selected,\n  .dropdown-menu .typeahead-items .selected a \u007b\n    background-color: #E5F2F7 !important;\n    color: #0084B4 !important;\n  \u007d\n\n  .typeahead a:hover,\n  .typeahead a:hover strong,\n  .typeahead a:hover .fullname,\n  .typeahead .selected a,\n  .typeahead .selected strong,\n  .typeahead .selected .fullname,\n  .typeahead .selected .Icon--close \u007b\n    color: #0084B4 !important;\n  \u007d\n\n\n.home-tweet-box,\n.LiveVideo-tweetBox,\n.RetweetDialog-commentBox \u007b\n  background-color: #E5F2F7;\n\u007d\n\n.top-timeline-tweetbox .timeline-tweet-box .tweet-form.condensed .tweet-box \u007b\n  color: #0084B4;\n\u007d\n\n.RichEditor,\n.TweetBoxAttachments \u007b\n  border-color: #BFE0EC;\n\u007d\n\ninput:focus,\ntextarea:focus,\ndiv[contenteditable=\"true\"]:focus,\ndiv[contenteditable=\"true\"].fake-focus,\ndiv[contenteditable=\"plaintext-only\"]:focus,\ndiv[contenteditable=\"plaintext-only\"].fake-focus \u007b\n  border-color: #99CDE1;\n  box-shadow: inset 0 0 0 1px rgba(0,132,180,0.7);\n\u007d\n\n.tweet-box textarea:focus,\n.tweet-box input[type=text],\n.currently-dragging .tweet-form.is-droppable .tweet-drag-help,\n.tweet-box[contenteditable=\"true\"]:focus,\n.RichEditor.is-fakeFocus,\n.RichEditor.is-fakeFocus ~ .TweetBoxAttachments \u007b\n  border-color: #99CDE1;\n  box-shadow: 0 0 0 1px #99CDE1;\n\u007d\n\n.MomentCapsuleItem.selected-stream-item:focus \u007b\n  box-shadow: 0 0 0 3px rgba(0,132,180,0.4);\n\u007d\n\n\n\n\ns,\n.pretty-link:hover s,\n.pretty-link:focus s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:hover s,\n.stream-item-activity-notification .latest-tweet .tweet-row a:focus s \u007b\n    color: #0084B4;\n\u007d\n\n\n\n.vellip,\n.vellip:before,\n.vellip:after,\n.conversation-module \u003e li:after,\n.conversation-module \u003e li:before,\n.ThreadedConversation-tweet:not(.is-hiddenAncestor) ~ .ThreadedConversation-tweet:before,\n.ThreadedConversation-tweet:after,\n.ThreadedConversation-moreReplies:before,\n.ThreadedConversation-viewOther:before,\n.ThreadedConversation-unavailableTweet:before,\n.ThreadedConversation-unavailableTweet:after,\n.ThreadedConversation--permalinkTweetWithAncestors:before \u007b\n    border-color: #99CDE1;\n\u007d\n\n\n\n\n.tweet .sm-reply,\n.tweet .sm-rt,\n.tweet .sm-fav,\n.tweet .sm-image,\n.tweet .sm-video,\n.tweet .sm-audio,\n.tweet .sm-geo,\n.tweet .sm-in,\n.tweet .sm-trash,\n.tweet .sm-more,\n.tweet .sm-page,\n.tweet .sm-embed,\n.tweet .sm-summary,\n.tweet .sm-chat,\n\n.timelines-navigation .active .profile-nav-icon,\n.timelines-navigation .profile-nav-icon:hover,\n.timelines-navigation .profile-nav-link:focus .profile-nav-icon,\n\n.sm-top-tweet \u007b\n    background-color: #0084B4;\n\u007d\n\n.enhanced-mini-profile .mini-profile .profile-summary \u007b\n  background-image: url(https:\/\/abs.twimg.com\/a\/1504860450\/img\/t1\/grey_header_web.jpg);\n\u007d\n\n  #global-tweet-dialog .modal-header,\n  #Tweetstorm-dialog .modal-header \u007b\n    border-bottom: solid 1px rgba(0,132,180,0.25);\n  \u007d\n\n  #global-tweet-dialog .modal-tweet-form-container,\n  #Tweetstorm-dialog .modal-body \u007b\n    background-color: #0084B4;\n    background: rgba(0,132,180,0.1);\n  \u007d\n\n  .TweetstormDialog-tweet-box .tweet-box-avatar:after,\n  .TweetstormDialog-tweet-box .tweet-box-avatar:before \u007b\n    border-color: #99CDE1;\n  \u007d\n\n  .global-nav .search-input:focus,\n  .global-nav .search-input.focus \u007b\n    border: 2px solid #0084B4;\n  \u007d\n\u007d\n\n  .inline-reply-tweetbox \u007b\n    background-color: #E5F2F7;\n  \u007d\n\n\u003c\/style\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy ProfileCanopy--withNav js-variableHeightTopBar\"\u003e\n  \u003cdiv class=\"ProfileCanopy-inner\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-header u-bgUserColor\"\u003e\n  \u003cdiv class=\"ProfileCanopy-headerBg\"\u003e\n    \u003cimg alt=\"\"\n      \n      class=\"u-hidden\"\n    \u003e\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"AppContainer\"\u003e\n\n    \u003cdiv class=\"ProfileCanopy-avatar\"\u003e\n      \u003cdiv class=\"ProfileAvatar\"\u003e\n    \u003ca class=\"ProfileAvatar-container u-block js-tooltip profile-picture\"\n        href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        title=\"Python Software\"\n        data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\"\n        target=\"_blank\"\n        rel=\"noopener\"\u003e\n        \u003cimg class=\"ProfileAvatar-image \" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_400x400.png\" alt=\"Python Software\"\u003e\n    \u003c\/a\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-headerPromptAnchor\"\u003e\u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"ProfileCanopy-navBar u-boxShadow\"\u003e\n      \n      \u003cdiv class=\"AppContainer\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-card\" role=\"presentation\"\u003e\n              \u003cdiv class=\"ProfileCardMini\"\u003e\n  \u003ca class=\"ProfileCardMini-avatar profile-picture js-tooltip\"\n     href=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     title=\"Python Software\"\n     data-resolved-url-large=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     data-url=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj.png\"\n     target=\"_blank\"\n     rel=\"noopener\"\u003e\n    \u003cimg class=\"ProfileCardMini-avatarImage\" alt=\"Python Software\" src=\"https:\/\/pbs.twimg.com\/profile_images\/439154912719413248\/pUBY5pVj_normal.png\" \u003e\n  \u003c\/a\u003e\n  \u003cdiv class=\"ProfileCardMini-details\"\u003e\n    \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock ProfileNameTruncated-withBadges ProfileNameTruncated-withBadges--1\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ThePSF\"  data-aria-label-part\u003e\n      Python Software\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n    \u003cdiv class=\"ProfileCardMini-screenname\"\u003e\n      \u003ca href=\"\/ThePSF\" class=\"ProfileCardMini-screennameLink u-linkComplex js-nav u-dir\" dir=\"ltr\"\u003e\n        \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n      \u003c\/a\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"ProfileCanopy-nav\"\u003e\n              \n  \u003cdiv class=\"ProfileNav\" role=\"navigation\" data-user-id=\"63873759\"\u003e\n    \u003cul class=\"ProfileNav-list\"\u003e\n\u003cli class=\"ProfileNav-item ProfileNav-item--tweets\"\u003e\n          \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"2,940 Tweets\" data-nav=\"tweets\"\n              href=\"\/ThePSF\"\n\u003e\n            \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eTweets\u003c\/span\u003e\n              \u003cspan class=\"u-hiddenVisually\"\u003eTweets\u003c\/span\u003e\n            \u003cspan class=\"ProfileNav-value\"  data-count=2940 data-is-compact=\"false\"\u003e2,940\n            \u003c\/span\u003e\n          \u003c\/a\u003e\n        \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--following is-active\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav\" title=\"92 Following\" data-nav=\"following\"\n            tabindex=0\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowing\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowing, current page.\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=92 data-is-compact=\"false\"\u003e92\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--followers\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"156,111 Followers\" data-nav=\"followers\"\n            href=\"\/ThePSF\/followers\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eFollowers\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eFollowers\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=156111 data-is-compact=\"true\"\u003e156K\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--favorites\" data-more-item=\".ProfileNav-dropdownItem--favorites\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip js-nav u-textUserColor\" title=\"186 Likes\" data-nav=\"favorites\"\n            href=\"\/ThePSF\/likes\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLikes\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLikes\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-count=186 data-is-compact=\"false\"\u003e186\u003c\/span\u003e\n        \u003c\/a\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--lists\" data-more-item=\".ProfileNav-dropdownItem--lists\"\u003e\n        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link u-borderUserColor u-textCenter js-tooltip  js-nav u-textUserColor\" title=\"8 Lists\" data-nav=\"all_lists\"\n            href=\"\/ThePSF\/lists\"\n\u003e\n          \u003cspan class=\"ProfileNav-label\" aria-hidden=\"true\"\u003eLists\u003c\/span\u003e\n            \u003cspan class=\"u-hiddenVisually\"\u003eLists\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\" data-is-compact=\"false\"\u003e8\u003c\/span\u003e\n        \u003c\/a\u003e\u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--more dropdown is-hidden\"\u003e        \u003ca class=\"ProfileNav-stat ProfileNav-stat--link ProfileNav-stat--moreLink js-dropdown-toggle\" role=\"button\" href=\"#more\"\u003e\n          \u003cspan class=\"ProfileNav-label\"\u003e&nbsp;\u003c\/span\u003e\n          \u003cspan class=\"ProfileNav-value\"\u003eMore \u003cspan class=\"ProfileNav-dropdownCaret Icon Icon--medium Icon--caretDown\"\u003e\u003c\/span\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\n        \u003cdiv class=\"dropdown-menu\"\u003e\n          \u003cdiv class=\"dropdown-caret\"\u003e\n            \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n            \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n          \u003cul\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/likes\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--favorites is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLikes\u003c\/a\u003e\u003c\/li\u003e\u003cli\u003e\n              \u003ca href=\"\/ThePSF\/lists\" class=\"ProfileNav-dropdownItem ProfileNav-dropdownItem--lists is-hidden u-bgUserColorHover u-bgUserColorFocus u-linkClean js-nav\"\u003eLists\u003c\/a\u003e\u003c\/li\u003e\u003c\/ul\u003e\n        \u003c\/div\u003e\n      \u003c\/li\u003e\u003cli class=\"ProfileNav-item ProfileNav-item--userActions u-floatRight u-textRight with-rightCaret \"\u003e\n        \u003cdiv class=\"UserActions   u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group following not-muting including \" data-user-id=\"63873759\"\n        data-screen-name=\"ThePSF\" data-name=\"Python Software\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ThePSF\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    \n    EdgeButton--medium \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    \n    EdgeButton--medium \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    \n    EdgeButton--medium \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    \n    EdgeButton--medium \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n      \u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"AppContainer\"\u003e\n      \u003cdiv class=\"AppContent-main content-main u-cf\" role=\"main\" aria-labelledby=\"content-main-heading\"\u003e\n        \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n          \u003cdiv class=\"Grid-cell u-size1of3 u-lg-size1of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n              \u003cdiv class=\"Grid-cell\"\u003e\n                \u003cdiv class=\"ProfileSidebar ProfileSidebar--withLeftAlignment\"\u003e\n  \u003cdiv class=\"ProfileHeaderCard\"\u003e\n  \u003ch1 class=\"ProfileHeaderCard-name\"\u003e\n    \u003ca href=\"\/ThePSF\"\n       class=\"ProfileHeaderCard-nameLink u-textInheritColor js-nav\"\u003ePython Software\u003c\/a\u003e\u003cspan class=\"ProfileHeaderCard-badges\"\u003e\u003ca href=\"\/help\/verified\" class=\"js-tooltip\" target=\"_blank\" title=\"Verified account\" data-placement=\"right\" rel=\"noopener\"\u003e\u003cspan class=\"Icon Icon--verified\"\u003e\u003cspan class=\"u-hiddenVisually\"\u003eVerified account\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/span\u003e\n  \u003c\/h1\u003e\n\n  \u003ch2 class=\"ProfileHeaderCard-screenname u-inlineBlock u-dir\" dir=\"ltr\"\u003e\n    \u003ca class=\"ProfileHeaderCard-screennameLink u-linkComplex js-nav\" href=\"\/ThePSF\"\u003e\n      \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eThePSF\u003c\/b\u003e\u003c\/span\u003e\n    \u003c\/a\u003e\n  \u003c\/h2\u003e\n\n    \u003cp class=\"ProfileHeaderCard-bio u-dir\" dir=\"ltr\"\u003eThe Python Software Foundation. For help with Python code, see comp.lang.python.\u003c\/p\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-location \"\u003e\n      \u003cspan class=\"Icon Icon--geo Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-locationText u-dir\" dir=\"ltr\"\u003e\n            Everywhere Python is!\n\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-url \"\u003e\n      \u003cspan class=\"Icon Icon--url Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-urlText u-dir\"\u003e  \u003ca class=\"u-textUserColor\" target=\"_blank\" rel=\"me nofollow noopener\" href=\"http:\/\/t.co\/KdOzhmst4U\" title=\"http:\/\/www.python.org\/psf\"\u003e\n    python.org\/psf\n  \u003c\/a\u003e\n\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"ProfileHeaderCard-joinDate\"\u003e\n      \u003cspan class=\"Icon Icon--calendar Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-joinDateText js-tooltip u-dir\" dir=\"ltr\" title=\"8:26 PM - 7 Aug 2009\"\u003eJoined August 2009\u003c\/span\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileHeaderCard-birthdate u-hidden\"\u003e\n      \u003cspan class=\"Icon Icon--balloon Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileHeaderCard-birthdateText u-dir\" dir=\"ltr\"\u003e\n\u003c\/span\u003e\n    \u003c\/div\u003e\n\n\n        \u003cdiv class=\"ProfileMessagingActions\"\u003e\n  \u003cdiv class=\"ProfileMessagingActions-actionsContainer\"\u003e\n\u003cdiv class=\"ProfileMessagingActions-buttonWrapper u-sizeFull\"\u003e\n      \u003cbutton class=\"NewTweetButton u-sizeFull js-tooltip EdgeButton EdgeButton--primary  u-textTruncate\"\n  type=\"button\"\n  title=\"Tweet to Python Software\"\n  data-draft-tweet-id=\"profile_63873759\"\n  \n  data-dialog-title=\"Tweet to Python Software\"\n  \n  data-screen-name=\"ThePSF\"\n  \u003e\n  \u003cspan class=\"NewTweetButton-content button-text tweeting-text\"\u003e\n    \u003cspan class=\"NewTweetButton-text\" aria-hidden=\"true\"\u003eTweet to Python Software\u003c\/span\u003e\u003cspan class=\"u-hiddenVisually\"\u003eMention Python Software in a Tweet\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n    \u003c\/div\u003e  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n\n\n\n      \u003cdiv class=\"ProfileUserList ProfileUserList--socialProof\"\u003e\n  \u003cdiv class=\"ProfileUserList-heading\"\u003e\n    \u003cdiv class=\"ProfileUserList-title\"\u003e\n      \u003cspan class=\"Icon Icon--person Icon--medium\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"ProfileUserList-listName\"\u003e\n            \u003ca href=\"\/ThePSF\/followers_you_follow\" class=\"ProfileUserList-permalink u-textUserColor js-nav\"\u003e9 Followers you know\u003c\/a\u003e\n      \u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cul class=\"ProfileUserList-facepile u-cf\"\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/DocRizwan1\" data-user-id=\"565400818\" original-title=\"Doc Rizwan\" title=\"Doc Rizwan\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/775394157720379393\/YXqqrVbm_normal.jpg\" alt=\"Doc Rizwan\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/TrigonometryBot\" data-user-id=\"826653423076470785\" original-title=\"TrigonomArtryBot\" title=\"TrigonomArtryBot\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/868013725080461312\/AFrh9rbQ_normal.jpg\" alt=\"TrigonomArtryBot\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/github\" data-user-id=\"13334762\" original-title=\"GitHub\" title=\"GitHub\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/616309728688238592\/pBeeJQDQ_normal.png\" alt=\"GitHub\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/randal_olson\" data-user-id=\"49413866\" original-title=\"Randy Olson\" title=\"Randy Olson\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/770816518988959744\/Ma530Li__normal.jpg\" alt=\"Randy Olson\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/remotepython\" data-user-id=\"792841966811742208\" original-title=\"Remote Python Jobs\" title=\"Remote Python Jobs\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/806026422569431040\/O9zDV0Rr_normal.jpg\" alt=\"Remote Python Jobs\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/ruddraarnab\" data-user-id=\"41618894\" original-title=\"Ruddra Arnab\" title=\"Ruddra Arnab\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/506171926536937472\/kG8wzfe2_normal.jpeg\" alt=\"Ruddra Arnab\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/mysqlboy\" data-user-id=\"101830860\" original-title=\"andmoo\" title=\"andmoo\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/898266315366027264\/4591sunP_normal.jpg\" alt=\"andmoo\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/raymondh\" data-user-id=\"14159138\" original-title=\"Raymond Hettinger\" title=\"Raymond Hettinger\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/73450913\/IMG_0202_normal.jpg\" alt=\"Raymond Hettinger\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n      \u003cli class=\"ProfileUserList-facepileItem\"\u003e\n        \u003ca class=\"u-block js-tooltip js-nav\" href=\"\/dabeaz\" data-user-id=\"20958216\" original-title=\"David Beazley\" title=\"David Beazley\" data-nav=\"avatar\"\u003e\n  \u003cimg class=\"Avatar Avatar--size48\" src=\"https:\/\/pbs.twimg.com\/profile_images\/848508178639749120\/x8ltNamO_normal.jpg\" alt=\"David Beazley\"\u003e\n\u003c\/a\u003e\n\n      \u003c\/li\u003e\n  \u003c\/ul\u003e\n\u003c\/div\u003e\n\n\n      \u003cdiv class=\"PhotoRail\"\u003e\n  \u003cdiv class=\"PhotoRail-heading\"\u003e\n    \u003cspan class=\"Icon Icon--camera Icon--medium\"\u003e\u003c\/span\u003e\n    \u003cspan class=\"PhotoRail-headingText\"\u003e\n            \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithCount js-nav\"\u003e\n                \n                36 Photos and videos\n            \u003c\/a\u003e\n          \u003ca href=\"\/ThePSF\/media\" class=\"PhotoRail-headingWithoutCount js-nav\"\u003e\n            Photos and videos\n          \u003c\/a\u003e\n    \u003c\/span\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"PhotoRail-mediaBox\"\u003e\n    \u003cspan class=\"js-photoRailInsertPoint\"\u003e\u003c\/span\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n      \n\u003cdiv class=\"SidebarCommonModules\"\u003e\n\n\n\n        \u003cdiv class=\"module wtf-module js-wtf-module roaming-module\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-header\"\u003e\n      \u003ch3\u003eWho to follow\u003c\/h3\u003e\n      \u003csmall\u003e&middot; \u003c\/small\u003e\n      \u003cbutton type=\"button\" class=\"btn-link js-refresh-suggestions\"\u003e\u003csmall\u003eRefresh\u003c\/small\u003e\u003c\/button\u003e\n      \u003csmall class=\"view-all\"\u003e&middot; \u003ca class=\"js-view-all-link js-nav\" href=\"\/who_to_follow\/suggestions\" data-element-term=\"view_all_link\"\u003eView all\u003c\/a\u003e\u003c\/small\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner\" data-section-id=\"wtf\"\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n      \u003cdiv class=\"flex-module\"\u003e\n        \u003cdiv class=\"flex-module-footer\"\u003e\n          \u003ca href=\"\/who_to_follow\/import\" class=\"js-find-friends-link js-nav\" data-element-term=\"import_link\"\u003e\n            \u003cspan class=\"Icon Icon--small Icon--people\"\u003e\u003c\/span\u003eFind people you know\n          \u003c\/a\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n  \n\u003c\/div\u003e\n\n\n    \u003cdiv class=\"module Trends trends hidden\"\u003e\n  \u003cdiv class=\"trends-inner\"\u003e\n    \u003cdiv class=\"flex-module trends-container \"\u003e\n  \u003cdiv class=\"flex-module-header\"\u003e\n    \n    \u003ch3\u003e\u003cspan class=\"trend-location js-trend-location\"\u003efalse\u003c\/span\u003e\u003c\/h3\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"flex-module-inner\"\u003e\n    \u003cul class=\"trend-items js-trends\"\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n  \u003cdiv class=\"Footer module roaming-module Footer--slim Footer--blankBackground\"\n  \u003e\n  \u003cdiv class=\"flex-module\"\u003e\n    \u003cdiv class=\"flex-module-inner js-items-container\"\u003e\n      \u003cul class=\"u-cf\"\u003e\n        \u003cli class=\"Footer-item Footer-copyright copyright\"\u003e&copy; 2017 Twitter\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/about\" rel=\"noopener\"\u003eAbout\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\" rel=\"noopener\"\u003eHelp Center\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/tos\" rel=\"noopener\"\u003eTerms\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/privacy\" rel=\"noopener\"\u003ePrivacy policy\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170514\" rel=\"noopener\"\u003eCookies\u003c\/a\u003e\u003c\/li\u003e\n        \u003cli class=\"Footer-item\"\u003e\u003ca class=\"Footer-link\" href=\"\/\/support.twitter.com\/articles\/20170451\" rel=\"noopener\"\u003eAds info\u003c\/a\u003e\u003c\/li\u003e\n      \u003c\/ul\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\n\u003c\/div\u003e\n\u003c\/div\u003e\n\n\u003c\/div\u003e\n\n              \u003c\/div\u003e\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n          \u003cdiv class=\"Grid-cell u-size2of3 u-lg-size3of4\"\u003e\n            \u003cdiv class=\"Grid Grid--withGutter\"\u003e\n                \u003cdiv class=\"Grid-cell\"\u003e\n                  \u003cdiv class=\"js-profileClusterFollow\"\u003e\u003c\/div\u003e\n                \u003c\/div\u003e\n\n              \u003cdiv class=\"Grid-cell\n                    \n              \" data-test-selector=\"ProfileTimeline\"\u003e\n                  \n                    \u003cdiv class=\"ProfileHeading\"\u003e\n  \u003cdiv class=\"ProfileHeading-spacer\"\u003e\u003c\/div\u003e\n    \u003cdiv class=\"ProfileHeading-content ProfileHeading-content--noFill\"\u003e\n      \u003ch2 id=\"content-main-heading\" class=\"ProfileHeading-title u-hiddenVisually \"\u003eFollowing\u003c\/h2\u003e\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n                  \n                  \n\n\n\n    \u003cdiv class=\"GridTimeline\"\u003e\n\n    \u003cdiv class=\"stream-item js-new-items-bar-container\"\u003e\n\u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-items has-items\"\n    role=\"list\"\n    data-max-position=\"\" data-min-position=\"1546763660339429920\"\n    \u003e\n    \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3729891\"\nid=\"stream-item-user-3729891\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"audreyr\"\n     data-user-id=\"3729891\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/audreyr\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0099B9;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3729891\/1408910176\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/audreyr\" title=\"Audrey Roy Greenfeld\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/575880029986406402\/nGEXuiyL_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting can-dm \" data-user-id=\"3729891\"\n        data-screen-name=\"audreyr\" data-name=\"Audrey Roy Greenfeld\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @audreyr\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/audreyr\"  data-aria-label-part\u003e\n      Audrey Roy Greenfeld\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/audreyr\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eaudreyr\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCreator of Python\/JS\/CSS open-source libraries. Coauthor of Two Scoops of Django. Married to \u003ca href=\"\/pydanny\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003epydanny\u003c\/b\u003e\u003c\/a\u003e. Painter, sculptor, artist. MIT EECS 2005\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1167122150\"\nid=\"stream-item-user-1167122150\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"WillingCarol\"\n     data-user-id=\"1167122150\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/WillingCarol\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #088253;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1167122150\/1365661184\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/WillingCarol\" title=\"Carol Willing\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3505309243\/ac95abef52375b120e6efe195ebe109b_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1167122150\"\n        data-screen-name=\"WillingCarol\" data-name=\"Carol Willing\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @WillingCarol\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/WillingCarol\"  data-aria-label-part\u003e\n      Carol Willing\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/WillingCarol\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eWillingCarol\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eLearn. Build. Share.  \u003ca href=\"\/projectjupyter\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eprojectjupyter\u003c\/b\u003e\u003c\/a\u003e CPython core dev. Former Director, \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/calpoly\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ecalpoly\u003c\/b\u003e\u003c\/a\u003e research engineer. \u003ca href=\"\/fablabsd\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003efablabsd\u003c\/b\u003e\u003c\/a\u003e Geek in Res. \u003ca href=\"\/MITSloan\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eMITSloan\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/DukeU\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eDukeU\u003c\/b\u003e\u003c\/a\u003e alum\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"154915461\"\nid=\"stream-item-user-154915461\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"ramalhoorg\"\n     data-user-id=\"154915461\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/ramalhoorg\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1B95E0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/154915461\/1492235910\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/ramalhoorg\" title=\"Luciano Ramalho \u2602\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/790558819336224768\/K55wRzKk_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"154915461\"\n        data-screen-name=\"ramalhoorg\" data-name=\"Luciano Ramalho \u2602\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @ramalhoorg\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/ramalhoorg\"  data-aria-label-part\u003e\n      Luciano Ramalho \u003cspan class=\"Emoji Emoji--forLinks\" style=\"background-image:url('https:\/\/abs.twimg.com\/emoji\/v2\/72x72\/2602.png')\" title=\"Umbrella\" aria-label=\"Emoji: Umbrella\"\u003e&nbsp;\u003c\/span\u003e\u003cspan class=\"visuallyhidden\" aria-hidden=\"true\"\u003e\u2602\u003c\/span\u003e\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/ramalhoorg\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eramalhoorg\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003estand-up programmer at \u003ca href=\"\/ThoughtWorks\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThoughtWorks\u003c\/b\u003e\u003c\/a\u003e \u2022 author of \u003ca href=\"\/FluentPython\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eFluentPython\u003c\/b\u003e\u003c\/a\u003e \u2022 he \u2022 I don&#39;t vet the source of every tweet or retweet\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"20639941\"\nid=\"stream-item-user-20639941\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"roguelynn\"\n     data-user-id=\"20639941\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/roguelynn\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #17406C;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/20639941\/1355088856\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/roguelynn\" title=\"__root__\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/528403730731782144\/yGmOOium_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"20639941\"\n        data-screen-name=\"roguelynn\" data-name=\"__root__\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @roguelynn\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/roguelynn\"  data-aria-label-part\u003e\n      __root__\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/roguelynn\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eroguelynn\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSite Reliability Engineer \u003ca href=\"\/Spotify\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eSpotify\u003c\/b\u003e\u003c\/a\u003e. \u003ca href=\"\/ThePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003eThePSF\u003c\/b\u003e\u003c\/a\u003e &amp; DSF member. \u003ca href=\"\/PyLadies\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyLadies\u003c\/b\u003e\u003c\/a\u003e leader. VM\/docker\/bare metal breaker, insomniac, flaneur. Thoughts are my own.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"815280469466083328\"\nid=\"stream-item-user-815280469466083328\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"zimbopy\"\n     data-user-id=\"815280469466083328\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/zimbopy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/815280469466083328\/1483216169\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/zimbopy\" title=\"ZimboPy\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/815895677897150464\/Pj-G5C9u_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"815280469466083328\"\n        data-screen-name=\"zimbopy\" data-name=\"ZimboPy\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @zimbopy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/zimbopy\"  data-aria-label-part\u003e\n      ZimboPy\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/zimbopy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ezimbopy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eZimboPy is an effort by local Python developers and Purple Lipstick in Harare to advance the cause of women in tech!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"762144638\"\nid=\"stream-item-user-762144638\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NaomiCeder\"\n     data-user-id=\"762144638\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NaomiCeder\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/762144638\/1421413182\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NaomiCeder\" title=\"Naomi Ceder\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/556072622752931842\/GEtJXmV3_bigger.jpeg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"762144638\"\n        data-screen-name=\"NaomiCeder\" data-name=\"Naomi Ceder\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NaomiCeder\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NaomiCeder\"  data-aria-label-part\u003e\n      Naomi Ceder\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NaomiCeder\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNaomiCeder\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eCoder, speaker, teacher, co-founder of \u003ca href=\"\/trans_code\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/a\u003e, chair of \u003ca href=\"\/thePSF\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ethePSF\u003c\/b\u003e\u003c\/a\u003e Board of directors\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2929703872\"\nid=\"stream-item-user-2929703872\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"trans_code\"\n     data-user-id=\"2929703872\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/trans_code\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0000A0;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2929703872\/1422820214\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/trans_code\" title=\"Trans*Code\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/561976168606228480\/HyiRZjXa_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2929703872\"\n        data-screen-name=\"trans_code\" data-name=\"Trans*Code\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @trans_code\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/trans_code\"  data-aria-label-part\u003e\n      Trans*Code\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/trans_code\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003etrans_code\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eBringing trans* folk and allies together for a hack day and community building in the UK and around the world.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1068951084\"\nid=\"stream-item-user-1068951084\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"NumFOCUS\"\n     data-user-id=\"1068951084\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #489BB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1068951084\/1503689071\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/NumFOCUS\" title=\"NumFOCUS\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/882723198818590720\/LH034Czl_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1068951084\"\n        data-screen-name=\"NumFOCUS\" data-name=\"NumFOCUS\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @NumFOCUS\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/NumFOCUS\"  data-aria-label-part\u003e\n      NumFOCUS\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/NumFOCUS\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eNumFOCUS\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eNumFOCUS is a non-profit promoting open source scientific computing, reproducible research, and education in data science. We also organize \u003ca href=\"\/PyData\" class=\"tweet-url twitter-atreply pretty-link\" dir=\"ltr\" data-mentioned-user-id=\"0\" rel=\"nofollow\" \u003e\u003cs\u003e@\u003c\/s\u003e\u003cb\u003ePyData\u003c\/b\u003e\u003c\/a\u003e!\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"987181214\"\nid=\"stream-item-user-987181214\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"SciPyConf\"\n     data-user-id=\"987181214\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/987181214\/1495029300\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/SciPyConf\" title=\"SciPyConf\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/3230781982\/75b59cc2fee2c80cb14e59c819abfdb7_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"987181214\"\n        data-screen-name=\"SciPyConf\" data-name=\"SciPyConf\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @SciPyConf\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/SciPyConf\"  data-aria-label-part\u003e\n      SciPyConf\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/SciPyConf\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003eSciPyConf\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eConference for Scientific and Technical Computing topics in the Python programming language. July 10-16, 2017 in Austin, TX. \u003ca href=\"\/hashtag\/SciPy2017?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003eSciPy2017\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2544208537\"\nid=\"stream-item-user-2544208537\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"djangogirls\"\n     data-user-id=\"2544208537\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/djangogirls\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #FF9500;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2544208537\/1439058482\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/djangogirls\" title=\"Django Girls\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/474213835859951617\/4vabKlGs_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2544208537\"\n        data-screen-name=\"djangogirls\" data-name=\"Django Girls\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @djangogirls\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/djangogirls\"  data-aria-label-part\u003e\n      Django Girls\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/djangogirls\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003edjangogirls\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eDjango Girls is non-profit that organises free workshops for women who want to start their adventure with programming and web development.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"602827049\"\nid=\"stream-item-user-602827049\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconph\"\n     data-user-id=\"602827049\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconph\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #D14E4D;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/602827049\/1480732570\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconph\" title=\"PyCon Philippines\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/799928920116117505\/NsdTwbzO_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"602827049\"\n        data-screen-name=\"pyconph\" data-name=\"PyCon Philippines\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconph\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconph\"  data-aria-label-part\u003e\n      PyCon Philippines\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconph\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconph\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eFebruary 25-26, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"2330088174\"\nid=\"stream-item-user-2330088174\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconse\"\n     data-user-id=\"2330088174\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconse\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0084B4;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/2330088174\/1420637642\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconse\" title=\"PyCon Sweden\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/458546252951470080\/gz7i-Fyr_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"2330088174\"\n        data-screen-name=\"pyconse\" data-name=\"PyCon Sweden\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconse\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconse\"  data-aria-label-part\u003e\n      PyCon Sweden\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconse\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconse\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Sweden 2017 is taking place in Stockholm on September 6th, 2017\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n          \n\n\u003cdiv class=\"Grid Grid--withGutter\" data-component-context=\"user\" role=\"presentation\"\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"4517651986\"\nid=\"stream-item-user-4517651986\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconil\"\n     data-user-id=\"4517651986\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconil\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #7FDBB6;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/4517651986\/1457603741\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconil\" title=\"PyCon Israel\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/707200238445010944\/vlLqVkVs_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"4517651986\"\n        data-screen-name=\"pyconil\" data-name=\"PyCon Israel\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconil\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconil\"  data-aria-label-part\u003e\n      PyCon Israel\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconil\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconil\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eSpread the word and tag us with \u003ca href=\"\/hashtag\/pyconil?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconil\u003c\/b\u003e\u003c\/a\u003e\n\u003ca href=\"https:\/\/t.co\/wzKnd3knrD\" rel=\"nofollow noopener\" dir=\"ltr\" data-expanded-url=\"http:\/\/www.facebook.com\/pyconisrael\" class=\"twitter-timeline-link\" target=\"_blank\" title=\"http:\/\/www.facebook.com\/pyconisrael\" \u003e\u003cspan class=\"invisible\"\u003ehttp:\/\/www.\u003c\/span\u003e\u003cspan class=\"js-display-url\"\u003efacebook.com\/pyconisrael\u003c\/span\u003e\u003cspan class=\"tco-ellipsis\"\u003e\u003cspan class=\"invisible\"\u003e&nbsp;\u003c\/span\u003e\u003c\/span\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"625299437\"\nid=\"stream-item-user-625299437\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconza\"\n     data-user-id=\"625299437\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconza\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #000000;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/625299437\/1495432557\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconza\" title=\"PyConZA\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866532965559521280\/c-UzzWnP_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"625299437\"\n        data-screen-name=\"pyconza\" data-name=\"PyConZA\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconza\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconza\"  data-aria-label-part\u003e\n      PyConZA\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconza\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconza\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyConZA 2017 will be in Cape Town. Tweet at us if you&#39;d like to help organize. A conference for everyone in the Python community, from beginners to old hands.\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1908452016\"\nid=\"stream-item-user-1908452016\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconmy\"\n     data-user-id=\"1908452016\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconmy\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1908452016\/1471215172\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconmy\" title=\"PyCon MY\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/635391079001423873\/PzmgyTpO_bigger.png\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1908452016\"\n        data-screen-name=\"pyconmy\" data-name=\"PyCon MY\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconmy\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconmy\"  data-aria-label-part\u003e\n      PyCon MY\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconmy\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconmy\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Malaysia\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"499339900\"\nid=\"stream-item-user-499339900\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConTW\"\n     data-user-id=\"499339900\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConTW\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/499339900\/1403352989\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConTW\" title=\"PyCon Taiwan\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/851073823357059072\/dyff_G3a_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"499339900\"\n        data-screen-name=\"PyConTW\" data-name=\"PyCon Taiwan\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConTW\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConTW\"  data-aria-label-part\u003e\n      PyCon Taiwan\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConTW\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConTW\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003ePyCon Taiwan\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"1391623356\"\nid=\"stream-item-user-1391623356\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"PyConKR\"\n     data-user-id=\"1391623356\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/PyConKR\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #0098B3;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/1391623356\/1495381678\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/PyConKR\" title=\"PyCon Korea 2017\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/866319624631050243\/CMHeixBm_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"1391623356\"\n        data-screen-name=\"PyConKR\" data-name=\"PyCon Korea 2017\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @PyConKR\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/PyConKR\"  data-aria-label-part\u003e\n      PyCon Korea 2017\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/PyConKR\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003ePyConKR\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003eAug. 12\u201315, 2017 \u003ca href=\"\/hashtag\/PyConKR?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ePyConKR\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n  \u003cdiv class=\"Grid-cell u-size1of2 u-lg-size1of3 u-mb10\" data-test-selector=\"ProfileTimelineUser\" role=\"presentation\"\u003e\n    \u003cdiv class=\"js-stream-item\" role=\"listitem\" data-item-id=\"3083880998\"\nid=\"stream-item-user-3083880998\"\ndata-item-type=\"user\"\n\u003e\n       \u003cdiv class=\"ProfileCard js-actionable-user\n    \n    \n    \"\n     data-screen-name=\"pyconhk\"\n     data-user-id=\"3083880998\"\n     data-feedback-token=\"\"\n     data-impression-id=\"\"\n     \n  \u003e\n  \u003ca class=\"ProfileCard-bg js-nav\" href=\"\/pyconhk\" tabindex=\"-1\" aria-hidden=\"true\" style=\"\n    background-color: #1DA1F2;\n    background-image: url(https:\/\/pbs.twimg.com\/profile_banners\/3083880998\/1469182323\/600x200);\"\u003e\n  \u003c\/a\u003e\n\n  \u003cdiv class=\"ProfileCard-content\"\u003e\n    \u003ca class=\"ProfileCard-avatarLink js-nav js-tooltip\" href=\"\/pyconhk\" title=\"PyCON HK\" tabindex=\"-1\" aria-hidden=\"true\" \u003e\n      \u003cimg class=\"ProfileCard-avatarImage js-action-profile-avatar\" src=\"https:\/\/pbs.twimg.com\/profile_images\/756431398425153537\/PT-8jHlp_bigger.jpg\" alt=\"\"\u003e\n    \u003c\/a\u003e\n    \n      \u003cdiv class=\"ProfileCard-actions\"\u003e\n        \u003cdiv class=\"ProfileCard-userActions with-rightCaret js-userActions\"\u003e\n          \u003cdiv class=\"UserActions   UserActions--small u-textLeft\" \u003e\n    \u003cdiv class=\"user-actions btn-group not-following not-muting \" data-user-id=\"3083880998\"\n        data-screen-name=\"pyconhk\" data-name=\"PyCON HK\" data-protected=\"false\"\u003e\n      \u003cspan class=\"UserActions-moreActions u-inlineBlock\"\u003e\n          \u003cbutton type=\"button\" class=\"js-tooltip unmute-button btn small plain-btn\" title=\"Unmute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--muted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003cbutton type=\"button\" class=\"first-load js-tooltip mute-button btn small plain-btn\" title=\"Mute @pyconhk\" data-placement=\"top\"\u003e\n            \u003cspan class=\"Icon Icon--unmuted Icon--medium\"\u003e\u003cspan class=\"visuallyhidden\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/span\u003e\u003c\/span\u003e\n          \u003c\/button\u003e\u003c\/span\u003e\u003cspan class=\"user-actions-follow-button js-follow-btn follow-button\"\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    follow-text\"\u003e\n    \u003cspan\u003eFollow\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--primary\n    EdgeButton--small \n    \n    button-text\n    following-text\"\u003e\n    Following\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unfollow-text\"\u003e\n    Unfollow\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--invertedDanger\n    EdgeButton--small \n    \n    button-text\n    blocked-text\"\u003e\n    Blocked\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--danger\n    EdgeButton--small \n    \n    button-text\n    unblock-text\"\u003e\n    Unblock\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    pending-text\"\u003e\n    Pending\n  \u003c\/button\u003e\n  \u003cbutton type=\"button\" class=\"\n    EdgeButton\n    EdgeButton--secondary\n    EdgeButton--small \n    \n    button-text\n    cancel-text\"\u003e\n    Cancel\n  \u003c\/button\u003e\n\u003c\/span\u003e\n\n\u003cdiv class=\"dropdown \"\u003e\n  \u003cbutton type=\"button\" class=\"user-dropdown dropdown-toggle js-dropdown-toggle js-link js-tooltip btn plain-btn small-user-dropdown\" title=\"More user actions\"\u003e\n    \u003cspan class=\"user-dropdown-icon Icon Icon--dotsVertical Icon--small\"\u003e\u003cspan class=\"visuallyhidden\"\u003eUser actions\u003c\/span\u003e\u003c\/span\u003e\n  \u003c\/button\u003e\n  \u003cdiv class=\"dropdown-menu dropdown-menu--rightAlign is-autoCentered is-forceRight\"\u003e\n    \u003cdiv class=\"dropdown-caret\"\u003e\n      \u003cspan class=\"caret-outer\"\u003e\u003c\/span\u003e\n      \u003cspan class=\"caret-inner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n    \u003cul\u003e\n      \u003cli class=\"mention-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTweet to \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dm-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eSend a Direct Message\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"list-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eAdd or remove from lists&hellip;\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider not-blocked\"\u003e\u003c\/li\u003e\n          \u003cli class=\"mute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eMute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n    \u003cli class=\"unmute-user-item\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnmute \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n\n        \u003cli class=\"block-text not-blocked\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eBlock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"unblock-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eUnblock \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n        \u003cli class=\"report-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eReport \u003cspan class=\"username u-dir\" dir=\"ltr\" \u003e@\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"hide-suggestion-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eHide this suggestion\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-following\"\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"retweet-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off Retweets\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-on-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn on mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"device-notifications-off-text\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eTurn off mobile notifications\u003c\/button\u003e\u003c\/li\u003e\n      \u003cli class=\"dropdown-divider is-embeddable\"\u003e\u003c\/li\u003e\n      \u003cli class=\"embed-profile\"\u003e\u003cbutton type=\"button\" class=\"dropdown-link\"\u003eEmbed this Profile\u003c\/button\u003e\u003c\/li\u003e\n    \u003c\/ul\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n    \u003c\/div\u003e\n\u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n\n    \u003cdiv class=\"ProfileCard-userFields\"\u003e\n      \u003cdiv class=\"ProfileNameTruncated account-group\"\u003e\n  \u003cdiv class=\"u-textTruncate u-inlineBlock\"\u003e\n    \u003ca class=\"fullname ProfileNameTruncated-link u-textInheritColor js-nav\" href=\"\/pyconhk\"  data-aria-label-part\u003e\n      PyCON HK\u003c\/a\u003e\u003c\/div\u003e\u003cspan class=\"UserBadges\"\u003e\u003c\/span\u003e\n\u003c\/div\u003e\n      \n      \u003cspan class=\"ProfileCard-screenname\"\u003e\n        \u003ca href=\"\/pyconhk\" class=\"ProfileCard-screennameLink u-linkComplex js-nav\" data-aria-label-part \u003e\n          \u003cspan class=\"username u-dir\" dir=\"ltr\"\u003e@\u003cb class=\"u-linkComplex-target\"\u003epyconhk\u003c\/b\u003e\u003c\/span\u003e\n        \u003c\/a\u003e\u003cspan\u003e&rlm;\u003c\/span\u003e\n      \u003c\/span\u003e\n      \u003cp class=\"ProfileCard-bio u-dir js-ellipsis\" dir=\"ltr\" data-aria-label-part\u003e2017.11.04-05 Python Conference in Hong Kong \u003ca href=\"\/hashtag\/pycon?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epycon\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/python?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epython\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/pyconhk?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003epyconhk\u003c\/b\u003e\u003c\/a\u003e \u003ca href=\"\/hashtag\/hongkong?src=hash\" data-query-source=\"hashtag_click\" class=\"twitter-hashtag pretty-link js-nav\" dir=\"ltr\" \u003e\u003cs\u003e#\u003c\/s\u003e\u003cb\u003ehongkong\u003c\/b\u003e\u003c\/a\u003e\u003c\/p\u003e\n      \n\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n        \n        \n        \n\n  \u003c\/div\u003e\n\n  \u003cdiv class=\"GridTimeline-end has-items has-more-items\"\u003e\n      \u003cdiv class=\"GridTimeline-emptyText\" id=\"content-main-heading\"\u003e\n        @ThePSF isn&#39;t following anyone yet.\n      \u003c\/div\u003e\n\n\n\n    \u003cdiv class=\"GridTimeline-footer\"\u003e\n      \u003cspan class=\"spinner\"\u003e\u003c\/span\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n\n\n\n\n\n\n\n\n              \u003c\/div\u003e\n\n\n            \u003c\/div\u003e\n          \u003c\/div\u003e\n\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n    \u003c\/div\u003e\n\n    \u003cdiv id=\"trends_dialog\" class=\"trends-dialog modal-container\"\u003e\n  \u003cdiv class=\"modal draggable\"\u003e\n    \u003cdiv class=\"modal-content\"\u003e\n      \u003cbutton type=\"button\" class=\"modal-btn modal-close js-close\"\u003e\n  \u003cspan class=\"Icon Icon--close Icon--medium\"\u003e\n    \u003cspan class=\"visuallyhidden\"\u003eClose\u003c\/span\u003e\n  \u003c\/span\u003e\n\u003c\/button\u003e\n\n      \u003cdiv class=\"modal-header\"\u003e\n          \u003ch3 class=\"modal-title\"\u003e\n            Trends\n            \n          \u003c\/h3\u003e\n      \u003c\/div\u003e\n\n      \u003cdiv class=\"modal-body\"\u003e\n\n          \u003cdiv class=\"trends-personalized content-placeholder\"\u003e\n  \u003ch2 class=\"title\"\u003eTrends tailored just for you.\u003c\/h2\u003e\n  \u003cp\u003eTrends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.\u003c\/p\u003e\n  \u003cp class=\"placeholder-actions\"\u003e\n    \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary customize-by-location\"\u003eChange\u003c\/button\u003e\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eKeep tailored Trends\u003c\/button\u003e\n  \u003c\/p\u003e\n\u003c\/div\u003e\n\n        \u003cdiv class=\"trends-dialog-error\"\u003e\n          \u003cp\u003e\u003c\/p\u003e\n        \u003c\/div\u003e\n\n        \u003cdiv class=\"trends-wrapper\" id=\"trends_dialog_content\"\u003e\n          \n          \u003cdiv class=\"loading\"\u003e\n            \u003cspan class=\"spinner-bigger\"\u003e\u003c\/span\u003e\n          \u003c\/div\u003e\n        \u003c\/div\u003e\n      \u003c\/div\u003e\n        \u003cdiv class=\"modal-footer trends-by-location\"\u003e\n            \u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--secondary select-default\" data-personalized=\"true\"\u003eGet tailored Trends\u003c\/button\u003e\n\u003cbutton type=\"button\" class=\"EdgeButton EdgeButton--primary done\"\u003eDone\u003c\/button\u003e\n\n        \u003c\/div\u003e\n    \u003c\/div\u003e\n  \u003c\/div\u003e\n\u003c\/div\u003e\n\n","banners":"","canonical_url":"https:\/\/twitter.com\/thepsf\/following"}'#strs = "In my project, I have a bunch of strings that are read in from a file. Most of them, when printed in the command console, exceed 80 characters in length and wrap around, looking ugly."

#d = open(strs, "r")
#value = d.read()
# Wrap this text.

value = line.replace('.', '. ', line.count('.')).replace(',', ', ', line.count(','))

wrapper = textwrap.TextWrapper(width=100)
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

# GOOD
import textwrap
d = open("hurricane_01.txt", "r")
value = d.read()
# Wrap this text.
wrapper = textwrap.TextWrapper(width=118)
 
word_list = wrapper.wrap(text=value)
 
# Print each line.
for element in word_list:
    print (element)
  

# %load testing.txt
Breaking News: Hurricane Irma has begun to batter Florida http://nyti.ms/2wP1iq6  WWE champ Jinder Mahal did not infact walk Arjan Bhullar to the cage tonight because he's stuck in Florida due to Hurricane Irma, I'm told. NEW:Several tornado warnings issued as Florida braces for Hurricane Irmahttp://cbsn.ws/2xmfyXV pic.twitter.com/uo8CSYIbvQ white ppl staying in the florida keys sitting outside like "thishurricane is gonna charge my chakra crystals" Anheuser-Busch sends hundreds of thousands of cans of water to Floridaahead of Hurricane Irma http://hill.cm/FXzDrWp pic.twitter.com/MeFnJ7otOU SPECIAL UPDATE: ABC's @DavidMuir with thelatest update on Hurricane #Irma as Florida braces for the storm's impact.http://abcn.ws/2xbJlC1 pic.twitter.com/FH0YP18Kl6 Kid tells reporter why his family isn't evacuating Florida ahead ofHurricane Irma pic.twitter.com/4uTeME1vxp Hagupit ng Hurricane Irma, unti-unti nang nararamdaman sa Florida | Ulat ni@dontagalapic.twitter.com/lRMZ28c76d Hurricane Irma will be a dangerous major hurricane while moving over the FloridaKeys. Here's the latest: http://wxch.nl/2gSKX9F  pic.twitter.com/Y3FFWoVep2 Florida residents call on Trump to openMar-a-Lago as a shelter for hurricane victims. Trump's answer: NO pic.twitter.com/I6XcasZ5kN 54,000+ in sheltersacross Florida  6,000,000+ told to evacuate as the state prepares for Hurricane #Irmahttp://cnn.it/2gSO8hJ pic.twitter.com/Yab5Cotgdw Ito ‘y kung mag-landfall na ang mata ng bagyo sa kalupaan nainaasahan sa darating na Linggo matapos itong...http://fb.me/H19EXFmC  As Hurricane Irma spins toward landfall inFlorida remember that Trump and GOP plan deep cuts to NOAA and FEMA. BREAKING: Irma has been renamed to HurricaneHedlund so it will miss Florida no matter how close it currently is. #TCUvsARK NEWS !! Channel 7 update south Florida!!!  Hurricane Irma is coming any second   Our tops specialist in the field  pic.twitter.com/oer87V6oip Foreign:Hurricane Irma, mas lalakas pa pagkalabas ng Cuba papuntang Florida. #RapidoHatawBalita Mga Pinoy sa Florida, pinag-iingat na ng Palasyo dahil sa hurricane Irma. #RapidoHatawBalita Hell naw...https://www.yahoo.com/amphtml/news/florida-gun-owners-encouraged-apos-213111921.html … Hurricane Irma, ibinaba sa Category 3; nagsimula nang manalasasa Florida https://shar.es/1SP1xH  | @rvbalasbas watching a live stream from florida and saw this dude shrug at thedamn hurricane pic.twitter.com/4eOovQm74x

import textwrap

d = open("hurricane_01.txt", "r")
strs=d.read()

print(textwrap.fill(strs, 118))

d = open("file2.txt", "r")
outputfile =open("outputfile.txt", "w+")
for line in d.readlines():
    e.write(line.replace(".",  "\n"))

e.close()    

d = open("hurricane_01.txt", "r")
#text=d.read()
for list in d:
    print list


# %load outputfile.txt
BREAKING - Floridians began to exit the state en masse, in anticipation of Hurricane Irma - 
5 millions citizens need to evacuate Florida - pic.twitter.com/ztXvx5jAD2 Category 5 Hurricane 
#Irma turns to move WNW to #Florida , having hit coast of Cuba at 160mph #HurricaneIrmapic.twitter.com/940iWVqh0p
Hurricane Irma strengthens ahead of an all-but-certain collision with southern Florida https://bloom.bg/2faKWyb pic.twitter.com/hSLQ7IqGhi 23 million people under #Florida #Hurricane  #Irma still #Category 5 warning.This is a History making storm #Hurricane larger than Fla pic.twitter.com/7o6ZVM7VhK The hurricane is in Florida. Not Cebu. Daghan diay jud awatera dani, pati ang langit ga awat2. Aw. Peace With a category 5 hurricane hitting, 1/2 the amount of resources as Florida &nowhere to evacuate to..Let Cuba be in our thoughts+prayers Praying for Florida. #GodBlessAmerica .
#HurricaneIrma #Hurricane #Irmapic.twitter.com/Sfezh906dd After ni Texas, si Florida naman.  
    Sinamahan pa ni Mexico and Puerto Rico. Lord.  #Hurricane #Tsunami  Wala na pong flights, Lord  
    Sa CNN ko nakita yung lindol sa Mexico pero ang humahagupit dito yung Hurricane Irma papunta sa 
    Florida,dami din Pinoy doon Dear God, We lift Florida up to you, all Residents , Family & Friends. 
    Please watch over and protect Everyone, Amen #CCOT #TCOT #Hurricane pic.twitter.com/SjjcJESje1 11 PM Friday 09/08: Hurricane #Irma remains a severe and extremely dangerous threat for all of South Florida. pic.twitter.com/iHuqCmqh3s #RadyoPatrol Mga Pinoy sa Florida, handa na rin sa pagdating ng hurricane Irma pic.twitter.com/CV9ha71jRV It's funny how there's a hurricane that's coming for Florida but currently it's destroying Cuba and no one cares. #PrayForFlorida: More than 5.6 MILLION #people ordered to #EVACUATE #Florida for #HurricaneIrma: #SJ http://dailym.ai/2wOdRC7  via @MailOnline BREAKING: Irma strengthens back into a Category 5 hurricane; warning zone expanded for Florida NHC 11pm update | #Irma made landfall on Cuba as CAT 5 hurricane. Heading towards Florida as Cat 4 or 5 pic.twitter.com/qYqkyxbeHc Lots of traffic on the Florida Turnpike as people attempt to flee Hurricane #Irma But it's Not too late to leave!pic.twitter.com/uNPziqrTUG . #Irma  is now back a Cat 5 Storm #hurricaneirma2017 #Hurricane #Irma2017 #CapeCoral #FortMyers #Miami #MiamiBeach #Florida #Naplespic.twitter.com/n5K8JTQObS Category 2 hurricane makaibot na ug balay unsa na lang ang 4 or 5 which is Irma. God bless, people of Florida. A 60 member Texas Game Warden Strike Team has arrived in Florida to repay our gratitude for their response to Texas during Hurricane Harvey. pic.twitter.com/1oNlkZGWp3	

%%writefile file2.txt
BREAKING - Floridians began to exit the state en masse, in anticipation of Hurricane Irma - 5 millions citizens need to evacuate Florida - pic.twitter.com/ztXvx5jAD2 Category 5 Hurricane #Irma turns to move WNW to #Florida , having hit coast of Cuba at 160mph #HurricaneIrmapic.twitter.com/940iWVqh0p Hurricane Irma strengthens ahead of an all-but-certain collision with southern Florida https://bloom.bg/2faKWyb pic.twitter.com/hSLQ7IqGhi 23 million people under #Florida #Hurricane  #Irma still #Category 5 warning.This is a History making storm #Hurricane larger than Fla pic.twitter.com/7o6ZVM7VhK The hurricane is in Florida. Not Cebu. Daghan diay jud awatera dani, pati ang langit ga awat2. Aw. Peace With a category 5 hurricane hitting, 1/2 the amount of resources as Florida &nowhere to evacuate to..Let Cuba be in our thoughts+prayers Praying for Florida. #GodBlessAmerica .
#HurricaneIrma #Hurricane #Irmapic.twitter.com/Sfezh906dd After ni Texas, si Florida naman.  Sinamahan pa ni Mexico and Puerto Rico. Lord.  #Hurricane #Tsunami  Wala na pong flights, Lord  Sa CNN ko nakita yung lindol sa Mexico pero ang humahagupit dito yung Hurricane Irma papunta sa Florida,dami din Pinoy doon Dear God, We lift Florida up to you, all Residents , Family & Friends. Please watch over and protect Everyone, Amen #CCOT #TCOT #Hurricane pic.twitter.com/SjjcJESje1 11 PM Friday 09/08: Hurricane #Irma remains a severe and extremely dangerous threat for all of South Florida. pic.twitter.com/iHuqCmqh3s #RadyoPatrol Mga Pinoy sa Florida, handa na rin sa pagdating ng hurricane Irma pic.twitter.com/CV9ha71jRV It's funny how there's a hurricane that's coming for Florida but currently it's destroying Cuba and no one cares. #PrayForFlorida: More than 5.6 MILLION #people ordered to #EVACUATE #Florida for #HurricaneIrma: #SJ http://dailym.ai/2wOdRC7  via @MailOnline BREAKING: Irma strengthens back into a Category 5 hurricane; warning zone expanded for Florida NHC 11pm update | #Irma made landfall on Cuba as CAT 5 hurricane. Heading towards Florida as Cat 4 or 5 pic.twitter.com/qYqkyxbeHc Lots of traffic on the Florida Turnpike as people attempt to flee Hurricane #Irma But it's Not too late to leave!pic.twitter.com/uNPziqrTUG . #Irma  is now back a Cat 5 Storm #hurricaneirma2017 #Hurricane #Irma2017 #CapeCoral #FortMyers #Miami #MiamiBeach #Florida #Naplespic.twitter.com/n5K8JTQObS Category 2 hurricane makaibot na ug balay unsa na lang ang 4 or 5 which is Irma. God bless, people of Florida. A 60 member Texas Game Warden Strike Team has arrived in Florida to repay our gratitude for their response to Texas during Hurricane Harvey. pic.twitter.com/1oNlkZGWp3

%%writefile file.txt
Category 5 Hurricane #Irma turns to move WNW to #Florida , having hit coast of Cuba at 160mph #HurricaneIrmapic.twitter.com/940iWVqh0p Hurricane Irma strengthens ahead of an all-but-certain collision with southern Florida https://bloom.bg/2faKWyb pic.twitter.com/hSLQ7IqGhi 23 million people under #Florida #Hurricane  #Irma still #Category 5 warning.This is a History making storm #Hurricane larger than Fla pic.twitter.com/7o6ZVM7VhK The hurricane is in Florida. Not Cebu. Daghan diay jud awatera dani, pati ang langit ga awat2. Aw. Peace With a category 5 hurricane hitting, 1/2 the amount of resources as Florida &nowhere to evacuate to..Let Cuba be in our thoughts+prayers Hurricane Irma back to a Category 5 storm as it sweeps into Cuba and continues a path toward Florida http://lat.ms/2xbnB9h pic.twitter.com/raqzogW1f9 After ni Texas, si Florida naman.  Sinamahan pa ni Mexico and Puerto Rico. Lord.  #Hurricane #Tsunami  Wala na pong flights, Lord  Sa CNN ko nakita yung lindol sa Mexico pero ang humahagupit dito yung Hurricane Irma papunta sa Florida,dami din Pinoy doon Dear God, We lift Florida up to you, all Residents , Family & Friends. Please watch over and protect Everyone, Amen #CCOT #TCOT #Hurricane pic.twitter.com/SjjcJESje1 #RadyoPatrol Mga Pinoy sa Florida, handa na rin sa pagdating ng hurricane Irma pic.twitter.com/CV9ha71jRV It's funny how there's a hurricane that's coming for Florida but currently it's destroying Cuba and no one cares. Florida Governor Rick Scott urges residents ahead of Hurricane #Irma: 'You've got to get out; you can't wait." http://abcn.ws/2xjff0b pic.twitter.com/WZQetzG0lP #PrayForFlorida: More than 5.6 MILLION #people ordered to #EVACUATE #Florida for #HurricaneIrma: #SJ http://dailym.ai/2wOdRC7  via @MailOnline BREAKING: Irma strengthens back into a Category 5 hurricane; warning zone expanded for Florida NHC 11pm update | #Irma made landfall on Cuba as CAT 5 hurricane. Heading towards Florida as Cat 4 or 5 pic.twitter.com/qYqkyxbeHc Lots of traffic on the Florida Turnpike as people attempt to flee Hurricane #Irma But it's Not too late to leave!pic.twitter.com/uNPziqrTUG . #Irma  is now back a Cat 5 Storm #hurricaneirma2017 #Hurricane #Irma2017 #CapeCoral #FortMyers #Miami #MiamiBeach #Florida #Naplespic.twitter.com/n5K8JTQObS Category 2 hurricane makaibot na ug balay unsa na lang ang 4 or 5 which is Irma. God bless, people of Florida. A 60 member Texas Game Warden Strike Team has arrived in Florida to repay our gratitude for their response to Texas during Hurricane Harvey. pic.twitter.com/1oNlkZGWp3 Hurricane Irma about to pop up to Florida like pic.twitter.com/7vdyqIo3xC

f = open('file.txt','w') 
print f  
f.close() 

https://www.google.com/search?num=30&newwindow=1&client=ubuntu&channel=fs&btnG=Search&q=hurricane
https://www.google.com/search?num=30q=hurricane    



#This is a great search
#Much better that a regular browser search. 
#This search keeps a google page that may be scrapedor gleaned or just used as a hyperlink documant. 
#Results are fantastic.
from bs4 import BeautifulSoup
import requests
url = u'https://www.google.com/search?num=30&newwindow=1&client=ubuntu&channel=fs&btnG=Search&q='

#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
query = u'Trump, idiot '
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')

for list in soup:
    print list
text = str(list)
html_str = text
Html_file= open("filename4.html","w")
Html_file.write(html_str)
Html_file.close()

text = str(list)
html_str = text
Html_file= open("filename.html","w")
Html_file.write(html_str)
Html_file.close()

from bs4 import BeautifulSoup
import requests
url = u'https://www.google.com/search?num=30&newwindow=1&client=ubuntu&channel=fs&btnG=Search&q='
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
query = u'hurricane, florida'
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')



for list in soup:
    print list
    


# much more human readable
from bs4 import BeautifulSoup
import requests
url = u'https://twitter.com/search?q='
#query = u'%40drawranliou'
#query = u'%23hurricanne&src=typd'
query = u'hurricane, florida'
r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)


for list in txt:
    print list


import BeautifulSoup
WANTED = 20 #or however many characters you want after 'Figure'
           
with open('data/twitter.data') as searchfile:
    for line in searchfile:
        left,sep,right = line.partition('Tebalo Lacoste')
        if sep: # True iff 'Figure' in line
            tx =(right[:WANTED])
            print tx.encode("ascii")

import BeautifulSoup as soup

WANTED = 20 #or however many characters you want after 'Figure'
           
with open('data/twitter.data') as searchfile:
    for line in searchfile:
        left,sep,right = line.partition('Tebalo Lacoste')
        if sep: # True iff 'Figure' in line
            tx =(right[:WANTED])
            print soup[tx].encode("ascii")
            

!wget -O tmmpp/CODE.png https://cdn-images-1.medium.com/max/800/1*GnRQbN7_pO2TO9valMKzLQ.png

from PIL import Image
view = Image.open("tmmpp/CODE.png")
view

u'https://twitter.com/search?=%40dhurricane'


https://twitter.com/search?q=%23hurricanne&src=typd


from bs4 import BeautifulSoup
import requests
url = u'https://twitter.com/search?q='
#query = u'%40drawranliou'

#query = u'@JamesOKeefeIII'
query = u'hurricanne&src=typd'

r = requests.get(url+query)
soup = BeautifulSoup(r.text, 'html.parser')

tweets = [p.text for p in soup.findAll('p', class_='tweet-text')]
txt = (tweets)


for list in txt:
    mytext = "<br />\n".join(list.split("\n\n"))
    print mytext
    

!wget -O TMP.jpg pic.twitter.com/A34m690Tq1

# retrieve a line by the first word
def get_record(key, datafile):
    '''return line of data file where first "word" matches key'''
    results = None
    with open(datafile) as data:
         for line in data:
            if key == line.split()[0]:
                results = line
                #break
    return results

datafile='data/twit.data'
key = 'Trump'
text = get_record(key, datafile)
print text


I praise the Rescue efforts of the people of Texas & indeed all Americans after the devastation of 
Hurricanne Harvey. Humanity is indeed one!


import BeautifulSoup as soup

WANTED = 20 #or however many characters you want after 'Figure'
         
with open('data/twitter.data') as searchfile:
    for line in searchfile:
        left,sep,right = line.partition('Tebalo Lacoste')
        if sep: # True iff 'Figure' in line
            tx = soup[(right[:WANTED])].encode("ascii")  
            
            print tx
            

import BeautifulSoup

soup[0].encode("ascii")

class unicode(unicode):
     def __repr__(self):
             return __builtins__.unicode.__repr__(self).lstrip("u")
 
>>> a')
soup[0].encode("ascii")

%%writefile data/twitter.data
[u'Nathaniel J. Hall', u'Katherine Denkinson', u'Deborah Playford', u'Alan Hill', u'PJK', u'THE DOGFATHER\u2122 #MGWV', u'Platonic Love', u'Arlene \U0001f506 #1FIRST', u'Payfar', u'Funny Tweets', u"Couple's", u'Boys Problems', u'What the fun facts', u'FANTASTIC', u'Billionaire Mindset', u'poems web', u'Dynamic', u'rajkumar', u'Hair Style', u'Six-Word-Stories', u'only', u'only2', u'Valencians\u2716\ufe0fTU', u'\u200f\u062c\u0645\u064a\u0640\u0644\u0640\u0640\u06c3 \u2740\u2669\U0001f6ab\U0001f634', u'FranciscoXavier', u'Ronewa_Xsa \U0001f535', u'Mphonini', u'SHASHA \U0001f410\U0001f451', u'Blulovebae', u'TREVOR', u'Uncle James\u2122', u'SocialTrendsKE', u'Treezy Ntsete', u'Mapitsi Seleme', u'i FOLLOW Back \U0001f4aa\U0001f4aa', u'Laz', u'Trapa Promo', u'S\xefph\xebl\xebl\xeb Ngw\xebny\xe4\u2122', u'dEAR_sNEEZY\U0001f531', u'Funny Leone', u'JELtech', u'#FollowTrick VIP 1M', u'\u2764cat\u2764111K\u2764', u'tweecha', u'Selena Gomez', u'Annabel Mizel', u'Ruwayne', u'History to learn', u'MassDangerSubrandom', u'Natt Elisabeth', u'P. Writer', u'Mary Tom', u'We Accept Pets', u'Maria Tureaud', u'Pavel Khristolubov', u'Love the Idea \u2764\ufe0f\ufe0f', u'ItsYoBoyHamza', u'MusicPromo', u'Trillest', u'Positive Quotes', u'cryptoking', u'love impact', u'Rave', u'world travel\u2755', u'artswikipedia', u'That Goat Boy', u"Cause We're sexism\U0001f612", u'Poems Web', u'Artistic Design', u'i am linda', u'SEGURO EXTREMO', u'SavageGamerUK', u'So-Star', u'post paco', u'Sports Videos Daily', u'Kool Guy Muzy\U0001f451', u'Dr. Lord Lizard', u'Magdolina Mugwump', u'FollowTrick RT 9.3K', u'Cindy Tapnio', u'Dear You', u'Adorable outflts', u'Thought', u'Recipe Gifs', u'Itslifethought', u'FUNNY LOVERS', u'Nature is Scary', u'lost In History', u'LIFE QUOTES', u'Shower Thoughts', u'Deepest Thoughts', u'Mind Blowing', u'Food Porn', u"Shawn's follow help", u'Follow Trick Help', u'Yohana Nicodemus 17K', u'Andre Mesnil', u'love words', u'love quotes', u'QUOTES AND SAYING', u'LOve is Life \U0001f535', u'Note Book', u'POOT PUT', u'#CiaJamSessions', u'Softstantial Systems', u'RaVe Distant', u'GartnerGarden', u'shelondonn \u2625\U0001f1f3\U0001f1ec\U0001f1ec\U0001f1e7', u'Join The Empire', u'Pixels', u'Noula', u'help get 10K', u'Yadav Rahul', u'Barrington Mole', u'\u0641\u064a\u0635\u0644 \u0645\u062d\u0645\u062f \u0633\u0627\u0644\u0645', u'Dev Sabharwal', u'Invictus', u'Inovation', u'HeadLeaks', u'Love Unlimited', u'Survivors of SV Ke', u'Quotes and Sayings', u'DORY', u'Quotes and Sayings', u'Bitch Please', u'Thoughts !', u'LearnMsgs', u'Broken Messages', u'Hannah Jacole \U0001f451', u'facts', u'Sassy Moon', u'Sapper Consulting', u'Oliva', u'1Foxy.com', u'Mind Blowing', u'charlotte crumpton', u'FOLLOW HELP', u'\U0001f4a6', u'Justin Bieber', u'Valentin Couhet', u'GerK\u27642.7K', u'PUPPIES\U0001f43e ifb 10.5K', u'\U0001f525MGWVFOLLOWHELP\U0001f525', u'Glorious Pecora', u'BigAl', u'Hadda Gutfull', u'Dr. Lynne De Weaver', u'Frax', u'Ruddra Arnab', u'Nadia Chuks\U0001f339\U0001f339\U0001f339', u'TheSphinx', u'Travis Northrup', u'Learning', u'Did You Know?', u'Prince Thobo Mosiman', u'The Animal Vines', u'Serrah Linares', u'solitary ,', u'realconstancefriday', u"Kevin D O'Gorman", u'NoteBookMsgss', u'Rena Greenberg', u'AestheticClips', u'TYPICAL GIRL', u'Nick Demos', u'Google Facts', u'1Foxy.com Trading', u'1Foxy.com', u'sming7655', u'1Foxy.com', u'Sato F1-2002', u'Chris Briscoe', u'Helen Christian', u'Mesha\U0001f61d\U0001f60e', u'Alisha Smiley A', u'Tattoo Arts', u'Deepest thought', u'Google facts', u'zinsmith', u'FlirtyNotes', u'ricky pointing', u'XLNC Tweets', u'OMG', u'Follow To Gain', u'KimberLite', u'Animal Post\U0001f415', u'S\u15e9\u013f\u15f0\u15e9\u144e \u0124\u15e9SS\u15e9\u144e', u'Preeti Khanna', u'artsmoore', u'MicroArtist', u'ArtZane', u'Destroying clips', u'Ravi Bhalodiya', u'Life facts', u'Mark John Nelson', u'Britney Spears', u'Timothy Buss', u'VidRetal', u'FloridaBarberAcademy', u'LNSL \u223e', u'Bad Beez', u'Eirwalk \u223e LNSL \u223e 71K', u'Philosophy - Coding', u'DebtAssassin\u2122', u'\u2022', u'DavisBarbara', u'Mark and Nancy', u'La Borsa di Martina', u'1Foxy.com Bitcoin \U0001f49b', u'1Foxy.com Trading', u'Arjen van Berkum', u'Dan Hathaway', u'akso noy', u'Shuffle', u'Jon Watwood', u'HC News - Python', u'Jamie Grasso', u'Casey Dwayne', u'Jen MacDonald', u'CjSpidermanGamer', u'Jason Mas', u'Drankzz', u'\u576a\u4e95\u7f8e\u4f73', u'\u5927\u4eba\u6c17ED\u6cbb\u7642\u85ac#\u76f8\u4e92\u30d5\u30a9\u30ed\u30fc', u'\u6d6e\u6c17\u8abf\u67fb\u3000\u6c96\u7e04', u'twitt3r', u'Chris Albon', u'Peter Zaitsev', u'andmoo', u'Project Jupyter', u'nteract', u'Daniel Whitenack', u'Kent English', u'RSA Events', u'Kai W\xe4hner', u'Built with Go', u'Oh My Corgi!', u'Leona Peters', u'chaundreia\U0001f497', u'Javascript Bot', u'CreativeZIN', u'Deborah Lipp', u'Non Fiction Books', u'Perfectly Timed Pics', u'Feeling', u'Nicegirl', u'Crazy Feelings', u'Pixelhead', u'New York Classifieds', u'Dear you', u'HUMAN LIMITS', u'Physics Fun', u'Loraan', u'Rudolf Rox', u'janet watt', u'Daniel J Powley', u'Loto Labs', u'Daily Happiness', u'Satisfying Art', u'EatDrinkTravelDream', u'Tabias Sykes', u'TH1RT3EN', u'The New Science', u'Songbird\u266a', u'gdha', u'Kevin Junior', u'P2P Engagement', u'True News Network', u'Naviga Recruiting', u'MulPlayer', u'Photos Advices', u'Vapemate', u'manifoldco', u'Destroying Clips\u200f', u'Lost in History Love', u'Google Facts', u'Animal vid', u'GiftedBooty\U0001f608', u'Logo Design', u'\U0001f30dGlobal\U0001f310Hidden\U0001f30f', u'Lisa Hull', u'RelationShip', u'GIMP', u"G'MIC", u'Krita Painting App', u'Babington', u'Doflamingo\U0001f608', u'Life Hacks\u2122', u'Crist\xf3bal', u'Saska Jovic', u'Tatted Dopes', u'JaamZIN', u'CBK VIDEOS', u'Shesus Khryst', u'The Meme Stock', u'dre', u'Underbeads', u'Follow help \u26a1\ufe0f', u'Josh\U0001f310', u'Stranged Worlds \U0001f44d\U0001f30d', u'Mike Newkirk', u'Lee Harald Aas', u'MassiFace', u'Bill Swavely', u'Tabitha Naylor', u"Let's Ramble", u'Jonatan Jansson', u'Mike Bittar', u'Heart Broken Message', u'accra foodie', u'N\xc3O SDV, RT NO RT', u'SciState', u'Stella Forster', u'chloo\u2601\ufe0f', u'K.', u'Selorm Romeo \U0001f1ec\U0001f1ed', u'Feeling Fact', u'Ted Kevin', u'Learning', u'Chris : .', u'klaiton noise', u'Feelings \u2661', u'Kunad0!', u'Michael J. Schiemer', u'Quttera', u'\U0001f496Tabitha\U0001f499', u'STUMPY', u'TheGuyWithNoLeftHand', u'Sheridan Leigh', u'Science Newz', u'Ghana_boy\U0001f1ec\U0001f1ed', u'rapseedtv.com', u'Rahul Hussain', u'Admonter Floors', u'BuzzFeed News', u'Mary Ann Mendoza', u'Joseph Goron', u'Scientific American', u'Science News', u'madpoet_one', u'(((Rantz)))', u'(((\u0279oq\u01dd\u0279\u0287s \u0279 \u0254)))', u'Caedmon', u'Estorick Collection', u'ayomide\U0001f451', u'marie \u2661', u'Projeto Follow Trick', u'TrapaDrive\U0001f338', u'Golang I/O', u'Golang News \U0001f4f0', u'Psychology', u'Chasity Sanchez', u'Poppy', u'Dan Lisac', u'irregular LOGIC', u'vivian paul', u'Teressa Terry', u'\u2604The Legend \u2604', u'LeaderGPU GPUaaS', u'\U0001f388\u0639\u0644\u0648\u0634\U0001f3882', u'Sammah', u'\u26a1FOLLOW HELP VIP \u26a1\u200f', u'George Shiber', u'create', u'Finance and Python', u'lily\U0001f525', u'Saving Is Smart.', u'\u0631\u0627\u0626\u0640\u0640\u062f \u2755\u063a\u0640\u0640\u064a\u0640\u0640\u0627\u0628\u2755', u'STARBLAST', u'Clarine Zapf', u'Dope', u'Matt King', u'Maple Learning', u'Steve Francia', u'Drew Pfundstein', u'\u2764\ufe0f\u2130\u2113\u2113\u03b1', u'......\u23f3\u2122', u'Ulf Oldenborg', u'Antonio Cucciniello', u'Vaping Train', u'Harlin Seritt', u'keith hall', u'Emgee Da Squll MG', u'Data Science is Fun', u'Buyburbak SocialNews', u'Syn', u'Remote Python Jobs', u'Web Decorum', u'Raja Jamal', u'Manila Pety', u'Python Eggs', u'KanhaSoft', u'Teddy jerry', u'Stephanie Neal', u'\u30cd\u30c3\u30c8\u30b5\u30fc\u30d5\u30a3\u30f3\u306e\u58fa', u'Awesome Life', u'Sn0wCr45h', u'\u2601 Vamsi Krishna \u2601', u'Jos\xe9 M. Chia', u'Saurabh Chaturvedi', u'CBK Videos \U0001f53asub4sub', u'Ruby Da Cherry $us', u'I love  you  babe', u'GO! Math Videos', u'Mitch', u'Women For Trump!', u'Follow Help | IFB \U0001f4b0', u'Victoria Banuelas', u'robotina', u'Doc Rizwan', u'!drizzilated', u'obadiah ombaba obare', u'Abelo_Rotich', u'Uncasbook', u'John Sonmez', u'PixTeller', u'Maga#Trump#us', u'Gareth Davies', u'John Bitcoin', u'Mark Ramsey Gott', u'SPHA', u'Allure Yoga', u'Julius', u'Tutorias.co', u'Rain Man', u'EyeOf TheLiger Vids', u'Ndaire\u2122', u'A Star Is Born', u'BrujoBlumer\U0001f52f\U0001f52e\U0001f981', u'D.U.K.E\U0001f451', u'Its Voltaic', u'Dr Widad Akreyi', u'Dynasty Den', u'Douglas McGrew', u'Jason', u'Sparrow\U0001f3b6', u'Dr. Amany Alazraq', u'AnywhereInside', u'DreamHustleCode', u'Jerwanda Atkins', u'John Snow Labs', u'Arnaudin J.P', u'Stefan Zimmermann', u'Randy Olson', u'The Franklin Fdn', u'\uff4e\uff55\uff44\uff45', u'Artistic Nudes', u'Bob Kostic', u'follow help\U0001f48e', u'Craig Barr', u'\U0001f451 Laura Tyler \U0001f451', u'Alanis-software', u"Mike's Marketing", u'@Greedy', u'Dog Love Shoppers', u'Dapazit', u'alberto peralta', u'Retweet And Gain', u'YODspica\u2122 Marketing', u'Algorithmia', u'Dr. Ronald R. Capps', u'Leevi', u'CHRIS THRALL', u'Web Platform', u'Cierra Ward', u'DaddyPlugin', u'Action Man', u'World 4 Humanity', u'V-InfoWe', u'Kopano Mosimane', u'Gabrielle Bourbon', u'Oriaje Fatimah', u'Krupesh Patel', u'Timo Aho', u'Mark Raphael', u'Azwidowi', u'LIL DRACO \U0001f5ef', u'make israel great', u'Gabrielle Bourbon', u'Dhjgfkjj Vdgjjnnm', u'Kate Upton', u'Jake W', u'Crissie Vaughan', u'sars!', u'newGood4;1', u'Maureen Samuel', u'\ufffd\ufffd\ufffd', u'Nik Nik Batman', u'\ufffd\ufffd\ufffd', u'\ufffd\ufffd\ufffd', u'\ufffd\ufffd\ufffd', u'\ufffd\ufffd\ufffd', u'XTexplorer', u'Joseph Heath', u'www.kochico.com', u'Lisa The Queen', u'\u041e\u043b\u0435\u0441\u044f \u0417\u0430\u0439\u0446\u0435\u0432\u0430', u'chimp', u'yuta', u'Adaora', u'Smile Quotes', u'TheNuttyPeeler', u'T. Gallowist', u'SamuraBlue\u5168\u529b\u5fdc\u63f4', u'Captain Heck Project', u'@DavidTylerMcKay', u'Movie HD Wallpapers', u'chef', u'Edemode Somina', u'Tijuana Paola', u'Georgina Lester', u'Keep  America  Great', u'Lianne Leigha', u'James Maguire', u'Heine Krog Iversen', u'Rob Tiffany \U0001f1fa\U0001f1f8', u'Mindy Iannelli', u'Better Front Dev', u'Enye Winnifred Uche', u'C0NV3R54710N', u'ProgrammingWorld', u'Nada', u'camila', u'M-btc', u'MAARTSY', u'nat', u'hjarxwolff', u'Ralph sobern', u'\u26a1FOLLOW HELP VIP\u26a1', u'TMDN', u'camila', u'Shortie 4 Real', u'EL JAVI', u'Follow Help', u'FOLLOW  BACK 5K', u'\U0001f193', u'KDalious', u'Tyl3r Asif', u'Br\xf8dy', u'Tiffany Ong', u'Philippines Paradise', u'Young Mar', u'Python Software', u'David Beazley', u'Raymond Hettinger', u'Patryk Szczyg\u0142o', u'Luca Annibale', u'Boudoir Infatuation', u'TrigonomArtryBot', u'BBC News (World)', u'CBS News', u'BBC Breaking News', u'ABC News', u'CNN Breaking News', u'The New York Times', u'Fox News', u'CNN', u'Portainer.io', u'Docker Status', u'Docker', u'Usetrace', u'Obiandu Victoria', u'Jerry Lambert', u'Annie', u'Ekaterina Lebina', u'William Wood', u'idoser', u'Kendra Fitzgerald', u'Nettajetta Bryant', u'PixelBallet', u'Markus Amadeo', u'Lee Weinkauf', u'Ivy Ladder', u'kamlesh butani', u'Laraplywood', u'Mr-E', u'Gravity Sketch', u'Little Minced Lady', u'Sebastiano', u'Nick Parsons \U0001f680', u'AD Fitness Training', u'TheRealAfricanFoodCo', u'webMASTAH.net', u'realDonaldTrump News', u'White House Archived', u'The White House', u'Barack Obama', u'Bill Clinton', u'President Obama', u'President Trump', u'Hillary Clinton', u'Bernie Sanders', u'Bernie Sanders', u'Donald J. Trump', u'Emily Ratajkowski', u'Matthew Lein', u'Patricia Mejia', u'hardmaru', u'Claudia Gadelha', u'No-IP', u'Forbes Lindesay', u'KernelCare', u'rohit \U0001f414', u'Charles Max Wood', u'Jacob Dalrymple', u'TheNetNinja', u'24X7Fe', u'C# Corner', u'Ionic 2 Book', u'Jack Franklin', u'Yeoman', u'npmbot', u'Bower', u'Zepto.js', u'gulp', u'Backbone.js', u'DigitalOcean', u'Google Developers', u'GitHub', u'ionic', u'AngularJS News', u'JavaScript Daily', u'Angular', u'Redis News Feed', u'MongoDB', u'Node.js', u'CreatorsLounge', u'john', u'catch smile', u'php.net', u'PHPUGPH', u'Techiax', u'XenialXerus', u'David Planella', u'Implied Magazine', u'Scott McCarty', u'OpenShift Operations', u'Red Hat OpenShift', u'Gemoutlook #Bags', u'Mikela Willour', u'NetoMeter', u'\u0645\u0635\u0637\u0641\u064a \u0639\u0644\u064a \u0639\u0637\u0627 \u0627\u0644\u0628\u0631\u064a', u'Justhost Support', u'Hannes Dorfmann', u'Mirek Stanek \U0001f916\U0001f4f1', u'Android', u'Android and Me', u'Android Central', u'Android Community', u'Android Developers', u'Englishman in Malta', u'Desco Europe', u'christian Allarde', u'Listas New Garamond', u'New Garamond Madrid', u'Roy Campos', u'Frases de vida', u'DISCOTECAS MADRID', u'MacinCloud.com', u'Skarpline', u'Regular Expression', u'ManKier', u'Jenkins', u'Trello', u'Slack', u'Pluralsight', u'HollyRilingerFitness', u'Daniela Braga', u'BUNNY MEYER', u'Nick75', u'Jason R', u'Roni Hatsroni', u'Glenda J. Cereno', u'Wicked Tweets!', u'Azure Glamours', u'Lanhawk59', u'DGT Consultants', u'Mr Nightmare', u'Clash of Kings', u'Leland Gregory', u"Papa Steve's Bars", u'Dante Petrilla', u'h\xfcseyin karatekin', u'JJ', u'Trevor Lund', u'Jeff', u'Grindin 4 Diamonds', u'Savota 626 976 374', u'Chicken Biscuits', u'Chesco', u'Social Good Life', u'Random History', u'Dominic Riccitello', u'Terrell D. Lewis', u'Me Mail Guide', u'Sh\xf4ko Madrid', u'Social Good Earth', u'Jim Gentile', u'Plastic Bank', u'FLORIDA BABY', u'ORIG3N Inc', u'Trinity Adam', u'Heroo Mann', u'Stephen C. Rose', u'GOAL Retail', u'Shaun Frankson', u'Sunil Vishwakarma', u'John Michel', u'Jon Armstrong', u'Basil Panayi', u'RTtheBEST', u'Johnny Ray', u'CHARISMA MAGIC', u'1IMPACT', u'Kathryn Ssedoga', u'Quotes to Inspire', u'Carthage Buckley', u'Crafts & Digital Art', u'Steve Keating', u'TRAVEL Esquire \u2708\ufe0f', u'Michael Kaplan', u'Fit Mom Diet\u2122', u'stan stewart', u'Jan van Niekerk', u'Eric', u'David Hall', u'bonno van der putten', u'Lolly Daskal', u'johncamacho', u'Cris Queliste', u'Roel Ca\xf1ares Jr.', u'Nick Heynderickx', u'Bryanjpowell', u'Ry\xe4n Stevens', u'Jenny Northrup', u'DonBo', u'Cheryl Dolan Artist', u'Oneironauts', u'WLSolutions', u'Jack Craft Fair', u'LaShawna.Shawna', u'nonikoagouw', u'Nhean Klamman', u'How To Lucid', u'gunter', u'rose catherine', u'tammycassfitzgerald', u'My Info', u'JackNorthrup', u'\u2764\u2764SUSANA\u2764\u2764', u'Dave Dennis', u'Kylie  Marie Lawson', u'MartinStellar', u'HDTVSupply', u'Jos\xe9 Medina', u'Divya Rajput', u'N. Presley', u'Dave', u'vldesigns', u'Scott McPartland', u'Bored Feelings', u'Christopher Atienza', u'countonme', u'Sarcasticat', u'Dixit Baiju', u'Kevin Green', u'Arleen Boyd', u'Aimee Pilz', u'Tampa Comedians', u'Ensoulment', u'SocialChamps', u'james n.northrup sr', u'troy noh', u'K.J. Heritage', u'Caryl Loper', u'Expat Alien', u'Bouba CISSOKO', u'Inspirationfeed.com', u'NowThis', u'George Moen', u'PhilippineMarble', u'Naeem', u'World Travel Buzz', u'Harald Johnsen', u'Colby Shipwash', u'postalsausages', u'Tyga', u'Dream Leaf', u'Precious Bowtique', u'Ariella Carver', u'Varisce Resources', u'Jon Harris', u'Andy', u"What's On 4 Families", u'Mountain Feathers', u'Julia Hagenhofer', u'emir fontanilla', u'Evelyn Ginossi', u'Zynoz', u'Awesome Biz Feed ', u'GrimmusiK Records', u'Rita Barry', u'Promo 4 U', u'Callum  Monks', u'Follow ideas', u'\ubcf4\ub839\uacbd\ucc30', u'Benny S.', u'S.L.I', u'\uc2e0\uc740\uc12d', u'Majuniah', u'Almaz', u'D2GLS', u'Mingus Menzies-Baird', u'pamnorthrupjennings', u'Bastian Hagenhofer', u'The 3 Guys Rant Show', u'\xa9 Danny Ocean', u'SoFabFun', u'tiohenny', u'autumnanderson', u'Ora', u'Beckyy\u2665 [PB]', u'Its Queen Ann \u2654', u'\u2654 Joey \u2654', u'ISH', u'who are you( \u0a6d\u2022\u0348\u03c9\u2022\u0348)', u'Tosha-lee Mathobela', u'Heri Pratama Siregar', u'Cash', u'RingA_LingA', u'Nagual001', u'\xa5KatreeceStyles\xa5', u'sideshow', u'\u2665D.A', u'Rizky Arivandi', u'laila alomar', u'\u0422\u0438\u043c\u043e\u043d', u'DennyC', u'Ivory Smith', u'\u0639\u0645\u0631', u'taliiii x', u'Ozarks Aquatics', u'The LA Promise Fund', u"What's On 4 NE", u'tdperros', u'Ron Rice', u'Gary Loper', u'GripeO', u'Papers Nob Hill', u'mae wener', u'KB Sogn', u'Jessie McKeon', u'Swap-bot News', u'Billy Guest', u'WristWorkerTOYA\u2764', u'David Duane Wilson', u'Kyle McRae', u'Mixtape Walter White', u'Debby Wilder', u'CA_Honduras', u'Judy Adam', u'Andrew Hendrie', u'Graeme Evans', u'muhamadtache', u'Bets of Bitcoin', u'Michel A. Hegi', u'Andi Joe Garcia', u'APM Marketing Group', u'Tweety Tweets', u'MARK MILLION', u'webAssist.ca', u'Your City Office', u'Mercian Castle', u'Alameda Meditation', u'Yuri Mellison', u'LatoyaFlowers', u'The Curable Recipes', u'Salventrex', u'michelle kimber', u'Joe', u'Jason Haglund', u'Andy H', u'Richard Youn', u'Roy Huff \u265b', u'Shawn Upchurch', u'Viewzu', u'Kims Feed', u'Gary Schirr', u'Stephen Cefalo', u'Kaos of Art', u'katie troisi', u'RichardJGalloway', u'K D George', u'Dan Glover', u'ChubbyFunstaa', u'The Koala', u'Shah A Farhad', u'RICK', u'gert', u'Bobby Lee James', u'~ Trude ~', u'Increase Followers', u'UberAds', u'kenectiv', u'Algernon  Fross', u'MACHAVELLI MEDICI', u'Ekenta', u'connor brostek', u'Carolyn Schulz', u'James Day', u'\uff4c\uff45\uff58\uff49', u'Jeep Monkey Designs', u'Anthony Casas, PhD', u'Antonio Kingz', u'Phil MacCracken', u'games online', u'Aim\xe9e Wheaton', u'#ArtPromoter', u'Jake Beckman', u'Danene Hanes', u'Pattie Tierney', u'Emme Boutique', u'Deborah Lee', u'Dr Ramon Macias D MD', u'Bill D', u'David Sandum', u'Heidi Bjork', u'Jeffrey Weber', u'Phoenix Consulting', u'\u2020 \u200f', u'Body Slim Experts', u'Paul Beaulieu', u'Andrew Kelsall', u'yousif', u'Beach N Creations', u'Faces Out', u'Coach John Dundon', u'Racing News', u'GET PAID 2 TWEET', u'no expostfacto', u'PassionFury\u2122', u'sonia daniel', u'jhonny kimo', u'EatClean', u'Drinking & Smoking', u'Shane Walters', u' Online Marketplace', u'andry John Hayes', u'Karine Heyden', u'Health and Fitness', u'Judy Feldhausen', u'DesignSoak\u2122', u'Adult #SprayVitamins', u'Betsy Skibinski', u'Join the Revolution!', u'PONDEKAU\xae', u'Andrea Trovato', u'Ronald Watson', u'Jennifer Petersen', u'DebbyBruck', u'Carol Dunlop', u'Muchomula', u'Richard Field', u'Peter Pan Wine Guy', u'gomaam', u'Otis Conner', u'Walters Web Design', u'Kara Klotz', u'AdnagaMagandA', u'elfri faisal', u'Royal W Johnson', u'Tebalo Lacoste', u'Jaime Laurita', u'Tom C', u'Bruce Attridge', u'RIP', u'James Cruz', u'\u7a32\u57a3\u3086\u3044', u'Avalanna ', u'Team Wicked West', u'Mike Elliott', u'maribel', u'Jessica\u2693Lynn', u'Shak Getem', u'JulieFlorence', u'shaquille miller', u'Luis Ojeda Roa', u'Sue Knapstein', u'\u0b9c\u06e9\u10e6Edward Shim\u10e6\u06e9\u0b9c#\u611b', u"Julius M'jim", u'Han', u'Paolo Di Wankio', u'Matthew Pagan', u'Joey moesley', u'Christmas countdown ', u'M Ub4y Lewandowski', u'\u0112\u0142izabeth', u'.', u'MCC Recording Dave\U0001f60e', u'\u2764TashaEvaSultanova\u2764', u'cadence robinson', u'Finally Free', u'BONITO MS OFICIAL', u'Mimi', u'lachlan brown', u'Michael Wm. Gent', u'Business Advice', u'MJ Gottlieb', u'ENAHS Web Design', u'DARTH FENER', u'188888coach.com', u'\U0001f308M\u03b9\u0455\u0455 Andre\u0442', u'Follow @MissAndret', u'Michele Rempel', u"Caoimhe O'Broin", u"Dove CD's", u'Top Ten Percent', u'omar abdelhalim', u'KP Kelly', u'SM Strategies', u'Aoife Kelly', u'Elena Angelova', u'Rory Mannall', u'Finlay Smith', u'Tracy Baker', u'Sean Malarkey', u'Christian Fea', u'Chit Chat Chicks', u'Brenner Brewing Co.', u'Mike Brenner', u'\u303d\ufe0fari Tha Don.\u2122', u'yahoo abstract', u'George Getson', u'O.G.Mel', u'Jordan Haddock', u' \u266c\u266c\u266c & doobies', u'arman.', u'George Holmes', u'tisha:-)', u'Bertie\u2661', u'\u0646\u0627\u062f\u064a \u0627\u0644\u0628\u0648\u063a\u0627\u0632 (CCDT)', u'TeamToFolllow\u2122', u'Pans-Prints', u'ShoutOut Crew \u272a', u'Cigar Evaluations', u'Klik Blic Sme\u0161ak', u'Gary L. Ammerman', u'Ebrahim', u'David W Fleming', u'BillyBabu', u'Hailey Fox', u'Christina Hendricks', u'Young DiMaggio', u'Computer Guy', u'RED BALLOON', u'Susan Taylor', u'CAQ', u'SocialInStatenIsland', u'Mike G', u'Malosi Corp', u'John Tyler', u'Eddie', u'David Terranova', u'FUNPICS', u'Ax', u'Aree M.', u'sian.', u'haydnnnnn', u'\u2716CHRIS\u2716', u'#VnAmuzik Lily F.', u'Robztrapkween', u'Elena simpson', u'Dana', u"-Enitan\u2122 '69.", u"Adele's Boyfriend \u266b", u'Rofl Studios', u"Shannon O'Halloran", u'Maura', u'caris gray', u'Team Follow Back', u'Erotica Diva', u'Sky Cards', u'T\u042fAPGZUS', u'$in\u03b1tr\u03b1 .', u'JFiallo', u'BIG KESE', u'NATION S.T.C RECORDS', u'Jim McKinnon', u'Saved', u'Ni-TweetBlast.com', u'n0n33d\u2122', u'Joy', u'\u2661 HarrysWeeWee \u2661', u'Sakthi\u2122', u'Brainskenya', u'Micayla Mitchell', u'Karlina', u'Be Prepared to Work!', u'Bettie Kanas', u'Princess \u2654', u'Pablo', u'B\u2744\ufe0f', u'SM\u2728', u'John Brookfield', u'wendy titheradge', u'Gloria Lenge', u'Anchorage Events', u'Freaky Beat', u'Raidernation#1', u'Cuenta', u'Adicto al Cine!', u'Triton_courage', u'liv', u"Gian Carlo D'Uva", u'PARYTAIM M\xe9xico', u'\u20b2\u044f\u0251\u0274\u03ee', u'Londa Manuell', u'alison edwards', u'Araceli Van Dyk', u'Yadira Floor', u'Sitios Argentina !', u'X', u'Danni Southwick \xa9', u'\u2665ELEONORA ISABELLA\u2665', u'\u24de\u24e2\xa9@\xae', u'LUDY_ANGELICA', u'Gigi', u'Isabelle', u'CNews_Center', u'nancy\u2665\u30c4', u'\u266c\u2665\u2606\u2606ROBOTICA\u2606\u2606\u2665\u2605\u2606', u'\u2593\u2592\u2591P\u0414T\u042f!\u20a1!\u0414 Km\u042f \xae\u2591\u2592\u2593', u'#chukisitos carlos', u'MutualFollow', u'Shawty', u'Jason', u'frank olvera', u'Endry', u'Keith Major', u'Sharayah\U0001f61c\U0001f618', u'Magn\xed Kathar\xf3s', u'LABELMEBROKE', u'Smili', u'\u0637\u0641\u0644\u0629', u'Alex Leal', u'Victoria Alton', u'Rob Z', u'Annie Burnside', u'DiamondHeartNetwork', u'Inner Light', u'K. Long', u'Priscilla Wax', u'Life As A Soldier', u'Rania Taha', u'jav', u'Lyne Mor', u'Growing Deep', u'2015 Promo Kingz', u'Amit Dattani', u'Ditte Eriksen', u'Barnet & Enfield', u'Richie Jones', u'Java_King', u'HoWdareUDARE.Dare', u'HipHopTripleX', u'Eagle News', u'Priyamvada Godse', u'Hallie Vogelsang', u'Augustine Neher', u'Expatious', u'Tezcat', u'Wes Lagunas', u'Deth Veruch', u'Shayne Oshiro', u'Delaine Cavanagh', u'Nakita Talavera', u'Clementine Champlin', u'Javier Western', u'mobarokhaq', u'Bill Carson', u'Brother Amartey', u'Etienne Arsenault', u'PacaGames', u'HomeQuestCanada', u'\u0950Isabel\u0950', u'Jinny Elliot', u'Boertjie', u'Charles A. Tijou', u'Marshmallow Booty', u'Karynne Summars', u'Dr. Happiness', u'John Kline', u'Vicky', u'Angela Yon', u'Francelia Belton', u'bevjoneswriting', u'Jason Alan Wilkinson', u'Teresa Cypher', u'JamesFarmer12', u'Kelsorian\u2122', u'Thomas Keister', u'Christine Smith', u'Carol Heppner', u'Angloberry.com', u'Misha Almira', u'Jenny Kushen Sosniak', u'\u2652Tina Ann Graves\u2652', u'drawnbydeni', u'DiCho', u'Richard Collingridge', u'KiniArt', u'Melody Lea Lamb', u'Jill Haglund', u'Debbie', u'Shaeri Richards', u'Israeli Disarmament', u'U.S. Citizen Abroad', u'Beth', u'Meghan Peterson Fenn', u'Alexander Gotay', u'Kelkulus Says Stuff', u'GK', u'Brainwave Architect\u2122', u'Daniel K Foisy', u'Thomas Moon', u'Susan Cosmos', u'ChadRitter', u'Didi Remez', u'Luce Fleury Levi', u'Nicolas Liu', u'Girl Avenger', u'David Bennett', u'Masters of', u'Zeteticus', u'Joel Wiessner', u'PositiveRippleEffect', u'Daniel', u'Goforth Williamson', u'Lauren Frieband', u'RuralHelp', u'yeaokaaayy :*', u'Rhymes with Friends', u'Miss M', u'Joshua Tree', u'Y u u i i \u2640', u'Tara Vanhonacker', u'Sarah Churchill', u'Laurie Hosken, PHR \U0001f4ce', u'james heranda', u'StudyAbroadAlumIntl', u'A_Ronquillo', u'Mahendra Yadav SMM', u"Carey Rose O'Connell", u'Adventures', u'Cleta Duby', u'Dante', u'MY.VA.WORLD', u'Expat Archive Centre', u'Wendy Gamble', u'Hashtag Militia', u'OCEAN EDGE DESIGNS', u'Xavier', u'Azimo', u'Karen Anne Coccioli', u'CarnivalChaser.com', u'Photo Club USA', u'Mingkoy', u'Tanya Madoff', u'MS. BAD ASS!!', u'Life In Andalucia', u'gavi montello', u'Ashley Beaty', u'Wes Beaty', u'South African Mag', u'Donna Amis Davis', u'Lindsay']


%%writefile TwitterPost.py
# Assume you are working with a JPEG
from PIL import Image
from StringIO import StringIO

def postntext(image, text):
    photo = Image.open(image)
    basewidth = 320
    wpercent = (basewidth / float(photo.size[0]))
    height = int((float(photo.size[1]) * float(wpercent)))
    photo = photo.resize((basewidth, height), Image.ANTIALIAS)

    image_io = StringIO.StringIO()
    photo.save(image_io, format='JPEG')
    # If you do not seek(0), the image will be at the end of the file and
    # unable to be read
    image_io.seek(0)

    response = twitter.upload_media(media=image_io)
    twitter.update_status(status=text, media_ids=[response['media_id']])
    
    
postntext(image, text)    

import random
import wx
import wx.lib.scrolledpanel as scrolled
 
########################################################################
class MyForm(wx.Frame):
 
    #----------------------------------------------------------------------
    def __init__(self):
        wx.Frame.__init__(self, None, wx.ID_ANY, "Font Tutorial")
 
        # Add a panel so it looks the correct on all platforms
        panel = scrolled.ScrolledPanel(self)
        panel.SetAutoLayout(1)
        panel.SetupScrolling()
 
        fontSizer = wx.BoxSizer(wx.VERTICAL)
        families = {"FONTFAMILY_DECORATIVE":wx.FONTFAMILY_DECORATIVE, # A decorative font
                    "FONTFAMILY_DEFAULT":wx.FONTFAMILY_DEFAULT,
                    "FONTFAMILY_MODERN":wx.FONTFAMILY_MODERN,     # Usually a fixed pitch font
                    "FONTFAMILY_ROMAN":wx.FONTFAMILY_ROMAN,      # A formal, serif font
                    "FONTFAMILY_SCRIPT":wx.FONTFAMILY_SCRIPT,     # A handwriting font
                    "FONTFAMILY_SWISS":wx.FONTFAMILY_SWISS,      # A sans-serif font
                    "FONTFAMILY_TELETYPE":wx.FONTFAMILY_TELETYPE    # A teletype font
                    }
        weights = {"FONTWEIGHT_BOLD":wx.FONTWEIGHT_BOLD,
                   "FONTWEIGHT_LIGHT":wx.FONTWEIGHT_LIGHT,
                   "FONTWEIGHT_NORMAL":wx.FONTWEIGHT_NORMAL
                   }
 
        styles = {"FONTSTYLE_ITALIC":wx.FONTSTYLE_ITALIC,
                  "FONTSTYLE_NORMAL":wx.FONTSTYLE_NORMAL,
                  "FONTSTYLE_SLANT":wx.FONTSTYLE_SLANT
                  }
        sizes = [8, 10, 12, 14]
        for family in families.keys():
            for weight in weights.keys():
                for style in styles.keys():
                    label = "%s    %s    %s" % (family, weight, style)
                    size = random.choice(sizes)
                    font = wx.Font(size, families[family], styles[style], 
                                   weights[weight])
                    txt = wx.StaticText(panel, label=label)
                    txt.SetFont(font)
                    fontSizer.Add(txt, 0, wx.ALL, 5)
        panel.SetSizer(fontSizer)
        sizer = wx.BoxSizer(wx.HORIZONTAL)
        sizer.Add(panel, 1, wx.EXPAND)
        self.SetSizer(sizer)
 
#----------------------------------------------------------------------
# Run the program
if __name__ == "__main__":
    app = wx.App(False)
    frame = MyForm().Show()
    app.MainLoop()

import sys
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import Key
CONSUMER_KEY = Key.twiter()[0]
CONSUMER_SECRET = Key.twiter()[1]
ACCESS_KEY = Key.twiter()[2]
ACCESS_SECRET = Key.twiter()[3]
t=0
sTime= time.time()
twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY,ACCESS_SECRET)
tweetfile = 'hurricane_14.txt'
results = twitter.cursor(twitter.search, q='hurricane, Irma')
filein = open(tweetfile, 'w')
for result in results:
    result=str(result)
    filein.write(result)
    print(result)
    if time.time() - sTime > 4:
        filein.close()
        sys.exit()
         

import sqlite3
conn = sqlite3.connect('data/hurricane.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE hurr 
USING FTS3(text, keywords);
""")
conn.commit()
conn.close()

import re
import textwrap
import time
import sqlite3
import sys
import base64
import time
#conn = sqlite3.connect('hurricane.db')
#c = conn.cursor()
# Create table
#c.execute('''CREATE TABLE hurricane
#             (hurricane text, keywords text)''')
count=0
lines = 400
with open("hurricane_14.txt") as f:
    text = f.read()
    words = " ".join(re.findall("[a-zA-Z]+", text))
    words = words.replace(' u ', ' ');words = words.replace('u ', '');words = words.replace(' U ', ' ')
    chars_per_line = 140
    for i in range(0, len(words), chars_per_line):
        file= ("[(",words[i:i+chars_per_line],"),]")
        #data= ("[('"+words[i:i+chars_per_line]+"'),]")
        file = str(file)
        #file = 'base64 encoding allows code to be stored and retieved in the same format it was posted'
        keywords = 'sept, hurricaneirma, florida'
        conn = sqlite3.connect('data/hurricane.db')
        c = conn.cursor()
        time.sleep(1)
        #encodedlistvalue=base64.b64encode(file[2:-2])
        #c.execute("INSERT INTO hurricane VALUES (?,?)", (encodedlistvalue, b)) 
        c.execute("INSERT INTO hurr VALUES (?,?)", (file, keywords)) 
        conn.commit()
        conn.close()        
        
        
        time.sleep(1)
        print file[2:-2]
        count=count+1
        print count
        if count>lines:
            sys.exit()
#commits and closes database if there are less then 400 lines of text
conn.commit()
conn.close()                 



# t = ('Html',)
#c.execute('SELECT * FROM python WHERE keyword=?', t)
import sqlite3
import sys
conn = sqlite3.connect('data/hurricane.db')
c = conn.cursor()# Never 
count=0
req=4
search = 'hurricane'
#for row in c.execute('SELECT * FROM hurr WHERE text MATCH ?',search):
for row in c.execute('SELECT * FROM hurr WHERE text MATCH "False source"'):
    
    #SELECT * FROM docs WHERE docs MATCH 'sqlite AND database';    
    
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

import sqlite3
import sys
conn = sqlite3.connect('data/hurricane.db')
c = conn.cursor()# Never 
count=0
req=14
for row in c.execute('SELECT * FROM hurr'):
    count=count+1
    print(row),"\n-----\n"
    if count > req:
        conn.close()
        sys.exit()
        

http://sebsauvage.net/python/snyppets/

import sqlite3
conn = sqlite3.connect('ipydb.db')

import sqlite3
conn = sqlite3.connect('ipydb.db')
c = conn.cursor()
# Create table
c.execute('''CREATE TABLE python
             (code text, keyword text)''')
# Insert a row of data
c.execute("INSERT INTO python VALUES ('Python','Storage for snippets and more')")
# Save (commit) the changes
conn.commit()
# We can also close the connection if we are done with it.
# Just be sure any changes have been committed or they will be lost.
conn.close()

import sqlite3
conn = sqlite3.connect('ipydb.db')
c = conn.cursor()

c.execute("INSERT INTO python VALUES ('close the connection if we are done','connection')")

# Save (commit) the changes
conn.commit()

#close the connection 
conn.close()



!sqlite3 ipydb.db "pragma integrity_check;"

from time import sleep
fileO = open("/home/jack/.bash_history")
lists = fileO.readlines()
for list in lists:
    
    #list = list.encode("ascii", "ignore")
    list = list.decode('utf-8').strip() 
    sleep(1)
    print list

import sqlite3
conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()

# Larger example that inserts many records at a time
data = [('pragma integrity_check will check that your database is valid', 'check, verify, inspect'),
             ('multiple items may be entered at once', 'newkey'),
             ('base64 encoding allows code to be stored and retieved in the same format it was posted', '4Webstuff, gwebsite, gghtml'),]

c.executemany("INSERT INTO python VALUES (?,?)", data)
conn.commit()
conn.close()


import sqlite3
import base64
conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()
# Larger example that inserts many records at a time

a = encodedlistvalue=base64.b64encode(
    """# Larger example that inserts many records at a time
import sqlite3
import base64
conn = sqlite3.connect('/home/jack/Desktop/testPy.db')
c = conn.cursor()
# Larger example that inserts many records at a time

a = encodedlistvalue=base64.b64encode(
    xxccccc# Larger example that inserts many records at a time)
#c.execute("INSERT INTO python VALUES (?, ?)" a, b)
#c.execute("INSERT INTO python VALUES (%s, %s,)", (a, b))
c.execute("INSERT INTO python VALUES (?,?)", (a,b))

conn.commit()
conn.close()    
    """)

b = 'example'

c.execute("INSERT INTO python VALUES (?,?)", (a,b))

conn.commit()
conn.close()


import sqlite3
import base64

#Create a database to use base64: 
conn = sqlite3.connect('ipydb64.db')

c = conn.cursor()



file = 'base64 encoding allows code to be stored and retieved in the same format it was posted'
b = '4Webstuff, gwebsite, gghtml'
encodedlistvalue=base64.b64encode(file)

c.execute("INSERT INTO python VALUES (?,?)", (encodedlistvalue, b))

conn.commit()
conn.close()



import sqlite3
conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()# Never 
for row in c.execute('SELECT * FROM python ORDER BY code'):
        print(row),"\n-----\n"

import sqlite3
conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()# Never 
for row in c.execute('SELECT * FROM python ORDER BY code'):
        #print(row),"\n-----\n","\n"
        
        data= row[0],
        print data
        

import sqlite3
conn = sqlite3.connect('ipydb64.db')

c = conn.cursor()# Never 
for row in c.execute('SELECT * FROM python ORDER BY code'):
                
        s2 = row[0].encode('ascii')
        encodedlistvalue=base64.b64decode(s2)
        print encodedlistvalue, '\n', 'Keywords:', row[1], '\n -----------------------------\n'

        

conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()# Never 

t = ('example',)
for row in c.execute('SELECT * FROM python WHERE keyword=?', t):
                
        s2 = row[0].encode('ascii')
        encodedlistvalue=base64.b64decode(s2)
        print encodedlistvalue, '\n', 'Keywords:', row[1], '\n -----------------------------\n'


conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()# Never 

t = ('example',)
for row in c.execute('SELECT code FROM python WHERE keyword=?', t):

    #subjectList = [row[0] for row in c.fetchall()]        
    code = row[0].encode('ascii')
    
    #for row in data :
    encodedlistvalue=base64.b64decode(code)
    print encodedlistvalue, '\n', 'Keywords:', row[1], '\n -----------------------------\n'


conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()# Never 

t = ('example',)
c.execute('SELECT * FROM python WHERE keyword=?', t)

subjectList = [row[0] for row in c.fetchall()]        
#print row[0]
#for row in data :
encodedlistvalue=base64.b64decode(row[0])
print encodedlistvalue, '\n', 'Keywords:', row[1], '\n -----------------------------\n'


import sqlite3
import base64
conn = sqlite3.connect('ipydb64.db')
c = conn.cursor()# Never 

k = ('4Webstuff',)
c.execute('SELECT * FROM python WHERE keyword=?', k)

subjectList = [row[0] for row in c.fetchall()]        
#print row[0]
#for row in data :
encodedlistvalue=base64.b64decode(row[0])
print encodedlistvalue, '\n', 'Keywords:', row[1], '\n -----------------------------\n'


import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/testPy.db')
c = conn.cursor()# Never 
#for row in c.execute('SELECT code FROM python ORDER BY keyword'):
s = ('committed',)
c.execute('SELECT code FROM python WHERE keyword=?', s)
        
          
print(c.fetchone())


import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/testPy.db')
c = conn.cursor()# Never do this -- insecure!
#    symbol = 'RHAT'
#    c.execute("SELECT * FROM python WHERE symbol = '%s'" % symbol)

# Do this instead
t = ('Html',)
c.execute('SELECT * FROM python WHERE keyword=?', t)
print(c.fetchone())


import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/testPy.db')
c = conn.cursor()# Never 
for row in c.execute('SELECT * FROM python ORDER BY code'):
        #print(row),"\n-----\n","\n"
          
        data = c.fetchall()
        print data

import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/testPy.db')
c = conn.cursor()# Never 
for row in c.execute('SELECT * FROM python ORDER BY code'):
        #print(row),"\n-----\n","\n"
        
        print row[0],"\n",row[1],"\n-----\n",

import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/testPy.db')
c = conn.cursor()# Never do this -- insecure!

t = ('Webstuff',)
c.execute('SELECT * FROM python ORDER BY keyword')
print(c.fetchall())
conn.close()


import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/main.db')

c = conn.cursor()

# DROP TABLE IF EXISTS
c.execute("DROP TABLE IF EXISTS Products")

import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/main.db')
c = conn.cursor()
# Create table
c.execute("""CREATE TABLE Products (
             contact_id integer PRIMARY KEY,
             CatID text NOT NULL,
             description text NOT NULL,
             keywords text NOT NULL);
          """)
conn.commit()
conn.close()

import re
import textwrap
import sqlite3
conn = sqlite3.connect('data/fts3hurricane.db')
c = conn.cursor()
# Create table
c.execute('''CREATE TABLE hurricane
             (hurricane text)''')
# Insert a row of data
#c.execute("INSERT INTO hurricane VALUES ('hurricane','first test line')")

# Save (commit) the changes
conn.commit()

# We can also close the connection if we are done with it.
# Just be sure any changes have been committed or they will be lost.


with open("hurricane_14.txt") as f:
    text = f.read()
    #This was added to get ride od the unicode u from showing up
    words = text.replace(' u ', ' ');words = words.replace('u ', '');words = words.replace(' U ', ' ')
    #This clears out the non-Alpha-numeric characters
    badtext = ''.join(c for c in map(chr, range(256)) if not c.isalnum())
   
    # limit the aount of characters perline displayed
    chars_per_line = 180
    for i in range(0, len(words), chars_per_line):
        
        #data= "hurricane_14.txt,",words[i:i+chars_per_line],","
        word = words.translate(None, badtext)
        data = [("hurricane_14.txt","),(",word[i:i+chars_per_line]),],
        data = str(data)
        words = data.replace("', '),(', '", '),(')
        #data = data[1:-2]
        conn = sqlite3.connect('data/fts3hurricane.db')
        c = conn.cursor()
        c.execute("INSERT INTO hurricane VALUES (?)", words)
        conn.commit()
        conn.close()        

import sqlite3
def insert_product(product):
    with sqlite3.connect("fullsearch.db") as db:
        cursor = db.cursor()
        sql = "insert into Products (CatID,description,keywords) values (?, ?, ?)"
        cursor.execute(sql, product)
        db.commit()

if __name__ == "__main__":
    
    ID= int(input("enter the CatID of the product:>> "))
    Des = raw_input("Enter description: >>")
    Keywords = raw_input("Enter keywords: >>")
    product = (ID, Des, Keywords)
    insert_product(product)
    
    
    

import sqlite3
def insert_product(product):
    with sqlite3.connect("/home/jack/Desktop/main.db") as db:
        cursor = db.cursor()
        sql = "insert into Products (CatID,description,keywords) values (?, ?, ?)"
        cursor.execute(sql, product)
        db.commit()

if __name__ == "__main__":
    ID= input("enter the CatID of the product:>> "
    Des = raw_input("Enter description: >>")
    Keywords = raw_input("Enter keywords: >>")
    product = (ID,Des,Keywords)
    insert_product(product)

import sqlite3
import Tkinter as tk, tkSimpleDialog

class MyDialog(tkSimpleDialog.Dialog):
    def body(self, master):
        self.geometry("800x600")
        tk.Label(master, text="Enter your search string text:").grid(row=0)

        self.e1 = tk.Entry(master)
        self.e1.grid(row=0, column=1)
        return self.e1 # initial focus

    def apply(self):
        first = self.e1.get()
        self.result = first

def insert_product(product):
    with sqlite3.connect("/home/jack/Desktop/main.db") as db:
        cursor = db.cursor()
        sql = "insert into Products (CatID,description,keywords) values (?, ?, ?)"
        cursor.execute(sql, product)
        db.commit()

if __name__ == "__main__":
        ID= int(input("enter the CatID of the product:>> "))
        #Des = input("Enter description: >>")
        root = tk.Tk()
        root.withdraw()
        test = MyDialog(root, "Paste Code Here")
        Keywords = int(input("Enter keywords: >>"))
        insert = test.result
        product = (ID,insert,Keywords)
        insert_product(product)
    
       
    
    
    
    

import sqlite3
conn = sqlite3.connect("/home/jack/Desktop/main.db", isolation_level=None ,timeout=30000) 
print("Opened database successfully")
conn.close()


import sqlite3
conn = sqlite3.connect('/home/jack/Desktop/main.db')
c = conn.cursor()# Never do this -- insecure!
#    symbol = 'RHAT'
#    c.execute("SELECT * FROM python WHERE symbol = '%s'" % symbol)

# Do this instead
t = ('252525',)
c.execute('SELECT * FROM Products WHERE CatID=?', t)
print(c.fetchone())


from tkinter import *
import Tkinter as tk, tkSimpleDialog

class MyDialog(tkSimpleDialog.Dialog):
    def body(self, master):
        self.geometry("800x600")
        tk.Label(master, text="Enter your search string text:").grid(row=0)

        self.e1 = tk.Entry(master)
        self.e1.grid(row=0, column=1)
        return self.e1 # initial focus

    def apply(self):
        first = self.e1.get()
        self.result = first


        root = tk.Tk()
        root.withdraw()
        test = MyDialog(root, "testing")
    def show_entry_fields():
        print("First Name: %s\n" % (e2.get()))

        master = Tk()
        Label(master, text="First Name").grid(row=0)
        e2 = Entry(master)
        e2.grid(row=0, column=1)
        Button(master, text='Quit', command=master.quit).grid(row=3, column=0, sticky=W, pady=4)
        Button(master, text='Show', command=show_entry_fields).grid(row=3, column=1, sticky=W, pady=4)

#mainloop( )


        
        
        
        
        mainloop( )


print test.result

from tkinter import *
import Tkinter as tk, tkSimpleDialog

def show_entry_fields():
   print("First Name: %s\nLast Name: %s" % (e1.get(), e2.get()))

master = Tk()
Label(master, text="First Name").grid(row=0)
Label(master, text="Last Name").grid(row=1)

e1 = Entry(master)
e2 = Entry(master)

e1.grid(row=0, column=1)
e2.grid(row=1, column=1)

Button(master, text='Quit', command=master.quit).grid(row=3, column=0, sticky=W, pady=4)
Button(master, text='Show', command=show_entry_fields).grid(row=3, column=1, sticky=W, pady=4)

#mainloop( )






class MyDialog(tkSimpleDialog.Dialog):
    def body(self, master):
        self.geometry("800x600")
        tk.Label(master, text="Enter your search string text:").grid(row=0)

        self.e1 = tk.Entry(master)
        self.e1.grid(row=0, column=1)
        return self.e1 # initial focus

    def apply(self):
        first = self.e1.get()
        self.result = first


        root = tk.Tk()
        root.withdraw()
        test = MyDialog(root, "testing")
mainloop( )


print test.result

import sqlite3
def insert_product(product):
    with sqlite3.connect("/home/jack/Desktop/main.db") as db:
        cursor = db.cursor()
        sql = "insert into Products (CatID,description,keywords) values (?, ?, ?)"
        cursor.execute(sql, product)
        db.commit()

if __name__ == "__main__":
    ID= int(input("enter the CatID of the product:>> "))
    Des = input("Enter description: >>")
    Keywords = int(input("Enter keywords: >>"))
    product = (ID,Des,Keywords)
    insert_product(product)
    
    
    
    
    
    
    

import Tkinter as tk, tkSimpleDialog

class MyDialog(tkSimpleDialog.Dialog):
    def body(self, master):
        self.geometry("800x600")
        tk.Label(master, text="Enter your search string text:").grid(row=0)

        self.e1 = tk.Entry(master)
        self.e1.grid(row=0, column=1)
        return self.e1 # initial focus

    def apply(self):
        first = self.e1.get()
        self.result = first


root = tk.Tk()
root.withdraw()
test = MyDialog(root, "testing")
print test.result

/etc/mysql/mysql.conf.d/mysqld.cnf

import MySQLdb
help(MySQLdb)

#Works
import MySQLdb as db
con = db.connect("localhost","root","ThinkPadT$#")
cur = con.cursor()
cur.execute('CREATE DATABASE testdb2;')

import MySQLdb as db
con = db.connect("localhost","root","ThinkPadT$#", "testdb2")
with con:
    cur = con.cursor()
    cur.execute("DROP TABLE IF EXISTS Writers")
    cur.execute("CREATE TABLE Writers(Id INT PRIMARY KEY AUTO_INCREMENT, \
                 Name VARCHAR(500))")
    cur.execute("INSERT INTO Writers(Name) VALUES('Jack Northrup')")
    #cur.execute("INSERT INTO Writers(Name) VALUES('Henry Wadjob')")
    #cur.execute("INSERT INTO Writers(Name) VALUES('Klepto Manic')")
    #cur.execute("INSERT INTO Writers(Name) VALUES('Emila gray')")
    #cur.execute("INSERT INTO Writers(Name) VALUES('Mike Stupoff')")

# works 
import MySQLdb as db
import json 
import base64
    
con = db.connect("localhost","root","ThinkPadT$#", "testdb2")
file = """[mylist.jsn
while 1:
    line = file.readline()
    if not line:
        break
    pass # do something 
#listname='mylist.json'
#stringlistvalue=json.dumps(listname)
"""
encodedlistvalue=base64.b64encode(file)
with con:
    cur = con.cursor()
    #cur.execute("DROP TABLE IF EXISTS Code")
    #cur.execute("CREATE TABLE Code(Id INT PRIMARY KEY AUTO_INCREMENT, \
    #              Name VARCHAR(500))")
    #cur.execute("INSERT INTO Code(Name) VALUES('%s')" % (encodedlistvalue))
    cur.execute("INSERT INTO Writers(Name) VALUES('%s')" % (encodedlistvalue))

# WORKS
#!/usr/bin/python
# import the MySQLdb and sys modules
import MySQLdb
import sys
import base64
# open a database connection
# be sure to change the host IP address, username, password and database name to match your own

con = db.connect("localhost","root","ThinkPadT$#", "testdb2")

# prepare a cursor object using cursor() method
#cursor = connection.cursor ()
cur = con.cursor()

# execute the SQL query using execute() method.
cur.execute ("select Id, Name from Writers")

# fetch all of the rows from the query
data = cur.fetchall ()
# print the rows
for row in data :
    encodedlistvalue=base64.b64decode(row[1])
    print row[0], encodedlistvalue

# close the cursor object
cur.close ()

# close the connection
con.close ()

# exit the program
sys.exit()

Create a MySQL Database with Python

# Works
import MySQLdb as db
con = db.connect("localhost","root","ThinkPadT$#")
cur = con.cursor()
cur.execute('CREATE DATABASE searchdb01;')

# works 
import MySQLdb as db
import json 
import base64
    
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")
file = """[mylist.jsn
while 1:
    line = file.readline()
    if not line:
        break
    pass # do something 
#listname='mylist.json'
#stringlistvalue=json.dumps(listname)
"""
keywords = """
database, code, python, lesson 1, Oh234
"""
encodedlistvalue=base64.b64encode(file)
with con:
    cur = con.cursor()
    cur.execute("CREATE TABLE Code(Id INT PRIMARY KEY AUTO_INCREMENT, \
                  Name VARCHAR(2500), Keywords VARCHAR(500))")
    #cur.execute("INSERT INTO Code(Name) VALUES('%s')" % (encodedlistvalue))
    cur.execute("INSERT INTO Code(Name, Keywords) VALUES('%s','%s')" % (encodedlistvalue, keywords))

#Works
import MySQLdb as db
con = db.connect("localhost","root","ThinkPadT$#")
cur = con.cursor()
cur.execute('CREATE DATABASE searchdb01;')

# works 
import MySQLdb as db
import json 
import base64
    
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")
file = """
[mylist.jsn

while 1:
    line = file.readline()
    if not line:
        break
    pass # do something 



#listname='mylist.json'
#stringlistvalue=json.dumps(listname)

"""
keywords = """
database, code, python, lesson 1, Oh234
"""

encodedlistvalue=base64.b64encode(file)
with con:
    cur = con.cursor()
    cur.execute("DROP TABLE IF EXISTS Code")
    cur.execute("CREATE TABLE Code(Id INT PRIMARY KEY AUTO_INCREMENT, \
                  Name VARCHAR(2500), Keywords VARCHAR(500))")
    #cur.execute("INSERT INTO Code(Name) VALUES('%s')" % (encodedlistvalue))
    cur.execute("INSERT INTO Code(Name, Keywords) VALUES('%s','%s')" % (encodedlistvalue, keywords))

# works 
import MySQLdb as db
import json 
import base64
    
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")
file = """
URL transformed to HTTPS due to an HSTS policy
--2017-07-09 13:01:34--  https://asd.gsfc.nasa.gov/archive/hubble/Hubble_20th.jpg
Resolving asd.gsfc.nasa.gov (asd.gsfc.nasa.gov)... 129.164.179.20, 2001:4d0:2310:150::20
Connecting to asd.gsfc.nasa.gov (asd.gsfc.nasa.gov)|129.164.179.20|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 49600 (48K) [image/jpeg]
Saving to: ‘image.jpg’

image.jpg           100%[===================>]  48.44K   153KB/s    in 0.3s    

2017-07-09 13:01:36 (153 KB/s) - ‘image.jpg’ saved [49600/49600]

Error: near line 1: table images already exists

"""
keywords = """
Resolving, asd.gsfc, nasa.gov, rt5eg
"""

encodedlistvalue=base64.b64encode(file)
with con:
    cur = con.cursor()
    #cur.execute("DROP TABLE IF EXISTS Code")
    #cur.execute("CREATE TABLE Code(Id INT PRIMARY KEY AUTO_INCREMENT, \
    #              Name VARCHAR(500), Keywords VARCHAR(500))")
    #cur.execute("INSERT INTO Code(Name) VALUES('%s')" % (encodedlistvalue))
    cur.execute("INSERT INTO Code(Name, Keywords) VALUES('%s','%s')" % (encodedlistvalue, keywords))

#!/usr/bin/python
# import the MySQLdb and sys modules
import MySQLdb
import sys
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")

# prepare a cursor object using cursor() method
#cursor = connection.cursor ()
cur = con.cursor()

# execute the SQL query using execute() method.
cur.execute ("select Id, Name, Keywords from Code")

# fetch all of the rows from the query
data = cur.fetchall ()

# print the rows
for row in data :
    print row[0], row[1], "\n", "Keywords: ", row[2], "\n -----------------------------"

# close the cursor object
cur.close ()

# close the connection
con.close ()

# exit the program
sys.exit()

#!/usr/bin/python
import MySQLdb
import sys
import base64
con = db.connect("localhost","root"," ", "searchdb01")
cur = con.cursor()
# execute the SQL query using execute() method.
cur.execute ("select Id, Name, Keywords from Code")

data = cur.fetchall ()
# print the rows
for row in data :
    encodedlistvalue=base64.b64decode(row[1])
    print row[0], encodedlistvalue, '\n', 'Keywords:', row[2],\
    '\n -----------------------------\n'
# close the cursor object
cur.close ()
# close the connection
con.close ()
# exit the program
sys.exit()

import MySQLdb
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")

param = "lesson"
c = con.cursor()
c.execute("SELECT * FROM Code WHERE Keywords LIKE %s LIMIT 1", ("%" + param + "%",))

data = c.fetchall()
for row in data :
    encodedlistvalue=base64.b64decode(row[1])
    print row[0], encodedlistvalue, '\n', 'Keywords:', row[2],\
    '\n -----------------------------\n'
c.close()

import MySQLdb
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")

#db = MySQLdb.connect (host = "localhost",
#                          user = "root",
#                          passwd = "root",
#                          db = "test")
param = "Oh234"

#par = param

c = con.cursor()

#c.execute("SELECT * FROM data WHERE params LIKE ('%s%') LIMIT 1"  % (param))
c.execute("SELECT * FROM Code WHERE Keywords LIKE %s LIMIT 1", ("%" + param + "%",))

data = c.fetchall()

# print the rows
for row in data :
    encodedlistvalue=base64.b64decode(row[1])
    print row[0], encodedlistvalue, '\n', 'Keywords:', row[2], '\n -----------------------------\n'



c.close()




def process_file(filename):
    reg = re.compile(r'([\w]{2,3}):\s') # Matches line header
    tmp = '' # Stored/cached data for mutliline string
    key = None # Current key
    data = {}

    with open(filename,'r') as f:
        for row in f:
            row = row.rstrip()
            match = reg.match(row)

            # Matches header or is end, put string to list:
            if (match or not row) and key:
                data[key] = tmp
                key = None
                tmp = ''

            # Empty row, next dataset
            if not row:
                # Prevent empty returns
                if data:
                    yield data
                    data = {}

                continue

            # We do have header
            if match:
                key = str(match.group(1))
                tmp = row[len(match.group(0)):]
                continue

            # No header, just append string -> here goes assumption that you want to
            # remove newlines, trailing spaces and replace them with one single space
            tmp += ' ' + row

    # Missed row?
    if key:
        data[key] = tmp

    # Missed group?
    if data:
        yield data
        

data = process_file("mylist")


# %load mylist
"""
python - Searching for Phrase Keywords in MySQL - Stack Overflow
https://stackoverflow.com/questions/.../searching-for-phrase-keywords-in-mysql
May 16, 2015 - 

"""

%%writefile mylist
"""
python - Searching for Phrase Keywords in MySQL - Stack Overflow
https://stackoverflow.com/questions/.../searching-for-phrase-keywords-in-mysql
May 16, 2015 - 

"""

data = %load mylist
print data

# works 
import MySQLdb as db
import json 
import base64
    
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")
c = con.cursor()
#data = %load mylist
keywords = """
data, webite, cut paste, 87er
"""
encodedlistvalue=base64.b64encode('%load mylist')
# Put this through to SQL using an INSERT statement...
c.execute("""INSERT INTO Code (Name, Keywords)
                   VALUES(%s, %s)""", (encodedlistvalue, keywords))


# works 
import MySQLdb as db
import json 
import base64
    
con = db.connect("localhost","root","ThinkPadT$#", "searchdb01")

encodedlistvalue=base64.b64encode(data)
with con:
    cur = con.cursor()
    #cur.execute("DROP TABLE IF EXISTS Code")
    #cur.execute("CREATE TABLE Code(Id INT PRIMARY KEY AUTO_INCREMENT, \
    #              Name VARCHAR(500))")
    #cur.execute("INSERT INTO Code(Name) VALUES('%s')" % (encodedlistvalue))
    cur.execute("INSERT INTO Code(Name) VALUES('%s')" % (encodedlistvalue))

%%writefile mylist.jsn
[row = cursor.fetchone()
while row:
    #print(row)
    rowstring = "" # printed for each row
    result = row[b64field_idx] # set to base64 field value
    
    for j in range(numcols):
        rowstring += str(row[j]) + "\t" # Need to print each column (tab separated)
         
    try:
        # Now we can Base64 decode however many times they want
        for j in range(args.b64count) :
            temp = base64.decodestring(result)
            result = temp
        rowstring += result # Add the decoded result to the output string
        ]

SET PASSWORD FOR 'root'@'localhost' = PASSWORD('ThinkPadT$#');

To change password:
sudo dpkg-reconfigure mysql-server-5.5

SET PASSWORD FOR 'root'@'localhost' = PASSWORD('ThinkPadT$#');

To change password:
sudo dpkg-reconfigure mysql-server-5.5


sudo mysql -u root
SET PASSWORD FOR 'root'@'localhost' = PASSWORD('ThinkPadT$#');
CREATE USER 'jack'@'localhost' IDENTIFIED BY 'ThinkPadT$#';
GRANT ALL PRIVILEGES ON * . * TO 'jack'@'localhost';
FLUSH PRIVILEGES;

def createdb(dbnew):
    import sqlite3
    conn = sqlite3.connect(dbnew)
    c = conn.cursor()
  
    query1 = "DROP TABLE IF EXISTS Junk"
    query2 = """CREATE TABLE IF NOT EXISTS Junk(
    "language" VARCHAR(32) NOT NULL,
    "keywords" VARCHAR(500) default NULL,
    "script" VARCHAR(2500) default NULL
    )
    """
    c.execute(query1)
    c.execute(query2)
    
dbnew = "newdb.db"    
createdb(dbnew)    

createdb("newdatabase02")

import sqlite3
conn = sqlite3.connect('newdatabase02')

c = conn.cursor()
c.execute("INSERT INTO Junk VALUES ('SQLite','Junkstuff, stuff, sql','beans')")  
conn.commit()

conn.close()

import sqlite3
import base64
conn = sqlite3.connect('newdatabase02')

stringlistvalue ="""
this is a test
"""
c = conn.cursor()
# Insert a row of data
encodedlistvalue=base64.b64encode('stringlistvalue')
language ="SQLlite"
keywords ="computer stuff, sqlite, iu5t"

c.execute("INSERT INTO Junk VALUES (?, ?, ?);", (language, keywords, encodedlistvalue))
# Save (commit) the changes
conn.commit()
conn.close()

import sqlite3
conn = sqlite3.connect('newdatabase02')

c = conn.cursor()
s = ('stuff',)
#c.execute('SELECT * FROM Junk WHERE keywords=?', s)
c.execute('SELECT * FROM Junk')
#print(c.fetchmany())
print(c.fetchall())




import sqlite3
conn = sqlite3.connect('newdatabase02')

c = conn.cursor()
s = ('stuff',)
#c.execute('SELECT * FROM Junk WHERE keywords=?', s)
rows = c.execute('SELECT * FROM Junk')
for row in rows:
    print row

# Larger example that inserts many records at a time
purchases = [('2006-03-28', 'BUY', 'IBM', 1000, 45.00),
             ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),
             ('2006-04-06', 'SELL', 'IBM', 500, 53.00),
            ]
c.executemany('INSERT INTO python VALUES (?,?,?,?,?)', purchases)

    ''' tk_entry_loop2.py
    exploring Tkinter multiple labeled entry widgets
    and using a for loop to create the widgets
    '''
    from functools import partial
    try:
        # Python2
        import Tkinter as tk
    except ImportError:
        # Python3
        import tkinter as tk
    class Gui(tk.Tk):
        def __init__(self):
            # the root will be self
            tk.Tk.__init__(self)
            self.title('multiple labeled entries')
            self.entries = []
            for n in range(20):
                # create left side info labels
                tk.Label(self, text="%2d: " % n).grid(row=n, column=0)
                # create entries list
                self.entries.append(tk.Entry(self, bg='yellow', width=40))
                # grid layout the entries
                self.entries[n].grid(row=n, column=1)
                # bind the entries return key pressed to an action
                self.entries[n].bind('<Return>', partial(self.action, n))
            # test, load one entry
            self.entries[0].insert('end', 'enter a word in an entry')
        def action(self, ix, event):
            '''this entry return key pressed'''
            text = self.entries[ix].get()
            info = "entry ix=%d text=%s" % (ix, text)
            # use first entry to show test results
            # clear old text
            self.entries[0].delete(0, 'end')
            # insert new text
            self.entries[0].insert('end', info)
        def run(self):
            self.mainloop()
    # test the potential module
    if __name__ == '__main__':
        Gui().run()

#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
ZetCode Tkinter tutorial

In this script, we use the grid
manager to create a more complicated
layout.

Author: Jan Bodnar
Last modified: December 2015
Website: www.zetcode.com
"""

from Tkinter import Tk, Text, BOTH, W, N, E, S
from ttk import Frame, Button, Label, Style


class Example(Frame):
  
    def __init__(self, parent):
        Frame.__init__(self, parent)   
         
        self.parent = parent
        self.initUI()
        
        
    def initUI(self):
      
        self.parent.title("Windows")
        self.pack(fill=BOTH, expand=True)

        self.columnconfigure(1, weight=1)
        self.columnconfigure(3, pad=7)
        self.rowconfigure(3, weight=1)
        self.rowconfigure(5, pad=7)
        
        lbl = Label(self, text="Windows")
        lbl.grid(sticky=W, pady=4, padx=5)
        
        area = Text(self)
        area.grid(row=1, column=0, columnspan=2, rowspan=4, 
            padx=5, sticky=E+W+S+N)
        
        abtn = Button(self, text="Activate")
        abtn.grid(row=1, column=3)

        cbtn = Button(self, text="Close")
        cbtn.grid(row=2, column=3, pady=4)
        
        hbtn = Button(self, text="Help")
        hbtn.grid(row=5, column=0, padx=5)

        obtn = Button(self, text="OK")
        obtn.grid(row=5, column=3)        
              

def main():
  
    root = Tk()
    root.geometry("350x300+300+300")
    app = Example(root)
    root.mainloop()  


if __name__ == '__main__':
    main()  

from Tkinter import *
root= Tk()
root.title("My First GUI")
root.geometry("800x200")
frame1=Frame(root)
frame1.grid()
label1 = Label(frame1, text = "Here is a label!")
label1.grid()
button1 = Button(frame1, text = "I am a Button")
button1.grid()
button1.configure(text = "Me too!")
text1 = Text(frame1, width = 200, height = 20)
text1.grid()
root.mainloop()

class interface(tk.Frame):
    def __init__(self,den):
        self.pa_nu = 0  ##page number. Both used in labeling and result slicing
        self.lbl1 = tk.Label(den, text="keyword")
        self.lbl2 = tk.Label(den, text="Page %d" %(self.pa_nu+1))
        self.ent1 = tk.Entry(den, takefocus=True)
        self.btn1 = tk.Button(den, text="Search", command=self.button1)
        self.btn2 = tk.Button(den, text="Page Up", command=self.page_up)
        self.btn3 = tk.Button(den, text="Page Down", command=self.page_down)

        scrollbar = tk.Scrollbar(den)
        scrollbar.pack(side=RIGHT, fill=Y)
        self.lst1 = tk.Listbox(den, selectmode="SINGLE", width="40", yscrollcommand=scrollbar.set)
        self.lst1.bind("<Double-Button-1>", self.open_folder)
        scrollbar.config(command=self.lst1.yview)

        self.lbl1.pack(side="top")
        self.ent1.pack()
        self.btn1.pack(side="top")
        self.btn2.pack(side="right")
        self.btn3.pack(side="left")
        self.lbl2.pack(side="bottom",padx=65)
        self.lst1.pack(fill=BOTH)

    def button1(self):     
        pass #some stuff here

    def page_up(self):
        pass #some stuff here

    def page_down(self):
        pass #some stuff here

    def list_fill(self,i):
        pass #some stuff here

    def open_folder(self,event):
        pass #some stuff here

#button_example.py
from tkinter import *
rootWin = Tk()


frame = Frame(rootWin)                #Create a frame to organize the buttons
frame.pack()

def quitFunc():                       #The quitFunc just prints a message!
   print("Quit button pressed!")

def speakFunc():                      #The speakFunc  just prints a message!
  print("Say hi!")


#Define button1, which has a foreground (fg) color of red, displays the
#text "Quit", and will call the quitFunc when it is clicked.
#It will be inside the frame created above.
button1 = Button(frame, text="Quit", fg="red", command=quitFunc)
button1.pack(side=LEFT)


#Create another button, displaying the text "Speak" and programmed to
#call the speakFunc when it is clicked.
button2 = Button(frame, text="Speak", command=speakFunc)
button2.pack(side=LEFT)


rootWin.mainloop()    #Run the main loop.


http://zetcode.com/gui/tkinter/layout/

"""
Implement a GUI for viewing and updating class instances stored in a shelve;
the shelve lives on the machine this script runs on, as 1 or more local files;
"""

from tkinter import *
from tkinter.messagebox import showerror
import shelve
shelvename = 'class-shelve'
fieldnames = ('name', 'age', 'job', 'pay')

def makeWidgets():
    global entries
    window = Tk()
    window.title('People Shelve')
    form = Frame(window)
    form.pack()
    entries = {}
    for (ix, label) in enumerate(('key',) + fieldnames):
        lab = Label(form, text=label)
        ent = Entry(form)
        lab.grid(row=ix, column=0)
        ent.grid(row=ix, column=1)
        entries[label] = ent
    Button(window, text="Fetch",  command=fetchRecord).pack(side=LEFT)
    Button(window, text="Update", command=updateRecord).pack(side=LEFT)
    Button(window, text="Quit",   command=window.quit).pack(side=RIGHT)
    return window

def fetchRecord():
    key = entries['key'].get()
    try:
        record = db[key]                      # fetch by key, show in GUI
    except:
        showerror(title='Error', message='No such key!')
    else:
        for field in fieldnames:
            entries[field].delete(0, END)
            entries[field].insert(0, repr(getattr(record, field)))

def updateRecord():
    key = entries['key'].get()
    if key in db:
        record = db[key]                      # update existing record
    else:
        from person import Person             # make/store new one for key
        record = Person(name='?', age='?')    # eval: strings must be quoted
    for field in fieldnames:
        setattr(record, field, eval(entries[field].get()))
    db[key] = record

db = shelve.open(shelvename)
window = makeWidgets()
window.mainloop()
db.close() # back here after quit or window close

import wx 

import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def get_picture_list(rel_path):
    abs_path = os.path.join(os.getcwd(),rel_path)
    print 'abs_path =', abs_path
    dir_files = os.listdir(abs_path)
    #print dir_files
    return dir_files

picture_list = get_picture_list('snippets')
print picture_list

Image(filename='snippets/database001.png')

import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def create_or_open_db(db_file):
    db_is_new = not os.path.exists(db_file)
    conn = sqlite3.connect(db_file)
    if db_is_new:
        print 'Creating schema'
        sql = '''create table if not exists PICTURES(
        ID INTEGER PRIMARY KEY AUTOINCREMENT,
        PICTURE BLOB,
        TYPE TEXT,
        FILE_NAME TEXT);'''
        conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    else:
        print 'Schema exists\n'
    return conn

def insert_picture(conn, picture_file):
    with open(picture_file, 'rb') as input_file:
        ablob = input_file.read()
        base=os.path.basename(picture_file)
        afile, ext = os.path.splitext(base)
        sql = '''INSERT INTO PICTURES
        (PICTURE, TYPE, FILE_NAME)
        VALUES(?, ?, ?);'''
        conn.execute(sql,[sqlite3.Binary(ablob), ext, afile]) 
        conn.commit()

conn = create_or_open_db('image.db')

picture_file = "snippets/database001.png"
insert_picture(conn, picture_file)
conn.close()

def extract_picture(cursor, picture_id):
    sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = :id"
    param = {'id': picture_id}
    cursor.execute(sql, param)
    ablob, ext, afile = cursor.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename

conn = create_or_open_db('image.db')
cur = conn.cursor()
filename = extract_picture(cur, 1)
cur.close()
conn.close()
Image(filename='./'+filename)

conn = create_or_open_db('image.db')
conn.execute("DELETE FROM PICTURES")
for fn in picture_list:
    picture_file = "snippets/"+fn
    insert_picture(conn, picture_file)
     
for r in conn.execute("SELECT rowid, FILE_NAME FROM PICTURES"):
    print r[0],r[1]

conn.close()

# Get your image from the database

def get_image(cursor, picture_id):
    sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 130"
    param = {'id': picture_id}
    cursor.execute(sql, param)
    ablob, ext, afile = cursor.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename

conn = create_or_open_db('image.db')
cur = conn.cursor()
filename = get_image(cur, 1)
cur.close()
conn.close()
print filename
Image(filename=filename)


import sqlite3
#response = requests.get("/home/jack/Desktop/text_stuff/snippets/database001.png")
response = "/home/jack/Desktop/text_stuff/snippets/database001.png"
#photo = "snippet"
member_name = "snippetImage"
#response = requests.get(picture_url) #url is definitely correct
#picture = sqlite3.Binary(response.content)
picture = sqlite3.Binary(response)
con = sqlite3.connect("image.db")
cursor = con.cursor()
#sql = '''CREATE TABLE member_data(id integer primary key autoincrement, picture BLOB, name TEXT);'''
#cursor.execute(sql)

sql = 'INSERT INTO member_data (picture, name) VALUES (?, ?)', cursor.execute(sql, (picture, member_name))
cursor.execute(sql)
con.commit()

import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def get_picture_list(rel_path):
    abs_path = os.path.join(os.getcwd(),rel_path)
    print 'abs_path =', abs_path
    dir_files = os.listdir(abs_path)
    #print dir_files
    return dir_files

picture_list = get_picture_list('snippets')
print picture_list

import sqlite3
import os.path
from os import listdir, getcwd
from IPython.core.display import Image 

def create_or_open_db(db_file):
    db_is_new = not os.path.exists(db_file)
    conn = sqlite3.connect(db_file)
    if db_is_new:
        print 'Creating schema'
        sql = '''create table if not exists PICTURES(
        ID INTEGER PRIMARY KEY AUTOINCREMENT,
        PICTURE BLOB,
        TYPE TEXT,
        FILE_NAME TEXT);'''
        conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    else:
        print 'Schema exists\n'
    return conn

def insert_picture(conn, picture_file):
    with open(picture_file, 'rb') as input_file:
        ablob = input_file.read()
        base=os.path.basename(picture_file)
        afile, ext = os.path.splitext(base)
        sql = '''INSERT INTO PICTURES
        (PICTURE, TYPE, FILE_NAME)
        VALUES(?, ?, ?);'''
        conn.execute(sql,[sqlite3.Binary(ablob), ext, afile]) 
        conn.commit()

def loadimages(dbname, path):
    conn = sqlite3.connect(dbname)
    #conn.execute("DELETE FROM PICTURES")
    for fn in picture_list:
        picture_file = path+"/"+fn
        insert_picture(conn, picture_file)

    for r in conn.execute("SELECT rowid, FILE_NAME FROM PICTURES"):
        print r[0],r[1]
   
    conn.close()


def get_image(cursor, picture_id):
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    c.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(picture_id,))
    #sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 19"
    param = {'id': picture_id}
    cursor.execute(sql, param)
    ablob, ext, afile = cursor.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename


dbname = "ImageB.db"
db_file = create_or_open_db(dbname)
path = "snippets/"
loadimages(dbname, path)
cur = conn.cursor()
filename = get_image(cur, 16)
cur.close()
conn.close()
print filename
Image(filename=filename)


-

def get_image(cursor, picture_id):
    sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 19"
    param = {'id': picture_id}
    cursor.execute(sql, param)
    ablob, ext, afile = cursor.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename

conn = create_or_open_db('ImageB.db')
cur = conn.cursor()
filename = get_image(cur, 1)
cur.close()
conn.close()
print filename
Image(filename=filename)


def get_image(cursor, image_id):
    
    #c.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(image_id,))
    #image_id = 19
    #sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(image_id,)
    #sql = "SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 19"
    #param = {'id': image_id}
    #cursor.execute(sql, param)
    cursor.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(image_id,))
    #cursor.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = 19")
    ablob, ext, afile = cursor.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename

conn = create_or_open_db('ImageB.db')
cur = conn.cursor()
filename = get_image(cur, 19)
cur.close()
conn.close()
print filename
Image(filename=filename)


import sqlite3
def get_image(cursor, image_id):
    
    cursor.execute("SELECT PICTURE, TYPE, FILE_NAME FROM PICTURES WHERE id = ?;",(image_id,))
    ablob, ext, afile = cursor.fetchone()
    filename = afile + ext
    with open(filename, 'wb') as output_file:
        output_file.write(ablob)
    return filename

conn = create_or_open_db('ImageB.db')
cur = conn.cursor()
filename = get_image(cur, 19)
cur.close()
conn.close()
print filename
Image(filename=filename)


import Image2Data
dbname = "ImageD.db"
Image2Data.image_id(dbname)

import sqlite3
conn = sqlite3.connect('image.db')
c = conn.cursor()
c.execute("""
CREATE VIRTUAL TABLE File 
USING FTS3(id, name, image);
""")
conn.commit()
conn.close()

conn = sqlite3.connect('newdatabase02')
c = conn.cursor()
c.execute('insert into File 
(id, name, bin) values (?,?,?)', (id, name, sqlite3.Binary(file.read())))
conn.commit()
conn.close()

from time import sleep
import sqlite3

file0 = open("history.txt","r")
lists = file0.readlines()
for list in lists:
    sleep(.5)
    print list

from time import sleep
import sqlite3
conn = sqlite3.connect('history.db')
c = conn.cursor()
conn.text_factory = str
c.execute("""
CREATE VIRTUAL TABLE history 
USING FTS3(text);
""")
conn.commit()
conn.close()

fileO = open("history.txt","r")
lists = fileO.readlines()
for list in lists:
    #list = list.encode("ascii", "ignore")
    list = list.decode('utf-8').strip() 
    conn = sqlite3.connect('history.db')
    c = conn.cursor()
    c.execute('insert into history values (?)', (list,))
    conn.commit()
    conn.close()

import sqlite3
import sys
conn = sqlite3.connect('history2.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
search = raw_input("Search : ")
for row in c.execute('SELECT rowid, text FROM history WHERE text MATCH ?', (search,)):    
    count=count+1
    print (row)[0],"-",(row)[1],"\n"
    if count > req:
        conn.close()
        sys.exit()

from time import sleep
import sqlite3
conn = sqlite3.connect('history.db')
c = conn.cursor()
search = ("sudo")
for row in c.execute('SELECT rowid, text FROM history WHERE text LIKE (?)', (search,)):
    print row[0],row[1]


import sqlite3
import sys
conn = sqlite3.connect('history.db')
conn.text_factory = str
c = conn.cursor()
count=0;req=200
id1 = raw_input("Starting ID : ")
id2 = raw_input("How Many Rows : ")
for row in c.execute('SELECT rowid, * from history LIMIT ? OFFSET ?',  (id2, id1)):
    count=count+1
    print (row)[0],"-",(row)[1],
    if count > req:
        conn.close()
        sys.exit()



from time import sleep
import sqlite3
conn = sqlite3.connect('fts4.db')
c = conn.cursor()
conn.text_factory = str
# Create an FTS4 table named "pages" with one column: code
c.execute("""
CREATE VIRTUAL TABLE pages USING fts4(code);
""")
conn.commit()
conn.close()


import DBstore
insert="""
def dbstore(insert):
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    c.execute(""
    CREATE VIRTUAL TABLE IF NOT EXISTS code 
    USING FTS3(code);
    ""
    )
    c = conn.cursor()
    conn.text_factory = str
    # CREATE VIRTUAL TABLE pages USING fts4(code);
    c.execute("INSERT INTO pages VALUES(?)", (insert,))

    conn.commit()
    conn.close()
    return 
    
    
def dbread():
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    req = 100
    view = raw_input("Search : ")
    for row in c.execute('SELECT rowid, code FROM pages WHERE pages MATCH ?', (view,)):    
        count=count+1
        print (row)[0],"-",(row)[1],"\n"
        if count > req:
            conn.close()
            sys.exit()
            return
quick database QUICKdb QUICK
"""
DBstore.dbstore(insert)

!rm DBread.pyc

%%writefile DBread.py
def dbread():
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    count = 0
    req = 100
    view = raw_input("Search : ")
    for row in c.execute('SELECT rowid, code FROM pages WHERE pages MATCH ?', (view,)):    
        count=count+1
        print (row)[0],"-",(row)[1],"\n"
        if count > req:
            conn.close()
            sys.exit()

import DBread
DBread.dbread()

%reset -f

%%writefile DBstore.py
def dbstore(insert):
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    c.execute("""
    CREATE VIRTUAL TABLE IF NOT EXISTS pages 
    USING FTS3(code);
    """
    )
    c = conn.cursor()
    conn.text_factory = str
    # CREATE VIRTUAL TABLE pages USING fts4(code);
    c.execute("INSERT INTO pages VALUES(?)", (insert,))

    conn.commit()
    conn.close()

%%writefile QUICKdb.py
def dbstore(insert):
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    c.execute("""CREATE VIRTUAL TABLE IF NOT EXISTS history 
    USING FTS3(hist);
    """
             )
    c = conn.cursor()
    conn.text_factory = str
    # CREATE VIRTUAL TABLE pages USING fts4(code);
    c.execute("INSERT INTO pages VALUES(?)", (insert,))

    conn.commit()
    conn.close()
    return 
    
    
def dbread():
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    req = 100
    view = raw_input("Search : ")
    for row in c.execute('SELECT rowid, code FROM pages WHERE pages MATCH ?', (view,)):    
        count=count+1
        print (row)[0],"-",(row)[1],"\n"
        if count > req:
            conn.close()
            sys.exit()
            return


!rm QUICKdb.pyc

import QUICKdb
insert="""
def dbstore(insert):
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    c.execute(""
    CREATE VIRTUAL TABLE IF NOT EXISTS code 
    USING FTS3(code);
    ""
    )
    c = conn.cursor()
    conn.text_factory = str
    # CREATE VIRTUAL TABLE pages USING fts4(code);
    c.execute("INSERT INTO pages VALUES(?)", (insert,))

    conn.commit()
    conn.close()
    return 
    
    
def dbread():
    import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
    req = 100
    view = raw_input("Search : ")
    for row in c.execute('SELECT rowid, code FROM pages WHERE pages MATCH ?', (view,)):    
        count=count+1
        print (row)[0],"-",(row)[1],"\n"
        if count > req:
            conn.close()
            sys.exit()
            return
quick database QUICKdb QUICK
"""
QUICKdb.dbstore(insert)

%%writefile DBread.py
def dbread(insert):
import sqlite3
    conn = sqlite3.connect('XPfts4.db')
    c = conn.cursor()
req = 100
view = raw_input("Search : ")
for row in c.execute('SELECT rowid, code FROM pages WHERE pages MATCH ?', (view,)):    
    count=count+1
    print (row)[0],"-",(row)[1],"\n"
    if count > req:
        conn.close()
        sys.exit()

import sqlite3
conn = sqlite3.connect('fts4.db')
c = conn.cursor()
conn.text_factory = str
# CREATE VIRTUAL TABLE pages USING fts4(code);
req = 100
view = raw_input("Search : ")
for row in c.execute('SELECT rowid, code FROM pages WHERE pages MATCH ?', (view,)):    
    count=count+1
    print (row)[0],"-",(row)[1],"\n"
    if count > req:
        conn.close()
        sys.exit()




// Board defines the interface of game-of-life board.
// This interface exists to remove the direct dependency between Board implementation and renderer.
type Board interface {
    Generation() int
    Get(x, y int) bool
    Set(x, y int)
    Size() (int, int)
    Next()
}

type boardImpl struct {
    cur [][]bool
    buf [][]bool
    generation int
}

func NewBoard(w, h int) *boardImpl {
    if w < 3 || h < 3 {
        panic("too small")
    }
    cur := make([][]bool, w)
    buf := make([][]bool, w)
    for i := 0; i < w; i++ {
        cur[i] = make([]bool, h)
        buf[i] = make([]bool, h)
    }
    return &boardImpl{
        cur: cur,
        buf: buf,
    }
}

func (b *boardImpl) Set(x, y int) {
    if x >= 1 && y >= 1 && x < len(b.cur)-1 && y < len(b.cur[0])-1 {
        b.cur[x][y] = true
    }
}

func (b *boardImpl) Get(x, y int) bool {
    return b.cur[x][y]
}

func (b *boardImpl) Size() (int, int) {
    return len(b.cur), len(b.cur[0])
}

func (b *boardImpl) Generation() int {
    return b.generation
}

func (b *boardImpl) nextPixel(x, y int) bool {
    c := 0
    for i := x-1; i < x+2; i++ {
        for j := y-1; j < y+2; j++ {
            if (i != x || j != y) && b.cur[i][j] {
                c += 1
            }
        }
    }
    if !b.cur[x][y] {
        // dead
        return c == 3
    }
    if c == 2 || c == 3 {
        return true
    }
    return false
}

func (b *boardImpl) Next() {
    w := len(b.cur)
    h := len(b.cur[0])
    for i := 0; i < w; i++ {
        for j := 0; j < h; j++ {
            if i == 0 || i == w-1 || j == 0 || j == h-1 {
                // border
                b.buf[i][j] = false
                continue
            }
            b.buf[i][j] = b.nextPixel(i, j)
        }
    }
    tmp := b.cur
    b.cur = b.buf
    b.buf = tmp
    b.generation++
}

import (
    "bytes"
    "encoding/base64"
    "fmt"
    "math/rand"
    "time"
    "os"
)

// Canvas renders the content of GameOfLife to HTML Canvas.
type Canvas struct {
    id string
    jsid string
    width int
    height int
    board Board
    labelID string
    svgID string
}

func NewCanvas(board Board, width, height int) *Canvas {
    return &Canvas{
        id: fmt.Sprintf("canvas%d", rand.Int63()),
        width: width,
        height: height,
        board: board,
    }
}

func (c *Canvas) renderSVG() {
    board := c.board
    w, h := board.Size()
    cw := 100/float64(w)
    ch := 100/float64(h)
    var buf bytes.Buffer
    buf.WriteString(`<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100" height="100">`)
    for x := 0; x < w; x++ {
        for y := 0; y < h; y++ {
            if !board.Get(x, y) {
                continue
            }
            buf.WriteString(fmt.Sprintf(
                `<rect x="%.2f" y="%.2f" width="%.2f" height="%.2f"></rect>`,
                float64(x)*cw, float64(y)*ch, cw, ch))
        }
    }
    buf.WriteString(`</svg>`)
    _ctx.Display.Text(fmt.Sprintf("Generation: %d", board.Generation()), &c.labelID)
    _ctx.Display.HTML(fmt.Sprintf(
        `<img style="width:%dpx;height:%dpx" src="data:image/svg+xml;base64,%s">`,
        c.width, c.height,
        base64.StdEncoding.EncodeToString(buf.Bytes())), &c.svgID)
}

func (c *Canvas) DisplayAnimation(step int, interval time.Duration) {
    if interval < 10 * time.Millisecond {
        fmt.Fprintf(os.Stderr, "interval is too small: %v", interval)
        return
    }
    c.renderSVG()
    prev := time.Now()
    for i := 0; step < 0 || i < step; i++ {
        c.board.Next()
        time.Sleep(interval-time.Now().Sub(prev))
        prev = time.Now()
        c.renderSVG()
    }
}

{
    g := NewBoard(20, 10)
    c := NewCanvas(g, 400, 200)
    
    var x, y int
    x, y = 1, 1
    g.Set(x, y+1)
    g.Set(x+1, y+1)
    g.Set(x+2, y+1)
    
    x, y = 5, 1
    g.Set(x+1, y+1)
    g.Set(x+2, y+1)
    g.Set(x+3, y+1)
    g.Set(x, y+2)
    g.Set(x+1, y+2)
    g.Set(x+2, y+2)
    
    x, y = 11, 1
    g.Set(x, y)
    g.Set(x+1, y)
    g.Set(x, y+1)
    g.Set(x+1, y+1)
    g.Set(x+2, y+2)
    g.Set(x+3, y+2)
    g.Set(x+2, y+3)
    g.Set(x+3, y+3)
    
    c.DisplayAnimation(20, 250*time.Millisecond)
}

func leftRotate(g *boardImpl) *boardImpl {
    w, h := g.Size()
    n := NewBoard(h, w)
    n.generation = g.generation
    for i := 0; i < w; i++ {
        for j := 0; j < h; j++ {
            n.cur[j][h-1-i] = g.cur[i][j]
        }
    }
    return n
}

func addGlider(g Board, x, y int) {
    g.Set(x, y+2)
    g.Set(x+1, y)
    g.Set(x+1, y+2)
    g.Set(x+2, y+1)
    g.Set(x+2, y+2)
}

{   
    g := NewBoard(160, 160)
    for r := 0; r < 4; r++ {
        max := 7
        for i := 0; i < max; i++ {
            for j := 0; j < max; j++ {
                if i + j >= max {
                    continue
                }
                addGlider(g, i*10+5, j*10+5)
            }   
        }
        g = leftRotate(g)
    }
    c := NewCanvas(g, 480, 480)
    c.DisplayAnimation(300, 100*time.Millisecond)
}

import (
    "math/rand"
)

{   
    w, h := 200, 200
    g := NewBoard(w, h)
    c := NewCanvas(g, 480, 480)
    for i := 1; i < w; i++ {
        for j := 1; j < h; j++ {
            if rand.Int()%2!=0 {
                g.Set(i, j)
            }
        }
    }
    
    for i := 0; i < 10; i++ {
        for j := 0; j < 10; j++ {
            addGlider(g, i*8, j*9)
        }
    }
    c.DisplayAnimation(500, 100*time.Millisecond)
}



https://github.com/JakobGlock/Generative-Art

https://pythoninformer.com/generative-art/fractals/kings-dream/
    You can try different values of the constants. A and B need to be in the range -3 tp +3,
    while C and D need to be in the range -1.5 to +1.5, otherwise the values wil fly off to 
    infinity rather than creating a pattern.

!locate generativepy

from generativepy.bitmap import Scaler
from generativepy.nparray import make_nparray_data, save_nparray, load_nparray, make_npcolormap, apply_npcolormap, save_nparray_image
from generativepy.color import Color
import math
import numpy as np

MAX_COUNT = 1000000
A = 2.379879
B = -0.7765145
C = -0.866918
D =  0.544728

#MAX_COUNT = 10000000
#A = 2.879879
#B = -0.765145
#C = -0.966918
#D = 0.744728

def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=4, startx=-2, starty=-2)

    x = 1.22
    y = 1.2
    for i in range(MAX_COUNT):
        x, y = math.sin(A*x)+B*math.sin(A*y), math.sin(C*x)+D*math.sin(C*y)
        px, py = scaler.user_to_device(x, y)
        image[py, px] += 1


def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('black'), Color('blue'), Color('orange'), Color('yellow'), Color('white')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray


data = make_nparray_data(paint, 900, 900, channels=1)

save_nparray("/tmp/temp.dat", data)
data = load_nparray("/tmp/temp.dat")

frame = colorise(data)

save_nparray_image('kings-dream.png', frame)

from PIL import Image
im = Image.open('kings-dream.png')
im

from generativepy.bitmap import Scaler
from generativepy.nparray import make_nparray_data, save_nparray, load_nparray, make_npcolormap, apply_npcolormap, save_nparray_image
from generativepy.color import Color
import math
import numpy as np

MAX_COUNT = 10000000
A = 2.879879
B = -0.765145
C = -0.966918
D = 0.744728


def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=4, startx=-2, starty=-2)

    x = 2
    y = 2
    for i in range(MAX_COUNT):
        x, y = math.sin(A*x)+B*math.sin(A*y), math.sin(C*x)+D*math.sin(C*y)
        px, py = scaler.user_to_device(x, y)
        image[py, px] += 1


def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('black'), Color('red'), Color('orange'), Color('yellow'), Color('white')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray


data = make_nparray_data(paint, 600, 600, channels=1)

save_nparray("/tmp/temp.dat", data)
data = load_nparray("/tmp/temp.dat")

frame = colorise(data)

save_nparray_image('kings-dream2.png', frame)

from PIL import Image
im = Image.open('kings-dream2.png')
im

import generativepy
dir(generativepy)

import generativepy
help(generativepy)

from generativepy import *

from generativepy import graph
help(graph)


!pip install easy_vector

!pip3 install pycairo==1.11.1

perceptilabs 0.12.19

https://github.com/JakobGlock/Generative-Art

https://pythoninformer.com/generative-art/fractals/kings-dream/
    You can try different values of the constants. A and B need to be in the range -3 tp +3,
    while C and D need to be in the range -1.5 to +1.5, otherwise the values wil fly off to 
    infinity rather than creating a pattern.

!locate generativepy

%%writefile saveunique.py
import time
def saveunique():
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filen = "/tmp/"+timestr+".dat"
    return filen

from saveunique import saveunique
filename = saveunique()
print (filename)

from generativepy.bitmap import Scaler
from generativepy.nparray import make_nparray_data, save_nparray, load_nparray, make_npcolormap, apply_npcolormap, save_nparray_image
from generativepy.color import Color
import math
import numpy as np
from saveunique import saveunique

MAX_COUNT = 1000000
A = 2.379879
B = -0.7765145
C = -0.866918
D =  0.544728

#MAX_COUNT = 10000000
#A = 2.879879
#B = -0.765145
#C = -0.966918
#D = 0.744728

def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=4, startx=-2, starty=-2)

    x = 1.22
    y = 1.2
    for i in range(MAX_COUNT):
        x, y = math.sin(A*x)+B*math.sin(A*y), math.sin(C*x)+D*math.sin(C*y)
        px, py = scaler.user_to_device(x, y)
        image[py, px] += 1


def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('black'), Color('blue'), Color('orange'), Color('yellow'), Color('white')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray


data = make_nparray_data(paint, 900, 900, channels=1)
Fname=saveunique() 
save_nparray(Fname, data)
save_nparray("tmp/temp.dat", data)
data = load_nparray("tmp/temp.dat")

frame = colorise(data)

save_nparray_image('temp/kings-dream.png', frame)

from PIL import Image
im = Image.open('temp/kings-dream.png')
im

from generativepy.bitmap import Scaler
from generativepy.nparray import make_nparray_data, save_nparray, load_nparray, make_npcolormap, apply_npcolormap, save_nparray_image
from generativepy.color import Color
import math
import numpy as np

MAX_COUNT = 10000000
A = 2.675869
B = -0.985145
C = -0.9136918
D = 0.784728


def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=4, startx=-2, starty=-2)

    x = 2
    y = 2
    for i in range(MAX_COUNT):
        x, y = math.sin(A*x)+B*math.sin(A*y), math.sin(C*x)+D*math.sin(C*y)
        px, py = scaler.user_to_device(x, y)
        image[py, px] += 1


def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('rgb(255,45,120)'), Color('red'), Color('orange'), Color('yellow'), Color('white')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray


data = make_nparray_data(paint, 600, 600, channels=1)
Fname=saveunique() 
save_nparray(Fname, data)
save_nparray("tmp/temp.dat", data)
data = load_nparray("tmp/temp.dat")

frame = colorise(data)

save_nparray_image('tmp/kings-dream5.png', frame)

MAX_COUNT = 100000000
""""A = 0.9
B = -0.6013
C = 2.0
D = 0.5
"""
A = 0.943
B = -0.5013
C = 2.134
D = 0.5154
def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=3, startx=-2, starty=-2)

    x = 0.01
    y = -0.01
    for i in range(MAX_COUNT):
        x, y = x*x - y*y + A*x + B*y, 2*x*y + C*x + D*y
        px, py = scaler.user_to_device(x, y)
        image[py, px] += 1

#filename = temp_file('tinkerbell.dat')
Fname=saveunique() 
save_nparray(Fname, data)
filename = 'tmp/tinkerbell2.dat'
data = make_nparray_data(paint, 1000, 1000, channels=1)
save_nparray(filename, data)

def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('black'), Color('red'), Color('orange'), Color('yellow'), Color('white')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray

data = load_nparray(filename)
frame = colorise(data)
save_nparray_image('tmp/tinkerbell3.png', frame)

from PIL import Image
im = Image.open('tmp/tinkerbell3.png')
im

!ls tmp

data = load_nparray("tmp/tinkerbell.dat")

frame = colorise(data)

save_nparray_image('tmp/tinkerbell.png', frame)

!cp /tmp/temp.dat /tmp/001.dat

import generativepy
dir(generativepy)

import generativepy
help(generativepy)

from generativepy import *

from generativepy import graph
help(graph)


!pip install easy_vector

!pip3 install pycairo==1.11.1

#https://martinmcbride.org/generative-art/fractals/tinkerbell-colour/
from generativepy.bitmap import Scaler
from generativepy.nparray import (make_nparray_data, make_npcolormap, save_nparray,
                                  load_nparray, save_nparray_image, apply_npcolormap)
from generativepy.color import Color
from generativepy.utils import temp_file
import numpy as np

MAX_COUNT = 256

def calc(c1, c2):
    x = y = 0
    for i in range(MAX_COUNT):
        x, y = x*x - y*y + c1, abs(2*x*y) + c2
        if x*x + y*y > 4:
            return i + 1
    return 0


def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=3.2, startx=-2, starty=-1.8)

    for px in range(pixel_width):
        for py in range(pixel_height):
            x, y = scaler.device_to_user(px, py)
            count = calc(x, y)
            image[py, px] = count


def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))

    colormap = make_npcolormap(MAX_COUNT+1,
                               [Color('black'), Color('red'), Color('orange'), Color('yellow'), Color('white')],
                               [16, 8, 32, 128])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, counts, colormap)
    return outarray


data = make_nparray_data(paint, 800, 600, channels=1)

filename = temp_file('burning-ship.dat')
save_nparray(filename, data)
data = load_nparray(filename)

frame = colorise(data)

save_nparray_image('burning-ship.png', frame)



from PIL import Image
im = Image.open("burning-ship.png")
im

from generativepy.bitmap import Scaler
from generativepy.nparray import make_nparray_data, save_nparray, load_nparray, make_npcolormap, apply_npcolormap, save_nparray_image
from generativepy.color import Color
from generativepy.utils import temp_file
from generativepy.analytics import print_stats, print_histogram
import numpy as np
import math

MAX_COUNT = 10000000
A = -55
B = -1
C = 42

def sign(x):
    if x > 0:
        return 1
    if x < 0:
        return -1
    return 0

def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('black'), Color('green'), Color('yellow'), Color('red')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray

def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=1000, startx=-500, starty=-500)

    x = -1
    y = 0
    for i in range(MAX_COUNT):
        inc = i*.00001
        x, y = y-math.sqrt(abs(B*x-C))*sign(x), A-x
        px, py = scaler.user_to_device(x, y)
        if 0 <= px < pixel_width and 0 <= py < pixel_height:
            image[py, px] += 1


filename = 'tmp/hopalong1.dat'

data = make_nparray_data(paint, 600, 600, channels=1)
save_nparray(filename, data)
data = load_nparray(filename)

frame = colorise(data)

save_nparray_image('tmp/hopalong1.png', frame)

from PIL import Image
im = Image.open("tmp/hopalong1.png")
im

from math import cos

from generativepy.bitmap import Scaler
from generativepy.nparray import make_nparray_data, save_nparray, load_nparray, make_npcolormap, apply_npcolormap, save_nparray_image
from generativepy.color import Color
from generativepy.utils import temp_file
from generativepy.analytics import print_stats, print_histogram
import numpy as np
import math
from math import *
MAX_COUNT = 1000000000
A = -55
B = -1
C = 42

def sign(x):
    if x > 0:
        return 1
    if x < 0:
        return -1
    return 0

def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('black'), Color('green'), Color('yellow'), Color('red')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray

def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=1000, startx=-500, starty=-500)

    x = -2
    y = 2
    for i in range(0,MAX_COUNT):

      
        
        x, y = y-math.sqrt(abs(B*x-C))*cos(x), A-x
        px, py = scaler.user_to_device(x, y)
        if 0 <= px < pixel_width and 0 <= py < pixel_height:
            image[py, px] += 1


filename = 'tmp/hopalong5.dat'

data = make_nparray_data(paint, 720, 480, channels=1)
save_nparray(filename, data)
data = load_nparray(filename)

frame = colorise(data)

save_nparray_image('tmp/hopalong5.png', frame)

from PIL import Image
im = Image.open("tmp/hopalong5.png")
im

from generativepy.bitmap import Scaler
from generativepy.nparray import make_nparray_data, save_nparray, load_nparray, make_npcolormap, apply_npcolormap, save_nparray_image
from generativepy.color import Color
from generativepy.utils import temp_file
from generativepy.analytics import print_stats, print_histogram
import numpy as np
import math
from math import *
MAX_COUNT = 100000000
A = -55
B = -1
C = 42

def sign(x):
    if x > 0:
        return 1
    if x < 0:
        return -1
    return 0

def colorise(counts):
    counts = np.reshape(counts, (counts.shape[0], counts.shape[1]))
    power_counts = np.power(counts, 0.25)
    maxcount = np.max(power_counts)
    normalised_counts = (power_counts * 1023 / max(maxcount, 1)).astype(np.uint32)

    colormap = make_npcolormap(1024, [Color('black'), Color('green'), Color('yellow'), Color('red')])

    outarray = np.zeros((counts.shape[0], counts.shape[1], 3), dtype=np.uint8)
    apply_npcolormap(outarray, normalised_counts, colormap)
    return outarray

def paint(image, pixel_width, pixel_height, frame_no, frame_count):
    scaler = Scaler(pixel_width, pixel_height, width=500, startx=-50, starty=-50)

    x = -4
    y = 5
    a= .1
    b= .1
    for i in range(0,MAX_COUNT):

        x,y = sin(x*y)*y+cos(a*x-y),x+sin(y)
        if i % 1000000==0:print(i,end="-")
        
        #x, y = y-math.sqrt(abs(B*x-C))*cos(x), A-x
        px, py = scaler.user_to_device(x, y)
        if 0 <= px < pixel_width and 0 <= py < pixel_height:
            image[py, px] += 100


filename = 'tmp/hopalong8.dat'

data = make_nparray_data(paint, 1000, 1000, channels=1)
save_nparray(filename, data)
data = load_nparray(filename)
Fname=saveunique() 
save_nparray(Fname, data)

frame = colorise(data)

save_nparray_image('tmp/hopalong9.png', frame)

from PIL import Image
im = Image.open("tmp/hopalong9.png")
im

filename = 'tmp/hopalong8.dat'

data = make_nparray_data(paint, 100, 100, channels=1)
save_nparray(filename, data)
data = load_nparray(filename)
Fname=saveunique() 
save_nparray(Fname, data)

frame = colorise(data)

save_nparray_image('tmp/hopalong20.png', frame)

x and y both start at 1.0

x = sin(x*y/b)*y+cos(a*x-y)
y = x+sin(y)/b

!rm genim.pyc

!python GenIm.py

import GenIm 
help(GenIm)

%%writefile GenIm.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import cv2
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import shutil
import numpy as np

def Verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
Verify_path('tmmpp/')

def Resize640(image, output):
    Bp=Image.open(image)
    width, height = Bp.size
    if width>height:
        w1=(width-height)/2
        w2 = width-w1
        h1=height-height
        h2=height
        Cc=Bp.crop((w1,h1,w2,h2))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
    else:
        w1= width - width
        w2 = width
        h1 = (height-width)/2
        h2= height - h1
        Cc=Bp.crop((w1,h1,w2,h2))
        #Cc=Bp.crop((260,680,680,940))
        #Cc=Bp.crop((0,260,680,940))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
        return resizeIm
        # USE example
        #image = "junk/wide.png"
        #output = "junk/wideTest4.png"
        #nim = genim.Resize640(image, output)    

def CustIm(color):
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, color)
    img0.save('tmmpp/img0.png')
    return img0

    # generate and save Custom color/transparency image as: tmmpp/img0.png
    # GenIm.CustIm(color)
        
    
def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image as: tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image as: tmmpp/img1.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    op1 = Image.open(img0a).convert("RGBA")
    op2 = Image.open(img1a).convert("RGBA")
    resulta = ImageChops.blend(op1,op2,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

def Brightness(fileN, output, alpha):
    alpha = float(alpha)
    im3 = Image.open(fileN)
    # multiply each pixel by < 1.0 (darker image)
    # multiply each pixel by > 1.0 (lighter image)
    # works best with .jpg and .png files
    # note that lambda is akin to a one-line function
    #im2 = im1.point(lambda p: p * 0.9)
    im4 = im3.point(lambda p: p * alpha)
    im4.save(output)
    return im4
    #Usage Example:
    #fileN = "junk/wideTest4.png"
    #output= "tmmpp/brightnessTest3.png"
    #alpha = 1.2
    #GenIm.brightness(fileN, output, alpha)
    #view = Image.open("tmmpp/brightnessTest3.png")
    #view
def wordcloud(inputF,outputF):
    title = "Python Stuff"
    signature_ = "Jack Northrup" 
    count = 1
    start = Image.open(inputF).convert('RGBA')
    start.save('tmmpp/textbacktmp.jpg')
    while count < 256 :
        base = Image.open('tmmpp/textbacktmp.jpg').convert('RGBA')

        #8 5 4 6 3 2
        # make a blank image for the text, initialized to transparent text color
        txt = Image.new('RGBA', base.size, (255,255,255,0))
        # get a font
        #generate a random size for the font
        int_n = int(count*.2)
        Fsize = randint(15,100-int_n)
        fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
        # get a drawing context
        d = ImageDraw.Draw(txt)
        width, height = base.size
        


        def generate_the_word(infile):
            with open(infile) as f:
                contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            line_number = random.randrange(0, len(lines))
            return lines[line_number]
        textin = (generate_the_word("wordcloud.txt"))

        # calculate the x,y coordinates of the text
        w, h = base.size
        Lw = randint(-150,w-50)
        Lh = randint(-50,h-30)
        #textin = "The TwitterBot Project" 
        #generate random color and opacity
        r = randint(0,256)
        g = randint(0,256)
        b = randint(0,256)
        a = randint(0,count)
        d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

        out = Image.alpha_composite(base, txt)
        out.save("tmmpp/textbacktmp.jpg", "JPEG")
        count=count+1

    #base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', out.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = out.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    marginx = 225
    marginy = 50
    x = width - marginx
    y = height - marginy

    d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

    out = Image.alpha_composite(out, txt)
    out.save("tmmpp/tmp.jpg", "JPEG")
    # save the image then reopen to put a title
    base = Image.open('tmmpp/tmp.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    x = 90
    y = 10
    d.text((x,y), title , font=fnt, fill=(0,0,0,250))
    out2 = Image.alpha_composite(base, txt)
    out2.save(outputF, "JPEG")
    out2.show()
    return out2
    #outputF = 'tmmpp/wordcloud_01.jpg'
    #inputF = 'tmmpp/brightnessTest3.png'
    #wordcloud(inputF,outputF)

n=5
def Swappalette(filename0, filename1, output):
    #input1='/home/jack/Desktop/imagebot/colorful/20170824124329.jpg'
    #input2='/home/jack/Desktop/imagebot/posted/'
    shutil.copy2(filename0, 'instagram/') # complete target filename given
    shutil.copy2(filename1, 'instagram/')# target filename is /dst/dir/file.ext

    aa = Image.open(filename0).convert("RGB")
    #bb = Image.open("/home/jack/Documents/GG.jpg").convert("RGB")
    bb = Image.open(filename1).convert("RGB")
    xx=aa.resize((640,640), Image.NEAREST)
    yy=bb.resize((640,640), Image.NEAREST)
    xx.save("junk/aa.png")
    yy.save("junk/bb.png")
    src = Image.open('junk/aa.png').convert('RGB')
    dst = Image.open('junk/bb.png').convert('RGB')
    src.save("junk/aa.png")
    dst.save("junk/bb.png")
    n = 5 #number of partitions per channel.
    src_handle = Image.open("junk/bb.png")
    dst_handle = Image.open("junk/aa.png")
    src = src_handle.load()
    dst = dst_handle.load()
    assert src_handle.size[0]*src_handle.size[1] == dst_handle.size[0]*dst_handle.size[1],"images must be same size"

    def makePixelList(img):
        l = []
        for x in range(img.size[0]):
            for y in range(img.size[1]):
                l.append((x,y))
        return l

    lsrc = makePixelList(src_handle)
    ldst = makePixelList(dst_handle)

    def sortAndDivide(coordlist,pixelimage,channel): #core
        global src,dst,n
        retlist = []
        #sort
        coordlist.sort(key=lambda t: pixelimage[t][channel])
        #divide
        partitionLength = int(len(coordlist)/n)
        if partitionLength <= 0:
            partitionLength = 1
        if channel < 2:
            for i in range(0,len(coordlist),partitionLength):
                retlist += sortAndDivide(coordlist[i:i+partitionLength],pixelimage,channel+1)
        else:
            retlist += coordlist
        return retlist

    print(src[lsrc[0]])

    lsrc = sortAndDivide(lsrc,src,0)
    ldst = sortAndDivide(ldst,dst,0)

    for i in range(len(ldst)):
        dst[ldst[i]] = src[lsrc[i]]


    filename = time.strftime(output)

    dst_handle.save(filename)

    shutil.copy2(filename, "instagram/")

    custom = "junk/PalletteTemp.png"
    filename0 = (custom)
    return filename0

    """
    import GenIm
    filename0 = 'tmmpp/640_iguana.jpg'   
    filename1 = 'images/Sranger-Tri-001-crop2b.jpg'

    output = "junk/PalletteTemp.png"    
    GenIm.Swappalette(filename0, filename1, output)    
    """    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    #font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    '''
    Usage:
    import GenIm
    img = Image.open("tmmpp/imblend.png")
    x=200;y=200
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text = "Place Text in Image"
    col= (255,0,0)
    xf=10;yf=10
    halo_col = (255,255,255)
    GenIm.Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col)
    '''
def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

def applybin(inputA, outputA):
    im = Image.open(inputA)
    im_grey = im.convert('LA') # convert to grayscale
    width,height = im.size

    total=0
    for i in range(0,width):
        for j in range(0,height):
            total += im_grey.getpixel((i,j))[0]

    mean = total / (width * height)
    image_file = Image.open(inputA)
    imagex = image_file.convert('L')  # convert image to monochrome
    imagey = np.array(imagex)
    binim = binarize_array(imagey, mean)
    cv2.imwrite(outputA, binim)
    return binim
    #import GenIm
    #inputA ="tmmpp/640_iguana.jpg"
    #outputA = "tmmpp/binim02.png"
    #binim = GenIm.applybin(inputA, outputA)
    
def bw(imgFile,outFile):
    #convert image to blackand white
    col = Image.open(imgFile)
    gry = col.convert('L')
    grarray = np.asarray(gry)
    bw = (grarray > grarray.mean())*255
    cv2.imwrite(outFile, bw)
    return bw
    #import GenIm
    #imgFile= 'tmmpp/Effects.png'
    #outFile= 'tmmpp/bw3.png'
    #GenIm.bw(imgFile,outFile)

def Generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def alpha_to_color(image, color=(255, 255, 255)):
    """Set all fully transparent pixels of an RGBA image to the specified color.
    This is a very simple solution that might leave over some ugly edges, due
    to semi-transparent areas. You should use alpha_composite_with color instead.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    x = np.array(image)
    r, g, b, a = np.rollaxis(x, axis=-1)
    r[a == 0] = color[0]
    g[a == 0] = color[1]
    b[a == 0] = color[2] 
    x = np.dstack([r, g, b, a])
    return Image.fromarray(x, 'RGBA')


def alpha_composite(front, back, falpha):
    """Alpha composite two RGBA images.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    front -- PIL RGBA Image object
    back -- PIL RGBA Image object
    """
    front = np.asarray(front)
    back = np.asarray(back)
    result = np.empty(front.shape, dtype='float')
    alpha = np.index_exp[:, :, 3:]
    rgb = np.index_exp[:, :, :3]
    falpha = front[alpha] / 255.0
    balpha = back[alpha] / 255.0
    result[alpha] = falpha + balpha * (1 - falpha)
    old_setting = np.seterr(invalid='ignore')
    result[rgb] = (front[rgb] * falpha + back[rgb] * balpha * (1 - falpha)) / result[alpha]
    np.seterr(**old_setting)
    result[alpha] *= 255
    np.clip(result, 0, 255)
    # astype('uint8') maps np.nan and np.inf to 0
    result = result.astype('uint8')
    result = Image.fromarray(result, 'RGBA')
    return result


def alpha_composite_with_color(image, color=(255, 255, 255)):
    """Alpha composite an RGBA image with a single color image of the
    specified color and the same size as the original image.
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    back = Image.new('RGBA', size=image.size, color=color + (255,))
    return alpha_composite(image, back)


def pure_pil_alpha_to_color_v1(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    NOTE: This version is much slower than the
    alpha_composite_with_color solution. Use it only if
    numpy is not available.
    Source: http://stackoverflow.com/a/9168169/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    def blend_value(back, front, a):
        return (front * a + back * (255 - a)) / 255

    def blend_rgba(back, front):
        result = [blend_value(back[i], front[i], front[3]) for i in (0, 1, 2)]
        return tuple(result + [255])

    im = image.copy()  # don't edit the reference directly
    p = im.load()  # load pixel array
    for y in range(im.size[1]):
        for x in range(im.size[0]):
            p[x, y] = blend_rgba(color + (255,), p[x, y])

    return im

def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    Simpler, faster version than the solutions above.
    Source: http://stackoverflow.com/a/9459208/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    image.load()  # needed for split()
    background = Image.new('RGB', image.size, color)
    background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
    return background    
    
def Rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def Get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()

def Adtext(inputIm,text):
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    Draw_text_with_halo(img, position, text, font, col, halo_col)
    # USE: img = GenIm.Adtext(inputIm,text)
    return text
    
def Signat(imfile,imout):
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
    width, height = imfile.size
    marginx = 325
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    imfile = Draw_text_with_halo(imfile,(x,y), signature_ , fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile

def Centercut(img1, new_width, new_height):
    # def Centercut(path, img1, new_width, new_height):
    # img = Image.open(path+"/"+img1)
    img = Image.open(img1)
    w_var=new_width/2
    h_var=new_height/2
    half_the_width = img.size[0] / 2
    half_the_height = img.size[1] / 2
    img4 = img.crop(
        (
            half_the_width - w_var,
            half_the_height - h_var,
            half_the_width + w_var,
            half_the_height + h_var
        )
    )
    return img4

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



from PIL import Image
import genim
color = (0,0,255,255)
im = genim.CustIm(color)
im

from PIL import Image
import GenIm
fileN = "junk/wideTest4.png"
output= "tmmpp/brightnessTest3.png"
alpha = .8
genim.Brightness(fileN, output, alpha)
view = Image.open("tmmpp/brightnessTest3.png")
view

import genim
from PIL import Image,ImageFont
img = Image.open("tmmpp/brightnessTest3.png")
position = (30,30)
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
text = "Place Text in Image"
col= (0,0,255)
halo_col = (255,255,255)
genim.Draw_text_with_halo(img, position, text, font, col, halo_col)

# lets get an image
!wget -O tmmpp/iguana.jpg https://upload.wikimedia.org/wikipedia/commons/7/78/Galapagos_iguana1.jpg

# get the original image size

from PIL import Image
im = Image.open("tmmpp/iguana.jpg")
im.size

from PIL import Image
import genim

image = "tmmpp/iguana.jpg"
output = "tmmpp/640_iguana.jpg"
genim.Resize640(image, output)
im = Image.open("tmmpp/640_iguana.jpg")
im.size

from PIL import Image
im = Image.open("tmmpp/640_iguana.jpg")
im

from PIL import Image
import genim
imfile = Image.open('tmmpp/640_iguana.jpg')  
imout = "tmmpp/640_iguanaS.png"
genim.Signat(imfile, imout)

import GenIm
help(GenIm.Signat)

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    
def signat(imfile, imout):
    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    width, height = imfile.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black    
    imfile = draw_text_with_halo(imfile,(x,y), signature_, fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile
img0a = 'junk/th2_20170824111454.jpg'  
imout = "junkim.png"
signat(imfile, imout)

!rm genim.pyc

import GenIm
help(GenIm.BlendIms)

import genim
from genim import *
Temp = Image.open('junk/th2_20170824111454.jpg')
imfile = Temp
imout = "mojunk.jpg"
genim.Signat(imfile, imout)

Temp = Signat(imfile, imout)
SaveTemp(Temp)
im = SaveTemp(Temp)
img = Image.open(im)
img

import genim
from genim import *
Temp = Image.open('junk/th2_20170824111454.jpg')
SaveTemp(Temp)
im = SaveTemp(Temp)
print im
Temp = Image.open('tmmpp/SaveTemp.png')
Temp

import genim
from genim import *
img0a = 'junk/th2_20170824111454.jpg'  
img1a = 'junk/th2_20170824111919.jpg'
alpha = .4
imblend = BlendIms(img0a,img1a,alpha)
imblend.save("tmmpp/imblend.png")

from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
from GenIm import Draw_text_with_halo
def Draw_text_with_effects(img, (x,y), offset, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    xf,yf = offset
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

img = Image.open("tmmpp/imblend.png")
x=50;y=50
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
text = "Place Text in Image"
col= (255,0,0)
offset = (16,16)
halo_col = (255,255,255)
Draw_text_with_effects(img, position, offset, text, font, col, halo_col)
Draw_text_with_halo(img, (x,y), text, font, col, halo_col)

import genim
help(genim)

%%writefile genim.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython

def verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
verify_path('tmmpp/')

def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image tmmpp/img0.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    resulta = ImageChops.blend(img0a,img1a,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython



def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize, (0, 0, 0, 0))

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize, (0, 0, 0, 0))


def blendIms(img0,img1,alpha):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))

    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile
    # gets a random file from a directory. The directory needs to contain only the filetypes required
    # Use:
    # path = r"/home/user/images/"
    # ranfile = RanFile(path)
    # print ranfile


%%writefile saltpost.py
#ONE TIME MANUAL POSTS
#!/home/jack/anaconda2/python
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter

def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()



if __name__ == '__main__':
    nap = randint(500,1200)
    time.sleep(nap)
    isize = (640,640)     
    inp = Image.new('RGB', isize)
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text_col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    textin = (generate_the_word("wordcloud.txt"))
    i2 = draw_text_with_halo(inp, (15, 8), "SaltMan", font, text_col, halo_col)
    
    #txt = Image.new('RGBA', i.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    width, height = inp.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black    
    txt1=draw_text_with_halo(i2,(x,y), signature_, fnt, text_col2, halo_col2)
    
    
    
    # get a font
    fs=randint(15,24)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", fs)
    # get a drawing context
    width, height = inp.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    #text_col2 = (255, 255,230) # bright green
    text_col2 = rndcolor()
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black 
    yy=randint(70,290)
    xx=randint(5,60)
    #iword = (text_model.make_short_sentence(50))
    file_name = 'saltman.txt'
    iword = get_random_line(file_name)
    
    txt3=draw_text_with_halo(txt1,(xx,yy), iword, fnt, text_col2, halo_col2)
   
    vv=randint(320,530)
    vvv=randint(5,10)
    #iword = (text_model.make_short_sentence(50))
    file_name = 'saltman.txt'
    lword = get_random_line(file_name)        
    text_col3 = rndcolor()
    fs2=randint(15,24)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", fs2)
    txt=draw_text_with_halo(txt3,(vvv,vv), lword, fnt, text_col3, halo_col2)
     
    out = Image.alpha_composite(i2, txt)
    out.save("tmp/TM_POST.jpg")

#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
#f = open("Mine.txt")
#text = f.read()
# Build the model.
#text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
#random.choice(open('Mine.txt').readlines())



file_name = 'Mine.txt'
STR = get_random_line(file_name)

#STR = ("Sometimes we have visitors at night. If lucky we don't wake up.")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "tmp/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')

photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])
#print STR


from fractions import Fraction
class Thefraction:

    def __init__(self,a,b):
        self.a = a
        self.b =b
    def add(self):
        return self.a+ self.b
    def subtract(self):
        return self.a-self.b
    def divide(self):
        return self.a/self.b
    def multiply(self):
        return self.a/self.b

if __name__=='__main__':
    try:
        a = Fraction(input('Please type first fraction '))
        b = Fraction(input('Please type second fraction '))
        choice = int(input('Please select one of these 1. add 2. subtract 3. divide 4. multiply '))
        if choice ==1:
            print(Thefraction(a,b).add())
        elif choice==2:
            print(Thefraction(a,b).subtract())
        elif choice==3:
            print(Thefraction(a,b).divide())
        elif choice==4:
            print(Thefraction(a,b).multiply())
    except ValueError:
        print('Value error!!!!!')

%%writefile genim.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython

def Verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
Verify_path('tmmpp/')

def Resize640(image, output):
    Bp=Image.open(image)
    width, height = Bp.size
    if width>height:
        w1=(width-height)/2
        w2 = width-w1
        h1=height-height
        h2=height
        Cc=Bp.crop((w1,h1,w2,h2))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
    else:
        w1= width - width
        w2 = width
        h1 = (height-width)/2
        h2= height - h1
        Cc=Bp.crop((w1,h1,w2,h2))
        #Cc=Bp.crop((260,680,680,940))
        #Cc=Bp.crop((0,260,680,940))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
        return resizeIm
        # USE example
        #image = "junk/wide.png"
        #output = "junk/wideTest4.png"
        #nim = genim.Resize640(image, output)    

def CustIm(color):
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, color)
    img0.save('tmmpp/img0.png')
    return img0

    # generate and save Custom color/transparency image as: tmmpp/img0.png
    #CustIm(color)
        
    
def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image as: tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image as: tmmpp/img1.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    op1 = Image.open(img0a).convert("RGBA")
    op2 = Image.open(img1a).convert("RGBA")
    resulta = ImageChops.blend(op1,op2,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

def Brightness(fileN, output, alpha):
    alpha = float(alpha)
    im3 = Image.open(fileN)
    # multiply each pixel by < 1.0 (darker image)
    # multiply each pixel by > 1.0 (lighter image)
    # works best with .jpg and .png files
    # note that lambda is akin to a one-line function
    #im2 = im1.point(lambda p: p * 0.9)
    im4 = im3.point(lambda p: p * alpha)
    im4.save(output)
    return im4
    #Usage Example:
    #fileN = "junk/wideTest4.png"
    #output= "tmmpp/brightnessTest3.png"
    #alpha = 1.2
    #genim.brightness(fileN, output, alpha)
    #view = Image.open("tmmpp/brightnessTest3.png")
    #view
def wordcloud(inputF,outputF):
    title = "Python Stuff"
    signature_ = "Jack Northrup" 
    count = 1
    start = Image.open(inputF).convert('RGBA')
    start.save('tmmpp/textbacktmp.jpg')
    while count < 256 :
        base = Image.open('tmmpp/textbacktmp.jpg').convert('RGBA')

        #8 5 4 6 3 2
        # make a blank image for the text, initialized to transparent text color
        txt = Image.new('RGBA', base.size, (255,255,255,0))
        # get a font
        #generate a random size for the font
        int_n = int(count*.2)
        Fsize = randint(15,100-int_n)
        fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
        # get a drawing context
        d = ImageDraw.Draw(txt)

        width, height = base.size


        def generate_the_word(infile):
            with open(infile) as f:
                contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            line_number = random.randrange(0, len(lines))
            return lines[line_number]
        textin = (generate_the_word("wordcloud.txt"))

        # calculate the x,y coordinates of the text
        w, h = base.size
        Lw = randint(-150,w-50)
        Lh = randint(-50,h-30)
        #textin = "The TwitterBot Project" 
        #generate random color and opacity
        r = randint(0,256)
        g = randint(0,256)
        b = randint(0,256)
        a = randint(0,count)
        d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

        out = Image.alpha_composite(base, txt)
        out.save("tmmpp/textbacktmp.jpg", "JPEG")
        count=count+1

    #base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', out.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = out.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    marginx = 225
    marginy = 50
    x = width - marginx
    y = height - marginy

    d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

    out = Image.alpha_composite(out, txt)
    out.save("tmmpp/tmp.jpg", "JPEG")
    # save the image then reopen to put a title
    base = Image.open('tmmpp/tmp.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    x = 90
    y = 10

    d.text((x,y), title , font=fnt, fill=(0,0,0,250))

    out2 = Image.alpha_composite(base, txt)
    out2.save(outputF, "JPEG")
    out2.show()
    
    #outputF = 'tmmpp/wordcloud_01.jpg'
    #inputF = 'tmmpp/brightnessTest3.png'
    #wordcloud(inputF,outputF)

def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    '''
    Usage:
    img = Image.open("tmmpp/imblend.png")
    x=200;y=200
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text = "Place Text in Image"
    col= (255,0,0)
    xf=10;yf=10
    halo_col = (255,255,255)
    Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col)
    '''
def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

def applybin(inputA, outputA):
    im = Image.open(inputA)
    im_grey = im.convert('LA') # convert to grayscale
    width,height = im.size

    total=0
    for i in range(0,width):
        for j in range(0,height):
            total += im_grey.getpixel((i,j))[0]

    mean = total / (width * height)
    image_file = Image.open(inputA)
    imagex = image_file.convert('L')  # convert image to monochrome
    imagey = np.array(imagex)
    binim = binarize_array(imagey, mean)
    cv2.imwrite(outputA, binim)
    return binim
    #inputA ="tmmpp/640_iguana.jpg"
    #outputA = "tmmpp/binim02.png"
    #binim = applybin(inputA, outputA)
    
def bw(imgFile,outFile):
    #convert image to blackand white
    col = Image.open(imgFile)
    gry = col.convert('L')
    grarray = np.asarray(gry)
    bw = (grarray > grarray.mean())*255
    cv2.imwrite(outFile, bw)
    return bw
    #imgFile= 'tmmpp/Effects.png'
    #outFile= 'tmmpp/bw3.png'
    #genim.bw(imgFile,outFile)

def Generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    
def Rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def Get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()

def Adtext(inputIm,text):
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    Draw_text_with_halo(img, position, text, font, col, halo_col)
    # USE: img = draw_text_with_halo(inputIm, (15, 8), text, font, text_color, halo_color)
    return text
    
def Signat(imfile,imout):
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
    width, height = imfile.size
    marginx = 325
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    imfile = Draw_text_with_halo(imfile,(x,y), signature_ , fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile

def Centercut(path, img1, new_width, new_height):
    img = Image.open(path+"/"+img1)
    w_var=new_width/2
    h_var=new_height/2
    half_the_width = img.size[0] / 2
    half_the_height = img.size[1] / 2
    img4 = img.crop(
        (
            half_the_width - w_var,
            half_the_height - h_var,
            half_the_width + w_var,
            half_the_height + h_var
        )
    )
    return img4

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



!rm genim.pyc

!python GenIm.py

import GenIm 
help(GenIm)

%%writefile GenIm.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import cv2
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import shutil
import numpy as np

def Verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
Verify_path('tmmpp/')

def Resize640(image, output):
    Bp=Image.open(image)
    width, height = Bp.size
    if width>height:
        w1=(width-height)/2
        w2 = width-w1
        h1=height-height
        h2=height
        Cc=Bp.crop((w1,h1,w2,h2))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
    else:
        w1= width - width
        w2 = width
        h1 = (height-width)/2
        h2= height - h1
        Cc=Bp.crop((w1,h1,w2,h2))
        #Cc=Bp.crop((260,680,680,940))
        #Cc=Bp.crop((0,260,680,940))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
        return resizeIm
        # USE example
        #image = "junk/wide.png"
        #output = "junk/wideTest4.png"
        #nim = genim.Resize640(image, output)    

def CustIm(color):
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, color)
    img0.save('tmmpp/img0.png')
    return img0

    # generate and save Custom color/transparency image as: tmmpp/img0.png
    # GenIm.CustIm(color)
        
    
def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image as: tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image as: tmmpp/img1.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    op1 = Image.open(img0a).convert("RGBA")
    op2 = Image.open(img1a).convert("RGBA")
    resulta = ImageChops.blend(op1,op2,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

def Brightness(fileN, output, alpha):
    alpha = float(alpha)
    im3 = Image.open(fileN)
    # multiply each pixel by < 1.0 (darker image)
    # multiply each pixel by > 1.0 (lighter image)
    # works best with .jpg and .png files
    # note that lambda is akin to a one-line function
    #im2 = im1.point(lambda p: p * 0.9)
    im4 = im3.point(lambda p: p * alpha)
    im4.save(output)
    return im4
    #Usage Example:
    #fileN = "junk/wideTest4.png"
    #output= "tmmpp/brightnessTest3.png"
    #alpha = 1.2
    #GenIm.brightness(fileN, output, alpha)
    #view = Image.open("tmmpp/brightnessTest3.png")
    #view
def wordcloud(inputF,outputF):
    title = "Python Stuff"
    signature_ = "Jack Northrup" 
    count = 1
    start = Image.open(inputF).convert('RGBA')
    start.save('tmmpp/textbacktmp.jpg')
    while count < 256 :
        base = Image.open('tmmpp/textbacktmp.jpg').convert('RGBA')

        #8 5 4 6 3 2
        # make a blank image for the text, initialized to transparent text color
        txt = Image.new('RGBA', base.size, (255,255,255,0))
        # get a font
        #generate a random size for the font
        int_n = int(count*.2)
        Fsize = randint(15,100-int_n)
        fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
        # get a drawing context
        d = ImageDraw.Draw(txt)
        width, height = base.size
        


        def generate_the_word(infile):
            with open(infile) as f:
                contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            line_number = random.randrange(0, len(lines))
            return lines[line_number]
        textin = (generate_the_word("wordcloud.txt"))

        # calculate the x,y coordinates of the text
        w, h = base.size
        Lw = randint(-150,w-50)
        Lh = randint(-50,h-30)
        #textin = "The TwitterBot Project" 
        #generate random color and opacity
        r = randint(0,256)
        g = randint(0,256)
        b = randint(0,256)
        a = randint(0,count)
        d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

        out = Image.alpha_composite(base, txt)
        out.save("tmmpp/textbacktmp.jpg", "JPEG")
        count=count+1

    #base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', out.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = out.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    marginx = 225
    marginy = 50
    x = width - marginx
    y = height - marginy

    d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

    out = Image.alpha_composite(out, txt)
    out.save("tmmpp/tmp.jpg", "JPEG")
    # save the image then reopen to put a title
    base = Image.open('tmmpp/tmp.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    x = 90
    y = 10
    d.text((x,y), title , font=fnt, fill=(0,0,0,250))
    out2 = Image.alpha_composite(base, txt)
    out2.save(outputF, "JPEG")
    out2.show()
    return out2
    #outputF = 'tmmpp/wordcloud_01.jpg'
    #inputF = 'tmmpp/brightnessTest3.png'
    #wordcloud(inputF,outputF)

n=5
def Swappalette(filename0, filename1, output):
    #input1='/home/jack/Desktop/imagebot/colorful/20170824124329.jpg'
    #input2='/home/jack/Desktop/imagebot/posted/'
    shutil.copy2(filename0, 'instagram/') # complete target filename given
    shutil.copy2(filename1, 'instagram/')# target filename is /dst/dir/file.ext

    aa = Image.open(filename0).convert("RGB")
    #bb = Image.open("/home/jack/Documents/GG.jpg").convert("RGB")
    bb = Image.open(filename1).convert("RGB")
    xx=aa.resize((640,640), Image.NEAREST)
    yy=bb.resize((640,640), Image.NEAREST)
    xx.save("junk/aa.png")
    yy.save("junk/bb.png")
    src = Image.open('junk/aa.png').convert('RGB')
    dst = Image.open('junk/bb.png').convert('RGB')
    src.save("junk/aa.png")
    dst.save("junk/bb.png")
    n = 5 #number of partitions per channel.
    src_handle = Image.open("junk/bb.png")
    dst_handle = Image.open("junk/aa.png")
    src = src_handle.load()
    dst = dst_handle.load()
    assert src_handle.size[0]*src_handle.size[1] == dst_handle.size[0]*dst_handle.size[1],"images must be same size"

    def makePixelList(img):
        l = []
        for x in range(img.size[0]):
            for y in range(img.size[1]):
                l.append((x,y))
        return l

    lsrc = makePixelList(src_handle)
    ldst = makePixelList(dst_handle)

    def sortAndDivide(coordlist,pixelimage,channel): #core
        global src,dst,n
        retlist = []
        #sort
        coordlist.sort(key=lambda t: pixelimage[t][channel])
        #divide
        partitionLength = int(len(coordlist)/n)
        if partitionLength <= 0:
            partitionLength = 1
        if channel < 2:
            for i in range(0,len(coordlist),partitionLength):
                retlist += sortAndDivide(coordlist[i:i+partitionLength],pixelimage,channel+1)
        else:
            retlist += coordlist
        return retlist

    print(src[lsrc[0]])

    lsrc = sortAndDivide(lsrc,src,0)
    ldst = sortAndDivide(ldst,dst,0)

    for i in range(len(ldst)):
        dst[ldst[i]] = src[lsrc[i]]


    filename = time.strftime(output)

    dst_handle.save(filename)

    shutil.copy2(filename, "instagram/")

    custom = "junk/PalletteTemp.png"
    filename0 = (custom)
    return filename0

    """
    import GenIm
    filename0 = 'tmmpp/640_iguana.jpg'   
    filename1 = 'images/Sranger-Tri-001-crop2b.jpg'

    output = "junk/PalletteTemp.png"    
    GenIm.Swappalette(filename0, filename1, output)    
    """    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    #font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    '''
    Usage:
    import GenIm
    img = Image.open("tmmpp/imblend.png")
    x=200;y=200
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text = "Place Text in Image"
    col= (255,0,0)
    xf=10;yf=10
    halo_col = (255,255,255)
    GenIm.Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col)
    '''
def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

def applybin(inputA, outputA):
    im = Image.open(inputA)
    im_grey = im.convert('LA') # convert to grayscale
    width,height = im.size

    total=0
    for i in range(0,width):
        for j in range(0,height):
            total += im_grey.getpixel((i,j))[0]

    mean = total / (width * height)
    image_file = Image.open(inputA)
    imagex = image_file.convert('L')  # convert image to monochrome
    imagey = np.array(imagex)
    binim = binarize_array(imagey, mean)
    cv2.imwrite(outputA, binim)
    return binim
    #import GenIm
    #inputA ="tmmpp/640_iguana.jpg"
    #outputA = "tmmpp/binim02.png"
    #binim = GenIm.applybin(inputA, outputA)
    
def bw(imgFile,outFile):
    #convert image to blackand white
    col = Image.open(imgFile)
    gry = col.convert('L')
    grarray = np.asarray(gry)
    bw = (grarray > grarray.mean())*255
    cv2.imwrite(outFile, bw)
    return bw
    #import GenIm
    #imgFile= 'tmmpp/Effects.png'
    #outFile= 'tmmpp/bw3.png'
    #GenIm.bw(imgFile,outFile)

def Generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def alpha_to_color(image, color=(255, 255, 255)):
    """Set all fully transparent pixels of an RGBA image to the specified color.
    This is a very simple solution that might leave over some ugly edges, due
    to semi-transparent areas. You should use alpha_composite_with color instead.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    x = np.array(image)
    r, g, b, a = np.rollaxis(x, axis=-1)
    r[a == 0] = color[0]
    g[a == 0] = color[1]
    b[a == 0] = color[2] 
    x = np.dstack([r, g, b, a])
    return Image.fromarray(x, 'RGBA')


def alpha_composite(front, back, falpha):
    """Alpha composite two RGBA images.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    front -- PIL RGBA Image object
    back -- PIL RGBA Image object
    """
    front = np.asarray(front)
    back = np.asarray(back)
    result = np.empty(front.shape, dtype='float')
    alpha = np.index_exp[:, :, 3:]
    rgb = np.index_exp[:, :, :3]
    falpha = front[alpha] / 255.0
    balpha = back[alpha] / 255.0
    result[alpha] = falpha + balpha * (1 - falpha)
    old_setting = np.seterr(invalid='ignore')
    result[rgb] = (front[rgb] * falpha + back[rgb] * balpha * (1 - falpha)) / result[alpha]
    np.seterr(**old_setting)
    result[alpha] *= 255
    np.clip(result, 0, 255)
    # astype('uint8') maps np.nan and np.inf to 0
    result = result.astype('uint8')
    result = Image.fromarray(result, 'RGBA')
    return result


def alpha_composite_with_color(image, color=(255, 255, 255)):
    """Alpha composite an RGBA image with a single color image of the
    specified color and the same size as the original image.
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    back = Image.new('RGBA', size=image.size, color=color + (255,))
    return alpha_composite(image, back)


def pure_pil_alpha_to_color_v1(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    NOTE: This version is much slower than the
    alpha_composite_with_color solution. Use it only if
    numpy is not available.
    Source: http://stackoverflow.com/a/9168169/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    def blend_value(back, front, a):
        return (front * a + back * (255 - a)) / 255

    def blend_rgba(back, front):
        result = [blend_value(back[i], front[i], front[3]) for i in (0, 1, 2)]
        return tuple(result + [255])

    im = image.copy()  # don't edit the reference directly
    p = im.load()  # load pixel array
    for y in range(im.size[1]):
        for x in range(im.size[0]):
            p[x, y] = blend_rgba(color + (255,), p[x, y])

    return im

def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    Simpler, faster version than the solutions above.
    Source: http://stackoverflow.com/a/9459208/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    image.load()  # needed for split()
    background = Image.new('RGB', image.size, color)
    background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
    return background    
    
def Rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def Get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()

def Adtext(inputIm,text):
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    Draw_text_with_halo(img, position, text, font, col, halo_col)
    # USE: img = GenIm.Adtext(inputIm,text)
    return text
    
def Signat(imfile,imout):
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
    width, height = imfile.size
    marginx = 325
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    imfile = Draw_text_with_halo(imfile,(x,y), signature_ , fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile

def Centercut(img1, new_width, new_height):
    # def Centercut(path, img1, new_width, new_height):
    # img = Image.open(path+"/"+img1)
    img = Image.open(img1)
    w_var=new_width/2
    h_var=new_height/2
    half_the_width = img.size[0] / 2
    half_the_height = img.size[1] / 2
    img4 = img.crop(
        (
            half_the_width - w_var,
            half_the_height - h_var,
            half_the_width + w_var,
            half_the_height + h_var
        )
    )
    return img4

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



from PIL import Image
import genim
color = (0,0,255,255)
im = genim.CustIm(color)
im

from PIL import Image
import GenIm
fileN = "junk/wideTest4.png"
output= "tmmpp/brightnessTest3.png"
alpha = .8
genim.Brightness(fileN, output, alpha)
view = Image.open("tmmpp/brightnessTest3.png")
view

import Genim
from PIL import Image,ImageFont
img = Image.open("tmmpp/brightnessTest3.png")
position = (30,30)
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
text = "Place Text in Image"
col= (0,0,255)
halo_col = (255,255,255)
genim.Draw_text_with_halo(img, position, text, font, col, halo_col)

# lets get an image
!wget -O tmmpp/iguana.jpg https://upload.wikimedia.org/wikipedia/commons/7/78/Galapagos_iguana1.jpg

# get the original image size

from PIL import Image
im = Image.open("tmmpp/iguana.jpg")
im.size

from PIL import Image
import genim

image = "tmmpp/iguana.jpg"
output = "tmmpp/640_iguana.jpg"
genim.Resize640(image, output)
im = Image.open("tmmpp/640_iguana.jpg")
im.size

from PIL import Image
im = Image.open("tmmpp/640_iguana.jpg")
im

from PIL import Image
import genim
imfile = Image.open('tmmpp/640_iguana.jpg')  
imout = "tmmpp/640_iguanaS.png"
genim.Signat(imfile, imout)

import GenIm
help(GenIm.Signat)

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    
def signat(imfile, imout):
    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    width, height = imfile.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black    
    imfile = draw_text_with_halo(imfile,(x,y), signature_, fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile
img0a = 'junk/th2_20170824111454.jpg'  
imout = "junkim.png"
signat(imfile, imout)

!rm genim.pyc

import GenIm
help(GenIm.BlendIms)

import genim
from genim import *
Temp = Image.open('junk/th2_20170824111454.jpg')
imfile = Temp
imout = "mojunk.jpg"
genim.Signat(imfile, imout)

Temp = Signat(imfile, imout)
SaveTemp(Temp)
im = SaveTemp(Temp)
img = Image.open(im)
img

import genim
from genim import *
Temp = Image.open('junk/th2_20170824111454.jpg')
SaveTemp(Temp)
im = SaveTemp(Temp)
print im
Temp = Image.open('tmmpp/SaveTemp.png')
Temp

import genim
from genim import *
img0a = 'junk/th2_20170824111454.jpg'  
img1a = 'junk/th2_20170824111919.jpg'
alpha = .4
imblend = BlendIms(img0a,img1a,alpha)
imblend.save("tmmpp/imblend.png")

from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
from GenIm import Draw_text_with_halo
def Draw_text_with_effects(img, (x,y), offset, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    xf,yf = offset
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

img = Image.open("tmmpp/imblend.png")
x=50;y=50
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
text = "Place Text in Image"
col= (255,0,0)
offset = (16,16)
halo_col = (255,255,255)
Draw_text_with_effects(img, position, offset, text, font, col, halo_col)
Draw_text_with_halo(img, (x,y), text, font, col, halo_col)

import genim
help(genim)

%%writefile genim.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython

def verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
verify_path('tmmpp/')

def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image tmmpp/img0.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    resulta = ImageChops.blend(img0a,img1a,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython



def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize, (0, 0, 0, 0))

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize, (0, 0, 0, 0))


def blendIms(img0,img1,alpha):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))

    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile
    # gets a random file from a directory. The directory needs to contain only the filetypes required
    # Use:
    # path = r"/home/user/images/"
    # ranfile = RanFile(path)
    # print ranfile


%%writefile saltpost.py
#ONE TIME MANUAL POSTS
#!/home/jack/anaconda2/python
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter

def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()



if __name__ == '__main__':
    nap = randint(500,1200)
    time.sleep(nap)
    isize = (640,640)     
    inp = Image.new('RGB', isize)
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text_col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    textin = (generate_the_word("wordcloud.txt"))
    i2 = draw_text_with_halo(inp, (15, 8), "SaltMan", font, text_col, halo_col)
    
    #txt = Image.new('RGBA', i.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    width, height = inp.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black    
    txt1=draw_text_with_halo(i2,(x,y), signature_, fnt, text_col2, halo_col2)
    
    
    
    # get a font
    fs=randint(15,24)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", fs)
    # get a drawing context
    width, height = inp.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    #text_col2 = (255, 255,230) # bright green
    text_col2 = rndcolor()
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black 
    yy=randint(70,290)
    xx=randint(5,60)
    #iword = (text_model.make_short_sentence(50))
    file_name = 'saltman.txt'
    iword = get_random_line(file_name)
    
    txt3=draw_text_with_halo(txt1,(xx,yy), iword, fnt, text_col2, halo_col2)
   
    vv=randint(320,530)
    vvv=randint(5,10)
    #iword = (text_model.make_short_sentence(50))
    file_name = 'saltman.txt'
    lword = get_random_line(file_name)        
    text_col3 = rndcolor()
    fs2=randint(15,24)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", fs2)
    txt=draw_text_with_halo(txt3,(vvv,vv), lword, fnt, text_col3, halo_col2)
     
    out = Image.alpha_composite(i2, txt)
    out.save("tmp/TM_POST.jpg")

#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
#f = open("Mine.txt")
#text = f.read()
# Build the model.
#text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
#random.choice(open('Mine.txt').readlines())



file_name = 'Mine.txt'
STR = get_random_line(file_name)

#STR = ("Sometimes we have visitors at night. If lucky we don't wake up.")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "tmp/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')

photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])
#print STR


from fractions import Fraction
class Thefraction:

    def __init__(self,a,b):
        self.a = a
        self.b =b
    def add(self):
        return self.a+ self.b
    def subtract(self):
        return self.a-self.b
    def divide(self):
        return self.a/self.b
    def multiply(self):
        return self.a/self.b

if __name__=='__main__':
    try:
        a = Fraction(input('Please type first fraction '))
        b = Fraction(input('Please type second fraction '))
        choice = int(input('Please select one of these 1. add 2. subtract 3. divide 4. multiply '))
        if choice ==1:
            print(Thefraction(a,b).add())
        elif choice==2:
            print(Thefraction(a,b).subtract())
        elif choice==3:
            print(Thefraction(a,b).divide())
        elif choice==4:
            print(Thefraction(a,b).multiply())
    except ValueError:
        print('Value error!!!!!')

%%writefile genim.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython

def Verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
Verify_path('tmmpp/')

def Resize640(image, output):
    Bp=Image.open(image)
    width, height = Bp.size
    if width>height:
        w1=(width-height)/2
        w2 = width-w1
        h1=height-height
        h2=height
        Cc=Bp.crop((w1,h1,w2,h2))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
    else:
        w1= width - width
        w2 = width
        h1 = (height-width)/2
        h2= height - h1
        Cc=Bp.crop((w1,h1,w2,h2))
        #Cc=Bp.crop((260,680,680,940))
        #Cc=Bp.crop((0,260,680,940))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
        return resizeIm
        # USE example
        #image = "junk/wide.png"
        #output = "junk/wideTest4.png"
        #nim = genim.Resize640(image, output)    

def CustIm(color):
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, color)
    img0.save('tmmpp/img0.png')
    return img0

    # generate and save Custom color/transparency image as: tmmpp/img0.png
    #CustIm(color)
        
    
def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image as: tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image as: tmmpp/img1.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    op1 = Image.open(img0a).convert("RGBA")
    op2 = Image.open(img1a).convert("RGBA")
    resulta = ImageChops.blend(op1,op2,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

def Brightness(fileN, output, alpha):
    alpha = float(alpha)
    im3 = Image.open(fileN)
    # multiply each pixel by < 1.0 (darker image)
    # multiply each pixel by > 1.0 (lighter image)
    # works best with .jpg and .png files
    # note that lambda is akin to a one-line function
    #im2 = im1.point(lambda p: p * 0.9)
    im4 = im3.point(lambda p: p * alpha)
    im4.save(output)
    return im4
    #Usage Example:
    #fileN = "junk/wideTest4.png"
    #output= "tmmpp/brightnessTest3.png"
    #alpha = 1.2
    #genim.brightness(fileN, output, alpha)
    #view = Image.open("tmmpp/brightnessTest3.png")
    #view
def wordcloud(inputF,outputF):
    title = "Python Stuff"
    signature_ = "Jack Northrup" 
    count = 1
    start = Image.open(inputF).convert('RGBA')
    start.save('tmmpp/textbacktmp.jpg')
    while count < 256 :
        base = Image.open('tmmpp/textbacktmp.jpg').convert('RGBA')

        #8 5 4 6 3 2
        # make a blank image for the text, initialized to transparent text color
        txt = Image.new('RGBA', base.size, (255,255,255,0))
        # get a font
        #generate a random size for the font
        int_n = int(count*.2)
        Fsize = randint(15,100-int_n)
        fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
        # get a drawing context
        d = ImageDraw.Draw(txt)

        width, height = base.size


        def generate_the_word(infile):
            with open(infile) as f:
                contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            line_number = random.randrange(0, len(lines))
            return lines[line_number]
        textin = (generate_the_word("wordcloud.txt"))

        # calculate the x,y coordinates of the text
        w, h = base.size
        Lw = randint(-150,w-50)
        Lh = randint(-50,h-30)
        #textin = "The TwitterBot Project" 
        #generate random color and opacity
        r = randint(0,256)
        g = randint(0,256)
        b = randint(0,256)
        a = randint(0,count)
        d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

        out = Image.alpha_composite(base, txt)
        out.save("tmmpp/textbacktmp.jpg", "JPEG")
        count=count+1

    #base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', out.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = out.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    marginx = 225
    marginy = 50
    x = width - marginx
    y = height - marginy

    d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

    out = Image.alpha_composite(out, txt)
    out.save("tmmpp/tmp.jpg", "JPEG")
    # save the image then reopen to put a title
    base = Image.open('tmmpp/tmp.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    x = 90
    y = 10

    d.text((x,y), title , font=fnt, fill=(0,0,0,250))

    out2 = Image.alpha_composite(base, txt)
    out2.save(outputF, "JPEG")
    out2.show()
    
    #outputF = 'tmmpp/wordcloud_01.jpg'
    #inputF = 'tmmpp/brightnessTest3.png'
    #wordcloud(inputF,outputF)

def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    '''
    Usage:
    img = Image.open("tmmpp/imblend.png")
    x=200;y=200
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text = "Place Text in Image"
    col= (255,0,0)
    xf=10;yf=10
    halo_col = (255,255,255)
    Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col)
    '''
def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

def applybin(inputA, outputA):
    im = Image.open(inputA)
    im_grey = im.convert('LA') # convert to grayscale
    width,height = im.size

    total=0
    for i in range(0,width):
        for j in range(0,height):
            total += im_grey.getpixel((i,j))[0]

    mean = total / (width * height)
    image_file = Image.open(inputA)
    imagex = image_file.convert('L')  # convert image to monochrome
    imagey = np.array(imagex)
    binim = binarize_array(imagey, mean)
    cv2.imwrite(outputA, binim)
    return binim
    #inputA ="tmmpp/640_iguana.jpg"
    #outputA = "tmmpp/binim02.png"
    #binim = applybin(inputA, outputA)
    
def bw(imgFile,outFile):
    #convert image to blackand white
    col = Image.open(imgFile)
    gry = col.convert('L')
    grarray = np.asarray(gry)
    bw = (grarray > grarray.mean())*255
    cv2.imwrite(outFile, bw)
    return bw
    #imgFile= 'tmmpp/Effects.png'
    #outFile= 'tmmpp/bw3.png'
    #genim.bw(imgFile,outFile)

def Generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    
def Rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def Get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()

def Adtext(inputIm,text):
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    Draw_text_with_halo(img, position, text, font, col, halo_col)
    # USE: img = draw_text_with_halo(inputIm, (15, 8), text, font, text_color, halo_color)
    return text
    
def Signat(imfile,imout):
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
    width, height = imfile.size
    marginx = 325
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    imfile = Draw_text_with_halo(imfile,(x,y), signature_ , fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile

def Centercut(path, img1, new_width, new_height):
    img = Image.open(path+"/"+img1)
    w_var=new_width/2
    h_var=new_height/2
    half_the_width = img.size[0] / 2
    half_the_height = img.size[1] / 2
    img4 = img.crop(
        (
            half_the_width - w_var,
            half_the_height - h_var,
            half_the_width + w_var,
            half_the_height + h_var
        )
    )
    return img4

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



!rm genim.pyc

!/home/jack/miniconda3/envs/cloned_base/bin/python GenIm.py

import GenIm 
help(GenIm)

%%writefile genim.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import cv2
import sys
import twython
from twython import Twython
import shutil
import numpy as np

def Verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
Verify_path('tmmpp/')

def Resize640(image, output):
    Bp=Image.open(image)
    width, height = Bp.size
    if width>height:
        w1=(width-height)/2
        w2 = width-w1
        h1=height-height
        h2=height
        Cc=Bp.crop((w1,h1,w2,h2))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
    else:
        w1= width - width
        w2 = width
        h1 = (height-width)/2
        h2= height - h1
        Cc=Bp.crop((w1,h1,w2,h2))
        #Cc=Bp.crop((260,680,680,940))
        #Cc=Bp.crop((0,260,680,940))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
        return resizeIm
        # USE example
        #image = "junk/wide.png"
        #output = "junk/wideTest4.png"
        #nim = genim.Resize640(image, output)    

def CustIm(color):
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, color)
    img0.save('tmmpp/img0.png')
    return img0

    # generate and save Custom color/transparency image as: tmmpp/img0.png
    # GenIm.CustIm(color)
        
    
def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image as: tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image as: tmmpp/img1.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    op1 = Image.open(img0a).convert("RGBA")
    op2 = Image.open(img1a).convert("RGBA")
    resulta = ImageChops.blend(op1,op2,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

def Brightness(fileN, output, alpha):
    alpha = float(alpha)
    im3 = Image.open(fileN)
    # multiply each pixel by < 1.0 (darker image)
    # multiply each pixel by > 1.0 (lighter image)
    # works best with .jpg and .png files
    # note that lambda is akin to a one-line function
    #im2 = im1.point(lambda p: p * 0.9)
    im4 = im3.point(lambda p: p * alpha)
    im4.save(output)
    return im4
    #Usage Example:
    #fileN = "junk/wideTest4.png"
    #output= "tmmpp/brightnessTest3.png"
    #alpha = 1.2
    #GenIm.brightness(fileN, output, alpha)
    #view = Image.open("tmmpp/brightnessTest3.png")
    #view
def wordcloud(inputF,outputF):
    title = "Python Stuff"
    signature_ = "Jack Northrup" 
    count = 1
    start = Image.open(inputF).convert('RGBA')
    start.save('tmmpp/textbacktmp.jpg')
    while count < 256 :
        base = Image.open('tmmpp/textbacktmp.jpg').convert('RGBA')

        #8 5 4 6 3 2
        # make a blank image for the text, initialized to transparent text color
        txt = Image.new('RGBA', base.size, (255,255,255,0))
        # get a font
        #generate a random size for the font
        int_n = int(count*.2)
        Fsize = randint(15,100-int_n)
        fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
        # get a drawing context
        d = ImageDraw.Draw(txt)
        width, height = base.size
        


        def generate_the_word(infile):
            with open(infile) as f:
                contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            line_number = random.randrange(0, len(lines))
            return lines[line_number]
        textin = (generate_the_word("wordcloud.txt"))

        # calculate the x,y coordinates of the text
        w, h = base.size
        Lw = randint(-150,w-50)
        Lh = randint(-50,h-30)
        #textin = "The TwitterBot Project" 
        #generate random color and opacity
        r = randint(0,256)
        g = randint(0,256)
        b = randint(0,256)
        a = randint(0,count)
        d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

        out = Image.alpha_composite(base, txt)
        out.save("tmmpp/textbacktmp.jpg", "JPEG")
        count=count+1

    #base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', out.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = out.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    marginx = 225
    marginy = 50
    x = width - marginx
    y = height - marginy

    d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

    out = Image.alpha_composite(out, txt)
    out.save("tmmpp/tmp.jpg", "JPEG")
    # save the image then reopen to put a title
    base = Image.open('tmmpp/tmp.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    x = 90
    y = 10
    d.text((x,y), title , font=fnt, fill=(0,0,0,250))
    out2 = Image.alpha_composite(base, txt)
    out2.save(outputF, "JPEG")
    out2.show()
    return out2
    #outputF = 'tmmpp/wordcloud_01.jpg'
    #inputF = 'tmmpp/brightnessTest3.png'
    #wordcloud(inputF,outputF)

n=5
def Swappalette(filename0, filename1, output):
    #input1='/home/jack/Desktop/imagebot/colorful/20170824124329.jpg'
    #input2='/home/jack/Desktop/imagebot/posted/'
    shutil.copy2(filename0, 'instagram/') # complete target filename given
    shutil.copy2(filename1, 'instagram/')# target filename is /dst/dir/file.ext

    aa = Image.open(filename0).convert("RGB")
    #bb = Image.open("/home/jack/Documents/GG.jpg").convert("RGB")
    bb = Image.open(filename1).convert("RGB")
    xx=aa.resize((640,640), Image.NEAREST)
    yy=bb.resize((640,640), Image.NEAREST)
    xx.save("junk/aa.png")
    yy.save("junk/bb.png")
    src = Image.open('junk/aa.png').convert('RGB')
    dst = Image.open('junk/bb.png').convert('RGB')
    src.save("junk/aa.png")
    dst.save("junk/bb.png")
    n = 5 #number of partitions per channel.
    src_handle = Image.open("junk/bb.png")
    dst_handle = Image.open("junk/aa.png")
    src = src_handle.load()
    dst = dst_handle.load()
    assert src_handle.size[0]*src_handle.size[1] == dst_handle.size[0]*dst_handle.size[1],"images must be same size"

    def makePixelList(img):
        l = []
        for x in range(img.size[0]):
            for y in range(img.size[1]):
                l.append((x,y))
        return l

    lsrc = makePixelList(src_handle)
    ldst = makePixelList(dst_handle)

    def sortAndDivide(coordlist,pixelimage,channel): #core
        global src,dst,n
        retlist = []
        #sort
        coordlist.sort(key=lambda t: pixelimage[t][channel])
        #divide
        partitionLength = int(len(coordlist)/n)
        if partitionLength <= 0:
            partitionLength = 1
        if channel < 2:
            for i in range(0,len(coordlist),partitionLength):
                retlist += sortAndDivide(coordlist[i:i+partitionLength],pixelimage,channel+1)
        else:
            retlist += coordlist
        return retlist

    print(src[lsrc[0]])

    lsrc = sortAndDivide(lsrc,src,0)
    ldst = sortAndDivide(ldst,dst,0)

    for i in range(len(ldst)):
        dst[ldst[i]] = src[lsrc[i]]


    filename = time.strftime(output)

    dst_handle.save(filename)

    shutil.copy2(filename, "instagram/")

    custom = "junk/PalletteTemp.png"
    filename0 = (custom)
    return filename0

    """
    import GenIm
    filename0 = 'tmmpp/640_iguana.jpg'   
    filename1 = 'images/Sranger-Tri-001-crop2b.jpg'

    output = "junk/PalletteTemp.png"    
    GenIm.Swappalette(filename0, filename1, output)    
    """    
def RanFile(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+base_image)
    return ranfile

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    #font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

#def Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col):
#    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
#    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
#    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
#    blurred_halo = halo.filter(ImageFilter.BLUR)
#    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
#    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    '''
    Usage:
    import GenIm
    img = Image.open("tmmpp/imblend.png")
    x=200;y=200
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text = "Place Text in Image"
    col= (255,0,0)
    xf=10;yf=10
    halo_col = (255,255,255)
    GenIm.Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col)
    '''
def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

def applybin(inputA, outputA):
    im = Image.open(inputA)
    im_grey = im.convert('LA') # convert to grayscale
    width,height = im.size

    total=0
    for i in range(0,width):
        for j in range(0,height):
            total += im_grey.getpixel((i,j))[0]

    mean = total / (width * height)
    image_file = Image.open(inputA)
    imagex = image_file.convert('L')  # convert image to monochrome
    imagey = np.array(imagex)
    binim = binarize_array(imagey, mean)
    cv2.imwrite(outputA, binim)
    return binim
    #import GenIm
    #inputA ="tmmpp/640_iguana.jpg"
    #outputA = "tmmpp/binim02.png"
    #binim = GenIm.applybin(inputA, outputA)
    
def bw(imgFile,outFile):
    #convert image to blackand white
    col = Image.open(imgFile)
    gry = col.convert('L')
    grarray = np.asarray(gry)
    bw = (grarray > grarray.mean())*255
    cv2.imwrite(outFile, bw)
    return bw
    #import GenIm
    #imgFile= 'tmmpp/Effects.png'
    #outFile= 'tmmpp/bw3.png'
    #GenIm.bw(imgFile,outFile)

def Generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def alpha_to_color(image, color=(255, 255, 255)):
    """Set all fully transparent pixels of an RGBA image to the specified color.
    This is a very simple solution that might leave over some ugly edges, due
    to semi-transparent areas. You should use alpha_composite_with color instead.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    x = np.array(image)
    r, g, b, a = np.rollaxis(x, axis=-1)
    r[a == 0] = color[0]
    g[a == 0] = color[1]
    b[a == 0] = color[2] 
    x = np.dstack([r, g, b, a])
    return Image.fromarray(x, 'RGBA')


def alpha_composite(front, back, falpha):
    """Alpha composite two RGBA images.
    Source: http://stackoverflow.com/a/9166671/284318
    Keyword Arguments:
    front -- PIL RGBA Image object
    back -- PIL RGBA Image object
    """
    front = np.asarray(front)
    back = np.asarray(back)
    result = np.empty(front.shape, dtype='float')
    alpha = np.index_exp[:, :, 3:]
    rgb = np.index_exp[:, :, :3]
    falpha = front[alpha] / 255.0
    balpha = back[alpha] / 255.0
    result[alpha] = falpha + balpha * (1 - falpha)
    old_setting = np.seterr(invalid='ignore')
    result[rgb] = (front[rgb] * falpha + back[rgb] * balpha * (1 - falpha)) / result[alpha]
    np.seterr(**old_setting)
    result[alpha] *= 255
    np.clip(result, 0, 255)
    # astype('uint8') maps np.nan and np.inf to 0
    result = result.astype('uint8')
    result = Image.fromarray(result, 'RGBA')
    return result


def alpha_composite_with_color(image, color=(255, 255, 255)):
    """Alpha composite an RGBA image with a single color image of the
    specified color and the same size as the original image.
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    back = Image.new('RGBA', size=image.size, color=color + (255,))
    return alpha_composite(image, back)


def pure_pil_alpha_to_color_v1(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    NOTE: This version is much slower than the
    alpha_composite_with_color solution. Use it only if
    numpy is not available.
    Source: http://stackoverflow.com/a/9168169/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """ 
    def blend_value(back, front, a):
        return (front * a + back * (255 - a)) / 255

    def blend_rgba(back, front):
        result = [blend_value(back[i], front[i], front[3]) for i in (0, 1, 2)]
        return tuple(result + [255])

    im = image.copy()  # don't edit the reference directly
    p = im.load()  # load pixel array
    for y in range(im.size[1]):
        for x in range(im.size[0]):
            p[x, y] = blend_rgba(color + (255,), p[x, y])

    return im

def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.
    Simpler, faster version than the solutions above.
    Source: http://stackoverflow.com/a/9459208/284318
    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)
    """
    image.load()  # needed for split()
    background = Image.new('RGB', image.size, color)
    background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
    return background    
    
def Rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def Get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()

def Adtext(inputIm,text):
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    Draw_text_with_halo(img, position, text, font, col, halo_col)
    # USE: img = GenIm.Adtext(inputIm,text)
    return text
    
def Signat(imfile,imout):
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
    width, height = imfile.size
    marginx = 325
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    imfile = Draw_text_with_halo(imfile,(x,y), signature_ , fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile

def Centercut(img1, new_width, new_height):
    # def Centercut(path, img1, new_width, new_height):
    # img = Image.open(path+"/"+img1)
    img = Image.open(img1)
    w_var=new_width/2
    h_var=new_height/2
    half_the_width = img.size[0] / 2
    half_the_height = img.size[1] / 2
    img4 = img.crop(
        (
            half_the_width - w_var,
            half_the_height - h_var,
            half_the_width + w_var,
            half_the_height + h_var
        )
    )
    return img4

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



from PIL import Image
import genim
color = (0,0,255,255)
im = genim.CustIm(color)
im

!ls junk

from PIL import Image
import GenIm
fileN = "junk/Sunday2_20220925-173127_.png"
output= "tmmpp/brightnessTest3.png"
alpha = .8
genim.Brightness(fileN, output, alpha)
view = Image.open("tmmpp/brightnessTest3.png")
view

import GenIm
from PIL import Image,ImageFont
img = Image.open("tmmpp/brightnessTest3.png")
position = (30,30)
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
text = "Place Text in Image"
col= (0,0,255)
halo_col = (255,255,255)
genim.Draw_text_with_halo(img, position, text, font, col, halo_col)

# lets get an image
!wget -O tmmpp/iguana.jpg https://upload.wikimedia.org/wikipedia/commons/7/78/Galapagos_iguana1.jpg

# get the original image size

from PIL import Image
im = Image.open("tmmpp/iguana.jpg")
im.size

from PIL import Image
import genim

image = "tmmpp/iguana.jpg"
output = "tmmpp/640_iguana.jpg"
genim.Resize640(image, output)
im = Image.open("tmmpp/640_iguana.jpg")
im.size

from PIL import Image
im = Image.open("tmmpp/640_iguana.jpg")
im

from PIL import Image
import genim
imfile = Image.open('tmmpp/brightnessTest3.png')  
imout = "tmmpp/640_iguanaS.png"
genim.Signat(imfile, imout)

import GenIm
help(GenIm.Signat)

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    
def signat(imfile, imout):
    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    width, height = imfile.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black    
    imfile = draw_text_with_halo(imfile,(x,y), signature_, fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile
img0a = 'tmmpp/brightnessTest3.png'  
imout = "junk/junkim.png"
signat(imfile, imout)

import sys
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))


i = Image.open("tmmpp/brightnessTest3.png")
font = ImageFont.load_default()
txt = 'Example 1234'
text_col = (0, 255, 0) # bright green
halo_col = (0, 0, 0)   # black
i2 = draw_text_with_halo(i, (20, 20), txt, font, text_col, halo_col)
i2.save('halo.png')
i2

import sys
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
kernel = [
    0, 1, 2, 1, 0,
    1, 2, 4, 2, 1,
    2, 4, 8, 4, 1,
    1, 2, 4, 2, 1,
    0, 1, 2, 1, 0]
kernelsum = sum(kernel)
myfilter = ImageFilter.Kernel((5, 5), kernel, scale = 0.02 * sum(kernel))
blurred_halo = myfilter #halo.filter(myfilter)

def draw_text_with_blurred_halo(img, position, text, font, col, halo_col,blurred_halo):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.blurred_halo)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))





def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))


i = Image.open("junk/temp-contrastedimage.jpg")

font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 60)
txt = 'Example 1234'
text_col = (0, 0, 0) # bright green
halo_col = (255,255,255)   # black
i2 = draw_text_with_halo(i, (120, 120), txt, font, text_col, halo_col)
i2.save('halo.png')
i2

#you can choose different filter instead of BLUR to get different "halo"
#it works even with very large fonts and still looks great
#To get thicker halo, you may use filter like this:
#The part scale = 0.1 * sum(kernel) makes the halo thicker (small values) or dimmer (big values).

import GenIm
help(GenIm.BlendIms)

img0a="toplayer/newfolder14320220925141629.png"
img1a="marblepaper/IMG2_0091.jpg"
alpha =.6

im3=BlendIms(img0a, img1a, alpha)
m4 = im3.point(lambda p: p * 1.2)
m4

!ls junk

import genim
from genim import *
Temp = Image.open('junk/th2_20170824111454.jpg')
imfile = Temp
imout = "mojunk.jpg"
genim.Signat(imfile, imout)

Temp = Signat(imfile, imout)
SaveTemp(Temp)
im = SaveTemp(Temp)
img = Image.open(im)
img

import genim
from genim import *
Temp = Image.open('junk/th2_20170824111454.jpg')
SaveTemp(Temp)
im = SaveTemp(Temp)
print im
Temp = Image.open('tmmpp/SaveTemp.png')
Temp

import genim
from genim import *
img0a = 'junk/th2_20170824111454.jpg'  
img1a = 'junk/th2_20170824111919.jpg'
alpha = .4
imblend = BlendIms(img0a,img1a,alpha)
imblend.save("tmmpp/imblend.png")

from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
from GenIm import Draw_text_with_halo
def Draw_text_with_effects(img, (x,y), offset, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    xf,yf = offset
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

img = Image.open("tmmpp/imblend.png")
x=50;y=50
font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
text = "Place Text in Image"
col= (255,0,0)
offset = (16,16)
halo_col = (255,255,255)
Draw_text_with_effects(img, position, offset, text, font, col, halo_col)
Draw_text_with_halo(img, (x,y), text, font, col, halo_col)

import genim
help(genim)

%%writefile genim.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython

def verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
verify_path('tmmpp/')

def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image tmmpp/img0.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    resulta = ImageChops.blend(img0a,img1a,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

    
def RanFiles(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+"/"+base_image)
    return ranfile

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython



def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize, (0, 0, 0, 0))

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize, (0, 0, 0, 0))


def blendIms(img0,img1,alpha):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))

    
def RanFiles(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+"/"+base_image)
    return ranfile
    # gets a random file from a directory. The directory needs to contain only the filetypes required
    # Use:
    # path = r"/home/user/images/"
    # ranfile = RanFile(path)
    # print ranfile


%%writefile saltpost.py
#ONE TIME MANUAL POSTS
#!/home/jack/anaconda2/python
import random
from random import randint
import time
import markovify
import os
import sys
sys.path.insert(1, "/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter

def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]

def draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()



if __name__ == '__main__':
    nap = randint(500,1200)
    time.sleep(nap)
    isize = (640,640)     
    inp = Image.new('RGB', isize)
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text_col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    textin = (generate_the_word("wordcloud.txt"))
    i2 = draw_text_with_halo(inp, (15, 8), "SaltMan", font, text_col, halo_col)
    
    #txt = Image.new('RGBA', i.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    width, height = inp.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black    
    txt1=draw_text_with_halo(i2,(x,y), signature_, fnt, text_col2, halo_col2)
    
    
    
    # get a font
    fs=randint(15,24)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", fs)
    # get a drawing context
    width, height = inp.size
    marginx = 225
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    #text_col2 = (150, 255, 150) # bright green
    #halo_col2 = (0, 0, 0)   # black
    #text_col2 = (255, 255,230) # bright green
    text_col2 = rndcolor()
    halo_col2 = (0, 0, 0)   # black
    #text_col2 = (0, 0, 0)  # bright green
    #halo_col2 = (255, 255,230)  # black 
    yy=randint(70,290)
    xx=randint(5,60)
    #iword = (text_model.make_short_sentence(50))
    file_name = 'saltman.txt'
    iword = get_random_line(file_name)
    
    txt3=draw_text_with_halo(txt1,(xx,yy), iword, fnt, text_col2, halo_col2)
   
    vv=randint(320,530)
    vvv=randint(5,10)
    #iword = (text_model.make_short_sentence(50))
    file_name = 'saltman.txt'
    lword = get_random_line(file_name)        
    text_col3 = rndcolor()
    fs2=randint(15,24)
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", fs2)
    txt=draw_text_with_halo(txt3,(vvv,vv), lword, fnt, text_col3, halo_col2)
     
    out = Image.alpha_composite(i2, txt)
    out.save("tmp/TM_POST.jpg")

#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
#f = open("Mine.txt")
#text = f.read()
# Build the model.
#text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
#random.choice(open('Mine.txt').readlines())



file_name = 'Mine.txt'
STR = get_random_line(file_name)

#STR = ("Sometimes we have visitors at night. If lucky we don't wake up.")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "tmp/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')

photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])
#print STR


from fractions import Fraction
class Thefraction:

    def __init__(self,a,b):
        self.a = a
        self.b =b
    def add(self):
        return self.a+ self.b
    def subtract(self):
        return self.a-self.b
    def divide(self):
        return self.a/self.b
    def multiply(self):
        return self.a/self.b

if __name__=='__main__':
    try:
        a = Fraction(input('Please type first fraction '))
        b = Fraction(input('Please type second fraction '))
        choice = int(input('Please select one of these 1. add 2. subtract 3. divide 4. multiply '))
        if choice ==1:
            print(Thefraction(a,b).add())
        elif choice==2:
            print(Thefraction(a,b).subtract())
        elif choice==3:
            print(Thefraction(a,b).divide())
        elif choice==4:
            print(Thefraction(a,b).multiply())
    except ValueError:
        print('Value error!!!!!')

#%%writefile GenIm.py
from PIL import Image, ImageChops, ImageDraw, ImageFont, ImageFilter
import random
from random import randint
import time
import markovify
import os
import sys
import twython
from twython import Twython

def Verify_path(path):
    try:
        os.makedirs(path)
    except OSError as exception:
        if exception:
            pass
# creates a tmmpp/ directory for tracking and debug of image generation            
Verify_path('tmmpp/')

def Resize640(image, output):
    Bp=Image.open(image)
    width, height = Bp.size
    if width>height:
        w1=(width-height)/2
        w2 = width-w1
        h1=height-height
        h2=height
        Cc=Bp.crop((w1,h1,w2,h2))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
    else:
        w1= width - width
        w2 = width
        h1 = (height-width)/2
        h2= height - h1
        Cc=Bp.crop((w1,h1,w2,h2))
        #Cc=Bp.crop((260,680,680,940))
        #Cc=Bp.crop((0,260,680,940))
        resizeIm = Cc.resize((640,640), Image.NEAREST)
        resizeIm.save(output)
        return resizeIm
        # USE example
        #image = "junk/wide.png"
        #output = "junk/wideTest4.png"
        #nim = genim.Resize640(image, output)    

def CustIm(color):
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, color)
    img0.save('tmmpp/img0.png')
    return img0

    # generate and save Custom color/transparency image as: tmmpp/img0.png
    #CustIm(color)
        
    
def GenIm0():
    imsize0 = (640,640)
    img0 = Image.new('RGBA', imsize0, (255, 0, 0, 0))
    img0.save('tmmpp/img0.png')
    return img0
# generate and save blank image as: tmmpp/img0.png
GenIm0()

def GenIm1():
    imsize1 = (640,640)
    img1 = Image.new('RGBA', imsize1, (0,255, 0, 0))
    img1.save('tmmpp/img1.png')
    return img1
# generate and save blank image as: tmmpp/img1.png
GenIm1()    


def BlendIms(img0a,img1a,alpha):
    op1 = Image.open(img0a).convert("RGBA")
    op2 = Image.open(img1a).convert("RGBA")
    resulta = ImageChops.blend(op1,op2,alpha)
    resulta.save('tmmpp/resulta.png')
    return resulta

def Brightness(fileN, output, alpha):
    alpha = float(alpha)
    im3 = Image.open(fileN)
    # multiply each pixel by < 1.0 (darker image)
    # multiply each pixel by > 1.0 (lighter image)
    # works best with .jpg and .png files
    # note that lambda is akin to a one-line function
    #im2 = im1.point(lambda p: p * 0.9)
    im4 = im3.point(lambda p: p * alpha)
    im4.save(output)
    return im4
    #Usage Example:
    #fileN = "junk/wideTest4.png"
    #output= "tmmpp/brightnessTest3.png"
    #alpha = 1.2
    #genim.brightness(fileN, output, alpha)
    #view = Image.open("tmmpp/brightnessTest3.png")
    #view
def wordcloud(inputF,outputF):
    title = "Python Stuff"
    signature_ = "Jack Northrup" 
    count = 1
    start = Image.open(inputF).convert('RGBA')
    start.save('tmmpp/textbacktmp.jpg')
    while count < 256 :
        base = Image.open('tmmpp/textbacktmp.jpg').convert('RGBA')

        #8 5 4 6 3 2
        # make a blank image for the text, initialized to transparent text color
        txt = Image.new('RGBA', base.size, (255,255,255,0))
        # get a font
        #generate a random size for the font
        int_n = int(count*.2)
        Fsize = randint(15,100-int_n)
        fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", Fsize)
        # get a drawing context
        d = ImageDraw.Draw(txt)

        width, height = base.size


        def generate_the_word(infile):
            with open(infile) as f:
                contents_of_file = f.read()
            lines = contents_of_file.splitlines()
            line_number = random.randrange(0, len(lines))
            return lines[line_number]
        textin = (generate_the_word("wordcloud.txt"))

        # calculate the x,y coordinates of the text
        w, h = base.size
        Lw = randint(-150,w-50)
        Lh = randint(-50,h-30)
        #textin = "The TwitterBot Project" 
        #generate random color and opacity
        r = randint(0,256)
        g = randint(0,256)
        b = randint(0,256)
        a = randint(0,count)
        d.text((Lw,Lh), textin, font=fnt, fill=(r,g,b,a))

        out = Image.alpha_composite(base, txt)
        out.save("tmmpp/textbacktmp.jpg", "JPEG")
        count=count+1

    #base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', out.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = out.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    marginx = 225
    marginy = 50
    x = width - marginx
    y = height - marginy

    d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

    out = Image.alpha_composite(out, txt)
    out.save("tmmpp/tmp.jpg", "JPEG")
    # save the image then reopen to put a title
    base = Image.open('tmmpp/tmp.jpg').convert('RGBA')
    #8 5 4 6 3 2
    # make a blank image for the text, initialized to transparent text color
    txt = Image.new('RGBA', base.size, (255,255,255,0))

    # get a font
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
    # get a drawing context
    d = ImageDraw.Draw(txt)

    width, height = base.size
    # calculate the x,y coordinates of the text
    #marginx = 325
    #marginy = 75
    x = 90
    y = 10

    d.text((x,y), title , font=fnt, fill=(0,0,0,250))

    out2 = Image.alpha_composite(base, txt)
    out2.save(outputF, "JPEG")
    out2.show()
    
    #outputF = 'tmmpp/wordcloud_01.jpg'
    #inputF = 'tmmpp/brightnessTest3.png'
    #wordcloud(inputF,outputF)

def RanFiles(path):
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    ranfile=(path+"/"+base_image)
    return ranfile

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_effects(img, x,y, xf,yf, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))
    '''
    Usage:
    img = Image.open("tmmpp/imblend.png")
    x=200;y=200
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    text = "Place Text in Image"
    col= (255,0,0)
    xf=10;yf=10
    halo_col = (255,255,255)
    Draw_text_with_effects(img, (x,y), (xf,yf), text, font, col, halo_col)
    '''
def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

def applybin(inputA, outputA):
    im = Image.open(inputA)
    im_grey = im.convert('LA') # convert to grayscale
    width,height = im.size

    total=0
    for i in range(0,width):
        for j in range(0,height):
            total += im_grey.getpixel((i,j))[0]

    mean = total / (width * height)
    image_file = Image.open(inputA)
    imagex = image_file.convert('L')  # convert image to monochrome
    imagey = np.array(imagex)
    binim = binarize_array(imagey, mean)
    cv2.imwrite(outputA, binim)
    return binim
    #inputA ="tmmpp/640_iguana.jpg"
    #outputA = "tmmpp/binim02.png"
    #binim = applybin(inputA, outputA)
    
def bw(imgFile,outFile):
    #convert image to blackand white
    col = Image.open(imgFile)
    gry = col.convert('L')
    grarray = np.asarray(gry)
    bw = (grarray > grarray.mean())*255
    cv2.imwrite(outFile, bw)
    return bw
    #imgFile= 'tmmpp/Effects.png'
    #outFile= 'tmmpp/bw3.png'
    #genim.bw(imgFile,outFile)

def Generate_the_word(infile):
    with open(infile) as f:
        contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
    
def Rndcolor():
    r = randint(50,255)
    g = randint(50,255)
    b = randint(50,255)
    rndcolor = (r,g,b) 
    return rndcolor

def Get_random_line(file_name):
    total_bytes = os.stat(file_name).st_size 
    random_point = random.randint(0, total_bytes)
    file = open(file_name)
    file.seek(random_point)
    file.readline() # skip this line to clear the partial line
    return file.readline()

def Adtext(inputIm,text):
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    col = (255, 255,230) # bright green
    halo_col = (0, 0, 0)   # black
    Draw_text_with_halo(img, position, text, font, col, halo_col)
    # USE: img = draw_text_with_halo(inputIm, (15, 8), text, font, text_color, halo_color)
    return text
    
def Signat(imfile,imout):
    fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 25)
    width, height = imfile.size
    marginx = 325
    marginy = 35
    x = width - marginx
    y = height - marginy
    signature_ = "The TwitterBot Project" 
    text_col2 = (255, 255,230) # bright green
    halo_col2 = (0, 0, 0)   # black
    imfile = Draw_text_with_halo(imfile,(x,y), signature_ , fnt, text_col2, halo_col2) 
    imfile.save(imout)
    return imfile

def Centercut(path, img1, new_width, new_height):
    img = Image.open(path+"/"+img1)
    w_var=new_width/2
    h_var=new_height/2
    half_the_width = img.size[0] / 2
    half_the_height = img.size[1] / 2
    img4 = img.crop(
        (
            half_the_width - w_var,
            half_the_height - h_var,
            half_the_width + w_var,
            half_the_height + h_var
        )
    )
    return img4

def SaveTempU(TempU):
    tempU = time.strftime("tmmpp/SaveTempU_%Y%m%d%H%M%S.png")
    TempU.save(tempu)
    return filepath

def SaveTemp(Temp):
    Tempname = time.strftime("tmmpp/SaveTemp.png")
    Temp.save(Tempname)
    return Tempname

def SaveName(savepath,imName):
    filename = time.strftime("SaveName_%Y%m%d%H%M%S.png")
    filepath = os.path.join(savepath,filename)
    imName.save(filepath)
    return filepath



!rm __pycache__/genim.cpython-39.pyc

!ls __pycache__

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    #font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_effects(img, x,y, xf,yf, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text((x-xf,y+xf), text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text((x,y), text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))

def Draw_text_with_halo(img, position, text, font, col, halo_col):
    halo = Image.new('RGBA', img.size, (0, 0, 0, 0))
    #font = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 40)
    ImageDraw.Draw(halo).text(position, text, font = font, fill = halo_col)
    blurred_halo = halo.filter(ImageFilter.BLUR)
    ImageDraw.Draw(blurred_halo).text(position, text, font = font, fill = col)
    return Image.composite(img, blurred_halo, ImageChops.invert(blurred_halo))


from genim import *
path = "posterize"
filename =RanFiles(path)
print(filename)

!cp /home/jack/.fonts/exo-black.ttf /home/jack/.fonts/Exo-Black.ttf

!locate Exo-Black.ttf



!ls COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
from PIL import Image
import ipywidgets as wdg 
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-15-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
COORD=[]
STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
X = np.array(LAT,dtype=np.float)
Y = np.array(LON,dtype=np.float)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1


longLeft= (min(LG))-3
longRight = (max(LG))+3
lat1 = (min(LT))-3
lat2 = (max(LT))+3

ax = fig.gca()
T= STate
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=20)

# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)

#COORD.append(txt)
# Define a callback function that will update the textarea
def onclick(event):
    txt.value = str(event)  # Dynamically update the text box above
    COORD.append(txt.value) 
# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

plt.axis([longLeft,longRight,lat1,lat2])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(Y, X, s=s, color="black")


plt.xlabel('First data sample was taken: 01/20/2020', fontsize=24)
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

import reverse_geocoder as rg 
import pprint 
TXT = ""
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  
for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    TXT=TXT+str(dat)
    reverseGeocode(dat)

from math import radians, sin, cos, acos
TXT=""
for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    TXT=TXT+str(dat)
codata=str(TXT)
codata=codata.replace(")("," ")
codata=codata.replace("(","")
codata=codata.replace(")","")
codata=codata.replace(",","")
codata=codata.replace("  "," ")
print("Coordinate Source and Destination in Latitude and Longitude:\n ",codata)
codata=codata.split(" ")

latSrc = radians(float(codata[0]))
longSrc = radians(float(codata[1]))
latDest = radians(float(codata[2]))
longDest = radians(float(codata[3]))

dist = 6371.01 * acos(sin(latSrc)*sin(latDest) + cos(latSrc)*cos(latDest)*cos(longSrc - longDest))


# calculate miles
miles = dist * 0.621371
print("")
print("The aprox distance 'as the crow flies' is %.2fkm." % dist)
print('Aprox.%0.2f kilometers or %0.2f miles' %(dist,miles))

COORD=[]

import DIST
help(DIST)

from DIST import *
distance(COORD)

%%writefile DIST.py
#!/usr/bin/env python
from math import radians, sin, cos, acos
# figure distance between two locations clicked in a plot.
# given in Lat and long results in Mile and kilometers

import math
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def distance(COORD):
    TXT=""
    for line in COORD:
        coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
        res = tuple(map(float, coordinates.split(', ')))
        dat = Reverse(res)
        TXT=TXT+str(dat)
    codata=str(TXT)
    codata=codata.replace(")("," ")
    codata=codata.replace("(","")
    codata=codata.replace(")","")
    codata=codata.replace(",","")
    codata=codata.replace("  "," ")
    print("Coordinate Source and Destination in Latitude and Longitude:\n ",codata)
    codata=codata.split(" ")

    latSrc = radians(float(codata[0]))
    longSrc = radians(float(codata[1]))
    latDest = radians(float(codata[2]))
    longDest = radians(float(codata[3]))
    dist = 6371.01 * acos(sin(latSrc)*sin(latDest) + cos(latSrc)*cos(latDest)*cos(longSrc - longDest))
    # calculate miles
    miles = dist * 0.621371
    #print("")
    #print("The aprox distance 'as the crow flies' is %.2fkm." % dist)
    output ='%0.2f kilometers or %0.2f miles' %(dist,miles)
    return output

from DIST import distance

Start = 40.5,-90
End =  42,-93
print(distance(Start, End))

# Get input in kilometers
kilometers = float(input("Enter Kilometers: "))

# conversion factor
ConversionFactor = 0.621371

# Convert kilometers to miles
miles = kilometers * ConversionFactor
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))

%matplotlib notebook
from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
import time
import mplcursors
import ipywidgets as wdg 
#%matplotlib inline
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"
DataIn = open(LASTFILE).readlines()
cases=[]
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and "Florida" in line[6] and "Out of FL" not in line:
            cases.append(line[End])        

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
CITY=[]
deaths=[]
TEXT=[]
COORD=[]
cnt = -1
Total=0
SEARCH = "Colorado"
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        cnt=cnt+1
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and SEARCH in line[6] and "0.0" not in line:
            if cnt>=1 and cnt<=5:print(line[5],line[6],line[8],line[9], line[End] )
            Total=Total+int(line[End])
            CITY.append(line[5])
            LAT.append(line[8])
            LONG.append(line[9])
            deaths.append(line[End])        
            text = str(line[2]+' '+line[1]+' '+line[3]+' '+line[4]+' '+line[5]+' '+line[6]+' '+line[7]+' '+line[8]+' '+line[9]+' '+line[10])
            TEXT.append(text)
            
print("Number of Cities: ",len(CITY)) 
print("Total Deaths: ",Total)

LA = LAT
LO = LONG

print(len(LA))
print(len(LO))

DA = np.array(deaths,dtype=np.int)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
X = np.array(LAT,dtype=np.float)
Y = np.array(LONG,dtype=np.float)
print (max(LG))
print (min(LG))
print (min(LT))
print (max(LT))

A = (min(LG))-1
B = (max(LG))+1
C = (min(LT))-1
D = (max(LT))+1

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))

Sd=1
Sized=[]
for xd in deaths:
    Sd=2+(float(xd)*3)
    Sized.append(int(Sd))
    #print(int(S))
sd = np.array(Sized)

S=1
Size=[]
for x in cases:
    S=2+(float(x)*1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)


plt.text(-119, 41, SEARCH, fontsize=26)
#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(Y, X, s=s, color="black")
plt.axis([A,B,C,D])
# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)


# Define a callback function that will update the textarea
def onclick(event):
    txt.value = str(event)  # Dynamically update the text box above
    COORD.append(txt.value)
# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

plt.scatter(Y, X, s=sd, color="red")
plt.grid(True)

plt.xlabel('- Longitude -\nFirst Data Record : January 21, 2020', fontsize=18)
plt.title('Using Latitude and Longitude from:\n https://github.com/CSSEGISandData/COVID-19\n Black is Confirmed Cases and the Red are Deaths', fontsize=18)
plt.ylabel('- Latitude -', fontsize=18, color="white")
filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)

mplcursors.cursor(hover=True)
plt.show()

import reverse_geocoder as rg 
import pprint 
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    reverseGeocode(dat)

from math import radians, sin, cos, acos
TXT=""
for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    TXT=TXT+str(dat)
codata=str(TXT)
codata=codata.replace(")("," ")
codata=codata.replace("(","")
codata=codata.replace(")","")
codata=codata.replace(",","")
codata=codata.replace("  "," ")
print("Coordinate Source and Destination in Latitude and Longitude:\n ",codata)
codata=codata.split(" ")

latSrc = radians(float(codata[0]))
longSrc = radians(float(codata[1]))
latDest = radians(float(codata[2]))
longDest = radians(float(codata[3]))

dist = 6371.01 * acos(sin(latSrc)*sin(latDest) + cos(latSrc)*cos(latDest)*cos(longSrc - longDest))


# calculate miles
miles = dist * 0.621371
print("")
print("The aprox distance 'as the crow flies' is %.2fkm." % dist)
print('Aprox.%0.2f kilometers or %0.2f miles' %(dist,miles))

reset -f

print(COORD)
#xydata=(  ) button=1

for line in COORD:
    coordinates = ((line.split('xydata=('))[1].split(') button=1')[0])


TXT="""Textarea(value='button_press_event: xy=(258, 336) xydata=(-84.54645894452702, 39.19144800795269) button=1 dblclick=False inaxes=AxesSubplot(0.125,0.11;0.775x0.77)', description='event:', placeholder='')"""

coordinates = ((TXT.split('xydata=('))[1].split(') button=1')[0])
print(coordinates)

start = 'xydata=('
end = ') button=1'
stats = ((TXT.split(start))[1].split(end)[0])
print(stats)

import reverse_geocoder as rg 
import pprint 
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
 
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    data=coordinates.split(", ")
    data = Reverse(data)
    reverseGeocode(data)  

import reverse_geocoder as rg 
import pprint 
  
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

LatLong =input("LatLong: ")
LatLong=LatLong.split(",")
print(LatLong[0],LatLong[1])
lat=LatLong[1]
lng=LatLong[0]

coordinates =(lat,lng) 
     
reverseGeocode(coordinates)  

https://simplemaps.com/data/us-cities

-80.4875 26.1815

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
from PIL import Image

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-14-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []

STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1


longLeft= (min(LG))-3
longRight = (max(LG))+3
lat1 = (min(LT))-3
lat2 = (max(LT))+3

ax = fig.gca()
T= STate
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=20)

plt.axis([longLeft,longRight,lat1,lat2])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")


plt.xlabel('First data sample was taken: 01/20/2020', fontsize=24)
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
from PIL import Image

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1

ax = fig.gca()
tx = max(LG)-.5
ty = max(LT)+.5

print(tx,ty)
text(tx, ty, STate, bbox=dict(facecolor='white', alpha=0.5))


plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np
import mplcursors
from matplotlib.pyplot import text

fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

plt.text(-108,40.5, "Mouse over a point", fontsize=20, color='red')


mplcursors.cursor(hover=True)

plt.show()


from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"

from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = 'Florida'
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-3
B =(max(LG))+3
C =(min(LT))-3
D =(max(LT))+3
#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
#fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
#im = ax.imshow(img, extent=(A, B, C, D),
#               origin='upper', zorder=0, interpolation='nearest')
#plugins.connect(fig, plugins.MousePosition(fontsize=14))
#mpld3.display()

ax = fig.gca()
T= 'Miami-Dade'
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

plt.axis([A, B, C, D])
#plugins.connect(ax, plugins.MousePosition(fontsize=14))

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")
fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
plugins.connect(fig, plugins.MousePosition(fontsize=14))
im = ax.imshow(img, extent=(A, B, C, D),
               origin='upper', zorder=0, interpolation='nearest')

mpld3.display()

plt.show()
#from PIL import Image
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))
#plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()



from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = 'Florida'
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-3
B =(max(LG))+3
C =(min(LT))-3
D =(max(LT))+3
#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
im = ax.imshow(img, extent=(A, B, C, D),
               origin='upper', zorder=0, interpolation='nearest')
plugins.connect(fig, plugins.MousePosition(fontsize=14))

longLeft= (min(LG))-3
longRight = (max(LG))+3
lat1 = (min(LT))-3
lat2 = (max(LT))+3

ax = fig.gca()
T= 'Miami-Dade'
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

plt.axis([longLeft,longRight,lat1,lat2])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

#im = ax.imshow(img, extent=(A, B, C, D),
#               origin='lower', zorder=1, interpolation='nearest')

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()



from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = 'Florida'
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-3
B =(max(LG))+3
C =(min(LT))-3
D =(max(LT))+3
#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
im = ax.imshow(img, extent=(A, B, C, D),
               origin='upper', zorder=0, interpolation='nearest')
plugins.connect(fig, plugins.MousePosition(fontsize=14))
mpld3.display()

ax = fig.gca()
T= 'Miami-Dade'
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

plt.axis([A, B, C, D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

#im = ax.imshow(img, extent=(A, B, C, D),
#               origin='lower', zorder=1, interpolation='nearest')

#plt.xlabel('First data sample was: 09/03/2020 04:30:00')
#plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
#plt.ylabel('Number of Cases')
plt.show()
from PIL import Image
im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))
plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()



from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")
 

fig, ax = plt.subplots()
im = ax.imshow(img, extent=(10, 20, 10, 20),
               origin='upper', zorder=1, interpolation='nearest')

plugins.connect(fig, plugins.MousePosition(fontsize=14))
mpld3.display()
from PIL import Image
im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))
plt.show()
plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()


%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np
import mplcursors
np.random.seed(42)

fig, ax = plt.subplots()
ax.scatter(*np.random.random((2, 26)))
ax.set_title("Mouse over a point")

mplcursors.cursor(hover=True)

plt.show()


%matplotlib notebook
import numpy as np
import matplotlib.pyplot as plt

company=['google','amazon','msft','fb']
revenue=[80,68,54,27]

fig=plt.figure()
ax=plt.subplot()

xpos=np.arange(len(company))

bars = plt.bar(xpos,revenue)


annot = ax.annotate("", xy=(0,0), xytext=(-20,20),textcoords="offset points",
                    bbox=dict(boxstyle="round", fc="black", ec="b", lw=2),
                    arrowprops=dict(arrowstyle="->"))
annot.set_visible(False)

def update_annot(bar):
    x = bar.get_x()+bar.get_width()/2.
    y = bar.get_y()+bar.get_height()
    annot.xy = (x,y)
    text = "({:.2g},{:.2g})".format( x,y )
    annot.set_text(text)
    annot.get_bbox_patch().set_alpha(0.4)


def hover(event):
    vis = annot.get_visible()
    if event.inaxes == ax:
        for bar in bars:
            cont, ind = bar.contains(event)
            if cont:
                update_annot(bar)
                annot.set_visible(True)
                fig.canvas.draw_idle()
                return
    if vis:
        annot.set_visible(False)
        fig.canvas.draw_idle()

fig.canvas.mpl_connect("motion_notify_event", hover)

plt.show()

import mplcursors
help(mplcursors)

%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np


def plot_unit_circle():
    angs = np.linspace(0, 2 * np.pi, 10**6)
    rs = np.zeros_like(angs) + 1
    xs = rs * np.cos(angs)
    ys = rs * np.sin(angs)
    plt.plot(xs, ys)


def mouse_move(event):
    x, y = event.xdata, event.ydata
    print(x, y)


plt.connect('motion_notify_event', mouse_move)
plot_unit_circle()
plt.axis('equal')
plt.show()

%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np
import ipywidgets as wdg  # Using the ipython notebook widgets

# Create a random image
a = np.random.poisson(size=(12,15))
fig = plt.figure()
plt.imshow(a)

# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)

# Define a callback function that will update the textarea
def onclick(event):
    txt.value = str(event)  # Dynamically update the text box above

# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

data = open("/home/jack/Desktop/COVID-19-Jupyter-Notebooks/uscities.csv").readlines()
cnt=0
for line in data:
    line=line.replace("\"","")
    line = line.split(",")
    cnt=cnt+1
    
    if cnt==1:print(line)
    if cnt==1:print(" ")    
    if cnt>1 and cnt<10:print(line[0],line[3],line[5],float(line[8]),float(line[9]))   

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
import time
%matplotlib inline
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"
DataIn = open(LASTFILE).readlines()
cases=[]
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and "Florida" in line[6] and "Out of FL" not in line:
            cases.append(line[End])        

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
CITY=[]
deaths=[]
TEXT=[]
cnt = -1
Total=0
SEARCH = "California"
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        cnt=cnt+1
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and SEARCH in line[6] and "0.0" not in line:
            if cnt>=1 and cnt<=5:print(line[5],line[6],line[8],line[9], line[End] )
            Total=Total+int(line[End])
            CITY.append(line[5])
            LAT.append(line[8])
            LONG.append(line[9])
            deaths.append(line[End])        
            text = str(line[2]+' '+line[1]+' '+line[3]+' '+line[4]+' '+line[5]+' '+line[6]+' '+line[7]+' '+line[8]+' '+line[9]+' '+line[10])
            TEXT.append(text)
            
print("Number of Cities: ",len(CITY)) 
print("Total Deaths: ",Total)

LA = LAT
LO = LONG

print(len(LA))
print(len(LO))

DA = np.array(deaths,dtype=np.int)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print (max(LG))
print (min(LG))
print (min(LT))
print (max(LT))

A = (min(LG))-1
B = (max(LG))+1
C = (min(LT))-1
D = (max(LT))+1

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))

Sd=1
Sized=[]
for xd in deaths:
    Sd=2+(float(xd)*1)
    Sized.append(int(Sd))
    #print(int(S))
sd = np.array(Sized)

S=1
Size=[]
for x in cases:
    S=2+(float(x)*1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)


plt.text(-119, 41, SEARCH, fontsize=26)
#plt.axis([-130,-65,20,55])
plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.scatter(LG, LT, s=sd, color="red")
plt.grid(True)

plt.xlabel('- Longitude -\nFirst Data Record : January 21, 2020', fontsize=18)
plt.title('Using Latitude and Longitude from:\n https://github.com/CSSEGISandData/COVID-19\n Black is Confirmed Cases and the Red are Deaths', fontsize=18)
plt.ylabel('- Latitude -', fontsize=18, color="white")
filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
import time
%matplotlib inline
#LASTFILE="DATA/Download.csv"
#DataIn = open(LASTFILE).readlines()
cases=[]
#cnt=cnt+1
#for line in DataIn:
#    line = line.split(",")
#    if cnt==0:print(line)

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
CITY=[]
deaths=[]
TEXT=[]
cnt = -1
Total=0
SEARCH = "Florida"
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        cnt=cnt+1
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and SEARCH in line[6] and "0.0" not in line:
            
            if cnt>=1 and cnt<=5:print(line[5],line[6],line[8],line[9], line[End] )
            Total=Total+int(line[End])
            CITY.append(line[5])
            LAT.append(line[8])
            LONG.append(line[9])
            cases.append(line[9])
            deaths.append(line[End])        
            TText = str(line[2]+' '+line[1]+' '+line[3]+' '+line[4]+' '+line[5]+' '+line[6]+' '+line[7]+' '+line[8]+' '+line[9]+' '+line[10])
            if cnt==10:print("TTEXT: ",TText)
            TEXT.append(TText)
            
print("Number of Cities: ",len(CITY)) 
print("Total Deaths: ",Total)

LA = LAT
LO = LONG

print(len(LA))
print(len(LO))

DA = np.array(deaths,dtype=np.int)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print (max(LG))
print (min(LG))
print (min(LT))
print (max(LT))

print(deaths[-1])


A = (min(LG))-1
B = (max(LG))+1
C = (min(LT))-1
D = (max(LT))+1

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))

Sd=5
Sized=[]
for xd in deaths:
    Sd=2+(float(xd)*1)
    Sized.append(int(Sd))
    #print(int(S))
sd = np.array(Sized)

S=5
Size=[]
for x in cases:
    S=2+(float(x)*1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)


#plt.text(-119, 41, SEARCH, fontsize=26)
#plt.axis([-130,-65,20,55])
plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=sd, color="red")
plt.scatter(LG, LT, s=s, color="black")

plt.grid(True)

plt.xlabel('- Longitude -\nFirst Data Record : January 21, 2020', fontsize=18)
plt.title('Using Latitude and Longitude from:\n https://github.com/CSSEGISandData/COVID-19\n Black is Confirmed Cases and the Red are Deaths', fontsize=18)
plt.ylabel('- Latitude -', fontsize=18, color="white")
filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

data = open("/home/jack/Desktop/COVID-19-Jupyter-Notebooks/uscities.csv").readlines()
cnt=0
LatLong =input("LatLong: ")
LatLong=LatLong.split(" ")
print(LatLong[1],LatLong[0])
lat=LatLong[1]
lng=LatLong[0]
for line in data:
    line=line.replace("\"","")
    line = line.split(",")
    cnt=cnt+1
    if LatLong[1] == line:print(line)
    if LatLong[0] == line:print(line)
        

data = open("/home/jack/Desktop/COVID-19-Jupyter-Notebooks/uscities.csv").readlines()
cnt=0
LatLong =input("LatLong: ")
LatLong=LatLong.split(" ")
print(LatLong[1],LatLong[0])
for line in data:
    line=line.replace("\"","")
    line = line.split(",")
    cnt=cnt+1
    if cnt==2:print(round(float(LatLong[1]),3),round(float(LatLong[0]),3)),round(float(line[8]),3),round(float(line[9]),3)
    if cnt>2 and round(float(LatLong[1]),3)==round(float(line[8]),3):
        print("line",line[0],line[3])
    if cnt>2 and round(float(LatLong[0]),3)==round(float(line[9]),3):
            print("XXX",line[0],line[3])    

LatLong =input("LatLong: ")
LatLong=LatLong.split(",")
print(LatLong[0],LatLong[1])
lat=LatLong[0]
lng=LatLong[1]

import reverse_geocoder as rg 
import pprint 
  
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

LatLong =input("LatLong: ")
LatLong=LatLong.split(",")
print(LatLong[0],LatLong[1])
lat=LatLong[0]
lng=LatLong[1]

coordinates =(lat,lng) 
     
reverseGeocode(coordinates)  

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
from PIL import Image
import ipywidgets as wdg 
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-14-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
COORD=[]
STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1


longLeft= (min(LG))-3
longRight = (max(LG))+3
lat1 = (min(LT))-3
lat2 = (max(LT))+3

ax = fig.gca()
T= STate
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=20)

# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)

COORD.append(txt)
# Define a callback function that will update the textarea
def onclick(event):
    COORD=[]
    txt.value = str(event)  # Dynamically update the text box above

# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

plt.axis([longLeft,longRight,lat1,lat2])
plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")


plt.xlabel('First data sample was taken: 01/20/2020', fontsize=24)
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

import reverse_geocoder as rg 
import pprint 
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    reverseGeocode(dat)





!ls COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
#import mpld3
#from mpld3 import plugins
from PIL import Image
import ipywidgets as wdg 
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-15-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
COORD=[]
STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
X = np.array(LAT,dtype=np.float)
Y = np.array(LON,dtype=np.float)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1

ax = fig.gca()
T= STate
#plt.text(41.5,-76.0, T,fontsize=20)
plt.text(A+.5, D-.5, STate, fontsize=26)
# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)

#COORD.append(txt)
# Define a callback function that will update the textarea
def onclick(event):
    txt.value = str(event)  # Dynamically update the text box above
    COORD.append(txt.value) 
# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

plt.axis([A,B,C,D])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(Y, X, s=s, color="black")


plt.xlabel('First data sample was taken: 01/20/2020', fontsize=24)
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

import reverse_geocoder as rg 
import pprint 
TXT = ""
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  
for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    TXT=TXT+str(dat)
    reverseGeocode(dat)

from math import radians, sin, cos, acos
TXT=""
for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    TXT=TXT+str(dat)
codata=str(TXT)
codata=codata.replace(")("," ")
codata=codata.replace("(","")
codata=codata.replace(")","")
codata=codata.replace(",","")
codata=codata.replace("  "," ")
print("Coordinate Source and Destination in Latitude and Longitude:\n ",codata)
codata=codata.split(" ")

latSrc = radians(float(codata[0]))
longSrc = radians(float(codata[1]))
latDest = radians(float(codata[2]))
longDest = radians(float(codata[3]))

dist = 6371.01 * acos(sin(latSrc)*sin(latDest) + cos(latSrc)*cos(latDest)*cos(longSrc - longDest))


# calculate miles
miles = dist * 0.621371
print("")
print("The aprox distance 'as the crow flies' is %.2fkm." % dist)
print('Aprox.%0.2f kilometers or %0.2f miles' %(dist,miles))

# Empty the list COORD=[]
COORD=[]

import DIST
help(DIST)

from DIST import *
distance(COORD)

%%writefile DIST.py
#!/usr/bin/env python
from math import radians, sin, cos, acos
# figure distance between two locations clicked in a plot.
# given in Lat and long results in Mile and kilometers

import math
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def distance(COORD):
    TXT=""
    for line in COORD:
        coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
        res = tuple(map(float, coordinates.split(', ')))
        dat = Reverse(res)
        TXT=TXT+str(dat)
    codata=str(TXT)
    codata=codata.replace(")("," ")
    codata=codata.replace("(","")
    codata=codata.replace(")","")
    codata=codata.replace(",","")
    codata=codata.replace("  "," ")
    print("Coordinate Source and Destination in Latitude and Longitude:\n ",codata)
    codata=codata.split(" ")

    latSrc = radians(float(codata[0]))
    longSrc = radians(float(codata[1]))
    latDest = radians(float(codata[2]))
    longDest = radians(float(codata[3]))
    dist = 6371.01 * acos(sin(latSrc)*sin(latDest) + cos(latSrc)*cos(latDest)*cos(longSrc - longDest))
    # calculate miles
    miles = dist * 0.621371
    #print("")
    #print("The aprox distance 'as the crow flies' is %.2fkm." % dist)
    output ='%0.2f kilometers or %0.2f miles' %(dist,miles)
    return output

from DIST import distance

Start = 40.5,-90
End =  42,-93
print(distance(Start, End))

# Get input in kilometers
kilometers = float(input("Enter Kilometers: "))

# conversion factor
ConversionFactor = 0.621371

# Convert kilometers to miles
miles = kilometers * ConversionFactor
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))

%matplotlib notebook
from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
import time
import mplcursors
import ipywidgets as wdg 
#%matplotlib inline
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"
DataIn = open(LASTFILE).readlines()
cases=[]
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and "Florida" in line[6] and "Out of FL" not in line:
            cases.append(line[End])        

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
CITY=[]
deaths=[]
TEXT=[]
COORD=[]
cnt = -1
Total=0
SEARCH = "Colorado"
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        cnt=cnt+1
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and SEARCH in line[6] and "0.0" not in line:
            if cnt>=1 and cnt<=5:print(line[5],line[6],line[8],line[9], line[End] )
            Total=Total+int(line[End])
            CITY.append(line[5])
            LAT.append(line[8])
            LONG.append(line[9])
            deaths.append(line[End])        
            text = str(line[2]+' '+line[1]+' '+line[3]+' '+line[4]+' '+line[5]+' '+line[6]+' '+line[7]+' '+line[8]+' '+line[9]+' '+line[10])
            TEXT.append(text)
            
print("Number of Cities: ",len(CITY)) 
print("Total Deaths: ",Total)

LA = LAT
LO = LONG

print(len(LA))
print(len(LO))

DA = np.array(deaths,dtype=np.int)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
X = np.array(LAT,dtype=np.float)
Y = np.array(LONG,dtype=np.float)
print (max(LG))
print (min(LG))
print (min(LT))
print (max(LT))

A = (min(LG))-1
B = (max(LG))+1
C = (min(LT))-1
D = (max(LT))+1

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))

Sd=1
Sized=[]
for xd in deaths:
    Sd=2+(float(xd)*3)
    Sized.append(int(Sd))
    #print(int(S))
sd = np.array(Sized)

S=1
Size=[]
for x in cases:
    S=2+(float(x)*1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

plt.text(A+.5, D-.5, SEARCH, fontsize=26)
#plt.text(-119, 41, SEARCH, fontsize=26)
#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(Y, X, s=s, color="black")
plt.axis([A,B,C,D])
# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)


# Define a callback function that will update the textarea
def onclick(event):
    txt.value = str(event)  # Dynamically update the text box above
    COORD.append(txt.value)
# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

plt.scatter(Y, X, s=sd, color="red")
plt.grid(True)

plt.xlabel('- Longitude -\nFirst Data Record : January 21, 2020', fontsize=18)
plt.title('Using Latitude and Longitude from:\n https://github.com/CSSEGISandData/COVID-19\n Black is Confirmed Cases and the Red are Deaths', fontsize=18)
plt.ylabel('- Latitude -', fontsize=18, color="white")
filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)

mplcursors.cursor(hover=True)
plt.show()

import reverse_geocoder as rg 
import pprint 
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    reverseGeocode(dat)

from math import radians, sin, cos, acos
TXT=""
for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    TXT=TXT+str(dat)
codata=str(TXT)
codata=codata.replace(")("," ")
codata=codata.replace("(","")
codata=codata.replace(")","")
codata=codata.replace(",","")
codata=codata.replace("  "," ")
print("Coordinate Source and Destination in Latitude and Longitude:\n ",codata)
codata=codata.split(" ")

latSrc = radians(float(codata[0]))
longSrc = radians(float(codata[1]))
latDest = radians(float(codata[2]))
longDest = radians(float(codata[3]))

dist = 6371.01 * acos(sin(latSrc)*sin(latDest) + cos(latSrc)*cos(latDest)*cos(longSrc - longDest))


# calculate miles
miles = dist * 0.621371
print("")
print("The aprox distance 'as the crow flies' is %.2fkm." % dist)
print('Aprox.%0.2f kilometers or %0.2f miles' %(dist,miles))

reset -f

print(COORD)
#xydata=(  ) button=1

for line in COORD:
    coordinates = ((line.split('xydata=('))[1].split(') button=1')[0])


TXT="""Textarea(value='button_press_event: xy=(258, 336) xydata=(-84.54645894452702, 39.19144800795269) button=1 dblclick=False inaxes=AxesSubplot(0.125,0.11;0.775x0.77)', description='event:', placeholder='')"""

coordinates = ((TXT.split('xydata=('))[1].split(') button=1')[0])
print(coordinates)

start = 'xydata=('
end = ') button=1'
stats = ((TXT.split(start))[1].split(end)[0])
print(stats)

import reverse_geocoder as rg 
import pprint 
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
 
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    data=coordinates.split(", ")
    data = Reverse(data)
    reverseGeocode(data)  

import reverse_geocoder as rg 
import pprint 
  
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

LatLong =input("LatLong: ")
LatLong=LatLong.split(",")
print(LatLong[0],LatLong[1])
lat=LatLong[1]
lng=LatLong[0]

coordinates =(lat,lng) 
     
reverseGeocode(coordinates)  

https://simplemaps.com/data/us-cities

-80.4875 26.1815

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
from PIL import Image

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-14-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []

STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1


longLeft= (min(LG))-3
longRight = (max(LG))+3
lat1 = (min(LT))-3
lat2 = (max(LT))+3

ax = fig.gca()
T= STate
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=20)

plt.axis([longLeft,longRight,lat1,lat2])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")


plt.xlabel('First data sample was taken: 01/20/2020', fontsize=24)
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
from PIL import Image

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1

ax = fig.gca()
tx = max(LG)-.5
ty = max(LT)+.5

print(tx,ty)
text(tx, ty, STate, bbox=dict(facecolor='white', alpha=0.5))


plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np
import mplcursors
from matplotlib.pyplot import text

fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

plt.text(-108,40.5, "Mouse over a point", fontsize=20, color='red')


mplcursors.cursor(hover=True)

plt.show()


from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"

from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = 'Florida'
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-3
B =(max(LG))+3
C =(min(LT))-3
D =(max(LT))+3
#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
#fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
#im = ax.imshow(img, extent=(A, B, C, D),
#               origin='upper', zorder=0, interpolation='nearest')
#plugins.connect(fig, plugins.MousePosition(fontsize=14))
#mpld3.display()

ax = fig.gca()
T= 'Miami-Dade'
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

plt.axis([A, B, C, D])
#plugins.connect(ax, plugins.MousePosition(fontsize=14))

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")
fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
plugins.connect(fig, plugins.MousePosition(fontsize=14))
im = ax.imshow(img, extent=(A, B, C, D),
               origin='upper', zorder=0, interpolation='nearest')

mpld3.display()

plt.show()
#from PIL import Image
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))
#plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()



from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = 'Florida'
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-3
B =(max(LG))+3
C =(min(LT))-3
D =(max(LT))+3
#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
im = ax.imshow(img, extent=(A, B, C, D),
               origin='upper', zorder=0, interpolation='nearest')
plugins.connect(fig, plugins.MousePosition(fontsize=14))

longLeft= (min(LG))-3
longRight = (max(LG))+3
lat1 = (min(LT))-3
lat2 = (max(LT))+3

ax = fig.gca()
T= 'Miami-Dade'
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

plt.axis([longLeft,longRight,lat1,lat2])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

#im = ax.imshow(img, extent=(A, B, C, D),
#               origin='lower', zorder=1, interpolation='nearest')

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()



from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = 'Florida'
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-3
B =(max(LG))+3
C =(min(LT))-3
D =(max(LT))+3
#fig = plt.figure(num=None, figsize=(8,8), dpi=80, facecolor='salmon')
fig, ax = plt.subplots(figsize=(8,8), dpi=80, facecolor='salmon')
im = ax.imshow(img, extent=(A, B, C, D),
               origin='upper', zorder=0, interpolation='nearest')
plugins.connect(fig, plugins.MousePosition(fontsize=14))
mpld3.display()

ax = fig.gca()
T= 'Miami-Dade'
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

plt.axis([A, B, C, D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")

#im = ax.imshow(img, extent=(A, B, C, D),
#               origin='lower', zorder=1, interpolation='nearest')

#plt.xlabel('First data sample was: 09/03/2020 04:30:00')
#plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
#plt.ylabel('Number of Cases')
plt.show()
from PIL import Image
im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))
plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()



from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
%matplotlib inline  
from mpld3 import plugins
from PIL import Image
img=Image.open("mouse-sizing-n-cropping-files/soil600.jpg")
 

fig, ax = plt.subplots()
im = ax.imshow(img, extent=(10, 20, 10, 20),
               origin='upper', zorder=1, interpolation='nearest')

plugins.connect(fig, plugins.MousePosition(fontsize=14))
mpld3.display()
from PIL import Image
im = np.array(Image.open('mouse-sizing-n-cropping-files/soil600.jpg'))
plt.show()
plugins.connect(fig, plugins.MousePosition(fontsize=14))

mpld3.display()


%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np
import mplcursors
np.random.seed(42)

fig, ax = plt.subplots()
ax.scatter(*np.random.random((2, 26)))
ax.set_title("Mouse over a point")

mplcursors.cursor(hover=True)

plt.show()


%matplotlib notebook
import numpy as np
import matplotlib.pyplot as plt

company=['google','amazon','msft','fb']
revenue=[80,68,54,27]

fig=plt.figure()
ax=plt.subplot()

xpos=np.arange(len(company))

bars = plt.bar(xpos,revenue)


annot = ax.annotate("", xy=(0,0), xytext=(-20,20),textcoords="offset points",
                    bbox=dict(boxstyle="round", fc="black", ec="b", lw=2),
                    arrowprops=dict(arrowstyle="->"))
annot.set_visible(False)

def update_annot(bar):
    x = bar.get_x()+bar.get_width()/2.
    y = bar.get_y()+bar.get_height()
    annot.xy = (x,y)
    text = "({:.2g},{:.2g})".format( x,y )
    annot.set_text(text)
    annot.get_bbox_patch().set_alpha(0.4)


def hover(event):
    vis = annot.get_visible()
    if event.inaxes == ax:
        for bar in bars:
            cont, ind = bar.contains(event)
            if cont:
                update_annot(bar)
                annot.set_visible(True)
                fig.canvas.draw_idle()
                return
    if vis:
        annot.set_visible(False)
        fig.canvas.draw_idle()

fig.canvas.mpl_connect("motion_notify_event", hover)

plt.show()

import mplcursors
help(mplcursors)

%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np


def plot_unit_circle():
    angs = np.linspace(0, 2 * np.pi, 10**6)
    rs = np.zeros_like(angs) + 1
    xs = rs * np.cos(angs)
    ys = rs * np.sin(angs)
    plt.plot(xs, ys)


def mouse_move(event):
    x, y = event.xdata, event.ydata
    print(x, y)


plt.connect('motion_notify_event', mouse_move)
plot_unit_circle()
plt.axis('equal')
plt.show()

%matplotlib notebook
import matplotlib.pyplot as plt
import numpy as np
import ipywidgets as wdg  # Using the ipython notebook widgets

# Create a random image
a = np.random.poisson(size=(12,15))
fig = plt.figure()
plt.imshow(a)

# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)

# Define a callback function that will update the textarea
def onclick(event):
    txt.value = str(event)  # Dynamically update the text box above

# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

data = open("/home/jack/Desktop/COVID-19-Jupyter-Notebooks/uscities.csv").readlines()
cnt=0
for line in data:
    line=line.replace("\"","")
    line = line.split(",")
    cnt=cnt+1
    
    if cnt==1:print(line)
    if cnt==1:print(" ")    
    if cnt>1 and cnt<10:print(line[0],line[3],line[5],float(line[8]),float(line[9]))   

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
#import mpld3
#from mpld3 import plugins
import time
%matplotlib inline
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"
DataIn = open(LASTFILE).readlines()
cases=[]
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and "Florida" in line[6] and "Out of FL" not in line:
            cases.append(line[End])        

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
CITY=[]
deaths=[]
TEXT=[]
cnt = -1
Total=0
SEARCH = "California"
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        cnt=cnt+1
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and SEARCH in line[6] and "0.0" not in line:
            if cnt>=1 and cnt<=5:print(line[5],line[6],line[8],line[9], line[End] )
            Total=Total+int(line[End])
            CITY.append(line[5])
            LAT.append(line[8])
            LONG.append(line[9])
            deaths.append(line[End])        
            text = str(line[2]+' '+line[1]+' '+line[3]+' '+line[4]+' '+line[5]+' '+line[6]+' '+line[7]+' '+line[8]+' '+line[9]+' '+line[10])
            TEXT.append(text)
            
print("Number of Cities: ",len(CITY)) 
print("Total Deaths: ",Total)

LA = LAT
LO = LONG

print(len(LA))
print(len(LO))

DA = np.array(deaths,dtype=np.int)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print (max(LG))
print (min(LG))
print (min(LT))
print (max(LT))

A = (min(LG))-1
B = (max(LG))+1
C = (min(LT))-1
D = (max(LT))+1

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))

Sd=1
Sized=[]
for xd in deaths:
    Sd=2+(float(xd)*1)
    Sized.append(int(Sd))
    #print(int(S))
sd = np.array(Sized)

S=1
Size=[]
for x in cases:
    S=2+(float(x)*1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

plt.text(A+.5, D-.5, SEARCH, fontsize=26)
#plt.text(-119, 41, SEARCH, fontsize=26)
#plt.axis([-130,-65,20,55])
plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.scatter(LG, LT, s=sd, color="red")
plt.grid(True)

plt.xlabel('- Longitude -\nFirst Data Record : January 21, 2020', fontsize=18)
plt.title('Using Latitude and Longitude from:\n https://github.com/CSSEGISandData/COVID-19\n Black is Confirmed Cases and the Red are Deaths', fontsize=18)
plt.ylabel('- Latitude -', fontsize=18, color="white")
filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
import time
%matplotlib inline
#LASTFILE="DATA/Download.csv"
#DataIn = open(LASTFILE).readlines()
cases=[]
#cnt=cnt+1
#for line in DataIn:
#    line = line.split(",")
#    if cnt==0:print(line)

LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
CITY=[]
deaths=[]
TEXT=[]
cnt = -1
Total=0
SEARCH = "Mississippi"
for line in DataIn:
    if len(line)>10 and 'US' in line and "Recovered" not in line and "Unassigned" not in line:
        cnt=cnt+1
        line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        End=len(line)-1
        if len(line)>5 and SEARCH in line[6] and "0.0" not in line:
            
            if cnt>=1 and cnt<=5:print(line[5],line[6],line[8],line[9], line[End] )
            Total=Total+int(line[End])
            CITY.append(line[5])
            LAT.append(line[8])
            LONG.append(line[9])
            cases.append(line[9])
            deaths.append(line[End])        
            TText = str(line[2]+' '+line[1]+' '+line[3]+' '+line[4]+' '+line[5]+' '+line[6]+' '+line[7]+' '+line[8]+' '+line[9]+' '+line[10])
            if cnt==10:print("TTEXT: ",TText)
            TEXT.append(TText)
            
print("Number of Cities: ",len(CITY)) 
print("Total Deaths: ",Total)

LA = LAT
LO = LONG

print(len(LA))
print(len(LO))

DA = np.array(deaths,dtype=np.int)
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print (max(LG))
print (min(LG))
print (min(LT))
print (max(LT))

print(deaths[-1])


A = (min(LG))-1
B = (max(LG))+1
C = (min(LT))-1
D = (max(LT))+1

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()
ax.set_facecolor(('#8eda8b'))

Sd=5
Sized=[]
for xd in deaths:
    Sd=2+(float(xd)*1)
    Sized.append(int(Sd))
    #print(int(S))
sd = np.array(Sized)

S=5
Size=[]
for x in cases:
    S=2+(float(x)*2)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

plt.text(A+.5, D-.5, SEARCH, fontsize=26)
#plt.axis([-130,-65,20,55])
plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=sd, color="red")
plt.scatter(LG, LT, s=s, color="black")

plt.grid(True)

plt.xlabel('- Longitude -\nFirst Data Record : January 21, 2020', fontsize=18)
plt.title('Using Latitude and Longitude from:\n https://github.com/CSSEGISandData/COVID-19\n Black is Confirmed Cases and the Red are Deaths', fontsize=18)
plt.ylabel('- Latitude -', fontsize=18, color="white")
filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

filename = "images/"+SEARCH+"_"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".png")
fig.savefig(filename, facecolor=fig.get_facecolor(), edgecolor='black')
print(filename)
plt.show()

data = open("/home/jack/Desktop/COVID-19-Jupyter-Notebooks/uscities.csv").readlines()
cnt=0
LatLong =input("LatLong: ")
LatLong=LatLong.split(" ")
print(LatLong[1],LatLong[0])
lat=LatLong[1]
lng=LatLong[0]
for line in data:
    line=line.replace("\"","")
    line = line.split(",")
    cnt=cnt+1
    if LatLong[1] == line:print(line)
    if LatLong[0] == line:print(line)
        

data = open("/home/jack/Desktop/COVID-19-Jupyter-Notebooks/uscities.csv").readlines()
cnt=0
LatLong =input("LatLong: ")
LatLong=LatLong.split(" ")
print(LatLong[1],LatLong[0])
for line in data:
    line=line.replace("\"","")
    line = line.split(",")
    cnt=cnt+1
    if cnt==2:print(round(float(LatLong[1]),3),round(float(LatLong[0]),3)),round(float(line[8]),3),round(float(line[9]),3)
    if cnt>2 and round(float(LatLong[1]),3)==round(float(line[8]),3):
        print("line",line[0],line[3])
    if cnt>2 and round(float(LatLong[0]),3)==round(float(line[9]),3):
            print("XXX",line[0],line[3])    

LatLong =input("LatLong: ")
LatLong=LatLong.split(",")
print(LatLong[0],LatLong[1])
lat=LatLong[0]
lng=LatLong[1]

import reverse_geocoder as rg 
import pprint 
  
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

LatLong =input("LatLong: ")
LatLong=LatLong.split(",")
print(LatLong[0],LatLong[1])
lat=LatLong[0]
lng=LatLong[1]

coordinates =(lat,lng) 
     
reverseGeocode(coordinates)  

%matplotlib notebook
import mplcursors
from matplotlib.pyplot import text
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib.pyplot as plt
import numpy as np
import mpld3
from mpld3 import plugins
from PIL import Image
import ipywidgets as wdg 
LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-14-2020.csv"

DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
COORD=[]
STate = input("Which State? ")
for lines in DataIn:
    lines = lines.replace("\n","")
    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<5:
            print(" ")
            #print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)

fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
ax = fig.gca()
ax.set_facecolor(('#c2efc1'))

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

A =(min(LG))-1
B =(max(LG))+1
C =(min(LT))-1
D =(max(LT))+1


longLeft= (min(LG))-3
longRight = (max(LG))+3
lat1 = (min(LT))-3
lat2 = (max(LT))+3

ax = fig.gca()
T= STate
text(0.62, 0.29, T, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=20)

# Create and display textarea widget
txt = wdg.Textarea(
    value='',
    placeholder='',
    description='event:',
    disabled=False
)
display(txt)

COORD.append(txt)
# Define a callback function that will update the textarea
def onclick(event):
    COORD=[]
    txt.value = str(event)  # Dynamically update the text box above

# Create an hard reference to the callback not to be cleared by the garbage collector
ka = fig.canvas.mpl_connect('button_press_event', onclick)

plt.axis([longLeft,longRight,lat1,lat2])
plt.axis([A,B,C,D])

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.grid(True)
plt.scatter(LG, LT, s=s, color="black")


plt.xlabel('First data sample was taken: 01/20/2020', fontsize=24)
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
mplcursors.cursor(hover=True)

plt.show()

import reverse_geocoder as rg 
import pprint 
def Reverse(tuples): 
    new_tup = tuples[::-1] 
    return new_tup   
def reverseGeocode(coordinates): 
    result = rg.search(coordinates) 
      
    # result is a list containing ordered dictionary. 
    pprint.pprint(result)  

for line in COORD:
    coordinates = ((str(line).split('xydata=('))[1].split(') button=1')[0])
    res = tuple(map(float, coordinates.split(', ')))
    dat = Reverse(res)
    reverseGeocode(dat)





!ls

imagedir = open("images.list", "r")
IMAGES =[]
for images in imagedir:
    if "docker" not in images:
        images = images.replace("\n","")
        IMAGES.append(images)


print ( len(IMAGES))

from random import randint
rnd = randint(0, len(IMAGES))
print(IMAGES[rnd])

!mkdir image_resources

import PIL

from PIL import Image

cnt = 0
for i in range(30):
    cnt =cnt+1
    rnd = randint(0, len(IMAGES))
    im = Image.open(IMAGES[rnd])
    newsize = (720, 480)
    im1 = im.resize(newsize)
    im1.save("image_resources/00"+str(cnt)+".jpg")

!mkdir blacknwhite_resources

import cv2
cnt = 0
for i in range(30):
    cnt = cnt +1
    rnd = randint(0, len(IMAGES))
    #im = Image.open(IMAGES[rnd])
    originalImage = cv2.imread(IMAGES[rnd])
    grayImage = cv2.cvtColor(originalImage, cv2.COLOR_BGR2GRAY)
    (thresh, blackAndWhiteImage) = cv2.threshold(grayImage, 127, 255, cv2.THRESH_BINARY)
    cv2.imshow('Black white image', blackAndWhiteImage)
    cv2.imwrite(filename, img)

  
cv2.waitKey(0)
cv2.destroyAllWindows()

import cv2



from PIL import Image
from scipy.misc import imsave
import numpy


def binarize_image(img_path, target_path, threshold):
    """Binarize an image."""
    image_file = Image.open(img_path)
    image = image_file.convert('L')  # convert image to monochrome
    image = numpy.array(image)
    image = binarize_array(image, threshold)
    imsave(target_path, image)


#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Binarize (make it black and white) an image with Python."""

from PIL import Image
from scipy.misc import imsave
import numpy


def binarize_image(img_path, target_path, threshold):
    """Binarize an image."""
    image_file = Image.open(img_path)
    image = image_file.convert('L')  # convert image to monochrome
    image = numpy.array(image)
    image = binarize_array(image, threshold)
    imsave(target_path, image)


def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array


def get_parser():
    """Get parser object for script xy.py."""
    from argparse import ArgumentParser, ArgumentDefaultsHelpFormatter
    parser = ArgumentParser(description=__doc__,
                            formatter_class=ArgumentDefaultsHelpFormatter)
    parser.add_argument("-i", "--input",
                        dest="input",
                        help="read this file",
                        metavar="FILE",
                        required=True)
    parser.add_argument("-o", "--output",
                        dest="output",
                        help="write binarized file hre",
                        metavar="FILE",
                        required=True)
    parser.add_argument("--threshold",
                        dest="threshold",
                        default=200,
                        type=int,
                        help="Threshold when to show white")
    return parser


if __name__ == "__main__":
    args = get_parser().parse_args()
    binarize_image(args.input, args.output, args.threshold)

imagedir = open("jpg3.list", "r")
IMAGES =[]
for images in imagedir:
    if "docker" not in images:
        images = images.replace("\n","")
        IMAGES.append(images)


print(len(IMAGES))

from PIL import Image
import numpy
import cv2
from random import randint
import time

def binarize_image(img_path, target_path, threshold):
    """Binarize an image."""
    image_file = Image.open(img_path)
    image_file = image_file.resize((720,480)) 
    image = image_file.convert('L')  # convert image to monochrome
    image = numpy.array(image)
    image = binarize_array(image, threshold)
    cv2.imwrite(target_path, image)

def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array

    
    
for i in range(350):    
    
    threshold = 100
    rnd = randint(0, len(IMAGES))
    img_path = IMAGES[rnd]
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filename = "binary_images/"+timestr+"_"+str(i)+".png"
    target_path = filename
    print(".", end="|")
    binarize_image(img_path, target_path, threshold)    

!find . -iname '*.jpg' > jpg3.list

from random import randint
rnd = randint(0, len(IMAGES))
print(IMAGES[rnd])

print ( len(IMAGES))

!mkdir image_resources

import PIL
from time import sleep
for i in range(1,1000):
    sleep(1.5)
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filename = "image_resources/"+timestr+str(i)+"_.png"
    print (filename)

from PIL import Image
import time
imagedir = open("jpg.list", "r")
IMAGES =[]
for images in imagedir:
    if "docker" not in images:
        images = images.replace("\n","")
        IMAGES.append(images)

for i in range(0,1300):
    while True:
        try:
            # do stuff
            time.sleep(.5)
            rnd = randint(0, len(IMAGES))
            im = Image.open(IMAGES[rnd])
            newsize = (720, 480)
            im1 = im.resize(newsize)
            timestr = time.strftime("%Y%m%d-%H%M%S")
            filename = "image_resources/"+timestr+str(i)+"_.png"
            im1.save(filename)
            print(i,end=".")           
        except Exception:
            pass

        break


from PIL import Image
import time
from random import randint
cnt = 0
for i in range(130):
    time.sleep(.5)
    cnt =cnt+1
    rnd = randint(0, len(IMAGES))
    im = Image.open(IMAGES[rnd])
    newsize = (720, 480)
    im1 = im.resize(newsize)
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filename = "image_resources/"+timestr+str(i)+"_.png"
    im1.save(filename)
    print(i,end=".")

!mkdir blacknwhite_resources

import cv2
cnt = 0
import time
for i in range(30):
    cnt = cnt +1
    rnd = randint(0, len(IMAGES))
    im = Image.open(IMAGES[rnd])
    im.resize(720,480, "Image.NEAREST")
    originalImage = cv2.imread(IMAGES[rnd])
    grayImage = cv2.cvtColor(originalImage, cv2.COLOR_BGR2GRAY)
    (thresh, blackAndWhiteImage) = cv2.threshold(grayImage, 127, 255, cv2.THRESH_BINARY)
    timestr = time.strftime("%Y%m%d-%H%M%S")
    filename = "blacknwhite_resources/"+timestr+str(i)+"_.png"
    cv2.imwrite(filename, img)

  


import cv2

!mkdir binary_images

!ls

import numpy as np
import mahotas
from pylab import imshow, show
# importing required libraries
import mahotas as mh
from pylab import imshow, show
import cv2 
  
# loading image
img = cv2.imread('binary_images/20220921-104704_27.png')
  
# filtering the image
img = img[:, :, 0]
    
print("Image with filter")
# showing the image
imshow(img)
show()
  
# getting mean value
mean = img.mean()
  
# printing mean value
print("Mean Value for 0 channel : " + str(mean))

 
# getting nuclear image
nuclear = mh.demos.nuclear_image()
 
 
# filtering the image
nuclear = nuclear[:, :, 0]
 
print("Image with filter")
# showing the image
imshow(nuclear)
show()
 
# getting mean value
mean = nuclear.mean()
 
# printing mean value
print("Mean Value for 0 channel : " + str(mean))


# import using ``mh`` abbreviation which is common:
import mahotas as mh

# Load one of the demo images
im = mh.demos.load('nuclear')

# Automatically compute a threshold
T_otsu = mh.thresholding.otsu(im)

# Label the thresholded image (thresholding is done with numpy operations
seeds,nr_regions = mh.label(im > T_otsu)

# Call seeded watershed to expand the threshold
labeled = mh.cwatershed(im.max() - im, seeds)


import imread
dir (imread)

!ls

import os
from pylab import imshow, show
import cv2
for filename in os.listdir("junk/"):
    print (filename)


#mean()

IPYNB = []
f = open("ipynb.list","r").readlines()
for line in f:
    if "docker" not in line:
        line=line.replace("\n", "")
        IPYNB.append(line)

for notebook in IPYNB:
    if "dream" in notebook:
        print(notebook)

!cp /home/jack/Desktop/NOTEBOOKS/JupyterMaster/jupnote-master/Creating-C++-Image-blender.ipynb .

!cp /media/jack/HDD5003/Downloads/JupyterNotebook-Graphics-master/*.ipynb .

import shutil
src ="/home/jack/Desktop/TWITTER/JupyterNotebook-Graphics-master/GenIm.pynotebook150517524319150517524319.ipynb"
shutil.copyfile(src, "GenIm.pynotebook.ipynb")

rnd = randint(0, len(IMAGES))
image_path = IMAGES[rnd]
print(image_path)

API Key

APIkey()[0]

API Key Secret

APIkey()[1]


Access Token
APIkey()[2]

Access Token
APIkey()[3]


#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Binarize (make it black and white) an image with Python."""

from PIL import Image
from scipy.misc import imsave
import numpy


def binarize_image(img_path, target_path, threshold):
    """Binarize an image."""
    image_file = Image.open(img_path)
    image = image_file.convert('L')  # convert image to monochrome
    image = numpy.array(image)
    image = binarize_array(image, threshold)
    imsave(target_path, image)


def binarize_array(numpy_array, threshold=200):
    """Binarize a numpy array."""
    for i in range(len(numpy_array)):
        for j in range(len(numpy_array[0])):
            if numpy_array[i][j] > threshold:
                numpy_array[i][j] = 255
            else:
                numpy_array[i][j] = 0
    return numpy_array


def get_parser():
    """Get parser object for script xy.py."""
    from argparse import ArgumentParser, ArgumentDefaultsHelpFormatter
    parser = ArgumentParser(description=__doc__,
                            formatter_class=ArgumentDefaultsHelpFormatter)
    parser.add_argument("-i", "--input",
                        dest="input",
                        help="read this file",
                        metavar="FILE",
                        required=True)
    parser.add_argument("-o", "--output",
                        dest="output",
                        help="write binarized file hre",
                        metavar="FILE",
                        required=True)
    parser.add_argument("--threshold",
                        dest="threshold",
                        default=200,
                        type=int,
                        help="Threshold when to show white")
    return parser


if __name__ == "__main__":
    args = get_parser().parse_args()
    binarize_image(args.input, args.output, args.threshold)

pwd

MPEG -ds "FFMPEG"

MPEG -d 71

MPEG -ds "FFMPEG"

ls -rant /usr/local/bin

unlockdb mpeg.db

for FILES in * ; do echo $FILES ; done

for FILE in *.db; do du "$FILE" done

file="this/is/my/file/name.txt"
echo ${file#*/}   #Matches is "this/` and will print out "is/my/file/name.txt"
echo ${file##*/}  #Matches "this/is/my/file/" and will print out "name.txt"
echo ${file%/*}   #Matches "/name.txt" and will print out "/this/is/my/file"
echo ${file%%/*}  #Matches "/is/my/file

ls -rant

for element in $(cat pwjake); do echo $element ; done

for FILE in ./*.mp4; do du "$FILE" done

for i in *.doc ; do mv "$i" $(echo $i | sed s/doc/txt/) ; done

for i in . ; do du "$i" $(echo $i) ; done


for line in $(cat README.md); do echo $line ; done


file="this/is/my/file/name.txt"
echo ${file#*/}   #Matches is "this/` and will print out "is/my/file/name.txt"
echo ${file##*/}  #Matches "this/is/my/file/" and will print out "name.txt"
echo ${file%/*}   #Matches "/name.txt" and will print out "/this/is/my/file"
echo ${file%%/*}  #Matches "/is/my/file/name.txt" and will print out "this"






pwd

MPEG -ds "FFMPEG"

MPEG -d 71

MPEG -ds "FFMPEG"

ls -rant /usr/local/bin

unlockdb mpeg.db

for FILES in * ; do printf "   "$FILES ; done

rm  DBLIST.db

for FILE in *.db; do printf "   "$FILE"  size:" && du $FILE ; >>DBLIST.db;done # >>DBLIST.db

for FILE in *.db; do printf "   "$FILE"  size:" && du $FILE ;done 

for FILE in *.db; do printf "   "$FILE"  size:" && du $FILE ;done >>DBLIST.db

cat DBLIST.db

file="this/is/my/file/name.txt"
echo ${file#*/}   #Matches is "this/` and will print out "is/my/file/name.txt"
echo ${file##*/}  #Matches "this/is/my/file/" and will print out "name.txt"
echo ${file%/*}   #Matches "/name.txt" and will print out "/this/is/my/file"
echo ${file%%/*}  #Matches "/is/my/file

ls -rant

for element in $(cat pwjake); do echo $element ; done

for FILE in ./*.mp4; do du "$FILE" done

for i in *.doc ; do mv "$i" $(echo $i | sed s/doc/txt/) ; done

for i in . ; do du "$i" $(echo $i) ; done


for line in $(cat README.md); do echo $line ; done


file="this/is/my/file/name.txt"
echo ${file#*/}   #Matches is "this/` and will print out "is/my/file/name.txt"
echo ${file##*/}  #Matches "this/is/my/file/" and will print out "name.txt"
echo ${file%/*}   #Matches "/name.txt" and will print out "/this/is/my/file"
echo ${file%%/*}  #Matches "/is/my/file/name.txt" and will print out "this"






import plotly.graph_objects as go
from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
Description = LASTFILE[57:-4]
cnt=0
SEARCH = input("Which Country ? ")
CNT=0
offset=[]
offset.append(0)
DataIn = open(LASTFILE).readlines()
for line in DataIn:
    line = line.split(",")
    CNT=CNT+1
    if SEARCH in line[1]:
        cnt=cnt+1
        if cnt==1:print(line,"\n")
        INTER = [int(i) for i in line[13:]] 
        print(line[1],INTER)
for line in INTER:
    offset.append(int(line))

ig = go.Figure()
#fig.add_trace(go.Scatter(y=INTER))
fig.add_trace(go.Bar(y=INTER))
fig.add_trace(go.Bar(y=offset))

fig.update_layout(title = Description)
fig.show()        
        
        

LAT=[12,23,45,34,78,99,6,54,3,4,56,78,23,4,78,56]
len(LAT)


from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np

LAT=[12,23,45,34,78,99,6,54,3,4,56,78,23,4,78,56]
LONG=(range(0,len(LAT)))


LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)

fig = plt.figure(num=None, figsize=(6,6), dpi=80, facecolor='salmon')

ax = fig.gca()
#plt.gca(projection='polar')
text(0.1, 0.9, 'This is a plot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
s=16
#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('In this case the botton is the sequnce number of items in "LAT". ')
plt.title('Sample Plot using Misc Data')
plt.ylabel('This is the number used in the list: \n'+str(LAT)+'.')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np

LAT=[12,23,45,34,78,99,6,54,3,4,56,78,23,4,78,56]
LONG=(range(0,len(LAT)))


LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))

fig = plt.figure(num=None, figsize=(6,6), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

text(0.1, 0.9, 'This is a plot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
s=16
#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('In this case the botton is the sequnce number of items in "LAT". ')
plt.title('Sample Plot using Misc Data')
plt.ylabel('This is the number used in the list: \n'+str(LAT)+'.')
plt.show()

!ls csse_covid_19_data/csse_covid_19_time_series/

LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
Description = LASTFILE[57:-4]
print(Description)

LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
Description = LASTFILE[57:-4]
DataIn = open(LASTFILE).readlines()
cnt=0
for line in DataIn:
    cnt=cnt+1
    if cnt<2:print(line)

#LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
Description = LASTFILE[57:-4]
DataIn = open(LASTFILE).readlines()
SEARCH = input("SEARCH: ")
cnt = 0
CNTS=0
counts=[]
for line in DataIn:
    cnt=cnt+1
    line=line.lstrip(",")
    if SEARCH in line:
        print(line)
        Items = line.split(",")
        print(SEARCH,Description,Items[4:-1])

line="""Germany,51.0,9.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,3,3,7,9,11,17,24,28,44,67,84,94,123,157,206,267,342,433,533,645,775,920,1107,1275,1444,1584,1810
"""
Items = line.split(",")
print(Items)
print("------------------------------------")
print(Items[0],Items[4:-1])

#LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
DataIn = open(LASTFILE).readlines()
SEARCH = input("SEARCH: ")
COVIDdata = []
cnt = 0
CNTS=0
counts=[]
for line in DataIn:
    cnt=cnt+1
    line=line.lstrip(",")
    if SEARCH in line:
        print(line)
        Items = line.split(",")
        for item in Items[4:-1]:
            COVIDdata.append(int(item))
print("-------------------------------")
Description = LASTFILE[57:-4]
print(SEARCH,Description,": \n\n",COVIDdata)        

!ls csse_covid_19_data/csse_covid_19_time_series/

import plotly.graph_objects as go
fig = go.Figure()
#fig.add_trace(go.Scatter(y=INTER))
fig.add_trace(go.Bar(y=INTER))
fig.update_layout(title = 'Fluctuations between data entries in Hours')
fig.show()

import matplotlib.pyplot as plt; plt.rcdefaults()
import matplotlib.pyplot as plt
from matplotlib.pyplot import text
import numpy as np
#LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
Description = LASTFILE[57:-4]
cnt=0
SEARCH = input("Which Country ? ")
CNT=0
CONFIRMEDcases = []
DataIn = open(LASTFILE).readlines()
for line in DataIn:
    line = line.split(",")
    CNT=CNT+1
    #if CNT<50:print (line[1])
    if SEARCH in line[1]:
        cnt=cnt+1
        if cnt==1:print(line,"\n")
        INTER = [int(i) for i in line[13:]] 
        print(line[1],INTER)
for num in INTER:
    CONFIRMEDcases.append(num)

LAT=CONFIRMEDcases
LONG=(range(0,len(LAT)))
LT = np.array(LAT)
LG = np.array(LONG)

fig = plt.figure(num=None, figsize=(6,4), dpi=180, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()
#plt.gca(projection='polar')
text(0.4, 0.7, 'This is a plot of '+Description+' in '+SEARCH, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
s=6

print(len(LG))
print(len(LT))
#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.bar(LG, LT, align='center', alpha=0.5)
#plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('In this case the botton is the sequence days that have passed. ')
plt.title('Sample Plot using '+Description+' Data from '+SEARCH+'.')
plt.ylabel('The last number in the list: '+str(LAT[-1])+'.')
plt.show()         

print(CONFIRMEDcases)

US=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 6, 7, 11, 12, 14, 17, 21, 22, 28, 36, 40, 47, 54, 63, 85, 108, 118, 200, 244, 307, 417, 557, 706, 942, 1209, 1581, 2026, 2467, 2978, 3873, 4757, 5926, 7087, 8407, 9619, 10783]
norm = [float(i)/max(US) for i in US]
print(norm)
z = np.linspace(0.0, LAT[-1], 10)
print(z)


s=6

norm = [float(i)/max(CONFIRMEDcases) for i in CONFIRMEDcases]
SI =[]
for S in norm:
    S=S*30
    SI.append(S)
SZ =np.asarray(SI)+6 
print(SZ)


from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np

LAT=CONFIRMEDcases
LONG=(range(0,len(LAT)))


LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))

fig = plt.figure(num=None, figsize=(6,6), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

text(0.6, 0.7, 'This is a plot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))



#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=SZ, color="black")
plt.grid(True)

plt.xlabel('In this case the botton is the sequnce number of items in "LAT". ')
plt.title('Sample Plot using Misc Data')
plt.ylabel('This is the number used in the list: \n'+str(LAT[-1])+'.')
plt.show()


norm = [float(i)/sum(raw) for i in raw]

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np

LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
DataIn = open(LASTFILE).readlines()
SEARCH = input("SEARCH: ")
CONFIRMEDcases = []
cnt = 0
CNTS=0
counts=[]
for line in DataIn:
    cnt=cnt+1
    if cnt==1:print(line)
    line=line.lstrip(",")
    if SEARCH in line:
        print(line)
        Items = line.split(",")
        #for item in Items[4:-1]:
        for item in Items[4:-1]:
            CONFIRMEDcases.append(int(item))

LAT=CONFIRMEDcases[40:]
LONG=(range(0,len(LAT)))
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)

fig = plt.figure(num=None, figsize=(10,8), dpi=180, facecolor='salmon')
ax = fig.gca()

text(0.3, 0.7, 'This is a plot of Confirmed Cases in '+SEARCH, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

ax.set_facecolor(('#8eda8b'))




S=1
Size=[]
for x in CONFIRMEDcases:
    S=1+(float(x)*.01)
    Size.append(int(S))
s = np.array(Size)

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('In this case the botton is the sequence days that have passed. ')
plt.title('Simple Plots Search and Print per Country')
plt.ylabel('This is the number used in the list: \n'+str(LAT[-1])+'.')
plt.show()            

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np

LASTFILE="csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
DataIn = open(LASTFILE).readlines()
SEARCH = input("SEARCH: ")
CONFIRMEDcases = []
cnt = 0
CNTS=0
counts=[]
for line in DataIn:
    cnt=cnt+1
    if cnt==1:print(line)
    line=line.lstrip(",")
    if SEARCH in line:
        print(line)
        Items = line.split(",")
        #for item in Items[4:-1]:
        for item in Items[4:-1]:
            CONFIRMEDcases.append(int(item))

LAT=CONFIRMEDcases[40:]
LONG=(range(0,len(LAT)))
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)

fig = plt.figure(num=None, figsize=(10,8), dpi=180, facecolor='salmon')
ax = fig.gca()

text(0.3, 0.7, 'This is a plot of Confirmed Cases in '+SEARCH, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

ax.set_facecolor(('#8eda8b'))

S=1
Size=[]
for x in CONFIRMEDcases:
    S=1+(float(x)*.01)
    Size.append(int(S))
s = np.array(Size)

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('In this case the botton is the sequence days that have passed. ')
plt.title('Simple Plots Search and Print per Country')
plt.ylabel('This is the number used in the list: \n'+str(LAT[-1])+'.')
plt.show()            

!pwd

CASESs =[]

import datetime
import calendar
import time
from M2D import *
import sqlite3
import numpy as np
from matplotlib.pyplot import text
from matplotlib import pyplot as plt

arrangedDdata = ''
DDATA =[]
CASESs =[]
DEATHs = []
DDATA.append("Date Time Timestamp SpanBetweenSamples Cases Deaths")
arrangedDdata=arrangedDdata #+"Date, Time, Cases, Deaths, Timestamp, TimeBetweenSamples\n"
conn=sqlite3.connect("/home/jack/Desktop/cOVID-19/DATA/CoronaData2.db")
c= conn.cursor()
cnt=0
for row in c.execute('SELECT rowid,* from CORONA'):
    cnt=cnt+1
    row =str(row)
    row=row.replace(",","")
    row = row.split(" ")
    if cnt==1:start= row[0][2:],row[1],row[2]
    CASESs.append(row[10])
    DEATHs.append(row[14])
    
    #print (row)
    #print (row[1],row[2],row[3],row[5],row[10],row[14])
    Month = row[1]
    #print (Month[1:])
    month = Month2Num(Month[1:])
    #print (month)
    #if cnt==160:print(row)
    #if cnt==160:print(OUT)               
    OUT = row[2]+"/"+month+"/"+row[3]+" "+row[5]+":00 "+row[10]+" "+row[14]
    # Result 03/12/2020 03:25:00 1327 38
    #print (OUT) 
    arrangedDdata = arrangedDdata+OUT+"\n"
conn.close() 


# 3,13,2020,03:45,GMT,1747,41

EPOCHa=[]
Scnt=0


ALLdata=[]
EPOCHS = []
SPANS = []
SPANS.append(0)
SPANS.append(0)
ACCs = []
text =arrangedDdata.split("\n")
text= text[1:-1]
for line in text:
    #print("line",line)
    #line=str(LINE)
    line = line.split(" ")
    CnD = ("split",line[2],line[3])
    #print (str(line[1]+'/'+line[0]+'/'+line[2][:-3]))
    dt = time.strftime(line[0]+' '+line[1])#+' '+line[2][:-3])
    #print ("dt",dt)
    
    dt_ti = dt

    #16-05-2020 02:48:00
    # Pattern to use to create a timestamp
    pattern = '%d/%m/%Y %H:%M:%S'
    #Convert the date (pattern) into a ten digit timestamp. example: 1586141340
    epochs = int(time.mktime(time.strptime(dt_ti, pattern)))
    
    # A function from from M2D import * to convery two timestamps 'last-current' into a span in hours
    if Scnt>1:SPANS.append(span(int(last),int(epochs)))
    #create a one time starting point timestamp called last    
    if Scnt==0:last=1583661400
        
    # create a list of timestamps called EPOCHS, as integers
    EPOCHS.append(int(epochs))
    DEATHS.append(line[3])
    
    #Create a list called ALLdata
    ad = dt_ti, epochs,span(int(last),int(epochs)),line[2],line[3]
    AS =str(ad)
    ALLdata.append(AS)
    
    Scnt=Scnt+1
    
    last = int(epochs)    
    #print (span(int(last),int(epochs)))
    EPOCHa.append(str(epochs))
#create an list of spans in hours as they are accumulated ( converted from timestamps. )    
SPANS.append(SPANS[-1])
acc=0
for accum in SPANS:
    acc=acc+accum
    ACCs.append(round(acc,1)) 
    
START = CASESs[0] 

print("\n--SPANS-Span in Hours between recordings.",len(SPANS),"---------------------------------------------------------")    
print ("Last timespan",SPANS[-1],"hours\n")
print("\n--ALLdata-",len(ALLdata),"---------------------------------------------------------")
print (ALLdata[-1],"\n")
print("\n--EPOCHS-(Total number of timestamps.)",len(EPOCHS),"---------------------------------------------------------")
print (EPOCHS[-1],"\n")
print("\n--ACCs-",len(ACCs),"---------------------------------------------------------")
print ("Timestamp of Last entry: ",ACCs[-1],"\n")
print("Number of days activity has been recorded.",ACCs[-1]/24)
print ("\n++++++++++++++++++++++++++++++++++++++\n")
print ("len(SPANS)",len(SPANS))
print ("len(ACCs)",len(ACCs))
print ("len(CASESs)",len(CASESs))
print ("len(DEATHs)",len(DEATHs))
#3-15-2020 19:00,3329
print ("First Recorded Confirmed Case Count: ",CASESs[0])
print ("Start of Accumulated Time in Days: ",ACCs[1])
print ("Record Keeping Started",' '.join(start)+", with",START,"confirmed cases and",DEATHs[0],"Deaths")
print ("Number of Hours Records have been kept:",ACCs[-1])
print ("Current Confirmed Cases: ",CASESs[-1])
print ("Last Death Count: ", DEATHs[-1])
print ("\n-- Debug Info -------------------------------------")
print ("len(CASESs)",len(CASESs))
print ("len(DEATHS)",len(DEATHs))
print ("len(ACCs)",len(ACCs))


x = np.array(ACCs,dtype=np.float)
y = np.array(CASESs,dtype=np.int)
d = np.array(DEATHs,dtype=np.int)
fig = plt.figure(num=None, figsize=(16,8), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

ax.grid(color='lightgray', linestyle='-', linewidth=1)
#plt.scatter(x, y, s=3)


#plt.plot(x, d)
#plt.yscale('log')
#plt.yscale('symlog', linthreshy=0.01)
plt.scatter(x, d, s=3, color='red')
#plt.scatter(x, y, s=3, color='blue')

plt.title('log')
plt.grid(True)


#plt.grid(True)

plt.xlabel('Hours: Clock Started '+str(ACCs[-1])+' hours ago.\nMarch/08/2020 23:30:00 with 537 Cases and 21 Deaths')
plt.title('Horizontal~Accumulated Hours Since Start - Verticle Number of Confirmed Cases "'+str(CASESs[-1])+'"', fontsize=20)
LastEntryDate=str(ALLdata[-1]).split("'")[1]


s0= 'Number of Confirmed Cases: "'+str(CASESs[-1])+'"'
plt.text(450, 10500, s0, fontsize=12)

s1= "Date:"+LastEntryDate+" GMT"
plt.text(450, 10000, s1, fontsize=12)

s2= 'Started:\n537 Cases\n21 Deaths'
plt.text(0, 1200, s2, fontsize=12)
s= 'v'
plt.text(0, 500, s, fontsize=15)
plt.ylabel('Number of Deaths in the USA', fontsize=22, color="red")
fig.savefig('images/plot-Deaths-002.png', facecolor=fig.get_facecolor(), edgecolor='black')
plt.show()



print(ALLdata[-1])
LastEntryDate=str(ALLdata[-1]).split("'")[1]
print(LastEntryDate)


import datetime
import calendar
import time
from M2D import *
import sqlite3

arrangedDdata = ''
arrangedDdata=arrangedDdata+"date_time,cases\n"
conn=sqlite3.connect("/home/jack/Desktop/cOVID-19/DATA/CoronaData2.db")
c= conn.cursor()
for row in c.execute('SELECT rowid,* from CORONA'):
    MISC=row[1]
    Str = MISC.split(" ")
    month = Str[0][0:5]
    OUT = Month2Num(month)+","+MISC[5:15]+" "+MISC[18:24]+":00"
    OUT = OUT.replace(", ","-")
    OUT = OUT.replace("c","")
    #OUT = OUT.replace(",","-")
    OUT = OUT.replace(" ",",");
    OUT = OUT.replace(",,"," ")
    OUT = OUT.rstrip(",");
    OUT = OUT.replace(",","") 
    #print (OUT) 
    arrangedDdata = arrangedDdata+OUT+"\n"
conn.close() 

text =arrangedDdata.split("\n")
text= text[1:-1]
EPOCHa=[]
Scnt=0
SPANS = []
for line in text:
    #print(line)
    #line=str(LINE)
    line = line.split("-")
    #print (line)
    #print (str(line[1]+'/'+line[0]+'/'+line[2][:-3]))
    dt = time.strftime((str(line[1]+'/'+line[0]+'/'+line[2][:-3])))
    #print (dt+":00")

    dt_ti = dt+":00"
    #print (dt_ti)
    #03-16-2020 02:48,3777
    pattern = '%d/%m/%Y %H:%M:%S'
    #pattern = '%m/%d/%Y %H:%M:%S'
    epochs = int(time.mktime(time.strptime(dt_ti, pattern)))
    #print (dt_ti, epochs)
    
    if Scnt>1:SPANS.append(span(int(last),int(epochs)))
    if Scnt==0:last=1583661400  
    SPan = span(int(last),int(epochs))    
    data = dt_ti+" "+str(epochs)+" "+str(SPan)
    
    entry = str(data)
    Scnt=Scnt+1
    
    last = int(epochs)    
    #print (span(int(last),int(epochs)))
    EPOCHa.append(data)
    
    
for lines in EPOCHa:
    print (lines)
     
conn.close() 
count = 0
ACCs = []
ACCs.append(0)
ACCs.append(0)
ACCs.append(0)
acc=0
for accum in SPANS:
    acc=acc+accum
    ACCs.append(round(acc,1))
START = CASESs[0]


#3-15-2020 19:00,3329
print ("First Recorded Confirmed Case Count: ",CASESs[0])
print ("Start of Accumulated Time in Days: ",ACCs[1])
print ("Record Keeping Started",' '.join(start)+", with",START,"confirmed cases and",DEATHs[0],"Deaths")
print ("Number of Hours Records have been kept:",ACCs[-1])
print ("Current Confirmed Cases: ",CASESs[-1])
print ("Last Death Count: ", DEATHs[-1])
print ("\n-- Debug Info -------------------------------------")
print ("len(CASESs)",len(CASESs))
print ("len(DEATHS)",len(DEATHs))
print ("len(ACCs)",len(ACCs))


x = np.array(ACCs,dtype=np.float)
y = np.array(CASESs,dtype=np.int)
d = np.array(DEATHs,dtype=np.int)
fig = plt.figure(num=None, figsize=(16,8), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

ax.grid(color='lightgray', linestyle='-', linewidth=1)
#plt.scatter(x, y, s=3)


plt.plot(x, d)
#plt.yscale('log')
#plt.yscale('symlog', linthreshy=0.01)
#plt.scatter(x, d, s=3, color='red')
#plt.scatter(x, y, s=3, color='blue')

plt.title('log')
plt.grid(True)


#plt.grid(True)

plt.xlabel('Hours: Clock Started '+str(ACCs[-1])+' hours ago.\nMarch/08/2020 23:30:00 with 537 Cases and 21 Deaths')
plt.title('Horizontal~Accumulated Hours Since Start - Verticle Number of Confirmed Cases "'+str(CASESs[-1])+'"', fontsize=20)

s0= 'Number of Confirmed Cases "'+str(CASESs[-1])+'"'
plt.text(450, 10500, s0, fontsize=12)

s1= 'Started:\n537 Cases\n21 Deaths'
plt.text(0, 1200, s1, fontsize=12)
s1= 'Started:\n537 Cases\n21 Deaths'
plt.text(0, 1200, s1, fontsize=12)
s= 'v'
plt.text(0, 500, s, fontsize=15)
plt.ylabel('Number of Deaths in the USA', fontsize=22, color="red")
fig.savefig('images/plot-Deaths-002.png', facecolor=fig.get_facecolor(), edgecolor='black')
plt.show()

import sqlite3
from M2D import Month2Num
arrangedDdata = ''
CASESs = []
DEATHs = []
arrangedDdata=arrangedDdata+"date_time,cases\n"
conn=sqlite3.connect("DATA/CoronaData2.db")
c= conn.cursor()
cnt = 0
for rows in c.execute('SELECT * from CORONA'):
    cnt = cnt  +1
    #if cnt==1:print(rows)
    rows=str(rows)
    row = rows.split(" ")
    if cnt==1:print(row[0][2:],row[1],row[2]+":00",row[4],row[9],row[13])
    if cnt==1:start= row[0][2:],row[1],row[2]   
    CASESs.append(row[9])
    DEATHs.append(row[13])
    
conn.close() 
count = 0
ACCs = []
ACCs.append(0)
ACCs.append(0)
ACCs.append(0)
acc=0
for accum in SPANS:
    acc=acc+accum
    ACCs.append(round(acc,1))
START = CASESs[0]


#3-15-2020 19:00,3329
print ("First Recorded Confirmed Case Count: ",CASESs[0])
print ("Start of Accumulated Time in Days: ",ACCs[1])
print ("Record Keeping Started",' '.join(start)+", with",START,"confirmed cases and",DEATHs[0],"Deaths")
print ("Number of Hours Records have been kept:",ACCs[-1])
print ("Current Confirmed Cases: ",CASESs[-1])
print ("Last Death Count: ", DEATHs[-1])
print ("\n-- Debug Info -------------------------------------")
print ("len(CASESs)",len(CASESs))
print ("len(DEATHS)",len(DEATHs))
print ("len(ACCs)",len(ACCs))


x = np.array(ACCs,dtype=np.float)
y = np.array(CASESs,dtype=np.int)
d = np.array(DEATHs,dtype=np.int)
fig = plt.figure(num=None, figsize=(16,8), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

ax.grid(color='lightgray', linestyle='-', linewidth=1)
#plt.scatter(x, y, s=3)


plt.plot(x, d)
#plt.yscale('log')
#plt.yscale('symlog', linthreshy=0.01)
#plt.scatter(x, d, s=3, color='red')
#plt.scatter(x, y, s=3, color='blue')

plt.title('log')
plt.grid(True)


#plt.grid(True)

plt.xlabel('Hours: Clock Started '+str(ACCs[-1])+' hours ago.\nMarch/08/2020 23:30:00 with 537 Cases and 21 Deaths')
plt.title('Horizontal~Accumulated Hours Since Start - Verticle Number of Confirmed Cases "'+str(CASESs[-1])+'"', fontsize=20)

s0= 'Number of Confirmed Cases "'+str(CASESs[-1])+'"'
plt.text(450, 10500, s0, fontsize=12)

s1= 'Started:\n537 Cases\n21 Deaths'
plt.text(0, 1200, s1, fontsize=12)
s1= 'Started:\n537 Cases\n21 Deaths'
plt.text(0, 1200, s1, fontsize=12)
s= 'v'
plt.text(0, 500, s, fontsize=15)
plt.ylabel('Number of Deaths in the USA', fontsize=22, color="red")
fig.savefig('images/plot-Deaths-002.png', facecolor=fig.get_facecolor(), edgecolor='black')
plt.show()

https://www.latlong.net/
    https://www.census.gov/



!git clone https://github.com/CSSEGISandData/COVID-19.git

!git pull

!ls csse_covid_19_data/csse_covid_19_daily_reports/

LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-05-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
longitude = ""
cnt=0
for line in DataIn:
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if "Florida" in line[2] and "-" in (line[6]):
        cnt=cnt+1
        if cnt<5:print(line[2],line[1],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10])
        entry = line[2],line[1],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10]
        STATES.append(entry)
        LAT.append(line[5])
        LONG.append(line[6])
        cases.append(line[7])
        longitude = longitude+line[6]+","
print("\n\n",len(STATES))        

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))

fig = plt.figure(num=None, figsize=(6,6), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()





text(0.6, 0.7, 'Cleveland', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
s=1
#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)



plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))

fig = plt.figure(num=None, figsize=(6,6), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()


text(0.6, 0.7, 'Cleveland', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
s=1
#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)



plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
longitude = ""
for line in DataIn:
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if "Florida" in line[2] and "-" in (line[6]):
        #print(line[2],line[1],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10])
        STATES.append(text)
        LAT.append(line[5])
        LONG.append(line[6])
        cases.append(line[7])
        longitude = longitude+line[6]+","
print("\n\n",len(STATES))        
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))
print((max(LG)-min(LG))*69)
print((max(LT)-min(LT))*69)

fig = plt.figure(num=None, figsize=(4,4), dpi=120, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

text(0.6, 0.11, 'Miami-Dade', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
longitude = ""
for line in DataIn:
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if "Ohio" in line[2] and "-" in (line[6]):
        #print(line[2],line[1],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10])
        STATES.append(text)
        LAT.append(line[5])
        LONG.append(line[6])
        cases.append(line[7])
        longitude = longitude+line[6]+","
print("\n\n",len(STATES))        
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))
print((max(LG)-min(LG))*69)
print((max(LT)-min(LT))*69)

fig = plt.figure(num=None, figsize=(6,6), dpi=120, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

text(0.8, 0.91, 'Cleveland', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

from matplotlib import pyplot as plt

import numpy as np
LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-05-2020.csv"
DataIn = open(LASTFILE).readlines()
cnt=-1
LAT =[]
LON =[]
cases = []
STate = input("What State? ")
for lines in DataIn:
    lines = lines.replace("\n","")

    line = lines.split(",")
    if STate in line[2] and len(line[5])>8 and len(line[6])>4:
        cnt=cnt+1
        if cnt<2:print(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        LAT.append(line[5]) 
        LON.append(line[6])
        cases.append(int(line[7]))
LA = LAT
LO = LON

print("len(LA)",len(LA))
print("len(LO)",len(LO))
LT = np.array(LAT,dtype=np.float)
LG = np.array(LON,dtype=np.float)
print ('min(LG)',min(LG))
print ('max(LG)',max(LG))
print ("min(LT)",min(LT))
print ("max(LT)",max(LT))
print("----------------------")

print('len(LT)',len(LT))
print('len(LG)',len(LG))

print ("min(cases)",min(cases))
print("max(cases)",max(cases))
print("len(cases)",len(cases))
print("cases",cases)
fig = plt.figure(num=None, figsize=(12,10), dpi=80, facecolor='red')
ax = fig.gca()

ax.set_facecolor(('white'))

S=1
Size=[]
for x in cases:
    S=3+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)



lgmin= (min(LG))-4
lgmax= (max(LG))+4
ltmin= (min(LT))+4
ltmax= (max(LT))-4

print ('lgmin',lgmin)# = (min(LG))+5
print ('lgmax',lgmax)# = (max(LG))-5
print ('ltmin',ltmin)# = (min(LT))+5
print ('ltmax',ltmax)# = (max(LT))-5


#longLeft= (min(LG))-3
#longRight = (max(LG))+3
#latTop = (min(LT))-3
#latBottom = (max(LT))+3
#plt.axis([longLeft,longRight,latTop,latBottom])

#plt.axis([lgmin,lgmax,ltmin,ltmax ])


#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="blue")
plt.grid(True)
#plt.text(50,50, "Verticle lines are Longitude, Horizontal lines are Latitude")
text = (50,50, "Verticle lines are Longitude, Horizontal lines are Latitude")
plt.xlabel('This plot is of: '+STate, fontsize=20)
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19', fontsize=16, color="white")
plt.ylabel('The Dot size is relative to the number of cases')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
Search = input("Which State? ")
longitude = ""
for line in DataIn:
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if Search in line[2] and "-" in (line[6]):
        #print(line[2],line[1],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10])
        STATES.append(text)
        LAT.append(line[5])
        LONG.append(line[6])
        cases.append(line[7])
        longitude = longitude+line[6]+","
print("\n\n",len(STATES))        
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))
print(int(max(LG)-min(LG))*.69)
print(int(max(LT)-min(LT))*.69)

H = (int(max(LG)-min(LG))*.69*2)
V = (int(max(LT)-min(LT))*.69*2)

fig = plt.figure(num=None, figsize=(H,V), dpi=120, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

#text(0.6, 0.1, 'Detroit', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
S=1
Size=[]
for x in cases:
    S=3+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-06-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
longitude = ""
SEARCH = input("What State? ")
for line in DataIn:
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if SEARCH in line[2] and "-" in (line[6]):
        #print(line[2],line[1],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10])
        STATES.append(text)
        LAT.append(line[5])
        LONG.append(line[6])
        cases.append(line[7])
        longitude = longitude+line[6]+","
print("\n\n",len(STATES))        
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))
print(int(max(LG)-min(LG))*.69)
print(int(max(LT)-min(LT))*.69)

H = (int(max(LG)-min(LG))*.69)
V = (int(max(LT)-min(LT))*.69)

fig = plt.figure(num=None, figsize=(H,V), dpi=120, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

text(0.6, 0.1, SEARCH, horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
longitude = ""
for line in DataIn:
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if "Washington" in line[2] and "-" in (line[6]):
        #print(line[2],line[1],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10])
        STATES.append(text)
        LAT.append(line[5])
        LONG.append(line[6])
        cases.append(line[7])
        longitude = longitude+line[6]+","
print("\n\n",len(STATES))        
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))
print(int(max(LG)-min(LG))*.69)
print(int(max(LT)-min(LT))*.69)

H = (int(max(LG)-min(LG))*.69)
V = (int(max(LT)-min(LT))*.69)
Factor=round((H/V),3)
print("Factor:",Factor)
fig = plt.figure(num=None, figsize=(5,5*Factor), dpi=120, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

#text(0.6, 0.1, 'Los Angeles', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))
print((max(LG)-min(LG))*69)
print((max(LT)-min(LT))*69)

fig = plt.figure(num=None, figsize=(8,9), dpi=120, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

text(0.8, 0.11, 'Miami-Dade', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

import numpy as geek 
import pylab as p 
  
# Start = 0 
# End = 2 
# Samples to generate = 10 
x1 = geek.linspace(0, 2, 20, endpoint = "False") 
y1 = geek.ones(20) 
  
p.plot(x1, y1, '*', color='red') 
p.xlim(-0.2, 3) 

import numpy as geek 
import pylab as p 
print (len(LG))
lg= len(LG)
print (LG[1])
print (LG[-1])
print("----------------")
print (max(LT))
print (min(LT))
print (max(LG))
print (min(LG))
print("----------------")
ylim0=(max(LT))+.5
ylim1=(min(LT))+.5
xlim1=max(LG)-.5
xlim0=min(LG)-.5

print(ylim0)
print(ylim1)
print(xlim0)
print(xlim1)
fig = plt.figure(num=None, figsize=(6,5), dpi=120, facecolor='salmon')



# Start = 0 
# End = 2 
# Samples to generate = 10 
x1 = geek.linspace(0, 2, 10, endpoint = False) 
y1 = geek.ones(10) 
  
p.plot(LG, LT, '.') 
p.xlim(xlim0, xlim1) 
p.ylim(ylim1, ylim0) 

w = 10
h = 12
d = 80
plt.figure(figsize=(w, h,), dpi=d)
fig, ax = plt.subplots()
ax.scatter(LG, LT, s=2)

#y = [2.56422, 3.77284, 3.52623, 3.51468, 3.02199]
#z = [0.15, 0.3, 0.45, 0.6, 0.75]
#txt = 'Dade'
ax.axis([-88, -80, 24, 31])

ax.text(25,81, ". Data: (1, 5)", transform=ax.transData)
ax.text(85, 26, ". Axes: (0.5, 0.1)", transform=ax.transAxes)
ax.text(87, 27, ". Figure: (0.2, 0.2)", transform=fig.transFigure);

fig, ax = plt.subplots()
#ax.annotate(txt, (3, 3))
ax.scatter(x, y)




fig, ax = plt.subplots(facecolor='lightgray')
ax.axis([0, 10, 0, 10])

# transform=ax.transData is the default, but we'll specify it anyway
ax.text(1, 5, ". Data: (1, 5)", transform=ax.transData)
ax.text(0.5, 0.1, ". Axes: (0.5, 0.1)", transform=ax.transAxes)
ax.text(0.2, 0.2, ". Figure: (0.2, 0.2)", transform=fig.transFigure);
fig, ax = plt.subplots()
#ax.annotate(txt, (3, 3))
ax.scatter(x, y)

from matplotlib.pyplot import text
from matplotlib import pyplot as plt
import numpy as np
LT = np.array(LAT,dtype=np.float)
LG = np.array(LONG,dtype=np.float)
print ("Max Latitude: ",max(LT))
print ("Min Latitude: ",min(LT))
print ("Max Longitude: ",max(LG))
print ("Max Longitude: ",min(LG))

fig = plt.figure(num=None, figsize=(6,6), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

text(0.8, 0.11, 'Miami-Dade', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)

#ax.set_facecolor('xkcd:green')
ax.set_facecolor(('#8eda8b'))
S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    #print(int(S))
s = np.array(Size)

#plt.axis([-130,-65,20,55])
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(LG, LT, s=s, color="black")
plt.grid(True)

plt.xlabel('First data sample was: 09/03/2020 04:30:00')
plt.title('Using Latitude and Longitude from https://github.com/CSSEGISandData/COVID-19')
plt.ylabel('Number of Cases')
plt.show()

%%writefile M2D.py
"""
Month2Num(month)
span(timestamp1, timestamp2): This will show the span in hours between two timestamps.

"""
from __future__ import division
def Month2Num(month):
    number=""
    months=["January","February","March","April","May","June","July",\
            "August","September","October","November","December"]
    Numbers=["01","02","03","04","05","06","07","08","09","10","11","12"]
    if month==months[0]:number=Numbers[0]
    if month==months[1]:number=Numbers[1]
    if month==months[2]:number=Numbers[2]
    if month==months[3]:number=Numbers[3]
    if month==months[4]:number=Numbers[4]
    if month==months[5]:number=Numbers[5]
    if month==months[6]:number=Numbers[6]
    if month==months[7]:number=Numbers[7]
    if month==months[8]:number=Numbers[8]
    if month==months[9]:number=Numbers[9]
    if month==months[10]:number=Numbers[10]
    if month==months[11]:number=Numbers[11]    
    return number

def span(timestamp1, timestamp2):
    SPAN = timestamp2-timestamp1
    res =SPAN/3600
    result = round(res,2)
    return result


fig, ax = plt.subplots(facecolor='lightgray')
ax.axis([0, 10, 0, 10])

# transform=ax.transData is the default, but we'll specify it anyway
ax.text(1, 5, ". Data: (1, 5)", transform=ax.transData)
ax.text(0.5, 0.1, ". Axes: (0.5, 0.1)", transform=ax.transAxes)
ax.text(0.2, 0.2, ". Figure: (0.2, 0.2)", transform=fig.transFigure);


# doubling the width of markers
x = [0,2,4,6,8,10]
y = range(0, len(x))
s = [20*2**n for n in range(len(x))]

plt.scatter(x,y,s=s)


plt.show()

y = [0,2,4,6,8,10]
z = range(0, len(x))
n = [20*2**n for n in range(len(x))]
fig, ax = plt.subplots()
ax.scatter(z, y, s=s, color="lightGray")

for i, txt in enumerate(n):
    #if int(txt)>80 and int(txt)<640:
        ax.annotate(txt, (z[i], y[i]))

y = [2.56422, 3.77284, 3.52623, 3.51468, 3.02199]
z = [0.15, 0.3, 0.45, 0.6, 0.75]
n = [58, 651, 393, 203, 123]

fig, ax = plt.subplots()
ax.scatter(z, y)

for i, txt in enumerate(n):
    ax.annotate(txt, (z[i], y[i]))

14.5995° N, 120.9842° E

import matplotlib.pyplot as plt
w = 4
h = 3
d = 70
plt.figure(figsize=(w, h), dpi=d)
x = LG
y = LT
x_pos = 1
y_pos = 2
#plt.text(x_pos, y_pos, "text on plot")

plt.plot(x,y)

S=1
Size=[]
for x in cases:
    S=1+(float(x)*.1)
    Size.append(int(S))
    print(int(S))
s = np.array(Size)

s = [.1*n for n in range(len(cases))]
for I in s:
    print (int(I))

%matplotlib inline

fig, ax = plt.subplots()

x = np.linspace(0, 40, 1000)
ax.plot(x, np.cos(x))
ax.axis('equal')

ax.annotate('Using An Arrow Pointer', xy=(18.5, 1), xytext=(10, 10),
            arrowprops=dict(facecolor='red', shrink=.01))

ax.annotate('local minimum', xy=(6 * np.pi, -1), xytext=(-5, -20),
            arrowprops=dict(arrowstyle="->",
                            connectionstyle="angle3,angleA=-50,angleB=-90"));


from __future__ import division, absolute_import, print_function
from graph_tools import Graph
from graph_tools import *
import sys
if sys.version_info < (3,):
    range = xrange
import os
from pylab import *  # for plotting
from numpy.random import *  # for random sampling

v_age = g.new_vertex_property("int")
      e_age = g.new_edge_property("int")
      

AttributeError: 'Graph' object has no attribute 'new_vertex_property'


LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
longitude = ""
cnt=0
for line in DataIn:
    cnt=cnt+1
    if cnt==1:print(line)
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if "Germany" in line:
        if (len(line))==9:print(line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
        STATES.append(text)
        LAT.append(line[5])
        LONG.append(line[6])
        cases.append(line[7])
        longitude = longitude+line[6]+","

LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/04-02-2020.csv"
#LASTFILE="csse_covid_19_data/csse_covid_19_daily_reports/03-30-2020.csv"
DataIn = open(LASTFILE).readlines()
LAT=[]
LONG=[]
STATES=[]
cases=[]
longitude = ""
cnt=0
Cnt=0
for line in DataIn:
    cnt=cnt+1
    if cnt==1:print(line)
    line=line.replace("\n","")
    line = line.lstrip(",")
    line = line.split(",")
    if (len(line))==9:Cnt=Cnt+1
    if (len(line))==9 and len(line[1])>4:
        print(line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8])
    STATES.append(text)
    LAT.append(line[5])
    LONG.append(line[6])
    cases.append(line[7])
    longitude = longitude+line[6]+","
print(Cnt)

https://anthonylouisdagostino.com/bounding-boxes-for-all-us-states/



allcountries = []

%%writefile GlobalData.py
'''
Usage:
from GlobalData import *
print(HELP)

To get Zambia Population-2019 
from GlobalData import *
X=GlobalData("Zambia")
x=X.split(",")
print(x[4])

To get Zambia Population Change
from GlobalData import *
X=GlobalData("Zambia")
x=X.split(",")
print(x[5])

from GlobalData import *
print(DATA[4])
>>> ['American Samoa,Oceania,Polynesia,55465,55312,−0.28%']

from GlobalData import *
data=str(DATA[4]).split(",")
print(data[3])
>>> 55465
'''
DATA='''Country,UN Continental,Unstatistical,Population-2018,Population-2019,Population Change
Afghanistan,Asia,Southern Asia,37171921,38041754,+2.34%
Albania,Europe,Southern Europe,2882740,2880917,−0.06%
Algeria,Africa,Northern Africa,42228408,43053054,+1.95%
American Samoa,Oceania,Polynesia,55465,55312,−0.28%
Andorra,Europe,Southern Europe,77006,77142,+0.18%
Angola,Africa,Middle Africa,30809787,31825295,+3.30%
Anguilla,Americas,Caribbean,14731,14869,+0.94%
Antigua and Barbuda,Americas,Caribbean,96286,97118,+0.86%
Argentina,Americas,South America,44361150,44780677,+0.95%
Armenia,Asia,Western Asia,2951745,2957731,+0.20%
Aruba,Americas,Caribbean,105845,106314,+0.44%
Australia,Oceania,Australia and New Zealand,24898152,25203198,+1.23%
Austria,Europe,Western Europe,8891388,8955102,+0.72%
Azerbaijan,Asia,Western Asia,9949537,10047718,+0.99%
Bahamas,Americas,Caribbean,385637,389482,+1.00%
Bahrain,Asia,Western Asia,1569446,1641172,+4.57%
Bangladesh,Asia,Southern Asia,161376708,163046161,+1.03%
Barbados,Americas,Caribbean,286641,287025,+0.13%
Belarus,Europe,Eastern Europe,9452617,9452411,0.00%
Belgium,Europe,Western Europe,11482178,11539328,+0.50%
Belize,Americas,Central America,383071,390353,+1.90%
Benin,Africa,Western Africa,11485044,11801151,+2.75%
Bermuda,Americas,Northern America,62756,62506,−0.40%
Bhutan,Asia,Southern Asia,754388,763092,+1.15%
Bolivia,Americas,South America,11353142,11513100,+1.41%
Bosnia and Herzegovina,Europe,Southern Europe,3323925,3301000,−0.69%
Botswana,Africa,Southern Africa,2254068,2303697,+2.20%
Brazil,Americas,South America,209469323,211049527,+0.75%
British Virgin Islands,Americas,Caribbean,29802,30030,+0.77%
Brunei,Asia,South-eastern Asia,428963,433285,+1.01%
Bulgaria,Europe,Eastern Europe,7051608,7000119,−0.73%
Burkina Faso,Africa,Western Africa,19751466,20321378,+2.89%
Burundi,Africa,Eastern Africa,10524117,10864245,+3.23%
Cambodia,Asia,South-eastern Asia,16249792,16486542,+1.46%
Cameroon,Africa,Middle Africa,25216267,25876380,+2.62%
Canada,Americas,Northern America,37074562,37411047,+0.91%
Cape Verde,Africa,Western Africa,543767,549935,+1.13%
Caribbean Netherlandst,Americas,Caribbean,25711,25979,+1.04%
Cayman Islands,Americas,Caribbean,64174,64948,+1.21%
Central African Republic,Africa,Middle Africa,4666368,4745185,+1.69%
Chad,Africa,Middle Africa,15477729,15946876,+3.03%
Chile,Americas,South America,18729160,18952038,+1.19%
Chinaa,Asia,Eastern Asia,1427647786,1433783686,+0.43%
Colombia,Americas,South America,49661048,50339443,+1.37%
Comoros,Africa,Eastern Africa,832322,850886,+2.23%
Congo,Africa,Middle Africa,5244359,5380508,+2.60%
Cook Islands,Oceania,Polynesia,17518,17548,+0.17%
Costa Rica,Americas,Central America,4999441,5047561,+0.96%
Croatia,Europe,Southern Europe,4156405,4130304,−0.63%
Cuba,Americas,Caribbean,11338134,11333483,−0.04%
Curaçao,Americas,Caribbean,162752,163424,+0.41%
Cyprus,Asia,Western Asia,1170125,1179551,+0.81%
Czech Republic,Europe,Eastern Europe,10665677,10689209,+0.22%
Denmark,Europe,Northern Europe,5752126,5771876,+0.34%
Djibouti,Africa,Eastern Africa,958923,973560,+1.53%
Dominica,Americas,Caribbean,71625,71808,+0.26%
Dominican Republic,Americas,Caribbean,10627141,10738958,+1.05%
DR Congo,Africa,Middle Africa,84068091,86790567,+3.24%
East Timor,Asia,South-eastern Asia,1267974,1293119,+1.98%
Ecuador,Americas,South America,17084358,17373662,+1.69%
Egypt,Africa,Northern Africa,98423598,100388073,+2.00%
El Salvador,Americas,Central America,6420746,6453553,+0.51%
Equatorial Guinea,Africa,Middle Africa,1308975,1355986,+3.59%
Eritrea,Africa,Eastern Africa,3452786,3497117,+1.28%
Estonia,Europe,Northern Europe,1322920,1325648,+0.21%
Eswatini,Africa,Southern Africa,1136281,1148130,+1.04%
Ethiopia,Africa,Eastern Africa,109224414,112078730,+2.61%
F.S. Micronesia,Oceania,Micronesia,112640,113815,+1.04%
Falkland Islands,Americas,South America,3234,3377,+4.42%
Faroe Islands,Europe,Northern Europe,48497,48678,+0.37%
Fiji,Oceania,Melanesia,883483,889953,+0.73%
Finland,Europe,Northern Europe,5522576,5532156,+0.17%
France,Europe,Western Europe,64990511,65129728,+0.21%
French Guiana,Americas,South America,275713,282731,+2.55%
French Polynesia,Oceania,Polynesia,277679,279287,+0.58%
Gabon,Africa,Middle Africa,2119275,2172579,+2.52%
Gambia,Africa,Western Africa,2280094,2347706,+2.97%
Georgia,Asia,Western Asia,4002942,3996765,−0.15%
Germany,Europe,Western Europe,83124418,83517045,+0.47%
Ghana,Africa,Western Africa,28206728,28833629,+2.22%
Gibraltar,Europe,Southern Europe,33718,33701,−0.05%
United Kingdom,Europe,Northern Europe,67141684,67530172,+0.58%
Greece,Europe,Southern Europe,10522246,10473455,−0.46%
Greenland,Americas,Northern America,56564,56672,+0.19%
Grenada,Americas,Caribbean,111454,112003,+0.49%
Guadeloupes,Americas,Caribbean,446928,447905,+0.22%
Guam,Oceania,Micronesia,165768,167294,+0.92%
Guatemala,Americas,Central America,17247849,17581472,+1.93%
Guernsey and  Jersey,Europe,Northern Europe,170499,172259,+1.03%
Guinea,Africa,Western Africa,12414293,12771246,+2.88%
Guinea-Bissau,Africa,Western Africa,1874303,1920922,+2.49%
Guyana,Americas,South America,779006,782766,+0.48%
Haiti,Americas,Caribbean,11123178,11263770,+1.26%
Honduras,Americas,Central America,9587522,9746117,+1.65%
Hong Kong,Asia,Eastern Asia,7371730,7436154,+0.87%
Hungary,Europe,Eastern Europe,9707499,9684679,−0.24%
Iceland,Europe,Northern Europe,336713,339031,+0.69%
India,Asia,Southern Asia,1352642280,1366417754,+1.02%
Indonesia,Asia,South-eastern Asia,267670543,270625568,+1.10%
Iran,Asia,Southern Asia,81800188,82913906,+1.36%
Iraq,Asia,Western Asia,38433600,39309783,+2.28%
Ireland,Europe,Northern Europe,4818690,4882495,+1.32%
Isle of Man,Europe,Northern Europe,84077,84584,+0.60%
Israel,Asia,Western Asia,8381516,8519377,+1.64%
Italy,Europe,Southern Europe,60627291,60550075,−0.13%
Ivory Coast,Africa,Western Africa,25069230,25716544,+2.58%
Jamaica,Americas,Caribbean,2934847,2948279,+0.46%
Japan,Asia,Eastern Asia,127202192,126860301,−0.27%
Jordan,Asia,Western Asia,9965318,10101694,+1.37%
Kazakhstan,Asia,Central Asia,18319618,18551427,+1.27%
Kenya,Africa,Eastern Africa,51392565,52573973,+2.30%
Kiribati,Oceania,Micronesia,115847,117606,+1.52%
Kuwait,Asia,Western Asia,4137312,4207083,+1.69%
Kyrgyzstan,Asia,Central Asia,6304030,6415850,+1.77%
Laos,Asia,South-eastern Asia,7061507,7169455,+1.53%
Latvia,Europe,Northern Europe,1928459,1906743,−1.13%
Lebanon,Asia,Western Asia,6859408,6855713,−0.05%
Lesotho,Africa,Southern Africa,2108328,2125268,+0.80%
Liberia,Africa,Western Africa,4818973,4937374,+2.46%
Libya,Africa,Northern Africa,6678559,6777452,+1.48%
Liechtenstein,Europe,Western Europe,37910,38019,+0.29%
Lithuania,Europe,Northern Europe,2801264,2759627,−1.49%
Luxembourg,Europe,Western Europe,604245,615729,+1.90%
Macau,Asia,Eastern Asia,631636,640445,+1.39%
Madagascar,Africa,Eastern Africa,26262313,26969307,+2.69%
Malawi,Africa,Eastern Africa,18143217,18628747,+2.68%
Malaysia,Asia,South-eastern Asia,31528033,31949777,+1.34%
Maldives,Asia,Southern Asia,515696,530953,+2.96%
Mali,Africa,Western Africa,19077749,19658031,+3.04%
Malta,Europe,Southern Europe,439248,440372,+0.26%
Marshall Islands,Oceania,Micronesia,58413,58791,+0.65%
Martinique,Americas,Caribbean,375673,375554,−0.03%
Mauritania,Africa,Western Africa,4403313,4525696,+2.78%
Mauritius,Africa,Eastern Africa,1189265,1198575,+0.78%
Mayotte,Africa,Eastern Africa,259531,266150,+2.55%
Mexico,Americas,Central America,126190788,127575529,+1.10%
Moldova,Europe,Eastern Europe,4051944,4043263,−0.21%
Monaco,Europe,Western Europe,38682,38964,+0.73%
Mongolia,Asia,Eastern Asia,3170216,3225167,+1.73%
Montenegro,Europe,Southern Europe,627809,627987,+0.03%
Montserrat,Americas,Caribbean,4993,4989,−0.08%
Morocco,Africa,Northern Africa,36029093,36471769,+1.23%
Mozambique,Africa,Eastern Africa,29496004,30366036,+2.95%
Myanmar,Asia,South-eastern Asia,53708320,54045420,+0.63%
Namibia,Africa,Southern Africa,2448301,2494530,+1.89%
Nauru,Oceania,Micronesia,10670,10756,+0.81%
Nepal,Asia,Southern Asia,28095714,28608710,+1.83%
Netherlands,Europe,Western Europe,17059560,17097130,+0.22%
New Caledonia,Oceania,Melanesia,279993,282750,+0.98%
New Zealand,Oceania,Australia and New Zealand,4743131,4783063,+0.84%
Nicaragua,Americas,Central America,6465501,6545502,+1.24%
Niger,Africa,Western Africa,22442822,23310715,+3.87%
Nigeria,Africa,Western Africa,195874683,200963599,+2.60%
Niue,Oceania,Polynesia,1620,1615,−0.31%
North Korea,Asia,Eastern Asia,25549604,25666161,+0.46%
North Macedonia,Europe,Southern Europe,2082957,2083459,+0.02%
Northern Mariana Islands,Oceania,Micronesia,56882,56188,−1.22%
Norway,Europe,Northern Europe,5337962,5378857,+0.77%
Oman,Asia,Western Asia,4829473,4974986,+3.01%
Pakistan,Asia,Southern Asia,212228286,216565318,+2.04%
Palau,Oceania,Micronesia,17907,18008,+0.56%
Palestinen,Asia,Western Asia,4862979,4981420,+2.44%
Panama,Americas,Central America,4176869,4246439,+1.67%
Papua New Guinea,Oceania,Melanesia,8606323,8776109,+1.97%
Paraguay,Americas,South America,6956066,7044636,+1.27%
Peru,Americas,South America,31989260,32510453,+1.63%
Philippines,Asia,South-eastern Asia,106651394,108116615,+1.37%
Poland,Europe,Eastern Europe,37921592,37887768,−0.09%
Portugal,Europe,Southern Europe,10256193,10226187,−0.29%
Puerto Rico,Americas,Caribbean,3039596,2933408,−3.49%
Qatar,Asia,Western Asia,2781682,2832067,+1.81%
Réunion,Africa,Eastern Africa,882526,888927,+0.73%
Romania,Europe,Eastern Europe,19506114,19364557,−0.73%
Russia,Europe,Eastern Europe,145734038,145872256,+0.09%
Rwanda,Africa,Eastern Africa,12301970,12626950,+2.64%
Saint Helena Ascension and Tristan da Cunha,Africa,Western Africa,6035,6059,+0.40%
Saint Kitts and Nevis,Americas,Caribbean,52441,52823,+0.73%
Saint Lucia,Americas,Caribbean,181889,182790,+0.50%
Saint Pierre and Miquelon,Americas,Northern America,5849,5822,−0.46%
Saint Vincent and the Grenadines,Americas,Caribbean,110211,110589,+0.34%
Samoa,Oceania,Polynesia,196129,197097,+0.49%
San Marino,Europe,Southern Europe,33785,33860,+0.22%
São Tomé and Príncipe,Africa,Middle Africa,211028,215056,+1.91%
Saudi Arabia,Asia,Western Asia,33702756,34268528,+1.68%
Senegal,Africa,Western Africa,15854323,16296364,+2.79%
Serbiak,Europe,Southern Europe,8802754,8772235,−0.35%
Seychelles,Africa,Eastern Africa,97096,97739,+0.66%
Sierra Leone,Africa,Western Africa,7650150,7813215,+2.13%
Singapore,Asia,South-eastern Asia,5757499,5804337,+0.81%
Sint Maarten,Americas,Caribbean,41940,42388,+1.07%
Slovakia,Europe,Eastern Europe,5453014,5457013,+0.07%
Slovenia,Europe,Southern Europe,2077837,2078654,+0.04%
Solomon Islands,Oceania,Melanesia,652857,669823,+2.60%
Somalia,Africa,Eastern Africa,15008226,15442905,+2.90%
South Africa,Africa,Southern Africa,57792518,58558270,+1.33%
South Korea,Asia,Eastern Asia,51171706,51225308,+0.10%
South Sudan,Africa,Eastern Africa,10975927,11062113,+0.79%
Spain,Europe,Southern Europe,46692858,46736776,+0.09%
Sri Lanka,Asia,Southern Asia,21228763,21323733,+0.45%
Sudan,Africa,Northern Africa,41801533,42813238,+2.42%
Suriname,Americas,South America,575990,581372,+0.93%
Sweden,Europe,Northern Europe,9971638,10036379,+0.65%
Switzerland,Europe,Western Europe,8525611,8591365,+0.77%
Syria,Asia,Western Asia,16945057,17070135,+0.74%
Taiwan,Asia,Eastern Asia,23726460,23773876,+0.20%
Tajikistan,Asia,Central Asia,9100835,9321018,+2.42%
Tanzaniac,Africa,Eastern Africa,56313438,58005463,+3.00%
Thailand,Asia,South-eastern Asia,68863514,69037513,+0.25%
Togo,Africa,Western Africa,7889093,8082366,+2.45%
Tokelau,Oceania,Polynesia,1319,1340,+1.59%
Tonga,Oceania,Polynesia,110589,110940,+0.32%
Trinidad and Tobago,Americas,Caribbean,1389843,1394973,+0.37%
Tunisia,Africa,Northern Africa,11565201,11694719,+1.12%
Turkey,Asia,Western Asia,82340088,83429615,+1.32%
Turkmenistan,Asia,Central Asia,5850901,5942089,+1.56%
Turks and Caicos Islands,Americas,Caribbean,37665,38191,+1.40%
Tuvalu,Oceania,Polynesia,11508,11646,+1.20%
U.S. Virgin Islands,Americas,Caribbean,104680,104578,−0.10%
Uganda,Africa,Eastern Africa,42729036,44269594,+3.61%
Ukraine,Europe,Eastern Europe,44246156,43993638,−0.57%
United Arab Emirates,Asia,Western Asia,9630959,9770529,+1.45%
United States,Americas,Northern America,327096265,329064917,+0.60%
US,Americas,Northern America,327096265,329064917,+0.60%
Uruguay,Americas,South America,3449285,3461734,+0.36%
Uzbekistan,Asia,Central Asia,32476244,32981716,+1.56%
Vanuatu,Oceania,Melanesia,292680,299882,+2.46%
Vatican City,Europe,Southern Europe,801,799,−0.25%
Venezuela,Americas,South America,28887118,28515829,−1.29%
Vietnam,Asia,South-eastern Asia,95545962,96462106,+0.96%
Wallis and Futuna,Oceania,Polynesia,11661,11432,−1.96%
Western Sahara,Africa,Northern Africa,567402,582463,+2.65%
Yemen,Asia,Western Asia,28498683,29161922,+2.33%
Zambia,Africa,Eastern Africa,17351708,17861030,+2.94%
Zimbabwe,Africa,Eastern Africa,14438802,14645468,+1.43%'''

HELP="""help,Usage:
from GlobalData import *
print(HELP)

To get Zambia Population-2019
from GlobalData import *
X=GlobalData("Zambia")
print(x[4])
\n
To get Zambia Population Change
from GlobalData import *
X=GlobalData("Zambia")
print(x[5])
\n
from GlobalData import *
print(DATA[4])
>>> [\'American Samoa,Oceania,Polynesia,55465,55312,−0.28%\']
\n
from GlobalData import *
data=str(DATA[4]).split(",")
print(data[3])
>>> 55465']]"""
Data=[]
DATA = DATA.replace("%","")
DATA = DATA.split("\n") 
cnt=0
for line in DATA:
    cnt=cnt+1
    line = line.split(",")
    if cnt>1:Data.append([line[0],line[1],line[2],int(line[3]),int(line[4]),round(float(line[5][1:])/100, 4)])
def GlobalData(country):
    if country=="HELP":
        print(HELP)
    for i in range(0,len(Data)):
        if country == Data[i][0]:
            res=Data[i]
            return res

from GlobalData import *
print(HELP)

from GlobalData import *
data=DATA[6]
print(data)

from GlobalData import *
print(DATA[4])

from GlobalData import *
X=GlobalData("Angola")
print(X[5])

for line in DATA:
    if "Spain" in line:
        print(line)

help(DATA)

from GlobalData import *
SEARCH="Angola"
X=GlobalData(SEARCH)
print(X)

from GlobalData import *
SEARCH="Germany"
X=GlobalData(SEARCH)
population=X[4]
print(SEARCH,"Population:", population)

from GlobalData import *
X=GlobalData("Angola")
print(X[5])



import plotly.graph_objects as go
import time
from PIL import Image
from GlobalData import *


LASTFILE="COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"


STAT =LASTFILE[57:-4]
DataIn = open(LASTFILE).readlines()

#SEARCH = input("SEARCH: ")
SEARCH = "Brazil"
#SEARCH = "Spain"
#SEARCH = "Philippine"
#SEARCH = "Ecuador"
#SEARCH = "Germany"
#SEARCH = "Japan"
#SEARCH = "US"
X=GlobalData(SEARCH)
x=X
population=x[4]
print(SEARCH,"Population:", population)
cnt = 0
CNTS=0
counts=[]
for line in DataIn:
    if cnt==0:print(line)
    cnt=cnt+1
    line=line.lstrip(",")
    #if SEARCH in line:print(line)
    if SEARCH in line:

        line="0,0"+line.split("0,0",1)[-1]

        print
        entry=line.split(",")
        for num in entry:
            counts.append(int(num))
print(SEARCH," counts/population",int(counts[-1])/int(population)) 
allcountries.append([SEARCH," counts/population",int(counts[-1])/int(population)])
filename0 = time.strftime("images/"+SEARCH+"_"+STAT+"Deaths_%Y%m%d%H%M%S.png")            
fig = go.Figure()
fig.add_trace(go.Scatter(y=counts))
fig.add_trace(go.Bar(y=counts))
fig.update_layout(title = SEARCH+' CONDID-19 Deaths')
fig.show() 



IncreasePerDay=[]
All = (len(counts))
for x in range(0,All):
    try:
        Sum = (counts[x+1]-counts[x])
        print(Sum, end = " ")
        IncreasePerDay.append(Sum)
    except:
        pass
    
filename1 = time.strftime("images/"+SEARCH+"_"+STAT+"IncreasePerDay"+"_%Y%m%d%H%M%S.png")
fig = go.Figure()
fig.add_trace(go.Scatter(y=IncreasePerDay))
fig.add_trace(go.Bar(y=IncreasePerDay))
fig.update_layout(title = SEARCH+' Increase Each day CONDID-19 Cases')
fig.show() 

from GlobalData import *
data=str(DATA[4]).split(",")
print(data[3])



from GlobalData import *
X=GlobalData("Zambia")
x=X
print(x[4])

from GlobalData import *
GlobalData("Turkey")

from GlobalData import *
print(HELP)

export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

go env
GO111MODULE=""
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/jack/.cache/go-build"
GOENV="/home/jack/.config/go/env"
GOEXE=""
GOEXPERIMENT=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOINSECURE=""
GOMODCACHE="/home/jack/go/pkg/mod"
GONOPROXY=""
GONOSUMDB=""
GOOS="linux"
GOPATH="/home/jack/go"
GOPRIVATE=""
GOPROXY="https://proxy.golang.org,direct"
GOROOT="/usr/local/go"
GOSUMDB="sum.golang.org"
GOTMPDIR=""
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GOVCS=""
GOVERSION="go1.19.2"
GCCGO="gccgo"
GOAMD64="v1"
AR="ar"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD="/dev/null"
GOWORK=""
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build4228513491=/tmp/go-build -gno-record-gcc-switches"

!go build github.com/wcharczuk/go-chart

// This sample is copied from https://github.com/gonum/plot/wiki/Example-plots#plotutil
import (
    "bytes"
    "math/rand"

    "gonum.org/v1/plot"
    "gonum.org/v1/plot/plotter"
    "gonum.org/v1/plot/plotutil"
    "gonum.org/v1/plot/vg"
)

func DisplayPlot(p *plot.Plot) {
    // Save the plot to a PNG file.
    var buf bytes.Buffer
    c, err := p.WriterTo(4*vg.Inch, 4*vg.Inch, "png")
    if err != nil {
        panic(err)
    }
    if _, err := c.WriteTo(&buf); err != nil {
        panic(err)
    }
    _ctx.Display.PNG(buf.Bytes(), nil)
}

// randomPoints returns some random x, y points.
func randomPoints(n int) plotter.XYs {
    pts := make(plotter.XYs, n)
    for i := range pts {
        if i == 0 {
            pts[i].X = rand.Float64()
        } else {
            pts[i].X = pts[i-1].X + rand.Float64()
        }
        pts[i].Y = pts[i].X + 10*rand.Float64()
    }
    return pts
}

{
    p, err := plot.New()
    if err != nil {
        panic(err)
    }
    
    p.Title.Text = "Plotutil example"
    p.X.Label.Text = "X"
    p.Y.Label.Text = "Y"

    err = plotutil.AddLinePoints(
        p,
        "First", randomPoints(15),
        "Second", randomPoints(15),
        "Third", randomPoints(15))
    if err != nil {
        panic(err)
    }

    DisplayPlot(p)
}

// This sample is copied from https://github.com/wcharczuk/go-chart/tree/master/_examples/stacked_bar

import (
    "bytes"
    "fmt"

    "github.com/wcharczuk/go-chart"
)

sbc := chart.StackedBarChart{
    Title:      "Test Stacked Bar Chart",
    TitleStyle: chart.StyleShow(),
    Background: chart.Style{
        Padding: chart.Box{
            Top: 40,
        },
    },
    Height: 512,
    XAxis: chart.Style{
        Show: true,
    },
    YAxis: chart.Style{
        Show: true,
    },
    Bars: []chart.StackedBar{
        {
            Name: "This is a very long string to test word break wrapping.",
            Values: []chart.Value{
                {Value: 5, Label: "Blue"},
                {Value: 5, Label: "Green"},
                {Value: 4, Label: "Gray"},
                {Value: 3, Label: "Orange"},
                {Value: 3, Label: "Test"},
                {Value: 2, Label: "??"},
                {Value: 1, Label: "!!"},
            },
        }, {
            Name: "Test",
            Values: []chart.Value{
                {Value: 10, Label: "Blue"},
                {Value: 5, Label: "Green"},
                {Value: 1, Label: "Gray"},
            },
        },
        {
            Name: "Test 2",
            Values: []chart.Value{
                {Value: 10, Label: "Blue"},
                {Value: 6, Label: "Green"},
                {Value: 4, Label: "Gray"},
            },
        },
    },
}
var buf bytes.Buffer
err := sbc.Render(chart.PNG, &buf)
if err != nil {
    fmt.Printf("Error rendering chart: %v\n", err)
    return
}
_ctx.Display.PNG(buf.Bytes(), nil)

Problem is that this repo is from pre go modules era and doesn't use any dependency management system. Easiest way to fix it is to try to initialize it as module(if you use go < 1.14 set environment variable GO111MODULE=on):

go mod init github.com/wpferg/services

And then run:

go run main.go


import (
    "bytes"
    "fmt"
    "image/color"
    "math"
    "math/rand"
    
    "gonum.org/v1/gonum/mat"
    "gonum.org/v1/plot"
    "gonum.org/v1/plot/plotter"
    "gonum.org/v1/plot/plotutil"
    "gonum.org/v1/plot/vg"
    "gonum.org/v1/plot/vg/draw"
    "gonum.org/v1/plot/vg/vgimg"
)

func DisplayPlot(p *plot.Plot) {
    // Save the plot to a PNG file.
    var buf bytes.Buffer
    c, err := p.WriterTo(4*vg.Inch, 4*vg.Inch, "png")
    if err != nil {
        panic(err)
    }
    if _, err := c.WriteTo(&buf); err != nil {
        panic(err)
    }
    _ctx.Display.PNG(buf.Bytes(), nil)
}

{
    p, err := plot.New()
    if err != nil {
        panic(err)
    }
    
    p.Title.Text = "Plotutil example"
    p.X.Label.Text = "X"
    p.Y.Label.Text = "Y"

    err = plotutil.AddLinePoints(
        p,
        "First", randomPoints(15),
        "Second", randomPoints(15),
        "Third", randomPoints(15))
    if err != nil {
        panic(err)
    }

    DisplayPlot(p)
}

// randomPoints returns some random x, y points.
func randomPoints(n int) plotter.XYs {
    pts := make(plotter.XYs, n)
    for i := range pts {
        if i == 0 {
            pts[i].X = rand.Float64()
        } else {
            pts[i].X = pts[i-1].X + rand.Float64()
        }
        pts[i].Y = pts[i].X + 10*rand.Float64()
    }
    return pts
}

{
    // Get some random points
    n := 15
    scatterData := randomPoints(n)
    lineData := randomPoints(n)
    linePointsData := randomPoints(n)

    // Create a new plot, set its title and
    // axis labels.
    p, err := plot.New()
    if err != nil {
        panic(err)
    }
    p.Title.Text = "Points Example"
    p.X.Label.Text = "X"
    p.Y.Label.Text = "Y"
    // Draw a grid behind the data
    p.Add(plotter.NewGrid())

    // Make a scatter plotter and set its style.
    s, err := plotter.NewScatter(scatterData)
    if err != nil {
        panic(err)
    }
    s.GlyphStyle.Color = color.RGBA{R: 255, B: 128, A: 255}

    // Make a line plotter and set its style.
    l, err := plotter.NewLine(lineData)
    if err != nil {
        panic(err)
    }
    l.LineStyle.Width = vg.Points(1)
    l.LineStyle.Dashes = []vg.Length{vg.Points(5), vg.Points(5)}
    l.LineStyle.Color = color.RGBA{B: 255, A: 255}

    // Make a line plotter with points and set its style.
    lpLine, lpPoints, err := plotter.NewLinePoints(linePointsData)
    if err != nil {
        panic(err)
    }
    lpLine.Color = color.RGBA{G: 255, A: 255}
    lpPoints.Shape = draw.PyramidGlyph{}
    lpPoints.Color = color.RGBA{R: 255, A: 255}

    // Add the plotters to the plot, with a legend
    // entry for each
    p.Add(s, l, lpLine, lpPoints)
    p.Legend.Add("scatter", s)
    p.Legend.Add("line", l)
    p.Legend.Add("line points", lpLine, lpPoints)

    DisplayPlot(p)
}

// randomPoints returns some random x, y points.
func randomPoints(n int) plotter.XYs {
    pts := make(plotter.XYs, n)
    for i := range pts {
        if i == 0 {
            pts[i].X = rand.Float64()
        } else {
            pts[i].X = pts[i-1].X + rand.Float64()
        }
        pts[i].Y = pts[i].X + 10*rand.Float64()
    }
    return pts
}

{
	groupA := plotter.Values{20, 35, 30, 35, 27}
	groupB := plotter.Values{25, 32, 34, 20, 25}
	groupC := plotter.Values{12, 28, 15, 21, 8}

	p, err := plot.New()
	if err != nil {
		panic(err)
	}
	p.Title.Text = "Bar chart"
	p.Y.Label.Text = "Heights"

	w := vg.Points(20)

	barsA, err := plotter.NewBarChart(groupA, w)
	if err != nil {
		panic(err)
	}
	barsA.LineStyle.Width = vg.Length(0)
	barsA.Color = plotutil.Color(0)
	barsA.Offset = -w

	barsB, err := plotter.NewBarChart(groupB, w)
	if err != nil {
		panic(err)
	}
	barsB.LineStyle.Width = vg.Length(0)
	barsB.Color = plotutil.Color(1)

	barsC, err := plotter.NewBarChart(groupC, w)
	if err != nil {
		panic(err)
	}
	barsC.LineStyle.Width = vg.Length(0)
	barsC.Color = plotutil.Color(2)
	barsC.Offset = w

	p.Add(barsA, barsB, barsC)
	p.Legend.Add("Group A", barsA)
	p.Legend.Add("Group B", barsB)
	p.Legend.Add("Group C", barsC)
	p.Legend.Top = true
	p.NominalX("One", "Two", "Three", "Four", "Five")

    DisplayPlot(p)
}

{
	p, err := plot.New()
	if err != nil {
		panic(err)
	}
	p.Title.Text = "Functions"
	p.X.Label.Text = "X"
	p.Y.Label.Text = "Y"

	// A quadratic function x^2
	quad := plotter.NewFunction(func(x float64) float64 { return x * x })
	quad.Color = color.RGBA{B: 255, A: 255}

	// An exponential function 2^x
	exp := plotter.NewFunction(func(x float64) float64 { return math.Pow(2, x) })
	exp.Dashes = []vg.Length{vg.Points(2), vg.Points(2)}
	exp.Width = vg.Points(2)
	exp.Color = color.RGBA{G: 255, A: 255}

	// The sine function, shifted and scaled
	// to be nicely visible on the plot.
	sin := plotter.NewFunction(func(x float64) float64 { return 10*math.Sin(x) + 50 })
	sin.Dashes = []vg.Length{vg.Points(4), vg.Points(5)}
	sin.Width = vg.Points(4)
	sin.Color = color.RGBA{R: 255, A: 255}

	// Add the functions and their legend entries.
	p.Add(quad, exp, sin)
	p.Legend.Add("x^2", quad)
	p.Legend.Add("2^x", exp)
	p.Legend.Add("10*sin(x)+50", sin)
	p.Legend.ThumbnailWidth = vg.Inch*0.5

	// Set the axis ranges.  Unlike other data sets,
	// functions don't set the axis ranges automatically
	// since functions don't necessarily have a
	// finite range of x and y values.
	p.X.Min = 0
	p.X.Max = 10
	p.Y.Min = 0
	p.Y.Max = 100

    DisplayPlot(p)
}

import (
    "fmt"
    
    "gonum.org/v1/gonum/mat"
)

// https://godoc.org/gonum.org/v1/gonum/mat#example-Dense-Mul
{
    // Initialize two matrices, a and b.
    a := mat.NewDense(2, 2, []float64{
        4, 0,
        0, 4,
    })
    b := mat.NewDense(2, 3, []float64{
        4, 0, 0,
        0, 0, 4,
    })

    // Take the matrix product of a and b and place the result in c.
    var c mat.Dense
    c.Mul(a, b)

    // Print the result using the formatter.
    fc := mat.Formatted(&c, mat.Prefix("    "), mat.Squeeze())
    fmt.Printf("c = %v\n", fc)
}

// https://godoc.org/gonum.org/v1/gonum/mat#example-Dense-Inverse
{
    // Initialize two matrices, a and ia.
    a := mat.NewDense(2, 2, []float64{
        4, 0,
        0, 4,
    })
    var ia mat.Dense

    // Take the inverse of a and place the result in ia.
    ia.Inverse(a)

    // Print the result using the formatter.
    fa := mat.Formatted(&ia, mat.Prefix("     "), mat.Squeeze())
    fmt.Printf("ia = %.2g\n\n", fa)

    // Confirm that A * A^-1 = I
    var r mat.Dense
    r.Mul(a, &ia)
    fr := mat.Formatted(&r, mat.Prefix("    "), mat.Squeeze())
    fmt.Printf("r = %v\n\n", fr)

    // The Inverse operation, however, is numerically unstable,
    // and should typically be avoided.
    // For example, a common need is to find x = A^-1 * b.
    // In this case, the SolveVec method of VecDense
    // (if b is a Vector) or Solve method of Dense (if b is a
    // matrix) should used instead of computing the Inverse of A.
    b := mat.NewDense(2, 2, []float64{
        2, 0,
        0, 2,
    })
    var x mat.Dense
    x.Solve(a, b)

    // Print the result using the formatter.
    fx := mat.Formatted(&x, mat.Prefix("    "), mat.Squeeze())
    fmt.Printf("x = %v\n", fx)
}

import (
    "fmt"
    
    "gonum.org/v1/gonum/integrate"
    "gonum.org/v1/gonum/stat"
)

{
    y := []float64{0.1, 0.35, 0.4, 0.8}
    classes := []bool{true, false, true, false}
    
    tpr, fpr := stat.ROC(0, y, classes, nil)
    // compute Area Under Curve
    auc := integrate.Trapezoidal(fpr, tpr)
    fmt.Printf("true  positive rate: %v\n", tpr)
    fmt.Printf("false positive rate: %v\n", fpr)
    fmt.Printf("auc: %v\n", auc)
}

import (
    "fmt"
    "os"
    
    "gonum.org/v1/gonum/optimize"
    "gonum.org/v1/gonum/optimize/functions"
)

{
    p := optimize.Problem{
        Func: functions.ExtendedRosenbrock{}.Func,
        Grad: functions.ExtendedRosenbrock{}.Grad,
    }

    x := []float64{1.3, 0.7, 0.8, 1.9, 1.2}
    settings := optimize.DefaultSettings()
    settings.Recorder = nil
    settings.GradientThreshold = 1e-12
    settings.FunctionConverge = nil

    result, err := optimize.Local(p, x, settings, &optimize.BFGS{})
    if err != nil {
        fmt.Fprintln(os.Stderr, err)
        return
    }
    if err = result.Status.Err(); err != nil {
        fmt.Fprintln(os.Stderr, err)
    }
    fmt.Printf("result.Status: %v\n", result.Status)
    fmt.Printf("result.X: %v\n", result.X)
    fmt.Printf("result.F: %v\n", result.F)
    fmt.Printf("result.Stats.FuncEvaluations: %d\n", result.Stats.FuncEvaluations)
}




import shutil
help(shutil.move)

#shutil.move(src, dst)

import sqlite3
from datetime import datetime
from time import gmtime, strftime
import glob
import time
import os
import requests
import shutil
dbname = "DATA/"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".db")
try:
    shutil.move("DATA/CORONA-19.db", dbname)
except:
    pass
if not os.path.exists('DATA'):
    os.makedirs('DATA')
print (time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".html")
filename = "DATA/"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".html")
DataIn = open(filename,"w")
listTEXT = []
stringTEXT = ""
response = requests.get('https://mylinuxtoybox.com/COVID-19/index.php')
DATA = str(response.content)
listTEXT.append(DATA)
stringTEXT = stringTEXT+DATA
DataIn.write(str(listTEXT))
DataIn.close()
print(filename)
files = glob.glob('DATA/*.html') # * means format then *.html
File = max(files, key=os.path.getctime)
print ("Opening: ",File)
DataOut = open(File, "r").read()

conn=sqlite3.connect("DATA/CORONA-19.db")
c = conn.cursor()

def Insert(line,c=c,):
    c.execute("CREATE TABLE IF NOT EXISTS CORONA(TEXT UNIQUE)")
    c.execute("INSERT OR IGNORE into CORONA values (?)",(line,))   
    
    
Lines = (str(DataOut).split('style="font-size:2vw">\\\\n'))[1].split('</p>')[0]
lines = Lines.replace("<br />\\\\n","\n")
lines= lines.replace("<br />","\n")
lines = lines.split("\n")
for line in lines:
    if len(line)>5:Insert(line,c=c) 
    
    
conn.commit()
conn.close()


conn=sqlite3.connect("DATA/CORONA-19.db")
c= conn.cursor()
TotalRows=0
for row in c.execute('SELECT rowid,* from CORONA'):
    TotalRows=TotalRows+1
print("TotalRows: ",TotalRows)    
END = TotalRows-5
print("END: ",END) 
cnt=0
for row in c.execute('SELECT rowid,* from CORONA'):
    cnt=cnt+1
    row=str(row).split(",")
    # Print the first and last five entries in the database
    if cnt<=5 or cnt>END:
        print (row[0],row[1],row[2],row[3],row[4],row[5],row[6])
conn.close()

from __future__ import division
import sys
import glob
import time
import os
%matplotlib inline 
import matplotlib
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure
import numpy as np

import sqlite3
from datetime import datetime
from time import gmtime, strftime
import glob
import time
import os
import requests
# If it does not exist, create the path called: DATA .
if not os.path.exists('DATA'):
    os.makedirs('DATA')
# Create a filename to save the scraped html page
filename = "DATA/"+(time.strftime('%a_%d_%b_%Y_%I_%M_%S_%p_%Z', time.gmtime())+".html")
# Print the filename
print(filename)
# Open the filename to write the scraped html data to.
DataIn = open(filename,"w")
# Create an empty list (listTEXT = []) abd an empty string ( stringTEXT = "" )
listTEXT = []
stringTEXT = ""
# Get the data from "https://mylinuxtoybox.com/COVID-19/index.php"
response = requests.get('https://mylinuxtoybox.com/COVID-19/index.php')
# Create DATA from the webpage response
DATA = str(response.content)
listTEXT.append(DATA)
stringTEXT = stringTEXT+DATA
DataIn.write(str(listTEXT))
DataIn.close()

files = glob.glob('DATA/*.html') # * means format then *.html
File = max(files, key=os.path.getctime)
print ("Opening: ",File)
DATAOUT = open(File, "r").read()

print(DATAOUT)

html = str(DataOut).replace("Date,Time,Timestamp","XXXXXXXXDate,Time,Timestamp")
dataout = html.replace("</p>","</p>XXXXXXXX")
dataout = dataout.split("XXXXXXXX")
lines = dataout[2].split("<br />")

cnt=0
for line in lines:
    cnt= cnt+1
    #line=line.lstrip("\\\\n")
    if cnt<5:
        print (line)

DataOut = DATAOUT

DataOut = DATAOUT

html = str(DataOut).replace("Date,Time,Timestamp","XXXXXXXXDate,Time,Timestamp")
dataout = html.replace("</p>","</p>XXXXXXXX")
dataout = dataout.split("XXXXXXXX")
lines = dataout[2].split("<br />")
cnt=0
for line in lines:
    cnt= cnt+1
    line=line.lstrip("\\\\n")
    if cnt<=5:
        print (line)

DataOut = DATAOUT

Lines = (str(DataOut).split('style="font-size:2vw">\\\\n'))[1].split('</p>')[0]
lines = Lines.replace("<br />\\\\n","\n")
lines= lines.replace("<br />","\n")
lines = lines.split("\n")
cnt=0
for line in lines:
    cnt=cnt+1
    if cnt<10:print(line)

# Print GMT
!tz=gmt date -u

!ls DATA

conn=sqlite3.connect("DATA/CORONA-19.db")
c= conn.cursor()
cnt=0
#create empty lists:
ID = []
DATE =[]
TIME =[]
TIMESTAMP =[]
HOURSSINCELASTUPDATE =[]
HOURSSINCELASTUPDATE.append(float(0))
ACCUMULATEDHOURS =[]
ACCUMULATEDHOURS.append(float(0))
acc=0
CASES =[]
DEATHS =[]

for row in c.execute('SELECT rowid,* from CORONA'):
    cnt=cnt+1    
    row=str(row).split(",")
    if cnt==1: print (row[0],row[1],row[2],row[3],row[4],row[5],row[6])
    if cnt==1: print(" ")    
    if cnt==1: print (row[0].lstrip("("),row[1].lstrip(" '"),row[2],row[3],row[4],row[5],row[6].rstrip("')"))   
    if cnt==2: print (row[0],row[1],row[2],row[3],row[4],row[5],row[6])
    if cnt==2: print( '\nTo clean the above data:\nrow[0].lstrip("("),row[1].lstrip(" \'"),row[2],row[3],row[4],row[5],row[6].rstrip("\')")')
    if cnt==2: print(" ")
    if cnt==2: print (row[0].lstrip("("),row[1].lstrip(" '"),row[2],row[3],row[4],row[5],row[6].rstrip("')"))
         
    if cnt>1:
        ID.append(row[0].lstrip("("))
        DATE.append(row[1].lstrip(" '"))
        TIME.append(row[2])
        TIMESTAMP.append(row[3])
        HOURSSINCELASTUPDATE.append(float(row[4]))
        acc=acc+float(row[4])
        ACCUMULATEDHOURS.append(float(acc))
        CASES.append(int(row[5]))
        DEATHS.append(int(row[6].rstrip("')")))
conn.close()

ACCUMULATEDHOURSb=ACCUMULATEDHOURS
HOURSSINCELASTUPDATEb=HOURSSINCELASTUPDATE
ACCUMULATEDHOURSa=ACCUMULATEDHOURSb[:-1]
HOURSSINCELASTUPDATEa=HOURSSINCELASTUPDATEb[:-1]
print(len(ID))
print(len(DATE))
print(len(TIME))
print(len(TIMESTAMP))
print(len(HOURSSINCELASTUPDATEa))
print(len(ACCUMULATEDHOURSa))
print(len(CASES))
print(len(DEATHS))

import numpy as np
#x = np.arange(0, 1, 0.05)
#y = np.power(x, 2)

print(len(ACCUMULATEDHOURSa))
print(len(CASES))
#x = np.array(range(0,len(CASES)),dtype=np.float)
x = np.array(ACCUMULATEDHOURSa,dtype=np.float)
y = np.array(CASES,dtype=np.int)

fig = plt.figure(num=None, figsize=(10,8), dpi=80, facecolor='salmon')
#fig = plt.figure()
ax = fig.gca()

ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(x, y, s=3)
plt.grid(True)

plt.xlabel('Total hours monitored: '+str(round(ACCUMULATEDHOURSa[-1],2)))
plt.title('Using Confirmed Cases and Timestamp')
plt.ylabel('Number of Cases')
plt.show()

from __future__ import division
import sqlite3
from M2D import Month2Num
import sys
import glob
import time
import os
%matplotlib inline 
import matplotlib
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure
import numpy as np
arrangedDdata = ''
CASESs = []
DEATHs = []
arrangedDdata=arrangedDdata+"date_time,cases\n"
conn=sqlite3.connect("DATA/CORONA-19.db")
c= conn.cursor()
cnt = 0
for rows in c.execute('SELECT * from CORONA'):
    cnt=cnt+1
    row=str(rows)
    row=row.lstrip("(")
    row = row.replace("'","")
    items=row.split(",")
    if cnt<=5 or cnt>=349:
        print(cnt,": ",items[0],items[1],items[2],items[3],items[4],items[5],)

from __future__ import division
import sqlite3
from M2D import Month2Num
import sys
import glob
import time
import os
%matplotlib inline 
import matplotlib
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure
import numpy as np
arrangedDdata = ''
CASESs = []
DEATHs = []
SPANS = []
arrangedDdata=arrangedDdata+"date_time,cases\n"
conn=sqlite3.connect("DATA/CORONA-19.db")
c= conn.cursor()
cnt = 0
for rows in c.execute('SELECT * from CORONA'):
    cnt=cnt+1
    row=str(rows)
    row=row.lstrip("(")
    row = row.replace("'","")
    row=row.split(",")
    # Date,Time,Timestamp,HoursSinceUpdate,ConfirmedCases,Deaths
    if cnt<=2:print(row[0],row[1],row[2],row[3],row[4],row[5])
    #ct==1 is the header
    if cnt>1:
        SPANS.append(row[3])
        CASESs.append(row[4])
        DEATHs.append(row[5])

conn.close() 
count = 0
ACCs = []
acc=0
for accum in SPANS:
    inc =round(float(accum),2)
    acc=acc+inc
    ACCs.append(round(acc,1))
START = CASESs[0]


#3-15-2020 19:00,3329
print ("First Recorded Confirmed Case Count: ",CASESs[0])
print ("Start of Accumulated Time in Days: ",ACCs[1])
print ("Record Keeping Started with",START,"confirmed cases and",DEATHs[0],"Deaths")
print ("Number of Hours Records have been kept:",ACCs[-1])
print ("Current Confirmed Cases: ",CASESs[-1])
print ("Last Death Count: ", DEATHs[-1])
print ("\n-- Debug Info -------------------------------------")
print ("len(SPANS)",len(SPANS))
print ("len(CASESs)",len(CASESs))
print ("len(DEATHS)",len(DEATHs))
print ("len(ACCs)",len(ACCs))
sp = np.array(SPANS,dtype=np.float)
x = np.array(ACCs,dtype=np.float)
y = np.array(CASESs,dtype=np.int)
d = np.array(DEATHs,dtype=np.int)

#fig = plt.figure()
#ax = fig.gca()

#ax.grid(color='lightgray', linestyle='-', linewidth=1)
#ax = fig.gca()
#plt.scatter(x, d, s=3)
fig = plt.figure(num=None, figsize=(12,12), dpi=80, facecolor='salmon')
ax.grid(color='lightgray', linestyle='-', linewidth=1)
plt.scatter(x, y, s=3)



plt.grid(True)

plt.xlabel('Hours: Clock Started '+str(ACCs[-1])+' hours ago.\nMarch/08/2020 23:30:00 with 537 Cases and 21 Deaths', fontsize=14)
plt.title('Horizontal~Accumulated Hours Since Start \n Verticle Number of Confirmed Cases "'+str(CASESs[-1])+'"', fontsize=20)
# Top right 
s0= 'Number of Deaths "'+str(DEATHs[-1])+'"'
V=int(CASESs[-1])
print("V: ",V)
H=int(ACCs[-1]-275)
print("H: ",H)
plt.text(H, V, s0, fontsize=12)

s1= 'Started:\n537 Cases\n21 Deaths'
plt.text(0, 40000, s1, fontsize=12)

s= 'v'
plt.text(-5, 8000, s, fontsize=15)
plt.ylabel('Number of Deaths in the USA', fontsize=22, color="red")
fig.savefig('images/plot-Deaths-002.png', facecolor=fig.get_facecolor(), edgecolor='black')
plt.show()

conn=sqlite3.connect("DATA/CORONA-19.db")
c= conn.cursor()
cnt=0
for row in c.execute('SELECT rowid,* from CORONA'):
    cnt=cnt+1    
    row=str(row).split(",")
    if cnt==1: print (row[0],row[1],row[2],row[3],row[4],row[5],row[6])

print("\nAs of "+row[1].lstrip(" '"),"at",row[2],"there are",row[5],"confirmed cases and",row[6].rstrip("')"), "deaths due to coronavirus COVID-19 in the United States.")


#row[0].lstrip("("),row[1].lstrip(" '"),row[2],row[3],row[4],row[5],row[6].rstrip("')")

import plotly.graph_objects as go
fig = go.Figure()
fig.add_trace(go.Scatter(y=SPANS))
fig.add_trace(go.Bar(y=ACCs))
fig.update_layout(title = 'Fluctuations between data entries in Hours')
fig.show()

print(len(SPANS))
print(len(CASESs))
print(len(DEATHS))
print(len(ACCs))

import plotly.graph_objects as go
fig = go.Figure()
fig.add_trace(go.Scatter(y=SPANS))
fig.add_trace(go.Bar(y=ACCs))
fig.update_layout(title = 'Fluctuations between data entries in Hours')
fig.show()

import plotly.graph_objects as go
from plotly.offline import plot, iplot
import plotly.graph_objs as go
import plotly.offline
plotly.offline.init_notebook_mode(connected=True) 
fig = go.Figure(
    data=[go.Bar(y=CASESs)],
    layout_title_text="Display Confirmed Cases History"
)
fig.show()

import plotly.graph_objects as go
from plotly.offline import plot, iplot
import plotly.graph_objs as go
import plotly.offline
plotly.offline.init_notebook_mode(connected=True) 
fig = go.Figure(
    data=[go.Bar(y=DEATHS)],
    layout_title_text="Display Accumulated Deaths"
)
fig.show()

import plotly.graph_objects as go
from plotly.offline import plot, iplot
import plotly.graph_objs as go
import plotly.offline
plotly.offline.init_notebook_mode(connected=True) 
fig = go.Figure(
    data=[go.Scatter(y=CASESs)],
    layout_title_text="A Figure Displaying"
)
fig.show()

import plotly.graph_objects as go
from plotly.offline import plot, iplot
import plotly.graph_objs as go
import plotly.offline
plotly.offline.init_notebook_mode(connected=True) 
fig = go.Figure(
    data=[go.Bar(y=DEATHS)],
    layout_title_text="A Figure Displayed with fig.show()"
)
fig.show()

import sqlite3
conn=sqlite3.connect("DATA/CORONA-19.db")
c= conn.cursor()
cnt=0
#create empty lists:
ID = []
DATE =[]
TIME =[]
TIMESTAMP =[]
HOURSSINCELASTUPDATE =[]
HOURSSINCELASTUPDATE.append(float(0))
ACCUMULATEDHOURS =[]
ACCUMULATEDHOURS.append(float(0))
acc=0
CASES =[]
DEATHS =[]

for row in c.execute('SELECT rowid,* from CORONA'):
    cnt=cnt+1    
    row=str(row).split(",")
    if cnt==1: print (row[0],row[1],row[2],row[3],row[4],row[5],row[6])
    if cnt==2: print (row[0].lstrip("("),row[1].lstrip(" '"),row[2],row[3],row[4],row[5],row[6].rstrip("')"))
         
    if cnt>1 and len(str(int(row[3])))>5:
        ID.append(row[0].lstrip("("))
        DATE.append(row[1].lstrip(" '"))
        TIME.append(row[2])
        TIMESTAMP.append(row[3])
        HOURSSINCELASTUPDATE.append(float(row[4]))
        acc=acc+float(row[4])
        acc=round(acc,2)
        ACCUMULATEDHOURS.append(float(acc))
        CASES.append(int(row[5]))
        DEATHS.append(int(row[6].rstrip("')")))
conn.close()

#for x in range (0,len(ID)):
End = len(ID)-5   
for x in range (0,End):
    inc=int(ID[x])-1
    print(str(inc)+","+DATE[x]+","+str(TIME[x])+","+str(TIMESTAMP[x])+","+str(HOURSSINCELASTUPDATE[x])+","+str(ACCUMULATEDHOURS[x])+","+str(CASES[x])+","+str(DEATHS[x]))

#for x in range (0,len(ID)):
End = len(ID)
ALL=[]
ALL.append("ID,DATE,TIME,TIMESTAMP,HOURSSINCELASTUPDATE,ACCUMULATEDHOURS,CASES,DEATHS")
for x in range (0,End):
    inc=int(ID[x])-1
    HOURS = str(HOURSSINCELASTUPDATE[x])
    HOURSLAST = str(HOURSSINCELASTUPDATE[x])
    ACCUMULATED= str(ACCUMULATEDHOURS[x])
    print(str(inc)+","+DATE[x]+","+str(TIME[x])+","+str(TIMESTAMP[x])+","+str(HOURSSINCELASTUPDATE[x])+","+str(ACCUMULATEDHOURS[x])+","+str(CASES[x])+","+str(DEATHS[x]))
    if len(TIMESTAMP[x])>5:ALL.append(str(inc)+","+DATE[x]+","+str(TIME[x])+","+str(TIMESTAMP[x])+","+str(HOURSSINCELASTUPDATE[x])+","+str(ACCUMULATEDHOURS[x])+","+str(CASES[x])+","+str(DEATHS[x]))

print(len(ALL))

for line in ALL:
    print (line)

!ls *.html

HARDCOPY = open("ALLdata.html",'w')
for line in ALL:
    HARDCOPY.write(line+"<br />\n")
HARDCOPY.close()    

HARDCOPY = open("ALLdata.txt",'w')
for line in ALL:
    HARDCOPY.write(line+"\n")
HARDCOPY.close()     

HARDOPEN = open("ALLdata.html",'r').readlines()
for line in HARDOPEN:
    print(line)



!pip install git+https://github.com/abey79/vsketch#egg=vsketch[colab]

# example sketch, taken from the 'detail.ipynb' notebook in 'examples'.

import math

import numpy as np

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a5", landscape=True)
vsk.scale("1cm")

# high level of detail
vsk.detail("0.1mm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

# rough level of detail
vsk.translate(7, 0)
vsk.detail("5mm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

# hardly usable level of detail
vsk.translate(7, 0)
vsk.detail("2cm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

vsk.display()
vsk.save("detail.svg")



!pip install git+https://github.com/abey79/vsketch#egg=vsketch[colab]

# example sketch, taken from the 'detail.ipynb' notebook in 'examples'.

import math

import numpy as np

import vsketch

vsk = vsketch.Vsketch()
vsk.size("a5", landscape=True)
vsk.scale("1cm")

# high level of detail
vsk.detail("0.1mm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

# rough level of detail
vsk.translate(7, 0)
vsk.detail("5mm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

# hardly usable level of detail
vsk.translate(7, 0)
vsk.detail("2cm")
vsk.circle(0, 0, 1)
vsk.circle(0, 0, 2)
with vsk.pushMatrix():
    vsk.scale(4)
    vsk.circle(0, 0, 1)

vsk.display()
vsk.save("detail.svg")

import os  
import string
import io
from ruamel.yaml import YAML
from ruamel.yaml.reader import Reader

yaml = YAML(typ='safe')

def strip_invalid(s):
    res = ''
    for x in s:
        if Reader.NON_PRINTABLE.match(x):
            # res += '\\x{:x}'.format(ord(x))
            continue
        res += x
    return res

count = 0
newfile = "64-80test.json"
clean = open(newfile, "w")
clean.write("{\n \"conversations\": \n[\n")
filename = "result.txt"
with io.open(filename, mode="r", encoding="utf-8") as infile:
#with open() as infile:
    for line in infile:
        line = line.encode('utf8').decode('latin1')
        line = line.replace("\n","")
        line =line.replace("\"","'")
        line=line.replace("\\","")
        line=line.replace("{","")
        line=line.replace("}","")
        line=line.replace("[","")
        line=line.replace("]","")        
        line = strip_invalid(line)
        line = line.replace("-","")
        count = count +1
        txt = "[\""
        if(count % 2 != 0):
            #newline.append(""+line +"")
            txt2 = txt+line
            #print(txt2)
            #clean.write(txt2)
        if(count % 2 == 0):
            #newline.append(""+line +"")
            txt3 = txt2 +"\",\n\""+ line +"\"],\n"
            #print(count,txt3)
            #clean.write(txt3)        
            if count>6400000 and count<8000000:clean.write(txt3)
            if count>8000000:break    
            

clean.close()          

count=0 
newfile = "testfile.json"
clean = open(newfile, "r").readlines()
for line in clean:
    count=count+1
print(count)





from ruamel.yaml import YAML
from ruamel.yaml.reader import Reader

yaml = YAML(typ='safe')

def strip_invalid(s):
    res = ''
    for x in s:
        if Reader.NON_PRINTABLE.match(x):
            # res += '\\x{:x}'.format(ord(x))
            continue
        res += x
    return res


def convert(filename) :
    newfile = "testfile.json"
    clean = open(newfile, "w")
    count = 0
    #ALL = [] 
    #f = io.open(filename, mode="r", encode("latin_1"),decode("utf_8")).readlines()
    with io.open(filename, mode="r", encoding="utf-8").readlines()
    #f = open(filename, "r").readlines()
    for line in f:
        line = line.encode('utf8').decode('latin1')
        line = line.replace("\n","")
        line =line.replace("\"","'")
        line=line.replace("\\","")
        line=line.replace("{","")
        line=line.replace("}","")
        line = strip_invalid(line)
        count=count+1
        newline =[]
        txt = "[\""
        if(count % 2 != 0):
            newline.append(""+line +"")
            txt2 = txt+line
            clean.write(txt2)
        if(count % 2 == 0):
            newline.append(""+line +"")
            txt3 = txt2 +"\",\n\""+ line +"\"],\n"
            clean.write(text3)
        if count>200:
            break 
            clean.close()
    return print(count)

        

filename ="result.txt"    
convert(filename)

import os
filez = os.listdir('/home/jack/Desktop/PAV/opensubtitles/raw/lines/')

print(filez[0],filez[1])

import glob
files = glob.glob( '/home/jack/Desktop/PAV/opensubtitles/raw/lines/*' )

cat

import glob
files = glob.glob( '/home/jack/Desktop/PAV/opensubtitles/raw/lines/*' )

with open( 'result.txt', 'w' ) as result:
    for file_ in files:
        for line in open( file_, 'r' ):
            result.write( line )

result.close()



filenames = ['file1.txt', 'file2.txt']
  
# Open file3 in write mode
with open('file3.txt', 'w') as outfile:
  
    # Iterate through list
    for names in filenames:
  
        # Open each file in read mode
        with open(names) as infile:
  
            # read the data from file1 and
            # file2 and write it in file3
            outfile.write(infile.read())
  
        # Add '\n' to enter data of file2
        # from next line
        outfile.write("\n")

import os  
import string
import io

from ruamel.yaml import YAML
from ruamel.yaml.reader import Reader

yaml = YAML(typ='safe')

a = ""
b=""
c=""
d=""
e=""
f=""

def strip_invalid(s):
    res = ''
    for x in s:
        if Reader.NON_PRINTABLE.match(x):
            # res += '\\x{:x}'.format(ord(x))
            continue
        res += x
    return res


def convert(filename) :
    count = 0
    #ALL = [] 
    
    #f = io.open(filename, mode="r", encode("latin_1"),decode("utf_8")).readlines()
    f = io.open(filename, mode="r", encoding="utf-8").readlines()
    #f = open(filename, "r").readlines()
    for line in f:
        line = line.encode('utf8').decode('latin1')
        line = line.replace("\n","")
        line =line.replace("\"","'")
        line=line.replace("\\","")
        line=line.replace("{","")
        line=line.replace("}","")
        line = strip_invalid(line)
        count=count+1
        newline =[]
        txt = "[\""
        if(count % 2 != 0):
            newline.append(""+line +"")
            txt2 = txt+line
        if(count % 2 == 0):
            newline.append(""+line +"")
            txt3 = txt2 +"\",\n\""+ line +"\"],\n"
            
    return #print("--\n",ALL)
subb=[a,b,c,d,e,f]
print (subb) 
for AA in subb:
    print(AA)
    cnt=0
    SUB = ['a','b','c','d','e','f','g','h','i','j','k','l','n','o','p','q','r','s','t','u','v','w','x','y','z']
    for sub in SUB:
         FS = ['a','b','c','d','e','f','g','h','i','j','k','l','n','o','p','q','r','s','t','u','v','w','x','y','z']
         for L in FS:
             #def savjson(data):
             filez= (+subb+sub+L+SAjson.jsonS)
             print (filez)
             datain = open("test/("+subb+sub+L+"json.json","w")
             datain.write("{\n \"conversations\": \n[\n")
             convert("/home/jack/Desktop/PAV/opensubtitles/raw/lines/lines-"+subb+"sub+L+") 
             print('XXXXX,',convert)
             print (convert)
             datain.write("]}")
             datain.close() 
             file = "test/"+subb+sub+L+"json.json"
             print(file)
    
    
             data = open(file).readlines()
             newfile = "test/C"+os.path.basename(file)
             clean = open(newfile, "w")
             count = 0
             for line in data:
                 count=count+1
                 if count<4999:
                     #print(line)
                    clean.write(line)
                 if count>4998:
                     line = line.replace("],","]")
                     clean.write(line)
                     #print(line)

      
         clean.close()        


import os
subb=['a','b','c','d','e','f']
sub = ['a','b','c','d','e','f','g','h','i','j','k','l','n','o','p','q','r','s','t','u','v','w','x','y','z']
SUB = ['a','b','c','d','e','f','g','h','i','j','k','l','n','o','p','q','r','s','t','u','v','w','x','y','z']
#print (subb) 
for A in subb:
    for B in sub:
        for C in SUB:
            print(A+B+C)

#os.path.join(p

subb=['a','b','c','d','e','f']
#print (subb) 
for AA in subb:
    #print(AA)
    cnt=0
    SUB = ['a','b','c','d','e','f','g','h','i','j','k','l','n','o','p','q','r','s','t','u','v','w','x','y','z']
    for sub in SUB:
         FS = ['a','b','c','d','e','f','g','h','i','j','k','l','n','o','p','q','r','s','t','u','v','w','x','y','z']
         for L in FS:
             #def savjson(data):
             filez= str(subb)+str(sub)+str(L)+str('SAjson.json')
             print (os.path.join(filez))



import requests as req
import time
DATE = time.strftime("%m-%d-%H_")
URL ="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"

resp = req.get(URL)
content = resp.text

#create a date oriented filename and print it
filename=str(DATE)+"_"+URL[-21:]
print(filename)
content=content.replace(",,",",Ex,")
content=content.replace("(","")
content=content.replace(")","")
content=content.replace("\"","")
content=content.replace("840","\n840")
print(content)
# Open a file using the new filename and write the content of the 'gitfile' to it.
# Update one time daily
TEMP = open(filename,"w")
TEMP.write(content)
TEMP.close() 


!ls bare*

import requests as req
import time
'''
DATE = time.strftime("%m-%d-%H_")
URL ="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"

resp = req.get(URL)
content = resp.text
filename="bare_"+URL[-21:]
TEMP = open(filename,"w")
TEMP.write(content)
TEMP.close() 
'''
LASTFILE="bare_id19_confirmed_US.csv"
DataIn = open(LASTFILE).read()
ALL=[]
DataIn = DataIn.split("\n")
Datain = DataIn[7:]
for line in Datain:
    print(len(line))
    if len(line)>80:
        line=line.replace('"','')
        line=line.replace(',,',',XX,')
        line = line.lstrip(",")
        
        #line = line.split(",")
        print(line)
        if "US" == line[7]:# and line[6] == "New York":
             ALL.append(line)

LASTFILE="05-01-13__id19_confirmed_US.csv"
DataIn = open(LASTFILE).read()
ALLCASES=[]
DataIn = DataIn.split("\n")
Datain = DataIn[7:]
for line in Datain:
    if len(line)>80:
        line=line.replace('"','')
        #line=line.replace(',,',',XX,')
        #line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        ALLCASES.append(line)

LASTFILE="05-01-13__id19_confirmed_US.csv"
DataIn = open(LASTFILE).read()
ALLCASES=[]
DataIn = DataIn.split("\n")
Datain = DataIn[7:]
for line in Datain:
    if len(line)>80:
        linez = line.split("US,",2)[-1]
        linez=linez.replace(",",", ")
        linez=linez.split(" ")
        if len(linez)!=100:
            linez = linez[:-1]
            ALLCASES.append(linez)
        if len(linez)==100:    
            ALLCASES.append(linez)


cnt=0
for line in ALLCASES:
    cnt=cnt+1
    if len(line) !=100:
        print(str(cnt)+":",len(line),":",line)

694: 77 : ['0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '1,', '2,', '3,', '9,', '9,', '12,', '21,', '24,', '28,', '40,', '40,', '104,', '127,', '182,', '223,', '228,', '322,', '384,', '455,', '582,', '648,', '697,', '']
695: 24 : ['840,', '914,', '1010,', '1077,', '1126,', '1228,', '1283,', '1350,', '1433,', '1494,', '1566,', '1603,', '1643,', '1692,', '1736,', '1820,', '1885,', '2009,', '2060,', '2126,', '2173,', '2254,', '2369,', '2492']
2357: 97 : ['0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '1,', '4,', '8,', '22,', '27,', '29,', '43,', '45,', '59,', '59,', '65,', '81,', '95,', '135,', '148,', '176,', '200,', '224,', '242,', '298,', '311,', '340,', '340,', '417,', '452,', '479,', '494,', '494,', '535,', '548,', '579,', '612,', '626,', '652,', '657,', '657,', '725,', '736,', '766,', '787,', '837,', '']

cnt=0
for line in ALLCASES[1:]:
    cnt=cnt+1
    if cnt<5:print(line)


TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[6:]
print(len(ALL))

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    if str(ALL[i]).count(",") !=109:
        print("XX",i,"XX",str(ALL[i]).count(","),ALL[i][-97:])
        print(len(ALL[i][-96:]),end=" ")

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    print(ALL[i].count(","))
    L=int(len(ALL[i]))
    cnt=cnt+1
    if cnt==1:print(ALL[i][5],ALL[i][6],ALL[i][8],ALL[i][9],int(ALL[i][-2]),int(ALL[i][-1]))
    if len(ALL[i])>5:Daily = "'0', '0',"+str(ALL[i]).split("', '0', '0',",1)[-1]
    Daily=Daily.replace('\'','')
    Daily=Daily.replace(']','')
    Daily=Daily.replace('[','')
    Daily=Daily.replace(' ','')
    Daily=Daily.replace('"','')
    Dail=Daily.replace(',,',',X,')
    
    print(Dail)
    #print(Daily)
    daily = map(int,Dail.split(","))
    
    daily =(list(daily))
    DAILY.append(daily)
    inc= daily[-1]-daily[-2]
    #print(ALL[i])
    print("XXXXXX",i,ALL[i][3],ALL[i][4],ALL[i][5],ALL[i][6],ALL[i][9],ALL[i][10],daily,daily[-2],daily[-1],inc)
    #TOTAL=TOTAL+daily[-1]
    DATA.append([ALL[i][5],ALL[i][6],ALL[i][9],ALL[i][10],daily,daily[-2],daily[-1],inc])
print(cnt,TOTAL)        

line ="[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 4, 5, 5, 6, 9, 15, 18, 18, 21, 21, 23, 24, 25, 26, 28, 30, 29, 30, 31, 36, 36, 41, 42, 45, 49, 53, 59, 62, 67, 76, 76, 84]"
print(line.count(","))

line="[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 5, 5, 5, 5, 5, 5, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 14, 16, 16, 17]"
print(line.count(","))

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    print(ALL[i].count(","))
    L=int(len(ALL[i]))
    cnt=cnt+1
    if cnt==1:print(ALL[i][5],ALL[i][6],ALL[i][8],ALL[i][9],int(ALL[i][-2]),int(ALL[i][-1]))
    if len(ALL[i])>5:
        Daily = "'0', '0',"+str(ALL[i]).split("', '0', '0',",1)[-1]

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    print(ALL[i].count(","))
    L=int(len(ALL[i]))
    cnt=cnt+1

import requests as req
import time
DATE = time.strftime("%m-%d-%H_")
URL ="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"

resp = req.get(URL)
content = resp.text

#create a date oriented filename and print it
filename=str(DATE)+"_"+URL[-17:]
print(filename)
content=content.replace(",,",",Ex,")
content=content.replace("(","")
content=content.replace(")","")
content=content.replace("\"","")

print(content)
# Open a file using the new filename and write the content of the 'gitfile' to it.
# Update one time daily
TEMP = open(filename,"w")
TEMP.write(content)
TEMP.close() 


LASTFILE=filename

import requests as req
import time
DATA=[]
#LASTFILE="05-01-20__deaths_global.csv"
DataIn = open(LASTFILE).read()
ALLcountries=[]
DataIn = DataIn.split("\n")
Datain = DataIn[7:]
for line in Datain:
    lines = line.lstrip(",")
    lines=lines.split(",")
    ALLcountries.append(lines)
    data="0,0,"+str(line).split("0,0,",1)[-1]
    DATA.append(data)    

# Set N for threshhold
cnt=0
E=len(ALLcountries)
for lines in ALLcountries:
    cnt=cnt+1
    if cnt>=E:break
    linez=str(lines)
    linez=linez.replace("[","")
    linez=linez.replace("]","")
    linez=linez.replace("'","")
    lineZ=str(linez).split(",")
    if int(lineZ[-1])-int(lineZ[-2])>=150:
        print("\nID-"+str(cnt)+": In "+lineZ[0]+" there was a",int(lineZ[-2])-int(lineZ[-3]),"increase yesterday and",int(lineZ[-1])-int(lineZ[-2]),"increase today:\n",linez)

# Set N for threshhold

N=250
CNT=0
cnt=0
for line in ALLcountries:
    cnt=cnt+1
print("-------------------",cnt,len(ALLcountries),"---------------------")
cnt=0
for line in DATA:
    cnt=cnt+1
    if cnt==len(DATA):break
    lines=line.split(",")
    #print(cnt,lines[-2],lines[-1])
    #c=int(lines[-2]),int(lines[-1]),int(lines[-1])-int(lines[-2])
    if int(lines[-1])-int(lines[-2])>=N:
        CNT=CNT+1
        print("\n",CNT,"____",cnt,int(lines[-1])-int(lines[-2]))
        print(cnt,ALLcountries[cnt-1])
print(cnt)

COUNTRY="Brazil"

for lines in ALLcountries:
    linez=str(lines)
    linez=linez.replace("[","")
    linez=linez.replace("]","")
    linez=linez.replace("'","")
    lineZ=str(linez).split(",") 
    if COUNTRY==(lineZ[0]):print(linez)

cnt=0
for line in ALLcountries:
    cnt=cnt+1
print(cnt)
print(len(ALLcountries))
print("----------------------------------------")
cnt=0
for line in DATA:
    cnt=cnt+1
    lines=line.split(",")
    c=int(lines[-2]),int(lines[-1]),int(lines[-1])-int(lines[-2])
    if int(lines[-1])-int(lines[-2])>500:
        print("\n____",cnt,int(lines[-1])-int(lines[-2]))
        print(cnt,ALLcountries[cnt-1])
print(cnt)

LASTFILE="05-01-13__id19_confirmed_US.csv"
DataIn = open(LASTFILE).read()
ALLCASES=[]
DataIn = DataIn.split("\n")
Datain = DataIn[7:]
for line in Datain:
    if len(line)>80:
        line=line.replace('"','')
        #line=line.replace(',,',',XX,')
        #line=line.replace("\n","")
        line = line.lstrip(",")
        line = line.split(",")
        ALLCASES.append(line)

LASTFILE="05-01-13__id19_confirmed_US.csv"
DataIn = open(LASTFILE).read()
ALLCASES=[]
DataIn = DataIn.split("\n")
Datain = DataIn[7:]
for line in Datain:
    if len(line)>80:
        linez = line.split("US,",2)[-1]
        linez=linez.replace(",",", ")
        linez=linez.split(" ")
        if len(linez)!=100:
            linez = linez[:-1]
            ALLCASES.append(linez)
        if len(linez)==100:    
            ALLCASES.append(linez)


694: 77 : ['0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '1,', '2,', '3,', '9,', '9,', '12,', '21,', '24,', '28,', '40,', '40,', '104,', '127,', '182,', '223,', '228,', '322,', '384,', '455,', '582,', '648,', '697,', '']
695: 24 : ['840,', '914,', '1010,', '1077,', '1126,', '1228,', '1283,', '1350,', '1433,', '1494,', '1566,', '1603,', '1643,', '1692,', '1736,', '1820,', '1885,', '2009,', '2060,', '2126,', '2173,', '2254,', '2369,', '2492']
2357: 97 : ['0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '0,', '1,', '4,', '8,', '22,', '27,', '29,', '43,', '45,', '59,', '59,', '65,', '81,', '95,', '135,', '148,', '176,', '200,', '224,', '242,', '298,', '311,', '340,', '340,', '417,', '452,', '479,', '494,', '494,', '535,', '548,', '579,', '612,', '626,', '652,', '657,', '657,', '725,', '736,', '766,', '787,', '837,', '']

cnt=0
for line in ALLCASES[1:]:
    cnt=cnt+1
    if cnt<5:print(line)


TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[6:]
print(len(ALL))

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    if str(ALL[i]).count(",") !=109:
        print("XX",i,"XX",str(ALL[i]).count(","),ALL[i][-97:])
        print(len(ALL[i][-96:]),end=" ")

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    print(ALL[i].count(","))
    L=int(len(ALL[i]))
    cnt=cnt+1
    if cnt==1:print(ALL[i][5],ALL[i][6],ALL[i][8],ALL[i][9],int(ALL[i][-2]),int(ALL[i][-1]))
    if len(ALL[i])>5:Daily = "'0', '0',"+str(ALL[i]).split("', '0', '0',",1)[-1]
    Daily=Daily.replace('\'','')
    Daily=Daily.replace(']','')
    Daily=Daily.replace('[','')
    Daily=Daily.replace(' ','')
    Daily=Daily.replace('"','')
    Dail=Daily.replace(',,',',X,')
    
    print(Dail)
    #print(Daily)
    daily = map(int,Dail.split(","))
    
    daily =(list(daily))
    DAILY.append(daily)
    inc= daily[-1]-daily[-2]
    #print(ALL[i])
    print("XXXXXX",i,ALL[i][3],ALL[i][4],ALL[i][5],ALL[i][6],ALL[i][9],ALL[i][10],daily,daily[-2],daily[-1],inc)
    #TOTAL=TOTAL+daily[-1]
    DATA.append([ALL[i][5],ALL[i][6],ALL[i][9],ALL[i][10],daily,daily[-2],daily[-1],inc])
print(cnt,TOTAL)        

line ="[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 4, 5, 5, 6, 9, 15, 18, 18, 21, 21, 23, 24, 25, 26, 28, 30, 29, 30, 31, 36, 36, 41, 42, 45, 49, 53, 59, 62, 67, 76, 76, 84]"
print(line.count(","))

line="[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 5, 5, 5, 5, 5, 5, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 14, 16, 16, 17]"
print(line.count(","))

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    print(ALL[i].count(","))
    L=int(len(ALL[i]))
    cnt=cnt+1
    if cnt==1:print(ALL[i][5],ALL[i][6],ALL[i][8],ALL[i][9],int(ALL[i][-2]),int(ALL[i][-1]))
    if len(ALL[i])>5:
        Daily = "'0', '0',"+str(ALL[i]).split("', '0', '0',",1)[-1]

TOTAL=0
DATA = []
L=len(ALLCASES)
ALL = ALLCASES[1:]
DAILY=[]
cnt=0
for i in range(0,len(ALL)):
    print(ALL[i].count(","))
    L=int(len(ALL[i]))
    cnt=cnt+1


requests.post("http://localhost:5279", json={"method": "claim_list", "params": { }}).json()

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
get_items = []
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": 1, "page_size": 1} }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
print '----- First page - "page": 1 "page_size": 1 -----'
for lines in L:
    if "total_items" in lines:
        get_items.append(lines)
        print lines
        print " "
        print " "
get_number = str(get_items).split(":")
LAST = int(get_number[1][:-3])
print "----- Last page -----", LAST
print '"page": ',LAST,' "page_size": 1' 
print '';print ''


page = raw_input("What page do you want? ")
print "----- This is the page you requested ",page,"-----"
print 'Using "params":{"page": ',page,', "page_size": 1 }'
print ''
PrintAll = ''
data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for text in L:
    if "total_pages" in text:print NumbersOnly(text)
    print text   

!rm claim_list.db

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'claim_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
    # TEXT=TEXT+str(line)
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    conn.commit()
    conn.close()

for page in range(1,1150):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<1000:
        print row[1]

#infile.write(text)
#infile.close()
print cnt

!rm claim_list-exp.db
#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = 'claim_list-exp.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def enter_data(page,database):
    
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    c.execute("INSERT INTO LBRY VALUES (?)", (LINES,))
    conn.commit()
    conn.close()    

for page in range(1,1140):  
    database = 'claim_list-exp.db'
    enter_data(page,database)
    if page %100 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
conn.commit()
conn.close()    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list-exp.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=0
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<100:
        print '\n==================== ',cnt,' =====================\n',row[1]

#infile.write(text)
#infile.close()
print cnt

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'claim_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
    # TEXT=TEXT+str(line)
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    conn.commit()
    conn.close()

for page in range(1,1150):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

!rm transaction_list10.db

!rm test-transaction.json

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
infile=open("claim_list.json","w")
c = conn.cursor()
text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    print row[1]
    text=row[1]+"\n"
    infile.write(text)
infile.close()


import json
def json_validator(data):
    try:
        json.loads(data)
        return True
    except ValueError as error:
        print("invalid json: %s" % error)
        return False
data = open("test-transaction.json").read()
json_validator(data)

## stripping out all characters but numbers rom a string
# python <3.0
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))

import json

class Amazon():

    def parse(self, inpath, outpath):
        g = open(inpath, 'r')
        with open(outpath, 'w') as fout:
            for l in g:
                fout.write(json.dumps(eval(l)))

amazon = Amazon()
amazon.parse("test-transaction.json", "cleaned.json")

import json
try:
    infile=open("test-transactio.json","r")
    data = json.loads(infile)
except ValueError as err:
    print(err)

import simplejson as json
from simplejson import JSONDecodeError
def validate(filename):
    with open(filename) as file:
        try:
            return json.load(file) # put JSON-data to a variable
        except JSONDecodeError:
            print("Invalid JSON") # in case json is invalid
        else:
            print("Valid JSON") # in case json is valid
filename = "test-transactio.json"  
validate(filename)

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<200:
        print row[1]

for num in start:
    print num
    

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        print row
        cnt = cnt +1


            
print cnt   



requests.post("http://localhost:5279", json={"method": "claim_list", "params": { }}).json()

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
get_items = []
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": 1, "page_size": 1} }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
print ('----- First page - "page": 1 "page_size": 1 -----')
for lines in L:
    if "total_items" in lines:
        get_items.append(lines)
        print (lines)
        print (" ")
        print (" ")
get_number = str(get_items).split(":")
LAST = int(get_number[1][:-3])
print ("----- Last page -----", LAST)
print ('"page": ',LAST,' "page_size": 1')
print ('';print '')


page = raw_input("What page do you want? ")
print "----- This is the page you requested ",page,"-----"
print 'Using "params":{"page": ',page,', "page_size": 1 }'
print ''
PrintAll = ''
data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for text in L:
    if "total_pages" in text:print NumbersOnly(text)
    print text   

!rm claim_list.db

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'claim_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
    # TEXT=TEXT+str(line)
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    conn.commit()
    conn.close()

for page in range(1,1150):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print (page, end=" ")
    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<1000:
        print (row[1])

#infile.write(text)
#infile.close()
print (cnt)

!rm claim_list-exp.db
#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = 'claim_list-exp.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def enter_data(page,database):
    
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    c.execute("INSERT INTO LBRY VALUES (?)", (LINES,))
    conn.commit()
    conn.close()    

for page in range(1,1140):  
    database = 'claim_list-exp.db'
    enter_data(page,database)
    if page %100 ==0:
        print ("\n")
        pause = randint(5,15)
        sleep(pause)
    print (page,end=" ")
conn.commit()
conn.close()    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list-exp.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=0
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<100:
        print '\n==================== ',cnt,' =====================\n',row[1]

#infile.write(text)
#infile.close()
print cnt

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'claim_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
    # TEXT=TEXT+str(line)
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    conn.commit()
    conn.close()

for page in range(1,1150):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

!rm transaction_list10.db

!rm test-transaction.json

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
infile=open("claim_list.json","w")
c = conn.cursor()
text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    print row[1]
    text=row[1]+"\n"
    infile.write(text)
infile.close()


!ls

import os
os.getcwd()+"/wallet"

import json
def json_validator(data):
    try:
        json.loads(data)
        return True
    except ValueError as error:
        print("invalid json: %s" % error)
        return False
data = open("test-transaction.json").read()
json_validator(data)

## stripping out all characters but numbers rom a string
# python <3.0
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))

import json

class Amazon():

    def parse(self, inpath, outpath):
        g = open(inpath, 'r')
        with open(outpath, 'w') as fout:
            for l in g:
                fout.write(json.dumps(eval(l)))

amazon = Amazon()
amazon.parse("test-transaction.json", "cleaned.json")

import json
try:
    infile=open("test-transaction.json","r")
    data = json.loads(infile)
except ValueError as err:
    print(err)

import simplejson as json
from simplejson import JSONDecodeError
def validate(filename):
    with open(filename) as file:
        try:
            return json.load(file) # put JSON-data to a variable
        except JSONDecodeError:
            print("Invalid JSON") # in case json is invalid
        else:
            print("Valid JSON") # in case json is valid
filename = "test-transactio.json"  
validate(filename)

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<200:
        print row[1]

for num in start:
    print num
    

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        print row
        cnt = cnt +1


            
print cnt   




requests.post("http://localhost:5279", json={"method": "claim_list", "params": { }}).json()

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
get_items = []
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": 1, "page_size": 1} }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
print '----- First page - "page": 1 "page_size": 1 -----'
for lines in L:
    if "total_items" in lines:
        get_items.append(lines)
        print lines
        print " "
        print " "
get_number = str(get_items).split(":")
LAST = int(get_number[1][:-3])
print "----- Last page -----", LAST
print '"page": ',LAST,' "page_size": 1' 
print '';print ''


page = raw_input("What page do you want? ")
print "----- This is the page you requested ",page,"-----"
print 'Using "params":{"page": ',page,', "page_size": 1 }'
print ''
PrintAll = ''
data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for text in L:
    if "total_pages" in text:print NumbersOnly(text)
    print text   

!rm claim_list.db

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'claim_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
    # TEXT=TEXT+str(line)
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    conn.commit()
    conn.close()

for page in range(1,1150):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<1000:
        print row[1]

#infile.write(text)
#infile.close()
print cnt

!rm claim_list-exp.db
#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = 'claim_list-exp.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def enter_data(page,database):
    
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    c.execute("INSERT INTO LBRY VALUES (?)", (LINES,))
    conn.commit()
    conn.close()    

for page in range(1,1140):  
    database = 'claim_list-exp.db'
    enter_data(page,database)
    if page %100 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
conn.commit()
conn.close()    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list-exp.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=0
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<100:
        print '\n==================== ',cnt,' =====================\n',row[1]

#infile.write(text)
#infile.close()
print cnt

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'claim_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "claim_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
    # TEXT=TEXT+str(line)
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    conn.commit()
    conn.close()

for page in range(1,1150):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

!rm transaction_list10.db

!rm test-transaction.json

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
infile=open("claim_list.json","w")
c = conn.cursor()
text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    print row[1]
    text=row[1]+"\n"
    infile.write(text)
infile.close()


import json
def json_validator(data):
    try:
        json.loads(data)
        return True
    except ValueError as error:
        print("invalid json: %s" % error)
        return False
data = open("test-transaction.json").read()
json_validator(data)

## stripping out all characters but numbers rom a string
# python <3.0
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))

import json

class Amazon():

    def parse(self, inpath, outpath):
        g = open(inpath, 'r')
        with open(outpath, 'w') as fout:
            for l in g:
                fout.write(json.dumps(eval(l)))

amazon = Amazon()
amazon.parse("test-transaction.json", "cleaned.json")

import json
try:
    infile=open("test-transaction.json","r")
    data = json.loads(infile)
except ValueError as err:
    print(err)

import simplejson as json
from simplejson import JSONDecodeError
def validate(filename):
    with open(filename) as file:
        try:
            return json.load(file) # put JSON-data to a variable
        except JSONDecodeError:
            print("Invalid JSON") # in case json is invalid
        else:
            print("Valid JSON") # in case json is valid
filename = "test-transactio.json"  
validate(filename)

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<200:
        print row[1]

for num in start:
    print num
    

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        print row
        cnt = cnt +1


            
print cnt   




requests.post("http://localhost:5279", json={"method": "stream_list", "params": { }}).json()

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
get_items = []
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

data = requests.post("http://localhost:5279", json={"method": "stream_list", "params":{"page": 1, "page_size": 1} }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
print '----- First page - "page": 1 "page_size": 1 -----'
for lines in L:
    if "total_items" in lines:
        get_items.append(lines)
        print lines
        print " "
        print " "
get_number = str(get_items).split(":")
LAST = int(get_number[1][:-3])
print "----- Last page -----", LAST
print '"page": ',LAST,' "page_size": 1' 
print '';print ''


!lbrynet stream list --page=45 --page_size=1

import simplejson as json
page =45
print "----- This is the page you requested ",page,"-----"
print 'Using "params":{"page": ',45,', "page_size": 1 }'
print ''
PrintAll = ''
data = requests.post("http://localhost:5279", json={"method": "stream_list", "params":{"page": page, "page_size": 1 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
print Lin

import simplejson as json
page = int(raw_input("What page do you want? "))
print "----- This is the page you requested ",page,"-----"
print 'Using "params":{"page": ',page,', "page_size": 1 }'
print ''
PrintAll = ''
data = requests.post("http://localhost:5279", json={"method": "stream_list", "params":{"page": page, "page_size": 1 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
print Lin
L = Lin.split("\n")
for text in L:
    if "total_pages" in text:print NumbersOnly(text)
    print text 

!rm stream_list.db

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    TEXT = ""
    database = 'stream_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT, unique (description));'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "stream_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        TEXT=TEXT+str(line)
    c.execute("INSERT INTO LBRY VALUES (?)", (TEXT,))
    conn.commit()
    conn.close()

for page in range(1,1137):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    TEXT = ""
    database = 'stream_list2.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT, unique (description));'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "stream_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    c.execute("INSERT INTO LBRY VALUES (?)", (LINES,))
    conn.commit()
    conn.close()

for page in range(1,1137):    
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'stream_list2.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<100:
        print row[1]
        print "------------------"

#infile.write(text)
#infile.close()
print cnt

!rm claim_list-exp.db
#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = 'stream_list-exp.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT,unique (description));'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def enter_data(page,database):
    
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "stream_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    c.execute("INSERT INTO LBRY VALUES (?)", (LINES,))
    conn.commit()
    conn.close()    

for page in range(1,1136):  
    database = 'stream_list-exp.db'
    enter_data(page,database)
    if page %100 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
conn.commit()
conn.close()    

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'stream_list-exp.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=0
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<100:
        print '\n==================== ',cnt,' =====================\n',row[1]

#infile.write(text)
#infile.close()
print cnt

!rm stream_list-exp.json

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'stream_list-exp.db'
conn = sqlite3.connect(database)
infile=open("stream_list-exp.json","w")
c = conn.cursor()
text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    #print row[1]
    text=row[1]+"\n"
    infile.write(text)
infile.close()


infile=open("stream_list-exp.json","r").read()
infile.replace('}\n{','}XXXXX{')
items=infile.split('XXXXX')
cnt=0
for item in items:
    cnt=cnt+1
    if cnt<3:
        print cnt,item

import json
def json_validator(data):
    try:
        json.loads(data)
        return True
    except ValueError as error:
        print("invalid json: %s" % error)
        return False
data = open("stream_list-exp.json").read()
json_validator(data)

## stripping out all characters but numbers rom a string
# python <3.0
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))

import json

class Amazon():

    def parse(self, inpath, outpath):
        g = open(inpath, 'r')
        with open(outpath, 'w') as fout:
            for l in g:
                fout.write(json.dumps(eval(l)))

amazon = Amazon()
amazon.parse("test-transaction.json", "cleaned.json")

import json
try:
    infile=open("test-transaction.json","r")
    data = json.loads(infile)
except ValueError as err:
    print(err)

import simplejson as json
from simplejson import JSONDecodeError
def validate(filename):
    with open(filename) as file:
        try:
            return json.load(file) # put JSON-data to a variable
        except JSONDecodeError:
            print("Invalid JSON") # in case json is invalid
        else:
            print("Valid JSON") # in case json is valid
filename = "test-transactio.json"  
validate(filename)

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<200:
        print row[1]

for num in start:
    print num
    

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'claim_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        print row
        cnt = cnt +1


            
print cnt   




requests.post("http://localhost:5279", json={"method": "transaction_list", "params": { }}).json()

params:
"account_id": optionalstr id of the account to query

"wallet_id":  restrict results to specific wallet

"page":       optional int page to return during paginating
example: "page": 1,
        
"page_size":  optionalint number of items on page during pagination
example:  "page_size": 50, 

## stripping out all characters but numbers rom a string
# python <3.0
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))

!rm /home/jack/Desktop/LBRY-toolbox/transaction_list.db

#!/usr/bin/python2
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'transaction_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 10z0 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        try:
            c.execute("INSERT INTO LBRY VALUES (?)", (line,))
        except:
            pass
    conn.commit()
    conn.close()
    
for page in range(1,20):
    enter_data(page)  
    pause = randint(10,20)
    sleep(pause)
    print page,pause

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
#Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt = cnt +1
    if cnt<100:
        print row[0],": ",row[1]

print cnt   

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        cnt = cnt +1
        if cnt<300:
            print row[0],": ",row[1]

print cnt   

# Get the amount of pages you must download

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
get_items = []
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": 1, "page_size": 100 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
print '----- First page - "page": 1 "page_size": 1 -----'
for lines in L:
    if "total_items" in lines:
        get_items.append(lines)
        print lines
        print " "
        print " "
get_number = str(get_items).split(":")
LAST = int(get_number[1][:-3])
print "----- Last page -----", LAST
print '"page": ',LAST,' "page_size": 1' 

data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": LAST, "page_size": 1 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for text in L:
    if "total_pages" in text:print NumbersOnly(text)
    print text

conn.close() 

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT );'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(database, page):
    cnt=0
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 10 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    print 
    for line in L:
        cnt =  cnt +1
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    print cnt    
    return 

for page in range(1,3):
    print page,pause
    pause = randint(10,20)
    sleep(pause)
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
    entry_data(database, page)

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select ROWID, description from LBRY"):
    if Search in row[1]:
        print row[0],": ",row[1]
 

database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
f=open(database).read()
for line in f:
    print line

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(database, page):
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        try:
            c.execute("INSERT INTO LBRY VALUES (?)", (line))
        except:
            pass
    conn.commit()
    conn.close()    

for page in range(1,3):
    pause = randint(10,20)
    sleep(pause)
    print page,pause
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
    entry_data(database, page)

for page in range(1,20):
    print page

#!/usr/bin/python2
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": 1, "page_size": 10 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for line in L:
    try:
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    except:
        pass



conn.commit()
conn.close()

 "total_pages": 25,
    "page": 1,
    "page_size": 75

cnt = 0
for line in L:
    DES = []
    URL = []
    line= line.replace('\\n',' ')
    if "permanent_url" in line and "@" not in line:
        cnt= cnt+1
        Url = line.lstrip()
        URL.append(Url) 
        #print Url
        #print Url[25:-4]
        TEXT=Url[25:-4]+":::"
        #print TEXT
    if "description" in line:
        Des=line.lstrip()
        if len(Des)<5:Des="----------------No Description Given--"
        DES.append(Des)
        #print Des
        TEXT = str(TEXT)+(Des[16:-2])
        #print TEXT        
        #print Des[16:-2]
        TEXT = TEXT.split(":::")
        try:
            print TEXT[0]+"------"+TEXT[1]
            c.execute("INSERT INTO LBRY VALUES (?,?)", (TEXT[0],TEXT[1]))
        except:
            pass
conn.commit()
conn.close()


requests.post("http://localhost:5279", json={"method": "transaction_list", "params": { }}).json()

params:
"account_id": optionalstr id of the account to query

"wallet_id":  restrict results to specific wallet

"page":       optional int page to return during paginating
example: "page": 1,
        
"page_size":  optionalint number of items on page during pagination
example:  "page_size": 50, 

## stripping out all characters but numbers rom a string
# python <3.0
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))

!rm /home/jack/Desktop/LBRY-toolbox/transaction_list.db

#!/usr/bin/python2
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'transaction_list.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 10z0 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        try:
            c.execute("INSERT INTO LBRY VALUES (?)", (line,))
        except:
            pass
    conn.commit()
    conn.close()
    
for page in range(1,20):
    enter_data(page)  
    pause = randint(10,20)
    sleep(pause)
    print page,pause

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
#Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt = cnt +1
    if cnt<100:
        print row[0],": ",row[1]

print cnt   

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        cnt = cnt +1
        if cnt<300:
            print row[0],": ",row[1]

print cnt   

# Get the amount of pages you must download

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
get_items = []
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": 1, "page_size": 100 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
print '----- First page - "page": 1 "page_size": 1 -----'
for lines in L:
    if "total_items" in lines:
        get_items.append(lines)
        print lines
        print " "
        print " "
get_number = str(get_items).split(":")
LAST = int(get_number[1][:-3])
print "----- Last page -----", LAST
print '"page": ',LAST,' "page_size": 1' 

data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": LAST, "page_size": 1 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for text in L:
    if "total_pages" in text:print NumbersOnly(text)
    print text

conn.close() 

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT );'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(database, page):
    cnt=0
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 10 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    print 
    for line in L:
        cnt =  cnt +1
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    print cnt    
    return 

for page in range(1,3):
    print page,pause
    pause = randint(10,20)
    sleep(pause)
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
    entry_data(database, page)

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select ROWID, description from LBRY"):
    if Search in row[1]:
        print row[0],": ",row[1]
 

database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
f=open(database).read()
for line in f:
    print line

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(database, page):
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        print line
        c.execute("INSERT INTO LBRY VALUES (?)", (line))
    conn.commit()
    conn.close()    

for page in range(1,3):
    pause = randint(10,20)
    sleep(pause)
    print page,pause
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
    entry_data(database, page)

!rm transaction_list.db

for page in range(1,20):
    print page

#!/usr/bin/python2
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": 1, "page_size": 10 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for line in L:
    try:
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    except:
        pass



conn.commit()
conn.close()

 "total_pages": 25,
    "page": 1,
    "page_size": 75

cnt = 0
for line in L:
    DES = []
    URL = []
    line= line.replace('\\n',' ')
    if "permanent_url" in line and "@" not in line:
        cnt= cnt+1
        Url = line.lstrip()
        URL.append(Url) 
        #print Url
        #print Url[25:-4]
        TEXT=Url[25:-4]+":::"
        #print TEXT
    if "description" in line:
        Des=line.lstrip()
        if len(Des)<5:Des="----------------No Description Given--"
        DES.append(Des)
        #print Des
        TEXT = str(TEXT)+(Des[16:-2])
        #print TEXT        
        #print Des[16:-2]
        TEXT = TEXT.split(":::")
        try:
            print TEXT[0]+"------"+TEXT[1]
            c.execute("INSERT INTO LBRY VALUES (?,?)", (TEXT[0],TEXT[1]))
        except:
            pass
conn.commit()
conn.close()


requests.post("http://localhost:5279", json={"method": "transaction_list", "params": { }}).json()

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
get_items = []
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": 1, "page_size": 100 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
print ('----- First page - "page": 1 "page_size": 1 -----')
for lines in L:
    if "total_items" in lines:
        get_items.append(lines)
        print (lines)
        print (" ")
        print (" ")
get_number = str(get_items).split(":")
LAST = int(get_number[1][:-3])
print ("----- Last page -----", LAST)
print ('"page": ',LAST,' "page_size": 1')
print (''); print ('')


def NumbersOnly(string):
    return filter(type(string).isdigit, string)
page = int(input("What page do you want? "))
print ("----- This is the page you requested ",page,"-----")
print ('Using "params":{"page": ',page,', "page_size": 1 }')
print ('')
PrintAll = ''
data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 20 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
PrintAll=PrintAll+str(L)
for text in L:
    if "total_pages" in text:print (NumbersOnly(text))
    print (text)
#print (PrintAll)

#!/usr/bin/python2
# works well
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
from random import randint
import subprocess
from Completed import track_download
import sqlite3
import watchVID
def enter_data(page):
    database = 'transaction_list10.db'
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    sql = '''create table if not exists LBRY(
    description TEXT);'''
    conn.execute(sql) # shortcut for conn.cursor().execute(sql)
    conn.commit()
    c=conn.cursor()
    #search=raw_input("SEARCH : ")
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 1 } }).json()
    TEXT=""
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
#        TEXT=TEXT+str(line)
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    conn.commit()
    conn.close()
# for use in multiple pages
for page in range(1,20):    
    #for page in range(1,20):
    enter_data(page)
    if page %50 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
    

#!/usr/bin/python2
#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_001.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(page,database):
    
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        try:
            c.execute("INSERT INTO LBRY VALUES (?)", (line))
        except:
            pass
    conn.commit()
    conn.close()    

#for page in range(1,2098):  
for page in range(1,20):
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_001.db'
    enter_data(page,database)
    if page %20 ==0:
        print "\n"
        pause = randint(5,15)
        sleep(pause)
    print page,
conn.commit()
conn.close()    

!rm transaction_list10.db

!rm test-transaction.json

import sqlite3
import simplejson
database = 'transaction_list6.db'
conn = sqlite3.connect(database)
infile=open("test-transaction.json","w")
c = conn.cursor()
text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    print row[1]
    text=text+row[1]

infile.write(text)
infile.close()


import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'transaction_list6.db'
conn = sqlite3.connect(database)
#infile=open("test-transaction.json","w")
c = conn.cursor()
#text=""
cnt=1
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    print row[1]

#infile.write(text)
#infile.close()


#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completed import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(database, page):
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 1 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        try:
            c.execute("INSERT INTO LBRY VALUES (?)", (line))
        except:
            pass
    conn.commit()
    conn.close()    

for page in range(1,3):
    pause = randint(10,20)
    sleep(pause)
    print page,pause
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
    entry_data(database, page)

!rm test-transaction.json

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = 'transaction_list6.db'
conn = sqlite3.connect(database)
infile=open("test-transaction.json","w")
c = conn.cursor()
text=""
for row in c.execute("select rowid,* from LBRY"):
    text = text+row[1]+"\n"

infile.write(text)
infile.close()


import json
def json_validator(data):
    try:
        json.loads(data)
        return True
    except ValueError as error:
        print("invalid json: %s" % error)
        return False
data = open("test-transaction.json").read()
json_validator(data)

## stripping out all characters but numbers rom a string
# python <3.0
def NumbersOnly(string):
    return filter(type(string).isdigit, string)

# python ≥3.0
def only_numerics(seq):
    seq_type= type(seq)
    return seq_type().join(filter(seq_type.isdigit, seq))

!rm /home/jack/Desktop/LBRY-toolbox/transaction_list.db

!rm transaction_list6.db

import sqlite3
database = 'transaction_list10.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
Search = str(raw_input("SEARCH: "))
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<2000:
        if Search in row[1]:
             print row[1]

    

print cnt   

for page in range(1,209):
    if page %10 ==0:
        print "\n"
    print page,
        

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
#Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt = cnt +1
    if cnt<100:
        print row[0],": ",row[1]

print cnt   

params:
"account_id": optionalstr id of the account to query

"wallet_id":  restrict results to specific wallet

"page":       optional int page to return during paginating
example: "page": 1,
        
"page_size":  optionalint number of items on page during pagination
example:  "page_size": 50, 

!ls -rant *.json

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
infile=open("test-transaction.json","w")
c = conn.cursor()
text=""
for row in c.execute("select rowid,* from LBRY"):
    text = text+row[1]

infile.write(text)
infile.close()


import json

class Amazon():

    def parse(self, inpath, outpath):
        g = open(inpath, 'r')
        with open(outpath, 'w') as fout:
            for l in g:
                fout.write(json.dumps(eval(l)))

amazon = Amazon()
amazon.parse("test-transaction.json", "cleaned.json")

import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
infile=open("test-transaction.json","w")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    infile.write(simplejson.dumps(simplejson.loads(row[1]), indent=4, sort_keys=True))
infile.close()



import sqlite3
import simplejson
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
infile=open("test-transactio.json","w")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    infile.write(row[1])
infile.close()



import simplejson as json
from simplejson import JSONDecodeError

import json
try:
    infile=open("test-transactio.json","r")
    data = json.loads(infile)
except ValueError as err:
    print(err)

import simplejson as json
from simplejson import JSONDecodeError
def validate(filename):
    with open(filename) as file:
        try:
            return json.load(file) # put JSON-data to a variable
        except JSONDecodeError:
            print("Invalid JSON") # in case json is invalid
        else:
            print("Valid JSON") # in case json is valid
filename = "test-transactio.json"  
validate(filename)

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    cnt=cnt+1
    if cnt<200:
        print row[1]

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=0
start = []
tot=0
#Search = raw_input("SEARCH: ")
Search = "How-I-found-LBRY-and-Why-I-Was-Attracted-to-LBRY-Platform"

c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        cnt = cnt +1
        step = int(row[0])+1
        start.append(step)
print cnt 
cnt=0
for num in start:
    for row in c.execute("select rowid,* from LBRY where rowid = ?", (num,)):
        cnt=cnt+1
        tip = row[1].split(":")
        TIP=tip[1].replace('"',"")
        TIP=TIP.replace(',',"")
        amount = amount+ float(TIP)
        print cnt,": ",TIP,"-",amount

 

          
 

for num in start:
    print num
    

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        print row
        cnt = cnt +1


            
print cnt   

import sqlite3
def NumbersOnly(string):
    return filter(type(string).isdigit, string)
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
amount=[]
start = []
tot=0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select rowid,* from LBRY"):
    if Search in row[1]:
        print row
        cnt = cnt +1
 
        if cnt<300:
            #print row[0],": ",row[1]
            amount.append(row[1])
            numer =row[1].split(".")
            num=NumbersOnly(numer[0])
            amount.append(num)
            num =int(num)
            tot=tot +num
            print num,": ",tot

            
print cnt   

text = '''
"page":  2081  "page_size": 1
{
  "jsonrpc": "2.0",
  "result": {
    "total_items": 2081,
    "items": [
      {
'''
print text[:35]

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT );'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(database, page):
    cnt=0
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 10 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    print 
    for line in L:
        cnt =  cnt +1
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    print cnt    
    return 

for page in range(1,3):
    print page,pause
    pause = randint(10,20)
    sleep(pause)
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
    entry_data(database, page)

import sqlite3
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
conn.text_factory = str
cnt = 0
Search = raw_input("SEARCH: ")
c = conn.cursor()
for row in c.execute("select ROWID, description from LBRY"):
    if Search in row[1]:
        print row[0],": ",row[1]
 

database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
f=open(database).read()
for line in f:
    print line

#!/usr/bin/python2
import os
from random import randint
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
def entry_data(database, page):
    conn = sqlite3.connect(database)
    # text_factory deals with the non-asci characters
    conn.text_factory = str
    data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": page, "page_size": 100 } }).json()
    LINES = (json.dumps(data, indent=2 * ' '))
    Lin =str(LINES)
    L = Lin.split("\n")
    for line in L:
        try:
            c.execute("INSERT INTO LBRY VALUES (?)", (line))
        except:
            pass
    conn.commit()
    conn.close()    

for page in range(1,3):
    pause = randint(10,20)
    sleep(pause)
    print page,pause
    database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
    entry_data(database, page)

for page in range(1,20):
    print page

#!/usr/bin/python2
import os
from time import sleep
import urllib
import simplejson as json
import requests
import sys
import subprocess
from Completedpy2 import track_download
import sqlite3
import watchVID
database = '/home/jack/Desktop/LBRY-toolbox/transaction_list.db'
conn = sqlite3.connect(database)
# text_factory deals with the non-asci characters
conn.text_factory = str
sql = '''create table if not exists LBRY(
description TEXT, url TEXT);'''
conn.execute(sql) # shortcut for conn.cursor().execute(sql)
conn.commit()
c=conn.cursor()
#search=raw_input("SEARCH : ")
data = requests.post("http://localhost:5279", json={"method": "transaction_list", "params":{"page": 1, "page_size": 10 } }).json()
LINES = (json.dumps(data, indent=2 * ' '))
Lin =str(LINES)
L = Lin.split("\n")
for line in L:
    try:
        c.execute("INSERT INTO LBRY VALUES (?)", (line,))
    except:
        pass



conn.commit()
conn.close()

 "total_pages": 25,
    "page": 1,
    "page_size": 75

cnt = 0
for line in L:
    DES = []
    URL = []
    line= line.replace('\\n',' ')
    if "permanent_url" in line and "@" not in line:
        cnt= cnt+1
        Url = line.lstrip()
        URL.append(Url) 
        #print Url
        #print Url[25:-4]
        TEXT=Url[25:-4]+":::"
        #print TEXT
    if "description" in line:
        Des=line.lstrip()
        if len(Des)<5:Des="----------------No Description Given--"
        DES.append(Des)
        #print Des
        TEXT = str(TEXT)+(Des[16:-2])
        #print TEXT        
        #print Des[16:-2]
        TEXT = TEXT.split(":::")
        try:
            print TEXT[0]+"------"+TEXT[1]
            c.execute("INSERT INTO LBRY VALUES (?,?)", (TEXT[0],TEXT[1]))
        except:
            pass
conn.commit()
conn.close()

from PIL import Image
# Creating a image1 object
image1 = Image.open("image1.jpg").convert("RGBA")
# Creating a image2 object
image2 = Image.open("image2.jpg").convert("RGBA")
image2 = image2.resize(image1.size)
count = 0
for i in range(0,11):
   I = float(i*.1)
   count = count +1
   # As Alpha value is 0.0, Image1 would be returned
   image3 = Image.blend(image1,image2,I)
   print(I)
   image3.save(str(count)+"output1.png")
#image3.show()
# As Alpha value is 0.5, Blend of both would be returned
image4 = Image.blend(image1,image2,0.5)
image4.save("output2.png")
image4.show()

from PIL import Image
# creating image object
img10 = Image.open("image2.jpg").convert("RGBA")
# creating image2 object having alpha
img2 = Image.open("image1.jpg").convert("RGBA")
img2 = img2.resize(img10.size)
# using alpha_composite
image4 = Image.blend(img10,img2,0.5)
image4.show()

!pwd

color = (0, 0, 0,3)
formatted_color = tuple(f"{c:04}".replace(" ", "0") for c in color)
print(formatted_color)


 opacity = 150
 r, g, b, a = 0, 0, 0, opacity
color = (r, g, b, a)
formatted_color = tuple(f"{c:04}".replace(" ", "0") for c in color)
r,g,b,a = formatted_color
R,G,B,A = int(r),int(g),int(b),int(a)
print(R,G,B,A)

img10



!cp ImageBot_Triangles.ipynb /home/jack/Desktop/GRAPHICS

# %load ImageBot
#!/bin/bash

while true; do
  python ImageBot1.py
  echo "posted :"
  date
  sleep 1800s
done

#%%writefile ImageBot1.py
#!/home/jack/anaconda2/bin
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import markovify
sys.path.insert(0,"/home/jack/Desktop/pycode/vpython2")
import twython
from twython import Twython
import time
#nap=randint(10,400)
#time.sleep(nap)
path = r"/home/jack/Desktop/GRAPHICS/gmic/640x640/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
])
filename0=(path+base_image)
#filename0= "/home/jack/Desktop/BOTS/Anotebook/TEMP-img4a.png"
#base_image ="/home/jack/Desktop/deep-dream-generator/notebooks/new/2/"
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(filename0)
image = image.resize((640,640), Image.ANTIALIAS)
size = image.size

# create numpy array from the opened image 
im = np.array(image, dtype=np.uint8)

# Plot figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,35)
        offset_factor = randint(10,35)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2a.jpg')
#Create a second image
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(filename0)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
        #textin = (generate_the_word("wordcloud.txt"))

# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,35)
        offset_factor = randint(10,35)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2b.jpg')


img0 = Image.open("images/Sranger-Tri-001-crop2a.jpg")
img1 = Image.open("images/Sranger-Tri-001-crop2b.jpg")
blen = ImageChops.blend(img0, img1, .5)
blen.save('images/Sranger-Tri-001-crop2b.jpg')
base = Image.open('images/Sranger-Tri-001-crop2b.jpg').convert('RGBA')

# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))
def generate_the_word(infile):
    with open(infile) as f:
            contents_of_file = f.read()
    lines = contents_of_file.splitlines()
    line_number = random.randrange(0, len(lines))
    return lines[line_number]
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy
signature_ = "The TwitterBot Project" 
d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(base, txt)
out.save("images/tmp.png", "PNG")
# save the image then reopen to put a title
base = Image.open('images/tmp.png').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("/home/jack/Desktop/BOTS/text/titles.txt"))
d.text((x,y), title , font=fnt, fill=(0,0,0,250))
out2 = Image.alpha_composite(base, txt)
out2.save("images/TM_POST.png", "PNG")
#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
f = open("/home/jack/Desktop/BOTS/text/art.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
STR = (text_model.make_short_sentence(140))
#STR = ("#All_in_One - #WordCloud #Create - Added ability to randomly choose an image background  #Automated")
PATH = "images/TM_POST.png"
photo = open(PATH,'rb')
#response = twitter.upload_media(media=photo)
#twitter.update_status(status=STR, media_ids=[response['media_id']])


!showme images/TM_POST.png

!sudo locate titles.txt

!mkdir images

import os
os.chdir('images')

!mkdir images

!wget -O images/ranger.jpg https://vignette3.wikia.nocookie.net/pdsh/images/e/eb/Black_Diamond.jpg

from PIL import Image
im = Image.open('images/ranger.jpg')
im.size

from PIL import Image
im = Image.open('images/ranger.jpg')
w,h = im.size
re = im.resize((w/4,h/4), Image.NEAREST)
re.save('images/Sranger.jpg')


!showme images/Sranger.jpg

from PIL import ImageEnhance
from PIL import Image
im = Image.open('images/Sranger.jpg')
enhancer = ImageEnhance.Sharpness(im)

eh = enhancer.enhance(4)
eh.show("Sharpness %f" % 4)

import numpy as np
from PIL import Image

# read image as RGB and add alpha (transparency)
im = Image.open("images/Sranger.jpg").convert("RGBA")

# convert to numpy (for convenience)
imArray = np.asarray(im)

# create mask (zeros + circle with ones)
center = (200,200)
radius = 100
mask = np.zeros((imArray.shape[0],imArray.shape[1]))
for i in range(imArray.shape[0]):
    for j in range(imArray.shape[1]):
        if (i-center[0])**2 + (j-center[0])**2 < radius**2:
            mask[i,j] = 1

# assemble new image (uint8: 0-255)
newImArray = np.empty(imArray.shape,dtype='uint8')

# colors (three first columns, RGB)
newImArray[:,:,:3] = imArray[:,:,:3]

# transparency (4th column)
newImArray[:,:,3] = mask*255          

# back to Image from numpy
newIm = Image.fromarray(newImArray, "RGBA")
newIm.save("images/Sranger001.jpg")
newIm

import numpy as np
from PIL import Image, ImageDraw

# read image as RGB and add alpha (transparency)
im = Image.open("images/Sranger.jpg").convert("RGBA")

# convert to numpy (for convenience)
imArray = np.asarray(im)

# create mask (zeros + circle with ones)
#center = (200,200)
#radius = 100
#mask = np.zeros((imArray.shape[0],imArray.shape[1]))
#for i in range(imArray.shape[0]):
#    for j in range(imArray.shape[1]):
#        if (i-center[0])**2 + (j-center[0])**2 < radius**2:
#            mask[i,j] = 1



# create mask
polygon = [(50,50), (300,200), (250,450)]
maskIm = Image.new('L', (imArray.shape[1], imArray.shape[0]), 0)
ImageDraw.Draw(maskIm).polygon(polygon, outline=1, fill=1)
mask = np.array(maskIm)

# assemble new image (uint8: 0-255)
newImArray = np.empty(imArray.shape,dtype='uint8')

# colors (three first columns, RGB)
newImArray[:,:,:3] = imArray[:,:,:3]

# transparency (4th column)
newImArray[:,:,3] = mask*255          

# back to Image from numpy
newIm = Image.fromarray(newImArray, "RGBA")
newIm.save("images/Sranger002.jpg")
newIm

#Get average color of whole image to use as a base
import numpy as np
import cv2
img = cv2.imread('images/Sranger002.jpg')
height, width, channels = img.shape
average_color_per_row = np.average(img, axis=0)
average_color = np.average(average_color_per_row, axis=0)
average_color_img = np.array([[average_color]*width]*height, np.uint8)
cv2.imwrite("average_color.png", average_color_img) 
      

import cv2
import numpy as np

# load image
img = cv2.imread('images/Sranger002.jpg') 
#rsz_img = cv2.resize(img, None, fx=0.25, fy=0.25) # resize since image is huge
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) # convert to grayscale

# threshold to get just the signature
retval, thresh_gray = cv2.threshold(gray, thresh=100, maxval=255, type=cv2.THRESH_BINARY)

# find where the signature is and make a cropped region
points = np.argwhere(thresh_gray==0) # find where the black pixels are
points = np.fliplr(points) # store them in x,y coordinates instead of row,col indices
x, y, w, h = cv2.boundingRect(points) # create a rectangle around those points
x, y, w, h = x-10, y-10, w+20, h+20 # make the box a little bigger
crop = gray[y:y+h, x:x+w] # create a cropped region of the gray image

# get the thresholded crop
retval, thresh_crop = cv2.threshold(crop, thresh=200, maxval=255, type=cv2.THRESH_BINARY)

# display
cv2.imshow("Cropped and thresholded image", thresh_crop) 
cv2.waitKey(0)

#Get average color of whole image to use as a base
import numpy as np
import cv2
img = cv2.imread('images/Sranger002.jpg')
height, width, channels = img.shape
average_color_per_row = np.average(img, axis=0)
average_color = np.average(average_color_per_row, axis=0)
average_color
      

import numpy as np
from PIL import Image, ImageDraw
import cv2
# read image as RGB and add alpha (transparency)
im = Image.open("images/Sranger.jpg").convert("RGBA")

# convert to numpy (for convenience)
imArray = np.asarray(im)

# create mask (zeros + circle with ones)
#center = (200,200)
#radius = 100
#mask = np.zeros((imArray.shape[0],imArray.shape[1]))
#for i in range(imArray.shape[0]):
#    for j in range(imArray.shape[1]):
#        if (i-center[0])**2 + (j-center[0])**2 < radius**2:
#            mask[i,j] = 1



# create mask
polygon = [(50,50), (300,200), (250,450)]
maskIm = Image.new('L', (imArray.shape[1], imArray.shape[0]), 0)
ImageDraw.Draw(maskIm).polygon(polygon, outline=1, fill=1)
mask = np.array(maskIm)

# assemble new image (uint8: 0-255)
newImArray = np.empty(imArray.shape,dtype='uint8')

# colors (three first columns, RGB)
newImArray[:,:,:3] = imArray[:,:,:3]

#average_color = np.average(newImArray[:,:,:3])
# transparency (4th column)
newImArray[:,:,3] = mask*255          
average_color = np.average(newImArray[:,:,:3])

# back to Image from numpy
newIm = Image.fromarray(newImArray, "RGBA")
newIm.save("images/Sranger002.jpg")

#rect = newImArray[i:i+h, j:j+w]
#And taking mean is even simpler:

#rect.mean()
newImArray[:,:,:3]

from PIL import Image
 
def get_average_color((x,y), n, image):
    """ Returns a 3-tuple containing the RGB value of the average color of the
    given square bounded area of length = n whose origin (top left corner) 
    is (x, y) in the given image"""
 
    r, g, b = 0, 0, 0
    count = 0
    for s in range(x, x+n+1):
        for t in range(y, y+n+1):
            pixlr, pixlg, pixlb = image[s, t]
            r += pixlr
            g += pixlg
            b += pixlb
            count += 1
    return ((r/count), (g/count), (b/count))
 
image = Image.open('images/Sranger002.jpg').load()
r, g, b = get_average_color((24,290), 50, image)
print r,g,b

import numpy as np
import cv2
img = cv2.imread('images/Sranger002.jpg')
average_color_per_row = np.average(img, axis=0)
average_color_per_row

import numpy as np
import cv2
img = cv2.imread('images/Sranger002.jpg')
average_color_per_row = np.average(img, axis=0)
average_color = np.average(average_color_per_row, axis=0)
average_color_img = np.array([[average_color]*100]*100, np.uint8)
cv2.imwrite( "average_color.png", average_color_img 


!showme average_color.png

import cv2
img=cv2.imread('average_color.png')
cv2.imshow('ImageWindow',img)

rect = image[i:i+h, j:j+w]
#And taking mean is even simpler:

rect.mean()

# create mask
polygon = [(100,100), (200,100), (150,150)]
maskIm = Image.new('L', (imArray.shape[0], imArray.shape[1]), 0)
ImageDraw.Draw(maskIm).polygon(polygon, outline=1, fill=1)
mask = numpy.array(maskIm)

!mkdir output

!ls /home/jack/Desktop/deep-dream-generator/notebooks/new/1/

from Queue import Queue
import itertools
import os
import subprocess
import sys
import threading
in_folder = "/home/jack/Desktop/deep-dream-generator/notebooks/new/1"
out_folder = "output/"
def makedirs(x):
    try:
        os.makedirs(x)
    except Exception:
        pass

def primitive(i, o, n, a, m):
    makedirs(os.path.split(o)[0])
    args = (i, o, n, a, m)
    cmd = 'primitive -r 128 -s 512 -i %s -o %s -n %d -a %d -m %d' % args
    subprocess.call(cmd, shell=True)

def create_jobs(in_folder, out_folder, n, a, m):
    result = []
    for name in os.listdir(in_folder):
        base, ext = os.path.splitext(name)
        if ext.lower() not in ['.jpg', '.jpeg', '.png']:
            continue
        out_name = '%d.%%d.png' % (m)
        in_path = os.path.join(in_folder, name)
        out_path = os.path.join(out_folder, base, out_name)
        if os.path.exists(out_path):
            continue
        key = (base, n, m)
        args = (in_path, out_path, n, a, m)
        result.append((key, args))
    return result

def worker(jobs, done):
    while True:
        job = jobs.get()
        log(job)
        primitive(*job)
        done.put(True)

def process(in_folder, out_folder, nlist, alist, mlist, nworkers):
    jobs = Queue()
    done = Queue()
    for i in xrange(nworkers):
        t = threading.Thread(target=worker, args=(jobs, done))
        t.setDaemon(True)
        t.start()
    count = 0
    items = []
    for n, a, m in itertools.product(nlist, alist, mlist):
        for item in create_jobs(in_folder, out_folder, n, a, m):
            items.append(item)
    items.sort()
    for _, job in items:
        jobs.put(job)
        count += 1
    for i in xrange(count):
        done.get()

log_lock = threading.Lock()

def log(x):
    with log_lock:
        print x

if __name__ == '__main__':
    args = sys.argv[1:]
    nlist = [500]
    alist = [128]
    mlist = [0, 1, 3, 5]
    nworkers = 4
process(args[0], args[1], nlist, alist, mlist, nworkers)

import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from PIL import Image

square_size = 30
offset_factor = 3
darken_factor = 0.1

image = Image.open("images/Sranger002.jpg")
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)

        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)


plt.axis('off')
plt.savefig("images/Sranger-Tri-001.jpg", bbox_inches='tight', dpi=200)


img = Image.open("images/Sranger-Tri-001.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001a-crop.jpg')




!showme images/Sranger-Tri-001a-crop.jpg

import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from PIL import Image
from random import randint



square_size = randint(10, 50)
offset_factor = randint(10, 50)
darken_factor = 0.1

image = Image.open("images/Sranger002.jpg")
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)

        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)


plt.axis('off')
plt.savefig("images/Sranger-Tri-001.jpg", bbox_inches='tight', dpi=200)


img = Image.open("images/Sranger-Tri-001.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop.jpg')


!showme images/Sranger-Tri-001-crop.jpg

import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image


square_size = 10
offset_factor = 20
darken_factor = 0.1

image = Image.open("images/Sranger002.jpg")
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)


plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)


img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2a.jpg')


!showme images/Sranger-Tri-001-crop2a.jpg

path = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/-images/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
    ])
filename0=(path+base_image)
print filename

import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image
from PIL import ImageChops


square_size = 10
offset_factor = 20
darken_factor = 0.1
path = r"posted/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
    ])
filename0=(path+base_image)

image = Image.open(filename0)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2a.jpg')
#Create a second image
square_size = 10
offset_factor = 20
darken_factor = 0.1
#image = Image.open("images/Sranger002.jpg")

size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(15,30)
        offset_factor = randint(15,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            #line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2b.jpg')


img0 = Image.open("images/Sranger-Tri-001-crop2a.jpg")
img1 = Image.open("images/Sranger-Tri-001-crop2b.jpg")
blen = ImageChops.blend(img0, img1, .5)
blen.save('images/Sranger-Tri-001-crop2b.jpg')
blen

import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import markovify
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython

import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import markovify
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import time
base_image ="/home/jack/Documents/612x841jpg/paper_0022.jpg"
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(base_image)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2a.jpg')
#Create a second image
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(base_image)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
        #textin = (generate_the_word("wordcloud.txt"))

# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2b.jpg')


img0 = Image.open("images/Sranger-Tri-001-crop2a.jpg")
img1 = Image.open("images/Sranger-Tri-001-crop2b.jpg")
blen = ImageChops.blend(img0, img1, .5)
blen.save('images/Sranger-Tri-001-crop2b.jpg')


base = Image.open('images/Sranger-Tri-001-crop2b.jpg').convert('RGBA')

# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("titles.txt"))
d.text((x,y), title , font=fnt, fill=(0,0,0,250))
out2 = Image.alpha_composite(base, txt)
out2.save("images/TM_POSTa.jpg", "JPEG")

#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'


twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
#f = open("art.txt")
#text = f.read()
# Build the model.
#text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
STR = ("#All_in_One - #WordCloud #Create - Added ability to randomly choose an image background  #Automated")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "images/TM_POSTa.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')


#photo = open(PATH,'rb')
#response = twitter.upload_media(media=photo)
#twitter.update_status(status=STR, media_ids=[response['media_id']])


import random, os
path = r"/home/images"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
])
filename=(path+base_image)
print filename

import time
time.sleep(20)
print "now"

%%writefile ImageBot1.py
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import markovify
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import time
nap=randint(10,400)
time.sleep(nap)
path = r"/home/jack/Desktop/deep-dream-generator/notebooks/new/2/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
])
filename0=(path+base_image)

#base_image ="/home/jack/Desktop/deep-dream-generator/notebooks/new/2/"
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(filename0)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2a.jpg')
#Create a second image
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(filename0)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
        #textin = (generate_the_word("wordcloud.txt"))

# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2b.jpg')


img0 = Image.open("images/Sranger-Tri-001-crop2a.jpg")
img1 = Image.open("images/Sranger-Tri-001-crop2b.jpg")
blen = ImageChops.blend(img0, img1, .5)
blen.save('images/Sranger-Tri-001-crop2b.jpg')

#---------------


base = Image.open('images/Sranger-Tri-001-crop2b.jpg').convert('RGBA')
 
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))
def generate_the_word(infile):
    with open(infile) as f:
            contents_of_file = f.read()
    lines = contents_of_file.splitlines()
    line_number = random.randrange(0, len(lines))
    return lines[line_number]
    

#base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy
signature_ = "The TwitterBot Project" 
d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(base, txt)
out.save("images/tmp.jpg", "JPEG")
# save the image then reopen to put a title
base = Image.open('images/tmp.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("titles.txt"))
d.text((x,y), title , font=fnt, fill=(0,0,0,250))
out2 = Image.alpha_composite(base, txt)
out2.save("images/TM_POST.jpg", "JPEG")


#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
#f = open("art.txt")
#text = f.read()
# Build the model.
#text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
STR = ("#All_in_One - #WordCloud #Create - Added ability to randomly choose an image background  #Automated")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "images/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')

photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])


%%writefile ImageBot
#!/bin/bash

while true; do
  python ImageBot1.py
  echo "posted :"
  date
  sleep 1800s
done

%%writefile ImageEffectsBot
#!/bin/bash

while true; do
  python ImageEffectsBot.py
  echo "posted :"
  date
  sleep 1800s
done

%%writefile ImageEffectsBot
#!/bin/bash

while python ImageEffectsBot.py; do 1800s; done

# %load /home/jack/Desktop/pycode/vpython2/TrigonometryBot/twitterpost
#!/bin/bash

while true; do
  python twitterpost.py
  echo "posted :"
  date
  sleep 1800s
done

# %load ImageBot
#!/bin/bash

while true; do
  python ImageBot1.py
  echo "posted :"
  date
  sleep 1800s
done

from PIL import Image, ImageChops

blen = ImageChops.blend(image1, image2, alpha)

%reset -f

#
# The Python Imaging Library.
# $Id: ImageChops.py 2134 2004-10-06 08:55:20Z fredrik $
#
# standard channel operations
#
# History:
# 1996-03-24 fl   Created
# 1996-08-13 fl   Added logical operations (for "1" images)
# 2000-10-12 fl   Added offset method (from Image.py)
#
# Copyright (c) 1997-2000 by Secret Labs AB
# Copyright (c) 1996-2000 by Fredrik Lundh
#
# See the README file for information on usage and redistribution.
#


from PIL import Image, ImageChops
##
# The <b>ImageChops</b> module contains a number of arithmetical image
# operations, called <i>channel operations</i> ("chops"). These can be
# used for various purposes, including special effects, image
# compositions, algorithmic painting, and more.
# <p>
# At this time, channel operations are only implemented for 8-bit
# images (e.g. &quot;L&quot; and &quot;RGB&quot;).
# <p>
# Most channel operations take one or two image arguments and returns
# a new image.  Unless otherwise noted, the result of a channel
# operation is always clipped to the range 0 to MAX (which is 255 for
# all modes supported by the operations in this module).
##

##
# Return an image with the same size as the given image, but filled
# with the given pixel value.
#
# @param image Reference image.
# @param value Pixel value.
# @return An image object.

def constant(image, value):
    "Fill a channel with a given grey level"

    return Image.new("L", image.size, value)

##
# Copy image.
#
# @param image Source image.
# @return A copy of the source image.

def duplicate(image):
    "Create a copy of a channel"

    return image.copy()

##
# Inverts an image
# (MAX - image).
#
# @param image Source image.
# @return An image object.

def invert(image):
    "Invert a channel"

    image.load()
    return image._new(image.im.chop_invert())

##
# Compare images, and return lighter pixel value
# (max(image1, image2)).
# <p>
# Compares the two images, pixel by pixel, and returns a new image
# containing the lighter values.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def lighter(image1, image2):
    "Select the lighter pixels from each image"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_lighter(image2.im))

##
# Compare images, and return darker pixel value
# (min(image1, image2)).
# <p>
# Compares the two images, pixel by pixel, and returns a new image
# containing the darker values.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def darker(image1, image2):
    "Select the darker pixels from each image"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_darker(image2.im))

##
# Calculate absolute difference
# (abs(image1 - image2)).
# <p>
# Returns the absolute value of the difference between the two images.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def difference(image1, image2):
    "Subtract one image from another"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_difference(image2.im))

##
# Superimpose positive images
# (image1 * image2 / MAX).
# <p>
# Superimposes two images on top of each other. If you multiply an
# image with a solid black image, the result is black. If you multiply
# with a solid white image, the image is unaffected.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def multiply(image1, image2):
    "Superimpose two positive images"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_multiply(image2.im))

##
# Superimpose negative images
# (MAX - ((MAX - image1) * (MAX - image2) / MAX)).
# <p>
# Superimposes two inverted images on top of each other.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def screen(image1, image2):
    "Superimpose two negative images"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_screen(image2.im))

##
# Add images
# ((image1 + image2) / scale + offset).
# <p>
# Adds two images, dividing the result by scale and adding the
# offset. If omitted, scale defaults to 1.0, and offset to 0.0.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def add(image1, image2, scale=1.0, offset=0):
    "Add two images"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_add(image2.im, scale, offset))

##
# Subtract images
# ((image1 - image2) / scale + offset).
# <p>
# Subtracts two images, dividing the result by scale and adding the
# offset. If omitted, scale defaults to 1.0, and offset to 0.0.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def subtract(image1, image2, scale=1.0, offset=0):
    "Subtract two images"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_subtract(image2.im, scale, offset))

##
# Add images without clipping
# ((image1 + image2) % MAX).
# <p>
# Adds two images, without clipping the result.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def add_modulo(image1, image2):
    "Add two images without clipping"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_add_modulo(image2.im))

##
# Subtract images without clipping
# ((image1 - image2) % MAX).
# <p>
# Subtracts two images, without clipping the result.
#
# @param image1 First image.
# @param image1 Second image.
# @return An image object.

def subtract_modulo(image1, image2):
    "Subtract two images without clipping"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_subtract_modulo(image2.im))

##
# Logical AND
# (image1 and image2).

def logical_and(image1, image2):
    "Logical and between two images"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_and(image2.im))

##
# Logical OR
# (image1 or image2).

def logical_or(image1, image2):
    "Logical or between two images"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_or(image2.im))

##
# Logical XOR
# (image1 xor image2).

def logical_xor(image1, image2):
    "Logical xor between two images"

    image1.load()
    image2.load()
    return image1._new(image1.im.chop_xor(image2.im))

##
# Blend images using constant transparency weight.
# <p>
# Same as the <b>blend</b> function in the <b>Image</b> module.

def blend(image1, image2, alpha):
    "Blend two images using a constant transparency weight"

    return Image.blend(image1, image2, alpha)

##
# Create composite using transparency mask.
# <p>
# Same as the <b>composite</b> function in the <b>Image</b> module.

def composite(image1, image2, mask):
    "Create composite image by blending images using a transparency mask"

    return Image.composite(image1, image2, mask)

##
# Offset image data.
# <p>
# Returns a copy of the image where data has been offset by the given
# distances.  Data wraps around the edges.  If yoffset is omitted, it
# is assumed to be equal to xoffset.
#
# @param image Source image.
# @param xoffset The horizontal distance.
# @param yoffset The vertical distance.  If omitted, both
#    distances are set to the same value.
# @return An Image object.

def offset(image, xoffset, yoffset=None):
    "Offset image in horizontal and/or vertical direction"
    if yoffset is None:
        yoffset = xoffset
    image.load()
    return image._new(image.im.offset(xoffset, yoffset))


!ls publish

from PIL import Image, ImageChops
path = r"experiment/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
    ])
filename0=(path+base_image)

path0 = r"blend/"
base_image0 = random.choice([
    x0 for x0 in os.listdir(path0)
    if os.path.isfile(os.path.join(path0, x0))
    ])
filename00=(path0+base_image0)

image1=Image.open(filename0)
image2=Image.open(filename00)
subt = ImageChops.subtract(image1, image2, scale=0.5, offset=0)

filename_ = time.strftime("darkimages/%Y%m%d%H%M%S.jpg")
subt.save(filename_)

subt


from PIL import Image, ImageChops
path = r"experiment/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
    ])
filename0=(path+base_image)

path0 = r"blend/"
base_image0 = random.choice([
    x0 for x0 in os.listdir(path0)
    if os.path.isfile(os.path.join(path0, x0))
    ])
filename00=(path0+base_image0)

path1 = r"masks/"
base_image1 = random.choice([
    x1 for x1 in os.listdir(path1)
    if os.path.isfile(os.path.join(path1, x1))
    ])
mask0=(path1+base_image1)




im0 = Image.open(filename0)
im1 = im0.resize((640,640), Image.NEAREST)

im01 = Image.open(filename00)
im2 = im01.resize((640,640), Image.NEAREST)
    
im03 = Image.open(mask0)
    
    
result1 = ImageChops.composite(im1, im2, im03)
filename = time.strftime("publish/%Y%m%d%H%M%S.jpg")
result1.save(filename)

result1    

from PIL import Image, ImageChops
import time
count = 0    
while count <350:    
    path = r"experiment/"
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
        ])
    filename0=(path+base_image)

    path0 = r"build/"
    base_image0 = random.choice([
        x0 for x0 in os.listdir(path0)
        if os.path.isfile(os.path.join(path0, x0))
        ])
    filename00=(path0+base_image0)

    path1 = r"testmasks/"
    base_image1 = random.choice([
        x1 for x1 in os.listdir(path1)
        if os.path.isfile(os.path.join(path1, x1))
        ])
    mask0=(path1+base_image1)




    im0 = Image.open(filename0)
    im1 = im0.resize((640,640), Image.NEAREST)

    im01 = Image.open(filename00)
    im2 = im01.resize((640,640), Image.NEAREST)

    im03 = Image.open(mask0)
    im04 = im03.resize((640,640), Image.NEAREST)

    time.sleep(3)
    result1 = ImageChops.composite(im1, im2, im04)
    filename = time.strftime("darkimages/%Y%m%d%H%M%S.jpg")
    result1.save(filename)
    count = count +1
   

from PIL import Image
import time

path = r"publish/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
    ])
filename0=(path+base_image)

col = Image.open(filename0)
gray = col.convert('L')
bw = gray.point(lambda x: 0 if x<150 else 255, '1')
bw
#bw.save("result_bw.png")

filename = time.strftime("masks/%Y%m%d%H%M%S.jpg")
bw.save(filename)


!mkdir darkimages

!ls output

 path1 = r"masks/"
    base_image1 = random.choice([
        x1 for x1 in os.listdir(path1)
        if os.path.isfile(os.path.join(path1, x1))
    ])
    mask0=(path1+base_image1)




    im0 = Image.open(filename0)
    im1 = im0.resize((640,640), Image.NEAREST)

    im01 = Image.open(filename00)
    im2 = im01.resize((640,640), Image.NEAREST)
    
    im03 = Image.open(mask0)
    
    
    result1 = ImageChops.composite(im1, im2, im03) 
    

# %load ImageBot.py
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import markovify
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import time
base_image ="images/Sranger.jpg"
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(base_image)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2a.jpg')
#Create a second image
square_size = 10
offset_factor = 20
darken_factor = 0.1
image = Image.open(base_image)
size = image.size

# Create image np array
im = np.array(image, dtype=np.uint8)

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(im)

# Add random offset to tuple based on offset_factor
def add_offet(t):
    t[0] = random.randint(t[0], (t[0] + offset_factor))
    t[1] = random.randint(t[1], (t[1] + offset_factor))

    return t


def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
        #textin = (generate_the_word("wordcloud.txt"))

# Create a Rectangle patch
for w in xrange(0, size[0], square_size):
    for h in xrange(0, size[1], square_size):
        #print str(w) + ':' + str(h)
        square_size = randint(10,30)
        offset_factor = randint(10,30)
    
        # Get the average color of the section
        rect = im[h:h+square_size, w:w+square_size]
        mean = rect.mean(axis=(0,1))

        # Convert to hex value
        face_color = '#%02x%02x%02x' % (int(mean[0]), int(mean[1]), int(mean[2]))
        edge_color = '#%02x%02x%02x' % (int(mean[0] - (mean[0] * darken_factor)), int(mean[1]  - (mean[1] * darken_factor)), int(mean[2] - (mean[2] * darken_factor)))

        # Dont draw outline with the dominant color
        z_order = 2
        if '#e' in face_color or '#f' in face_color:
            line_width = 0.0
        else:
            line_width = 0.1
            z_order = 3

        points = [add_offet([w, h]), add_offet([w + square_size, h]), add_offet([w, h + square_size])]
        triangle1 = patches.Polygon(points, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Second triangle
        points2 = [add_offet([w, h + square_size]), add_offet([w + square_size, h + square_size]), add_offet([w + square_size, h])]
        triangle2 = patches.Polygon(points2, edgecolor=edge_color, linewidth=line_width, facecolor=face_color, zorder=z_order)

        # Square in background
        rec = patches.Rectangle((w,h),square_size,square_size,linewidth=0.0, edgecolor=edge_color, facecolor=face_color, zorder=1)

        # Add the patch to the Axes
        ax.add_patch(triangle1)
        ax.add_patch(triangle2)
        ax.add_patch(rec)

plt.axis('off')
plt.savefig("images/Sranger-Tri-001a.jpg", bbox_inches='tight', dpi=200)
img = Image.open("images/Sranger-Tri-001a.jpg")
nonwhite_positions = [(x,y) for x in range(img.size[0]) for y in range(img.size[1]) if img.getdata()[x+y*img.size[0]] != (255,255,255)]
rect = (min([x for x,y in nonwhite_positions]), min([y for x,y in nonwhite_positions]), max([x for x,y in nonwhite_positions]), max([y for x,y in nonwhite_positions]))
img.crop(rect).save('images/Sranger-Tri-001-crop2b.jpg')


img0 = Image.open("images/Sranger-Tri-001-crop2a.jpg")
img1 = Image.open("images/Sranger-Tri-001-crop2b.jpg")
blen = ImageChops.blend(img0, img1, .5)
blen.save('images/Sranger-Tri-001-crop2b.jpg')

#---------------


base = Image.open('images/Sranger-Tri-001-crop2b.jpg').convert('RGBA')
 
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))
def generate_the_word(infile):
    with open(infile) as f:
            contents_of_file = f.read()
    lines = contents_of_file.splitlines()
    line_number = random.randrange(0, len(lines))
    return lines[line_number]
    

#base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = out.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy
signature_ = "The TwitterBot Project" 
d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(base, txt)
out.save("images/NewFolder/tmp.jpg", "JPEG")
# save the image then reopen to put a title
base = Image.open('images/NewFolder/tmp.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("titles.txt"))
d.text((x,y), title , font=fnt, fill=(0,0,0,250))
out2 = Image.alpha_composite(base, txt)
out2.save("images/NewFolder/TM_POST.jpg", "JPEG")


#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
#f = open("art.txt")
#text = f.read()
# Build the model.
#text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
#STR = (text_model.make_short_sentence(140))
STR = ("#All_in_One - #WordCloud #Create - Added ability to randomly choose an image background  #Automated")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "images/NewFolder/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')

#photo = open(PATH,'rb')
#response = twitter.upload_media(media=photo)
#twitter.update_status(status=STR, media_ids=[response['media_id']])



#@title Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

!sudo apt -y install libportaudio2
!pip install -q tflite-model-maker

import os

import numpy as np

import tensorflow as tf
assert tf.__version__.startswith('2')

from tflite_model_maker import model_spec
from tflite_model_maker import image_classifier
from tflite_model_maker.config import ExportFormat
from tflite_model_maker.config import QuantizationConfig
from tflite_model_maker.image_classifier import DataLoader

import matplotlib.pyplot as plt

image_path = tf.keras.utils.get_file(
      'flower_photos.tgz',
      'https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz',
      extract=True)
image_path = os.path.join(os.path.dirname(image_path), 'flower_photos')

data = DataLoader.from_folder(image_path)
train_data, test_data = data.split(0.9)

model = image_classifier.create(train_data)

loss, accuracy = model.evaluate(test_data)

model.export(export_dir='.')

image_path = tf.keras.utils.get_file(
      'flower_photos.tgz',
      'https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz',
      extract=True)
image_path = os.path.join(os.path.dirname(image_path), 'flower_photos')

data = DataLoader.from_folder(image_path)

train_data, rest_data = data.split(0.8)
validation_data, test_data = rest_data.split(0.5)

plt.figure(figsize=(10,10))
for i, (image, label) in enumerate(data.gen_dataset().unbatch().take(25)):
  plt.subplot(5,5,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.grid(False)
  plt.imshow(image.numpy(), cmap=plt.cm.gray)
  plt.xlabel(data.index_to_label[label.numpy()])
plt.show()

model = image_classifier.create(train_data, validation_data=validation_data)

model.summary()

loss, accuracy = model.evaluate(test_data)

# A helper function that returns 'red'/'black' depending on if its two input
# parameter matches or not.
def get_label_color(val1, val2):
  if val1 == val2:
    return 'black'
  else:
    return 'red'

# Then plot 100 test images and their predicted labels.
# If a prediction result is different from the label provided label in "test"
# dataset, we will highlight it in red color.
plt.figure(figsize=(20, 20))
predicts = model.predict_top_k(test_data)
for i, (image, label) in enumerate(test_data.gen_dataset().unbatch().take(100)):
  ax = plt.subplot(10, 10, i+1)
  plt.xticks([])
  plt.yticks([])
  plt.grid(False)
  plt.imshow(image.numpy(), cmap=plt.cm.gray)

  predict_label = predicts[i][0][0]
  color = get_label_color(predict_label,
                          test_data.index_to_label[label.numpy()])
  ax.xaxis.label.set_color(color)
  plt.xlabel('Predicted: %s' % predict_label)
plt.show()

model.export(export_dir='.')

model.export(export_dir='.', export_format=ExportFormat.LABEL)

model.evaluate_tflite('model.tflite', test_data)

config = QuantizationConfig.for_float16()

model.export(export_dir='.', tflite_filename='model_fp16.tflite', quantization_config=config)

model = image_classifier.create(train_data, model_spec=model_spec.get('mobilenet_v2'), validation_data=validation_data)

loss, accuracy = model.evaluate(test_data)

inception_v3_spec = image_classifier.ModelSpec(
    uri='https://tfhub.dev/google/imagenet/inception_v3/feature_vector/1')
inception_v3_spec.input_image_shape = [299, 299]

model = image_classifier.create(train_data, validation_data=validation_data, epochs=10)

loss, accuracy = model.evaluate(test_data)

print 54893/250


from math import sin, cos
x=140
y=240
z=236
i=2
#print sin(x*y)+sin(y*z)+sin(z*x)
print int(abs((cos(x**2-cos(y)-x+y**2)))*200)

from math import sin
x=-240
y=-240
z=-236
i=2
#print sin(x*y)+sin(y*z)+sin(z*x)
print int(abs((cos(x**2-cos(y)-x+y**2)))*200)

from math import sin
x=20
y=20
z=26
i=2
#print sin(x*y)+sin(y*z)+sin(z*x)
int(abs((cos(x**2-cos(y)-x+y**2)))*200)

1.02476410846
2.24526658171

#%%writefile ImageEffectsBot.py
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import markovify
sys.path.insert(0,"/home/jack/anaconda2/envs/py27/lib/python2.7/site-packages")
import twython
from twython import Twython
import time
nap=randint(10,400)
time.sleep(nap)
path = r"publish/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
])
filename0=(path+base_image)


def generate_the_word(infile):
        with open(infile) as f:
            contents_of_file = f.read()
        lines = contents_of_file.splitlines()
        line_number = random.randrange(0, len(lines))
        return lines[line_number]
        #textin = (generate_the_word("wordcloud.txt"))


base = Image.open(filename0).convert('RGBA')
 

txt = Image.new('RGBA', base.size, (255,255,255,0))
def generate_the_word(infile):
    with open(infile) as f:
            contents_of_file = f.read()
    lines = contents_of_file.splitlines()
    line_number = random.randrange(0, len(lines))
    return lines[line_number]
    

#base = Image.open('images/NewFolder/lightning01.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 20)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
marginx = 225
marginy = 50
x = width - marginx
y = height - marginy
signature_ = "The TwitterBot Project" 
d.text((x,y), signature_, font=fnt, fill=(0,0,0,256))

out = Image.alpha_composite(base, txt)
out.save("tmp/tmp.jpg", "JPEG")
# save the image then reopen to put a title
base = Image.open('tmp/tmp.jpg').convert('RGBA')
#8 5 4 6 3 2
# make a blank image for the text, initialized to transparent text color
txt = Image.new('RGBA', base.size, (255,255,255,0))

# get a font
fnt = ImageFont.truetype("/home/jack/.fonts/Exo-Black.ttf", 50)
# get a drawing context
d = ImageDraw.Draw(txt)

width, height = base.size
# calculate the x,y coordinates of the text
#marginx = 325
#marginy = 75
x = 90
y = 10
#generate a title
title = (generate_the_word("titles.txt"))
d.text((x,y), "Python Stuff" , font=fnt, fill=(0,0,0,250))
out2 = Image.alpha_composite(base, txt)
out2.save("tmp/TM_POST.jpg", "JPEG")

filenameP = time.strftime("posted/%Y%m%d%H%M%S.jpg")
out2.save(filenameP, "JPEG")
#removed keys for privacy reasons
CONSUMER_KEY = 'YazCRIfWX4VICiRCOiph08jDL'
CONSUMER_SECRET = 'QOkLHou6NMwkghSHjMFXMdffQKJlDzttKtP6uBCcZ4VlQtvJyc'
ACCESS_KEY = '296906916-AWggjhqpEWIS7EzXXhc2pOPBeCVJczpOm11cQGIf'
ACCESS_SECRET = 'zFrCiyaPt8gCBVVs1bLCmdCSyQQ3DKxT5wHJq2tOu2AMj'

twitter = Twython(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_KEY, ACCESS_SECRET)
#path = 'images/NewFolder'
f = open("art.txt")
text = f.read()
# Build the model.
text_model = markovify.Text(text)
# Print randomly-generated sentences of no more than 140 characters
#http://paulbourke.net/fractals/
STR = (text_model.make_short_sentence(140))
#STR = ("#All_in_One - #WordCloud #Create - Added ability to randomly choose an image background  #Automated")
#PATH = "/home/jack/Desktop/deep-dream-generator/notebooks/STUFF/experiment/experiment8.jpg"
PATH = "tmp/TM_POST.jpg"
# 1 , 2, 3, 12, 5, 15, 8, 6
#photo = open('/home/jack/Desktop/deep-dream-generator/notebooks/images/'+file_list[rnd]+'.jpg','rb')

photo = open(PATH,'rb')
response = twitter.upload_media(media=photo)
twitter.update_status(status=STR, media_ids=[response['media_id']])


import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import time
count = 0
while count < 180:
    path = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/images/"
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
    ])
    filename0=(path+base_image)

    path0 = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/images/"
    base_image0 = random.choice([
        x0 for x0 in os.listdir(path0)
        if os.path.isfile(os.path.join(path0, x0))
    ])
    filename00=(path0+base_image0)



    im0 = Image.open(filename0)
    im1 = im0.resize((640,640), Image.NEAREST)

    im01 = Image.open(filename00)
    im2 = im01.resize((640,640), Image.NEAREST)
    result1 = ImageChops.lighter(im1, im2) 
    filename = time.strftime("build/%Y%m%d%H%M%S.jpg")
    result1.save(filename)
    time.sleep(3)
    count= count +1

import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import time
count = 0
while count < 124:
    path = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/-images/"
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
    ])
    filename0=(path+base_image)

    path0 = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/-images/"
    base_image0 = random.choice([
        x0 for x0 in os.listdir(path0)
        if os.path.isfile(os.path.join(path0, x0))
    ])
    filename00=(path0+base_image0)



    im0 = Image.open(filename0)
    im1 = im0.resize((640,640), Image.NEAREST)

    im01 = Image.open(filename00)
    im2 = im01.resize((640,640), Image.NEAREST)
    
    result1 = ImageChops.screen(im1, im2) 
    
    filename = time.strftime("experiment/%Y%m%d%H%M%S.jpg")
    result1.save(filename)
    time.sleep(3)
    count= count +1

import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import time
count = 0
while count < 154:
    path = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/-images/"
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
    ])
    filename0=(path+base_image)

    path0 = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/-images/"
    base_image0 = random.choice([
        x0 for x0 in os.listdir(path0)
        if os.path.isfile(os.path.join(path0, x0))
    ])
    filename00=(path0+base_image0)



    im0 = Image.open(filename0)
    im1 = im0.resize((640,640), Image.NEAREST)

    im01 = Image.open(filename00)
    im2 = im01.resize((640,640), Image.NEAREST)
    
    result1 = ImageChops.blend(im1, im2, .5) 
    
    filename = time.strftime("blend/%Y%m%d%H%M%S.jpg")
    result1.save(filename)
    time.sleep(3)
    count= count +1

import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import time
count = 0
while count < 24:
    path = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/images/"
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
    ])
    filename0=(path+base_image)

    path0 = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/images/"
    base_image0 = random.choice([
        x0 for x0 in os.listdir(path0)
        if os.path.isfile(os.path.join(path0, x0))
    ])
    filename00=(path0+base_image0)



    im0 = Image.open(filename0)
    im1 = im0.resize((640,640), Image.NEAREST)

    im01 = Image.open(filename00)
    im2 = im01.resize((640,640), Image.NEAREST)
    
    result1 = ImageChops.blend(im1, im2, .5) 
    
    filename = time.strftime("blend/%Y%m%d%H%M%S.jpg")
    result1.save(filename)
    time.sleep(3)
    count= count +1

!rm /home/jack/Desktop/pycode/vpython2/TrigonometryBot/-images/image_68704131938.png

import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys
import time
count = 0
while count < 350:
    path = r"build/"
    base_image = random.choice([
        x for x in os.listdir(path)
        if os.path.isfile(os.path.join(path, x))
    ])
    filename0=(path+base_image)

    path0 = r"experiment/"
    base_image0 = random.choice([
        x0 for x0 in os.listdir(path0)
        if os.path.isfile(os.path.join(path0, x0))
    ])
    filename00=(path0+base_image0)
    
    path1 = r"masks/"
    base_image1 = random.choice([
        x1 for x1 in os.listdir(path1)
        if os.path.isfile(os.path.join(path1, x1))
    ])
    mask0=(path1+base_image1)




    im0 = Image.open(filename0)
    im1 = im0.resize((640,640), Image.NEAREST)

    im01 = Image.open(filename00)
    im2 = im01.resize((640,640), Image.NEAREST)
    
    im03 = Image.open(mask0)
    
    
    result1 = ImageChops.composite(im1, im2, im03) 
    
    filename = time.strftime("publish/%Y%m%d%H%M%S.jpg")
    result1.save(filename)
    time.sleep(3)
    count= count +1

from PIL import Image, ImageDraw, ImageFont, ImageChops 
help(ImageChops)

import random
from random import randint
from PIL import Image, ImageDraw, ImageFont, ImageChops 
import os
import sys



path = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/images/"
base_image = random.choice([
    x for x in os.listdir(path)
    if os.path.isfile(os.path.join(path, x))
])
filename0=(path+base_image)

path0 = r"/home/jack/Desktop/pycode/vpython2/TrigonometryBot/images/"
base_image0 = random.choice([
    x0 for x0 in os.listdir(path0)
    if os.path.isfile(os.path.join(path0, x0))
])
filename00=(path0+base_image0)