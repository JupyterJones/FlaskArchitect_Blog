#!/usr/bin/env python3

import os
import sys

# Define the maximum file size in bytes (e.g., 100 MB)
MAX_FILE_SIZE = 27 * 1024 * 1024

# Get the current working directory
CURRENT_DIRECTORY = os.getcwd()

# .gitignore file path
GITIGNORE_PATH = os.path.join(CURRENT_DIRECTORY, '.gitignore')

def is_git_repository(directory):
    return os.path.isdir(os.path.join(directory, '.git'))

def scan_for_large_files(directory, max_size):
    large_files = []
    for root, _, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            if os.path.getsize(file_path) > max_size:
                large_files.append(file_path)
    return large_files

def append_to_gitignore(files, gitignore_path):
    with open(gitignore_path, 'a') as gitignore:
        for file in files:
            gitignore.write(f"{file}\n")

def main():
    if not is_git_repository(CURRENT_DIRECTORY):
        print("This is not a Git repository.")
        sys.exit(1)

    if not os.path.exists(GITIGNORE_PATH):
        open(GITIGNORE_PATH, 'w').close()
        print(f"Created .gitignore in {CURRENT_DIRECTORY}.")

    large_files = scan_for_large_files(CURRENT_DIRECTORY, MAX_FILE_SIZE)
    if large_files:
        append_to_gitignore(large_files, GITIGNORE_PATH)
        print(f"Added {len(large_files)} large files to {GITIGNORE_PATH}.")
    else:
        print("No large files found.")

if __name__ == "__main__":
    main()
